
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00025740  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002580  080258f0  080258f0  000268f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000a0e  08027e70  08027e70  00028e70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000020  08028880  08028880  00029880  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000000c4  080288a0  080288a0  000298a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  08028964  08028964  0002a480  2**0
                  CONTENTS
  7 .ARM          00000008  08028964  08028964  00029964  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  0802896c  0802896c  0002a480  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  0802896c  0802896c  0002996c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  08028980  08028980  00029980  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         0000027c  20000000  08028988  0002a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferA 00000100  20000280  08028c04  0002a280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferB 00000100  20000380  08028d04  0002a380  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          0001442c  20000480  08028e04  0002a480  2**2
                  ALLOC
 15 ._user_heap_stack 00001404  200148ac  08028e04  0002a8ac  2**0
                  ALLOC
 16 .ARM.attributes 00000030  00000000  00000000  0002a480  2**0
                  CONTENTS, READONLY
 17 TouchGFX_Framebuffer 00070800  d0000000  d0000000  0002b000  2**2
                  ALLOC
 18 .debug_line   0005f682  00000000  00000000  0002a4b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000077  00000000  00000000  00089b32  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   000b5827  00000000  00000000  00089ba9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0001570e  00000000  00000000  0013f3d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00003800  00000000  00000000  00154ae0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    001271e2  00000000  00000000  001582e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00003b31  00000000  00000000  0027f4c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00022723  00000000  00000000  00282ff3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  000375b7  00000000  00000000  002a5716  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .comment      000000c2  00000000  00000000  002dcccd  2**0
                  CONTENTS, READONLY
 28 .debug_frame  0000a05c  00000000  00000000  002dcd90  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000480 	.word	0x20000480
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080258d8 	.word	0x080258d8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000484 	.word	0x20000484
 80001ec:	080258d8 	.word	0x080258d8

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_ldivmod>:
 80002a0:	b97b      	cbnz	r3, 80002c2 <__aeabi_ldivmod+0x22>
 80002a2:	b972      	cbnz	r2, 80002c2 <__aeabi_ldivmod+0x22>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bfbe      	ittt	lt
 80002a8:	2000      	movlt	r0, #0
 80002aa:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 80002ae:	e006      	blt.n	80002be <__aeabi_ldivmod+0x1e>
 80002b0:	bf08      	it	eq
 80002b2:	2800      	cmpeq	r0, #0
 80002b4:	bf1c      	itt	ne
 80002b6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80002ba:	f04f 30ff 	movne.w	r0, #4294967295
 80002be:	f000 b9d3 	b.w	8000668 <__aeabi_idiv0>
 80002c2:	f1ad 0c08 	sub.w	ip, sp, #8
 80002c6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002ca:	2900      	cmp	r1, #0
 80002cc:	db09      	blt.n	80002e2 <__aeabi_ldivmod+0x42>
 80002ce:	2b00      	cmp	r3, #0
 80002d0:	db1a      	blt.n	8000308 <__aeabi_ldivmod+0x68>
 80002d2:	f000 f84d 	bl	8000370 <__udivmoddi4>
 80002d6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002da:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002de:	b004      	add	sp, #16
 80002e0:	4770      	bx	lr
 80002e2:	4240      	negs	r0, r0
 80002e4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	db1b      	blt.n	8000324 <__aeabi_ldivmod+0x84>
 80002ec:	f000 f840 	bl	8000370 <__udivmoddi4>
 80002f0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002f8:	b004      	add	sp, #16
 80002fa:	4240      	negs	r0, r0
 80002fc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000300:	4252      	negs	r2, r2
 8000302:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000306:	4770      	bx	lr
 8000308:	4252      	negs	r2, r2
 800030a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800030e:	f000 f82f 	bl	8000370 <__udivmoddi4>
 8000312:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000316:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800031a:	b004      	add	sp, #16
 800031c:	4240      	negs	r0, r0
 800031e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000322:	4770      	bx	lr
 8000324:	4252      	negs	r2, r2
 8000326:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800032a:	f000 f821 	bl	8000370 <__udivmoddi4>
 800032e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000332:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000336:	b004      	add	sp, #16
 8000338:	4252      	negs	r2, r2
 800033a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800033e:	4770      	bx	lr

08000340 <__aeabi_uldivmod>:
 8000340:	b953      	cbnz	r3, 8000358 <__aeabi_uldivmod+0x18>
 8000342:	b94a      	cbnz	r2, 8000358 <__aeabi_uldivmod+0x18>
 8000344:	2900      	cmp	r1, #0
 8000346:	bf08      	it	eq
 8000348:	2800      	cmpeq	r0, #0
 800034a:	bf1c      	itt	ne
 800034c:	f04f 31ff 	movne.w	r1, #4294967295
 8000350:	f04f 30ff 	movne.w	r0, #4294967295
 8000354:	f000 b988 	b.w	8000668 <__aeabi_idiv0>
 8000358:	f1ad 0c08 	sub.w	ip, sp, #8
 800035c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000360:	f000 f806 	bl	8000370 <__udivmoddi4>
 8000364:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000368:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800036c:	b004      	add	sp, #16
 800036e:	4770      	bx	lr

08000370 <__udivmoddi4>:
 8000370:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000374:	9d08      	ldr	r5, [sp, #32]
 8000376:	468e      	mov	lr, r1
 8000378:	4604      	mov	r4, r0
 800037a:	4688      	mov	r8, r1
 800037c:	2b00      	cmp	r3, #0
 800037e:	d14a      	bne.n	8000416 <__udivmoddi4+0xa6>
 8000380:	428a      	cmp	r2, r1
 8000382:	4617      	mov	r7, r2
 8000384:	d962      	bls.n	800044c <__udivmoddi4+0xdc>
 8000386:	fab2 f682 	clz	r6, r2
 800038a:	b14e      	cbz	r6, 80003a0 <__udivmoddi4+0x30>
 800038c:	f1c6 0320 	rsb	r3, r6, #32
 8000390:	fa01 f806 	lsl.w	r8, r1, r6
 8000394:	fa20 f303 	lsr.w	r3, r0, r3
 8000398:	40b7      	lsls	r7, r6
 800039a:	ea43 0808 	orr.w	r8, r3, r8
 800039e:	40b4      	lsls	r4, r6
 80003a0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003a4:	fa1f fc87 	uxth.w	ip, r7
 80003a8:	fbb8 f1fe 	udiv	r1, r8, lr
 80003ac:	0c23      	lsrs	r3, r4, #16
 80003ae:	fb0e 8811 	mls	r8, lr, r1, r8
 80003b2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80003b6:	fb01 f20c 	mul.w	r2, r1, ip
 80003ba:	429a      	cmp	r2, r3
 80003bc:	d909      	bls.n	80003d2 <__udivmoddi4+0x62>
 80003be:	18fb      	adds	r3, r7, r3
 80003c0:	f101 30ff 	add.w	r0, r1, #4294967295
 80003c4:	f080 80ea 	bcs.w	800059c <__udivmoddi4+0x22c>
 80003c8:	429a      	cmp	r2, r3
 80003ca:	f240 80e7 	bls.w	800059c <__udivmoddi4+0x22c>
 80003ce:	3902      	subs	r1, #2
 80003d0:	443b      	add	r3, r7
 80003d2:	1a9a      	subs	r2, r3, r2
 80003d4:	b2a3      	uxth	r3, r4
 80003d6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003da:	fb0e 2210 	mls	r2, lr, r0, r2
 80003de:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003e2:	fb00 fc0c 	mul.w	ip, r0, ip
 80003e6:	459c      	cmp	ip, r3
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x8e>
 80003ea:	18fb      	adds	r3, r7, r3
 80003ec:	f100 32ff 	add.w	r2, r0, #4294967295
 80003f0:	f080 80d6 	bcs.w	80005a0 <__udivmoddi4+0x230>
 80003f4:	459c      	cmp	ip, r3
 80003f6:	f240 80d3 	bls.w	80005a0 <__udivmoddi4+0x230>
 80003fa:	443b      	add	r3, r7
 80003fc:	3802      	subs	r0, #2
 80003fe:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000402:	eba3 030c 	sub.w	r3, r3, ip
 8000406:	2100      	movs	r1, #0
 8000408:	b11d      	cbz	r5, 8000412 <__udivmoddi4+0xa2>
 800040a:	40f3      	lsrs	r3, r6
 800040c:	2200      	movs	r2, #0
 800040e:	e9c5 3200 	strd	r3, r2, [r5]
 8000412:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000416:	428b      	cmp	r3, r1
 8000418:	d905      	bls.n	8000426 <__udivmoddi4+0xb6>
 800041a:	b10d      	cbz	r5, 8000420 <__udivmoddi4+0xb0>
 800041c:	e9c5 0100 	strd	r0, r1, [r5]
 8000420:	2100      	movs	r1, #0
 8000422:	4608      	mov	r0, r1
 8000424:	e7f5      	b.n	8000412 <__udivmoddi4+0xa2>
 8000426:	fab3 f183 	clz	r1, r3
 800042a:	2900      	cmp	r1, #0
 800042c:	d146      	bne.n	80004bc <__udivmoddi4+0x14c>
 800042e:	4573      	cmp	r3, lr
 8000430:	d302      	bcc.n	8000438 <__udivmoddi4+0xc8>
 8000432:	4282      	cmp	r2, r0
 8000434:	f200 8105 	bhi.w	8000642 <__udivmoddi4+0x2d2>
 8000438:	1a84      	subs	r4, r0, r2
 800043a:	eb6e 0203 	sbc.w	r2, lr, r3
 800043e:	2001      	movs	r0, #1
 8000440:	4690      	mov	r8, r2
 8000442:	2d00      	cmp	r5, #0
 8000444:	d0e5      	beq.n	8000412 <__udivmoddi4+0xa2>
 8000446:	e9c5 4800 	strd	r4, r8, [r5]
 800044a:	e7e2      	b.n	8000412 <__udivmoddi4+0xa2>
 800044c:	2a00      	cmp	r2, #0
 800044e:	f000 8090 	beq.w	8000572 <__udivmoddi4+0x202>
 8000452:	fab2 f682 	clz	r6, r2
 8000456:	2e00      	cmp	r6, #0
 8000458:	f040 80a4 	bne.w	80005a4 <__udivmoddi4+0x234>
 800045c:	1a8a      	subs	r2, r1, r2
 800045e:	0c03      	lsrs	r3, r0, #16
 8000460:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000464:	b280      	uxth	r0, r0
 8000466:	b2bc      	uxth	r4, r7
 8000468:	2101      	movs	r1, #1
 800046a:	fbb2 fcfe 	udiv	ip, r2, lr
 800046e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000472:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000476:	fb04 f20c 	mul.w	r2, r4, ip
 800047a:	429a      	cmp	r2, r3
 800047c:	d907      	bls.n	800048e <__udivmoddi4+0x11e>
 800047e:	18fb      	adds	r3, r7, r3
 8000480:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000484:	d202      	bcs.n	800048c <__udivmoddi4+0x11c>
 8000486:	429a      	cmp	r2, r3
 8000488:	f200 80e0 	bhi.w	800064c <__udivmoddi4+0x2dc>
 800048c:	46c4      	mov	ip, r8
 800048e:	1a9b      	subs	r3, r3, r2
 8000490:	fbb3 f2fe 	udiv	r2, r3, lr
 8000494:	fb0e 3312 	mls	r3, lr, r2, r3
 8000498:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800049c:	fb02 f404 	mul.w	r4, r2, r4
 80004a0:	429c      	cmp	r4, r3
 80004a2:	d907      	bls.n	80004b4 <__udivmoddi4+0x144>
 80004a4:	18fb      	adds	r3, r7, r3
 80004a6:	f102 30ff 	add.w	r0, r2, #4294967295
 80004aa:	d202      	bcs.n	80004b2 <__udivmoddi4+0x142>
 80004ac:	429c      	cmp	r4, r3
 80004ae:	f200 80ca 	bhi.w	8000646 <__udivmoddi4+0x2d6>
 80004b2:	4602      	mov	r2, r0
 80004b4:	1b1b      	subs	r3, r3, r4
 80004b6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80004ba:	e7a5      	b.n	8000408 <__udivmoddi4+0x98>
 80004bc:	f1c1 0620 	rsb	r6, r1, #32
 80004c0:	408b      	lsls	r3, r1
 80004c2:	fa22 f706 	lsr.w	r7, r2, r6
 80004c6:	431f      	orrs	r7, r3
 80004c8:	fa0e f401 	lsl.w	r4, lr, r1
 80004cc:	fa20 f306 	lsr.w	r3, r0, r6
 80004d0:	fa2e fe06 	lsr.w	lr, lr, r6
 80004d4:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80004d8:	4323      	orrs	r3, r4
 80004da:	fa00 f801 	lsl.w	r8, r0, r1
 80004de:	fa1f fc87 	uxth.w	ip, r7
 80004e2:	fbbe f0f9 	udiv	r0, lr, r9
 80004e6:	0c1c      	lsrs	r4, r3, #16
 80004e8:	fb09 ee10 	mls	lr, r9, r0, lr
 80004ec:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80004f0:	fb00 fe0c 	mul.w	lr, r0, ip
 80004f4:	45a6      	cmp	lr, r4
 80004f6:	fa02 f201 	lsl.w	r2, r2, r1
 80004fa:	d909      	bls.n	8000510 <__udivmoddi4+0x1a0>
 80004fc:	193c      	adds	r4, r7, r4
 80004fe:	f100 3aff 	add.w	sl, r0, #4294967295
 8000502:	f080 809c 	bcs.w	800063e <__udivmoddi4+0x2ce>
 8000506:	45a6      	cmp	lr, r4
 8000508:	f240 8099 	bls.w	800063e <__udivmoddi4+0x2ce>
 800050c:	3802      	subs	r0, #2
 800050e:	443c      	add	r4, r7
 8000510:	eba4 040e 	sub.w	r4, r4, lr
 8000514:	fa1f fe83 	uxth.w	lr, r3
 8000518:	fbb4 f3f9 	udiv	r3, r4, r9
 800051c:	fb09 4413 	mls	r4, r9, r3, r4
 8000520:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000524:	fb03 fc0c 	mul.w	ip, r3, ip
 8000528:	45a4      	cmp	ip, r4
 800052a:	d908      	bls.n	800053e <__udivmoddi4+0x1ce>
 800052c:	193c      	adds	r4, r7, r4
 800052e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000532:	f080 8082 	bcs.w	800063a <__udivmoddi4+0x2ca>
 8000536:	45a4      	cmp	ip, r4
 8000538:	d97f      	bls.n	800063a <__udivmoddi4+0x2ca>
 800053a:	3b02      	subs	r3, #2
 800053c:	443c      	add	r4, r7
 800053e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000542:	eba4 040c 	sub.w	r4, r4, ip
 8000546:	fba0 ec02 	umull	lr, ip, r0, r2
 800054a:	4564      	cmp	r4, ip
 800054c:	4673      	mov	r3, lr
 800054e:	46e1      	mov	r9, ip
 8000550:	d362      	bcc.n	8000618 <__udivmoddi4+0x2a8>
 8000552:	d05f      	beq.n	8000614 <__udivmoddi4+0x2a4>
 8000554:	b15d      	cbz	r5, 800056e <__udivmoddi4+0x1fe>
 8000556:	ebb8 0203 	subs.w	r2, r8, r3
 800055a:	eb64 0409 	sbc.w	r4, r4, r9
 800055e:	fa04 f606 	lsl.w	r6, r4, r6
 8000562:	fa22 f301 	lsr.w	r3, r2, r1
 8000566:	431e      	orrs	r6, r3
 8000568:	40cc      	lsrs	r4, r1
 800056a:	e9c5 6400 	strd	r6, r4, [r5]
 800056e:	2100      	movs	r1, #0
 8000570:	e74f      	b.n	8000412 <__udivmoddi4+0xa2>
 8000572:	fbb1 fcf2 	udiv	ip, r1, r2
 8000576:	0c01      	lsrs	r1, r0, #16
 8000578:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800057c:	b280      	uxth	r0, r0
 800057e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000582:	463b      	mov	r3, r7
 8000584:	4638      	mov	r0, r7
 8000586:	463c      	mov	r4, r7
 8000588:	46b8      	mov	r8, r7
 800058a:	46be      	mov	lr, r7
 800058c:	2620      	movs	r6, #32
 800058e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000592:	eba2 0208 	sub.w	r2, r2, r8
 8000596:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800059a:	e766      	b.n	800046a <__udivmoddi4+0xfa>
 800059c:	4601      	mov	r1, r0
 800059e:	e718      	b.n	80003d2 <__udivmoddi4+0x62>
 80005a0:	4610      	mov	r0, r2
 80005a2:	e72c      	b.n	80003fe <__udivmoddi4+0x8e>
 80005a4:	f1c6 0220 	rsb	r2, r6, #32
 80005a8:	fa2e f302 	lsr.w	r3, lr, r2
 80005ac:	40b7      	lsls	r7, r6
 80005ae:	40b1      	lsls	r1, r6
 80005b0:	fa20 f202 	lsr.w	r2, r0, r2
 80005b4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80005b8:	430a      	orrs	r2, r1
 80005ba:	fbb3 f8fe 	udiv	r8, r3, lr
 80005be:	b2bc      	uxth	r4, r7
 80005c0:	fb0e 3318 	mls	r3, lr, r8, r3
 80005c4:	0c11      	lsrs	r1, r2, #16
 80005c6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80005ca:	fb08 f904 	mul.w	r9, r8, r4
 80005ce:	40b0      	lsls	r0, r6
 80005d0:	4589      	cmp	r9, r1
 80005d2:	ea4f 4310 	mov.w	r3, r0, lsr #16
 80005d6:	b280      	uxth	r0, r0
 80005d8:	d93e      	bls.n	8000658 <__udivmoddi4+0x2e8>
 80005da:	1879      	adds	r1, r7, r1
 80005dc:	f108 3cff 	add.w	ip, r8, #4294967295
 80005e0:	d201      	bcs.n	80005e6 <__udivmoddi4+0x276>
 80005e2:	4589      	cmp	r9, r1
 80005e4:	d81f      	bhi.n	8000626 <__udivmoddi4+0x2b6>
 80005e6:	eba1 0109 	sub.w	r1, r1, r9
 80005ea:	fbb1 f9fe 	udiv	r9, r1, lr
 80005ee:	fb09 f804 	mul.w	r8, r9, r4
 80005f2:	fb0e 1119 	mls	r1, lr, r9, r1
 80005f6:	b292      	uxth	r2, r2
 80005f8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005fc:	4542      	cmp	r2, r8
 80005fe:	d229      	bcs.n	8000654 <__udivmoddi4+0x2e4>
 8000600:	18ba      	adds	r2, r7, r2
 8000602:	f109 31ff 	add.w	r1, r9, #4294967295
 8000606:	d2c4      	bcs.n	8000592 <__udivmoddi4+0x222>
 8000608:	4542      	cmp	r2, r8
 800060a:	d2c2      	bcs.n	8000592 <__udivmoddi4+0x222>
 800060c:	f1a9 0102 	sub.w	r1, r9, #2
 8000610:	443a      	add	r2, r7
 8000612:	e7be      	b.n	8000592 <__udivmoddi4+0x222>
 8000614:	45f0      	cmp	r8, lr
 8000616:	d29d      	bcs.n	8000554 <__udivmoddi4+0x1e4>
 8000618:	ebbe 0302 	subs.w	r3, lr, r2
 800061c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000620:	3801      	subs	r0, #1
 8000622:	46e1      	mov	r9, ip
 8000624:	e796      	b.n	8000554 <__udivmoddi4+0x1e4>
 8000626:	eba7 0909 	sub.w	r9, r7, r9
 800062a:	4449      	add	r1, r9
 800062c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000630:	fbb1 f9fe 	udiv	r9, r1, lr
 8000634:	fb09 f804 	mul.w	r8, r9, r4
 8000638:	e7db      	b.n	80005f2 <__udivmoddi4+0x282>
 800063a:	4673      	mov	r3, lr
 800063c:	e77f      	b.n	800053e <__udivmoddi4+0x1ce>
 800063e:	4650      	mov	r0, sl
 8000640:	e766      	b.n	8000510 <__udivmoddi4+0x1a0>
 8000642:	4608      	mov	r0, r1
 8000644:	e6fd      	b.n	8000442 <__udivmoddi4+0xd2>
 8000646:	443b      	add	r3, r7
 8000648:	3a02      	subs	r2, #2
 800064a:	e733      	b.n	80004b4 <__udivmoddi4+0x144>
 800064c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000650:	443b      	add	r3, r7
 8000652:	e71c      	b.n	800048e <__udivmoddi4+0x11e>
 8000654:	4649      	mov	r1, r9
 8000656:	e79c      	b.n	8000592 <__udivmoddi4+0x222>
 8000658:	eba1 0109 	sub.w	r1, r1, r9
 800065c:	46c4      	mov	ip, r8
 800065e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000662:	fb09 f804 	mul.w	r8, r9, r4
 8000666:	e7c4      	b.n	80005f2 <__udivmoddi4+0x282>

08000668 <__aeabi_idiv0>:
 8000668:	4770      	bx	lr
 800066a:	bf00      	nop

0800066c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800066c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80006a4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000670:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000672:	e003      	b.n	800067c <LoopCopyDataInit>

08000674 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000674:	4b0c      	ldr	r3, [pc, #48]	@ (80006a8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000676:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000678:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800067a:	3104      	adds	r1, #4

0800067c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800067c:	480b      	ldr	r0, [pc, #44]	@ (80006ac <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800067e:	4b0c      	ldr	r3, [pc, #48]	@ (80006b0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000680:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000682:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000684:	d3f6      	bcc.n	8000674 <CopyDataInit>
  ldr  r2, =_sbss
 8000686:	4a0b      	ldr	r2, [pc, #44]	@ (80006b4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000688:	e002      	b.n	8000690 <LoopFillZerobss>

0800068a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800068a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800068c:	f842 3b04 	str.w	r3, [r2], #4

08000690 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000690:	4b09      	ldr	r3, [pc, #36]	@ (80006b8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000692:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000694:	d3f9      	bcc.n	800068a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000696:	f004 f85f 	bl	8004758 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800069a:	f024 fa07 	bl	8024aac <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800069e:	f001 fa37 	bl	8001b10 <main>
  bx  lr    
 80006a2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80006a4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80006a8:	08028988 	.word	0x08028988
  ldr  r0, =_sdata
 80006ac:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80006b0:	2000027c 	.word	0x2000027c
  ldr  r2, =_sbss
 80006b4:	20000480 	.word	0x20000480
  ldr  r3, = _ebss
 80006b8:	200148ac 	.word	0x200148ac

080006bc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80006bc:	e7fe      	b.n	80006bc <ADC_IRQHandler>

080006be <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006be:	4770      	bx	lr

080006c0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006c0:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 80006c2:	f000 fdbb 	bl	800123c <touchgfx_components_init>
    touchgfx_init();
}
 80006c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 80006ca:	f000 bd3f 	b.w	800114c <touchgfx_init>

080006ce <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 80006ce:	f000 bdb7 	b.w	8001240 <touchgfx_taskEntry>

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f022 ffc4 	bl	8023666 <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006e4:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006e6:	4b0c      	ldr	r3, [pc, #48]	@ (8000718 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006e8:	4c0c      	ldr	r4, [pc, #48]	@ (800071c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ea:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006ec:	4b0c      	ldr	r3, [pc, #48]	@ (8000720 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006ee:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 80006f0:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006f2:	6863      	ldr	r3, [r4, #4]
 80006f4:	4798      	blx	r3
 80006f6:	f640 0311 	movw	r3, #2065	@ 0x811
 80006fa:	4298      	cmp	r0, r3
 80006fc:	d10a      	bne.n	8000714 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006fe:	4d09      	ldr	r5, [pc, #36]	@ (8000724 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000700:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000702:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000704:	2082      	movs	r0, #130	@ 0x82
 8000706:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000708:	682b      	ldr	r3, [r5, #0]
 800070a:	2082      	movs	r0, #130	@ 0x82
 800070c:	68db      	ldr	r3, [r3, #12]
 800070e:	4798      	blx	r3
 8000710:	2000      	movs	r0, #0
    }

    return ret;
}
 8000712:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000714:	2001      	movs	r0, #1
 8000716:	e7fc      	b.n	8000712 <_Z11BSP_TS_Inittt+0x2e>
 8000718:	200004a6 	.word	0x200004a6
 800071c:	200000a4 	.word	0x200000a4
 8000720:	200004a4 	.word	0x200004a4
 8000724:	200004a8 	.word	0x200004a8

08000728 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000728:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800072c:	20f0      	movs	r0, #240	@ 0xf0
 800072e:	f7ff bfd9 	b.w	80006e4 <_Z11BSP_TS_Inittt>
	...

08000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000734:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000736:	4d39      	ldr	r5, [pc, #228]	@ (800081c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 8000738:	682b      	ldr	r3, [r5, #0]
{
 800073a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800073c:	691b      	ldr	r3, [r3, #16]
 800073e:	2082      	movs	r0, #130	@ 0x82
 8000740:	4798      	blx	r3
 8000742:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000744:	2800      	cmp	r0, #0
 8000746:	d04e      	beq.n	80007e6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000748:	682b      	ldr	r3, [r5, #0]
 800074a:	f10d 0206 	add.w	r2, sp, #6
 800074e:	695b      	ldr	r3, [r3, #20]
 8000750:	a901      	add	r1, sp, #4
 8000752:	2082      	movs	r0, #130	@ 0x82
 8000754:	4798      	blx	r3

        if (isRevD)
 8000756:	4b32      	ldr	r3, [pc, #200]	@ (8000820 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8000758:	781b      	ldrb	r3, [r3, #0]
 800075a:	2b00      	cmp	r3, #0
 800075c:	d04b      	beq.n	80007f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 800075e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000762:	f640 6374 	movw	r3, #3700	@ 0xe74
 8000766:	429a      	cmp	r2, r3
 8000768:	d93f      	bls.n	80007ea <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 800076a:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 800076e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000772:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8000774:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000776:	2b0a      	cmp	r3, #10
 8000778:	d942      	bls.n	8000800 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 800077a:	220b      	movs	r2, #11
 800077c:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000780:	4a28      	ldr	r2, [pc, #160]	@ (8000824 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8000782:	8812      	ldrh	r2, [r2, #0]
 8000784:	4293      	cmp	r3, r2
 8000786:	d901      	bls.n	800078c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8000788:	3a01      	subs	r2, #1
 800078a:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800078c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000790:	4825      	ldr	r0, [pc, #148]	@ (8000828 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8000792:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000796:	428a      	cmp	r2, r1
 8000798:	d834      	bhi.n	8000804 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 800079a:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 800079e:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007a0:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 80007a2:	b292      	uxth	r2, r2
        xr = x / 15;
 80007a4:	250f      	movs	r5, #15
 80007a6:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 80007aa:	4d20      	ldr	r5, [pc, #128]	@ (800082c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 80007ac:	882d      	ldrh	r5, [r5, #0]
 80007ae:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 80007b0:	bf84      	itt	hi
 80007b2:	f105 35ff 	addhi.w	r5, r5, #4294967295
 80007b6:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007b8:	428a      	cmp	r2, r1
 80007ba:	4615      	mov	r5, r2
 80007bc:	b28e      	uxth	r6, r1
 80007be:	d92a      	bls.n	8000816 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 80007c0:	1b92      	subs	r2, r2, r6
 80007c2:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007c4:	4e1a      	ldr	r6, [pc, #104]	@ (8000830 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 80007c6:	6837      	ldr	r7, [r6, #0]
 80007c8:	42bb      	cmp	r3, r7
 80007ca:	b2ba      	uxth	r2, r7
 80007cc:	bf8c      	ite	hi
 80007ce:	1a9a      	subhi	r2, r3, r2
 80007d0:	1ad2      	subls	r2, r2, r3
 80007d2:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 80007d4:	4411      	add	r1, r2
 80007d6:	2905      	cmp	r1, #5
        {
            _x = x;
 80007d8:	bfc4      	itt	gt
 80007da:	6005      	strgt	r5, [r0, #0]
            _y = y;
 80007dc:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 80007de:	6803      	ldr	r3, [r0, #0]
 80007e0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007e2:	6833      	ldr	r3, [r6, #0]
 80007e4:	80a3      	strh	r3, [r4, #4]
    }
}
 80007e6:	b003      	add	sp, #12
 80007e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 80007ea:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 80007ec:	bf9c      	itt	ls
 80007ee:	22b4      	movls	r2, #180	@ 0xb4
 80007f0:	f8ad 2006 	strhls.w	r2, [sp, #6]
 80007f4:	e7bb      	b.n	800076e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 80007f6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80007fa:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 80007fe:	e7b9      	b.n	8000774 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 8000800:	2300      	movs	r3, #0
 8000802:	e7c3      	b.n	800078c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 8000804:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 8000808:	3208      	adds	r2, #8
 800080a:	b292      	uxth	r2, r2
        if (xr <= 0)
 800080c:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 800080e:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8000810:	d8c8      	bhi.n	80007a4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000812:	2500      	movs	r5, #0
            xr = 0;
 8000814:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000816:	1a89      	subs	r1, r1, r2
 8000818:	b289      	uxth	r1, r1
 800081a:	e7d3      	b.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 800081c:	200004a8 	.word	0x200004a8
 8000820:	20002638 	.word	0x20002638
 8000824:	200004a4 	.word	0x200004a4
 8000828:	200004a0 	.word	0x200004a0
 800082c:	200004a6 	.word	0x200004a6
 8000830:	2000049c 	.word	0x2000049c

08000834 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000834:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000836:	4668      	mov	r0, sp
{
 8000838:	460d      	mov	r5, r1
 800083a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800083c:	f7ff ff7a 	bl	8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000840:	f8bd 0000 	ldrh.w	r0, [sp]
 8000844:	b130      	cbz	r0, 8000854 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000846:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800084a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800084c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000850:	6023      	str	r3, [r4, #0]
        return true;
 8000852:	2001      	movs	r0, #1
}
 8000854:	b003      	add	sp, #12
 8000856:	bd30      	pop	{r4, r5, pc}

08000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000858:	2803      	cmp	r0, #3
 800085a:	d821      	bhi.n	80008a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 800085c:	e8df f000 	tbb	[pc, r0]
 8000860:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000864:	4b0f      	ldr	r3, [pc, #60]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	fab2 f282 	clz	r2, r2
 800086c:	0952      	lsrs	r2, r2, #5
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000870:	480d      	ldr	r0, [pc, #52]	@ (80008a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000872:	f004 bc1b 	b.w	80050ac <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000876:	4b0b      	ldr	r3, [pc, #44]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000878:	685a      	ldr	r2, [r3, #4]
 800087a:	fab2 f282 	clz	r2, r2
 800087e:	0952      	lsrs	r2, r2, #5
 8000880:	2108      	movs	r1, #8
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000884:	4b07      	ldr	r3, [pc, #28]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000886:	689a      	ldr	r2, [r3, #8]
 8000888:	fab2 f282 	clz	r2, r2
 800088c:	0952      	lsrs	r2, r2, #5
 800088e:	2110      	movs	r1, #16
 8000890:	e7ee      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000892:	4b04      	ldr	r3, [pc, #16]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000894:	68da      	ldr	r2, [r3, #12]
 8000896:	fab2 f282 	clz	r2, r2
 800089a:	0952      	lsrs	r2, r2, #5
 800089c:	2120      	movs	r1, #32
 800089e:	e7e7      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008a0:	4770      	bx	lr
 80008a2:	bf00      	nop
 80008a4:	200004ac 	.word	0x200004ac
 80008a8:	40021000 	.word	0x40021000

080008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80008ac:	2803      	cmp	r0, #3
 80008ae:	d821      	bhi.n	80008f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80008b0:	e8df f000 	tbb	[pc, r0]
 80008b4:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80008b8:	4b0f      	ldr	r3, [pc, #60]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008ba:	681a      	ldr	r2, [r3, #0]
 80008bc:	3a00      	subs	r2, #0
 80008be:	bf18      	it	ne
 80008c0:	2201      	movne	r2, #1
 80008c2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008c4:	480d      	ldr	r0, [pc, #52]	@ (80008fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80008c6:	f004 bbf1 	b.w	80050ac <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80008ca:	4b0b      	ldr	r3, [pc, #44]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008cc:	685a      	ldr	r2, [r3, #4]
 80008ce:	3a00      	subs	r2, #0
 80008d0:	bf18      	it	ne
 80008d2:	2201      	movne	r2, #1
 80008d4:	2108      	movs	r1, #8
 80008d6:	e7f5      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80008d8:	4b07      	ldr	r3, [pc, #28]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008da:	689a      	ldr	r2, [r3, #8]
 80008dc:	3a00      	subs	r2, #0
 80008de:	bf18      	it	ne
 80008e0:	2201      	movne	r2, #1
 80008e2:	2110      	movs	r1, #16
 80008e4:	e7ee      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008e6:	4b04      	ldr	r3, [pc, #16]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008e8:	68da      	ldr	r2, [r3, #12]
 80008ea:	3a00      	subs	r2, #0
 80008ec:	bf18      	it	ne
 80008ee:	2201      	movne	r2, #1
 80008f0:	2120      	movs	r1, #32
 80008f2:	e7e7      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008f4:	4770      	bx	lr
 80008f6:	bf00      	nop
 80008f8:	200004ac 	.word	0x200004ac
 80008fc:	40021000 	.word	0x40021000

08000900 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000900:	2803      	cmp	r0, #3
 8000902:	d80d      	bhi.n	8000920 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8000904:	e8df f000 	tbb	[pc, r0]
 8000908:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800090c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800090e:	4805      	ldr	r0, [pc, #20]	@ (8000924 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000910:	f004 bbd1 	b.w	80050b6 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000914:	2108      	movs	r1, #8
 8000916:	e7fa      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000918:	2110      	movs	r1, #16
 800091a:	e7f8      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800091c:	2120      	movs	r1, #32
 800091e:	e7f6      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000920:	4770      	bx	lr
 8000922:	bf00      	nop
 8000924:	40021000 	.word	0x40021000

08000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000928:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800092a:	2803      	cmp	r0, #3
 800092c:	d811      	bhi.n	8000952 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 800092e:	e8df f000 	tbb	[pc, r0]
 8000932:	0a02      	.short	0x0a02
 8000934:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000936:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000938:	4807      	ldr	r0, [pc, #28]	@ (8000958 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800093a:	f004 fbb1 	bl	80050a0 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800093e:	1e43      	subs	r3, r0, #1
 8000940:	4258      	negs	r0, r3
 8000942:	4158      	adcs	r0, r3
 8000944:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000946:	2108      	movs	r1, #8
 8000948:	e7f6      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800094a:	2110      	movs	r1, #16
 800094c:	e7f4      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800094e:	2120      	movs	r1, #32
 8000950:	e7f2      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000952:	2000      	movs	r0, #0
 8000954:	e7f3      	b.n	800093e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000956:	bf00      	nop
 8000958:	40021000 	.word	0x40021000

0800095c <_ZN8touchgfx4GPIO4initEv>:
{
 800095c:	b570      	push	{r4, r5, r6, lr}
 800095e:	4d08      	ldr	r5, [pc, #32]	@ (8000980 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000960:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000962:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000964:	b2e0      	uxtb	r0, r4
 8000966:	f7ff ffdf 	bl	8000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800096a:	b118      	cbz	r0, 8000974 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800096c:	682b      	ldr	r3, [r5, #0]
 800096e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000970:	bf18      	it	ne
 8000972:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000974:	3401      	adds	r4, #1
 8000976:	2c05      	cmp	r4, #5
 8000978:	f105 0504 	add.w	r5, r5, #4
 800097c:	d1f2      	bne.n	8000964 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800097e:	bd70      	pop	{r4, r5, r6, pc}
 8000980:	200004ac 	.word	0x200004ac

08000984 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000984:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000986:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800098a:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 800098e:	4770      	bx	lr

08000990 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8000990:	4770      	bx	lr

08000992 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000992:	2000      	movs	r0, #0
 8000994:	4770      	bx	lr
	...

08000998 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000998:	4b03      	ldr	r3, [pc, #12]	@ (80009a8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800099a:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800099c:	3900      	subs	r1, #0
 800099e:	bf18      	it	ne
 80009a0:	2101      	movne	r1, #1
 80009a2:	7019      	strb	r1, [r3, #0]
    }
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop
 80009a8:	20013b69 	.word	0x20013b69

080009ac <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 80009ac:	4770      	bx	lr

080009ae <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80009ae:	2000      	movs	r0, #0
 80009b0:	4770      	bx	lr

080009b2 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80009b2:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80009b4:	b10b      	cbz	r3, 80009ba <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80009b6:	4608      	mov	r0, r1
 80009b8:	4718      	bx	r3
        }
    }
 80009ba:	4770      	bx	lr

080009bc <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80009bc:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80009c0:	4770      	bx	lr

080009c2 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80009c2:	6840      	ldr	r0, [r0, #4]
 80009c4:	6803      	ldr	r3, [r0, #0]
 80009c6:	699b      	ldr	r3, [r3, #24]
 80009c8:	4718      	bx	r3

080009ca <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 80009ca:	4770      	bx	lr

080009cc <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80009cc:	4770      	bx	lr

080009ce <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80009ce:	4770      	bx	lr

080009d0 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 80009d0:	4770      	bx	lr

080009d2 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80009d2:	4770      	bx	lr

080009d4 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 80009d4:	b510      	push	{r4, lr}
 80009d6:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80009d8:	f000 fd48 	bl	800146c <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 80009dc:	6823      	ldr	r3, [r4, #0]
 80009de:	4903      	ldr	r1, [pc, #12]	@ (80009ec <_ZN11TouchGFXHAL10initializeEv+0x18>)
 80009e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80009e4:	4620      	mov	r0, r4
}
 80009e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 80009ea:	4718      	bx	r3
 80009ec:	d0000000 	.word	0xd0000000

080009f0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80009f0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80009f2:	6803      	ldr	r3, [r0, #0]
{
 80009f4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80009f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80009fa:	4798      	blx	r3
    enableInterrupts();
 80009fc:	6823      	ldr	r3, [r4, #0]
 80009fe:	4620      	mov	r0, r4
 8000a00:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8000a02:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000a04:	f000 f8ec 	bl	8000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000a08:	6823      	ldr	r3, [r4, #0]
 8000a0a:	4620      	mov	r0, r4
 8000a0c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000a0e:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000a10:	2029      	movs	r0, #41	@ 0x29
 8000a12:	f001 fb4f 	bl	80020b4 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000a16:	f000 f8e3 	bl	8000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000a1a:	6823      	ldr	r3, [r4, #0]
 8000a1c:	4620      	mov	r0, r4
 8000a1e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000a20:	4798      	blx	r3
    for (;;)
 8000a22:	e7f8      	b.n	8000a16 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000a24 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000a24:	b510      	push	{r4, lr}
 8000a26:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000a28:	f00b fd38 	bl	800c49c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000a2c:	6823      	ldr	r3, [r4, #0]
 8000a2e:	4620      	mov	r0, r4
 8000a30:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8000a34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000a38:	4718      	bx	r3

08000a3a <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000a3a:	f000 bcfb 	b.w	8001434 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000a3e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000a3e:	f000 bcff 	b.w	8001440 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000a42 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000a42:	f000 bd31 	b.w	80014a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000a46 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000a46:	f000 bcd1 	b.w	80013ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000a4a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000a4a:	f000 bd41 	b.w	80014d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000a4e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000a4e:	f000 bd49 	b.w	80014e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000a52 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a52:	f000 bcd5 	b.w	8001400 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a56 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000a56:	f00a bf4f 	b.w	800b8f8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000a5a <_ZN11TouchGFXHALD0Ev>:
 8000a5a:	b510      	push	{r4, lr}
 8000a5c:	2184      	movs	r1, #132	@ 0x84
 8000a5e:	4604      	mov	r4, r0
 8000a60:	f022 fe01 	bl	8023666 <_ZdlPvj>
 8000a64:	4620      	mov	r0, r4
 8000a66:	bd10      	pop	{r4, pc}

08000a68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000a68:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000a6a:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8000a6e:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000a72:	4b0c      	ldr	r3, [pc, #48]	@ (8000aa4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000a74:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000a76:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000a78:	d009      	beq.n	8000a8e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000a7a:	b93a      	cbnz	r2, 8000a8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a7c:	4a0a      	ldr	r2, [pc, #40]	@ (8000aa8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a7e:	490b      	ldr	r1, [pc, #44]	@ (8000aac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a80:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a82:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000a84:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a86:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a88:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a8a:	701a      	strb	r2, [r3, #0]
    }
 8000a8c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a8e:	2a00      	cmp	r2, #0
 8000a90:	d0fc      	beq.n	8000a8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a92:	4a05      	ldr	r2, [pc, #20]	@ (8000aa8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a94:	4905      	ldr	r1, [pc, #20]	@ (8000aac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a96:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a98:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a9a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a9c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a9e:	2200      	movs	r2, #0
 8000aa0:	e7f3      	b.n	8000a8a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000aa2:	bf00      	nop
 8000aa4:	20013b62 	.word	0x20013b62
 8000aa8:	20013b5e 	.word	0x20013b5e
 8000aac:	20013b60 	.word	0x20013b60

08000ab0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000ab0:	b570      	push	{r4, r5, r6, lr}
 8000ab2:	460d      	mov	r5, r1
 8000ab4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000ab6:	b935      	cbnz	r5, 8000ac6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000ab8:	4b09      	ldr	r3, [pc, #36]	@ (8000ae0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000aba:	4a0a      	ldr	r2, [pc, #40]	@ (8000ae4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000abc:	480a      	ldr	r0, [pc, #40]	@ (8000ae8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000abe:	f240 21ff 	movw	r1, #767	@ 0x2ff
 8000ac2:	f023 fd0d 	bl	80244e0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000ac6:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000aca:	4b08      	ldr	r3, [pc, #32]	@ (8000aec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000acc:	3a00      	subs	r2, #0
 8000ace:	bf18      	it	ne
 8000ad0:	2201      	movne	r2, #1
 8000ad2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000ad4:	6803      	ldr	r3, [r0, #0]
    }
 8000ad6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000ada:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8000ade:	4718      	bx	r3
 8000ae0:	08025948 	.word	0x08025948
 8000ae4:	08025980 	.word	0x08025980
 8000ae8:	080259ce 	.word	0x080259ce
 8000aec:	20013b68 	.word	0x20013b68

08000af0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000af0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000af2:	4b09      	ldr	r3, [pc, #36]	@ (8000b18 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000af4:	881b      	ldrh	r3, [r3, #0]
 8000af6:	428b      	cmp	r3, r1
 8000af8:	d803      	bhi.n	8000b02 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000afa:	4b08      	ldr	r3, [pc, #32]	@ (8000b1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000afc:	881b      	ldrh	r3, [r3, #0]
 8000afe:	4293      	cmp	r3, r2
 8000b00:	d905      	bls.n	8000b0e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000b02:	4b07      	ldr	r3, [pc, #28]	@ (8000b20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000b04:	4a07      	ldr	r2, [pc, #28]	@ (8000b24 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000b06:	4808      	ldr	r0, [pc, #32]	@ (8000b28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000b08:	21a3      	movs	r1, #163	@ 0xa3
 8000b0a:	f023 fce9 	bl	80244e0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000b0e:	4b07      	ldr	r3, [pc, #28]	@ (8000b2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000b10:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000b12:	4b07      	ldr	r3, [pc, #28]	@ (8000b30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000b14:	801a      	strh	r2, [r3, #0]
    }
 8000b16:	bd08      	pop	{r3, pc}
 8000b18:	20013b5e 	.word	0x20013b5e
 8000b1c:	20013b60 	.word	0x20013b60
 8000b20:	08025a13 	.word	0x08025a13
 8000b24:	08025a76 	.word	0x08025a76
 8000b28:	080259ce 	.word	0x080259ce
 8000b2c:	20013b64 	.word	0x20013b64
 8000b30:	20013b66 	.word	0x20013b66

08000b34 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000b34:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000b36:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000b3a:	b118      	cbz	r0, 8000b44 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000b3c:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000b3e:	6803      	ldr	r3, [r0, #0]
 8000b40:	681b      	ldr	r3, [r3, #0]
 8000b42:	4718      	bx	r3
    }
 8000b44:	4770      	bx	lr
	...

08000b48 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b48:	2101      	movs	r1, #1
{
 8000b4a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b4c:	2200      	movs	r2, #0
 8000b4e:	4608      	mov	r0, r1
 8000b50:	f007 fe84 	bl	800885c <osSemaphoreNew>
 8000b54:	4b0a      	ldr	r3, [pc, #40]	@ (8000b80 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000b56:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000b58:	b928      	cbnz	r0, 8000b66 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000b5a:	4b0a      	ldr	r3, [pc, #40]	@ (8000b84 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000b5c:	4a0a      	ldr	r2, [pc, #40]	@ (8000b88 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b5e:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b60:	480a      	ldr	r0, [pc, #40]	@ (8000b8c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000b62:	f023 fcbd 	bl	80244e0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000b66:	2200      	movs	r2, #0
 8000b68:	2104      	movs	r1, #4
 8000b6a:	2001      	movs	r0, #1
 8000b6c:	f007 ff15 	bl	800899a <osMessageQueueNew>
 8000b70:	4b07      	ldr	r3, [pc, #28]	@ (8000b90 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000b72:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b74:	b918      	cbnz	r0, 8000b7e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000b76:	4b07      	ldr	r3, [pc, #28]	@ (8000b94 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000b78:	4a03      	ldr	r2, [pc, #12]	@ (8000b88 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b7a:	212c      	movs	r1, #44	@ 0x2c
 8000b7c:	e7f0      	b.n	8000b60 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000b7e:	bd08      	pop	{r3, pc}
 8000b80:	200004c0 	.word	0x200004c0
 8000b84:	08025ab9 	.word	0x08025ab9
 8000b88:	08025b02 	.word	0x08025b02
 8000b8c:	08025b31 	.word	0x08025b31
 8000b90:	200004bc 	.word	0x200004bc
 8000b94:	08025b8f 	.word	0x08025b8f

08000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000b98:	4b02      	ldr	r3, [pc, #8]	@ (8000ba4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000b9a:	f04f 31ff 	mov.w	r1, #4294967295
 8000b9e:	6818      	ldr	r0, [r3, #0]
 8000ba0:	f007 bea6 	b.w	80088f0 <osSemaphoreAcquire>
 8000ba4:	200004c0 	.word	0x200004c0

08000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ba8:	4b01      	ldr	r3, [pc, #4]	@ (8000bb0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000baa:	6818      	ldr	r0, [r3, #0]
 8000bac:	f007 becc 	b.w	8008948 <osSemaphoreRelease>
 8000bb0:	200004c0 	.word	0x200004c0

08000bb4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000bb4:	4b02      	ldr	r3, [pc, #8]	@ (8000bc0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000bb6:	2100      	movs	r1, #0
 8000bb8:	6818      	ldr	r0, [r3, #0]
 8000bba:	f007 be99 	b.w	80088f0 <osSemaphoreAcquire>
 8000bbe:	bf00      	nop
 8000bc0:	200004c0 	.word	0x200004c0

08000bc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000bc4:	f7ff bff0 	b.w	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000bc8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000bc8:	4803      	ldr	r0, [pc, #12]	@ (8000bd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000bca:	4904      	ldr	r1, [pc, #16]	@ (8000bdc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000bcc:	6800      	ldr	r0, [r0, #0]
 8000bce:	2300      	movs	r3, #0
 8000bd0:	461a      	mov	r2, r3
 8000bd2:	f007 bf1d 	b.w	8008a10 <osMessageQueuePut>
 8000bd6:	bf00      	nop
 8000bd8:	200004bc 	.word	0x200004bc
 8000bdc:	20000004 	.word	0x20000004

08000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000be0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000be2:	4c08      	ldr	r4, [pc, #32]	@ (8000c04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000be4:	2300      	movs	r3, #0
 8000be6:	461a      	mov	r2, r3
 8000be8:	a901      	add	r1, sp, #4
 8000bea:	6820      	ldr	r0, [r4, #0]
 8000bec:	f007 ff41 	bl	8008a72 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000bf0:	6820      	ldr	r0, [r4, #0]
 8000bf2:	f04f 33ff 	mov.w	r3, #4294967295
 8000bf6:	2200      	movs	r2, #0
 8000bf8:	a901      	add	r1, sp, #4
 8000bfa:	f007 ff3a 	bl	8008a72 <osMessageQueueGet>
}
 8000bfe:	b002      	add	sp, #8
 8000c00:	bd10      	pop	{r4, pc}
 8000c02:	bf00      	nop
 8000c04:	200004bc 	.word	0x200004bc

08000c08 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000c08:	6803      	ldr	r3, [r0, #0]
 8000c0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c0c:	4718      	bx	r3

08000c0e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000c0e:	2001      	movs	r0, #1
 8000c10:	4770      	bx	lr

08000c12 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000c12:	6803      	ldr	r3, [r0, #0]
 8000c14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000c16:	4718      	bx	r3

08000c18 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8000c18:	e7fe      	b.n	8000c18 <DMA2D_XferErrorCallback>

08000c1a <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000c1a:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8000c1e:	4770      	bx	lr

08000c20 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000c20:	4b05      	ldr	r3, [pc, #20]	@ (8000c38 <_ZN8STM32DMAD1Ev+0x18>)
 8000c22:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c24:	4b05      	ldr	r3, [pc, #20]	@ (8000c3c <_ZN8STM32DMAD1Ev+0x1c>)
 8000c26:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c2a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000c2e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000c32:	f3bf 8f6f 	isb	sy
}
 8000c36:	4770      	bx	lr
 8000c38:	080264e4 	.word	0x080264e4
 8000c3c:	e000e100 	.word	0xe000e100

08000c40 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000c40:	b510      	push	{r4, lr}
 8000c42:	4604      	mov	r4, r0
}
 8000c44:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8000c48:	f7ff ffea 	bl	8000c20 <_ZN8STM32DMAD1Ev>
 8000c4c:	4620      	mov	r0, r4
 8000c4e:	f022 fd0a 	bl	8023666 <_ZdlPvj>
 8000c52:	4620      	mov	r0, r4
 8000c54:	bd10      	pop	{r4, pc}
	...

08000c58 <_ZN8STM32DMA10initializeEv>:
{
 8000c58:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	9301      	str	r3, [sp, #4]
 8000c5e:	4b0e      	ldr	r3, [pc, #56]	@ (8000c98 <_ZN8STM32DMA10initializeEv+0x40>)
 8000c60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c62:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c66:	631a      	str	r2, [r3, #48]	@ 0x30
 8000c68:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c6a:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8000c6e:	9201      	str	r2, [sp, #4]
 8000c70:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000c72:	691a      	ldr	r2, [r3, #16]
 8000c74:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c78:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000c7a:	691a      	ldr	r2, [r3, #16]
 8000c7c:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8000c80:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000c82:	4b06      	ldr	r3, [pc, #24]	@ (8000c9c <_ZN8STM32DMA10initializeEv+0x44>)
 8000c84:	4a06      	ldr	r2, [pc, #24]	@ (8000ca0 <_ZN8STM32DMA10initializeEv+0x48>)
 8000c86:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000c88:	4a06      	ldr	r2, [pc, #24]	@ (8000ca4 <_ZN8STM32DMA10initializeEv+0x4c>)
 8000c8a:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c8c:	4b06      	ldr	r3, [pc, #24]	@ (8000ca8 <_ZN8STM32DMA10initializeEv+0x50>)
 8000c8e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c92:	609a      	str	r2, [r3, #8]
}
 8000c94:	b002      	add	sp, #8
 8000c96:	4770      	bx	lr
 8000c98:	40023800 	.word	0x40023800
 8000c9c:	20002814 	.word	0x20002814
 8000ca0:	08000ef9 	.word	0x08000ef9
 8000ca4:	08000c19 	.word	0x08000c19
 8000ca8:	e000e100 	.word	0xe000e100

08000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000cac:	b508      	push	{r3, lr}
    switch (format)
 8000cae:	280a      	cmp	r0, #10
 8000cb0:	d809      	bhi.n	8000cc6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000cb2:	e8df f000 	tbb	[pc, r0]
 8000cb6:	1006      	.short	0x1006
 8000cb8:	0808080e 	.word	0x0808080e
 8000cbc:	10101008 	.word	0x10101008
 8000cc0:	10          	.byte	0x10
 8000cc1:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000cc2:	2002      	movs	r0, #2
}
 8000cc4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000cc6:	4b05      	ldr	r3, [pc, #20]	@ (8000cdc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000cc8:	4a05      	ldr	r2, [pc, #20]	@ (8000ce0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000cca:	4806      	ldr	r0, [pc, #24]	@ (8000ce4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000ccc:	2190      	movs	r1, #144	@ 0x90
 8000cce:	f023 fc07 	bl	80244e0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000cd2:	2000      	movs	r0, #0
 8000cd4:	e7f6      	b.n	8000cc4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000cd6:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000cd8:	e7f4      	b.n	8000cc4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000cda:	bf00      	nop
 8000cdc:	08025bd1 	.word	0x08025bd1
 8000ce0:	08025bec 	.word	0x08025bec
 8000ce4:	08025c37 	.word	0x08025c37

08000ce8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000ce8:	b538      	push	{r3, r4, r5, lr}
 8000cea:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000cec:	7f88      	ldrb	r0, [r1, #30]
 8000cee:	f7ff ffdd 	bl	8000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cf2:	8aa5      	ldrh	r5, [r4, #20]
 8000cf4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cf6:	4b16      	ldr	r3, [pc, #88]	@ (8000d50 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cf8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cfa:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cfc:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d00:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d02:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d04:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d06:	1b52      	subs	r2, r2, r5
 8000d08:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d0a:	6825      	ldr	r5, [r4, #0]
 8000d0c:	2d08      	cmp	r5, #8
 8000d0e:	d10e      	bne.n	8000d2e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d10:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d12:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d14:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d16:	7f20      	ldrb	r0, [r4, #28]
 8000d18:	4a0e      	ldr	r2, [pc, #56]	@ (8000d54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d1a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d1e:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000d20:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d22:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d24:	4a0c      	ldr	r2, [pc, #48]	@ (8000d58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d26:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d28:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d2a:	601a      	str	r2, [r3, #0]
    }
}
 8000d2c:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000d2e:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d30:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000d32:	611a      	str	r2, [r3, #16]
 8000d34:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000d36:	0a0a      	lsrs	r2, r1, #8
 8000d38:	0948      	lsrs	r0, r1, #5
 8000d3a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8000d3e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8000d42:	4302      	orrs	r2, r0
 8000d44:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000d48:	430a      	orrs	r2, r1
 8000d4a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d4c:	4a03      	ldr	r2, [pc, #12]	@ (8000d5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000d4e:	e7ec      	b.n	8000d2a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000d50:	4002b000 	.word	0x4002b000
 8000d54:	00010009 	.word	0x00010009
 8000d58:	00022301 	.word	0x00022301
 8000d5c:	00032301 	.word	0x00032301

08000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d60:	b508      	push	{r3, lr}
    switch (format)
 8000d62:	280b      	cmp	r0, #11
 8000d64:	d80b      	bhi.n	8000d7e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d66:	e8df f000 	tbb	[pc, r0]
 8000d6a:	1206      	.short	0x1206
 8000d6c:	0a0a0a10 	.word	0x0a0a0a10
 8000d70:	0808080a 	.word	0x0808080a
 8000d74:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000d76:	2002      	movs	r0, #2
}
 8000d78:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000d7a:	2005      	movs	r0, #5
        break;
 8000d7c:	e7fc      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000d7e:	4b05      	ldr	r3, [pc, #20]	@ (8000d94 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000d80:	4a05      	ldr	r2, [pc, #20]	@ (8000d98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000d82:	4806      	ldr	r0, [pc, #24]	@ (8000d9c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000d84:	216f      	movs	r1, #111	@ 0x6f
 8000d86:	f023 fbab 	bl	80244e0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000d8a:	2000      	movs	r0, #0
 8000d8c:	e7f4      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000d8e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000d90:	e7f2      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000d92:	bf00      	nop
 8000d94:	08025bd1 	.word	0x08025bd1
 8000d98:	08025c93 	.word	0x08025c93
 8000d9c:	08025c37 	.word	0x08025c37

08000da0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8000da0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000da4:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000da8:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000daa:	4640      	mov	r0, r8
 8000dac:	f7ff ffd8 	bl	8000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000db0:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000db2:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000db4:	4638      	mov	r0, r7
 8000db6:	f7ff ffd3 	bl	8000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000dba:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000dbc:	4638      	mov	r0, r7
 8000dbe:	f7ff ff75 	bl	8000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dc2:	8aa1      	ldrh	r1, [r4, #20]
 8000dc4:	8b62      	ldrh	r2, [r4, #26]
 8000dc6:	4b44      	ldr	r3, [pc, #272]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dc8:	1a52      	subs	r2, r2, r1
 8000dca:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dcc:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000dce:	8b22      	ldrh	r2, [r4, #24]
 8000dd0:	1a52      	subs	r2, r2, r1
 8000dd2:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dd4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000dd6:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dd8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000ddc:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dde:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000de0:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000de2:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000de4:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8000de6:	6820      	ldr	r0, [r4, #0]
 8000de8:	2880      	cmp	r0, #128	@ 0x80
 8000dea:	d028      	beq.n	8000e3e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000dec:	7f22      	ldrb	r2, [r4, #28]
 8000dee:	d80f      	bhi.n	8000e10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8000df0:	2820      	cmp	r0, #32
 8000df2:	d067      	beq.n	8000ec4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000df4:	2840      	cmp	r0, #64	@ 0x40
 8000df6:	d065      	beq.n	8000ec4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000df8:	2804      	cmp	r0, #4
 8000dfa:	d01a      	beq.n	8000e32 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dfc:	4b36      	ldr	r3, [pc, #216]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dfe:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e02:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e06:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e08:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e0a:	d061      	beq.n	8000ed0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e0c:	4a33      	ldr	r2, [pc, #204]	@ (8000edc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000e0e:	e044      	b.n	8000e9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8000e10:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8000e14:	d004      	beq.n	8000e20 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8000e16:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8000e1a:	d1ef      	bne.n	8000dfc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e1c:	4830      	ldr	r0, [pc, #192]	@ (8000ee0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000e1e:	e000      	b.n	8000e22 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e20:	4830      	ldr	r0, [pc, #192]	@ (8000ee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e22:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8000e26:	61da      	str	r2, [r3, #28]
 8000e28:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000e2a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e2c:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e2e:	6159      	str	r1, [r3, #20]
 8000e30:	e032      	b.n	8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e32:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000e36:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e3a:	61da      	str	r2, [r3, #28]
 8000e3c:	e7f6      	b.n	8000e2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000e3e:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000e40:	1d02      	adds	r2, r0, #4
 8000e42:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e44:	7f22      	ldrb	r2, [r4, #28]
 8000e46:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e4a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8000e4e:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e50:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e52:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000e54:	7801      	ldrb	r1, [r0, #0]
 8000e56:	b141      	cbz	r1, 8000e6a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8000e58:	2901      	cmp	r1, #1
 8000e5a:	d021      	beq.n	8000ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8000e5c:	4b22      	ldr	r3, [pc, #136]	@ (8000ee8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000e5e:	4a23      	ldr	r2, [pc, #140]	@ (8000eec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000e60:	4823      	ldr	r0, [pc, #140]	@ (8000ef0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000e62:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 8000e66:	f023 fb3b 	bl	80244e0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e6a:	69da      	ldr	r2, [r3, #28]
 8000e6c:	8841      	ldrh	r1, [r0, #2]
 8000e6e:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000e72:	3901      	subs	r1, #1
 8000e74:	f022 0210 	bic.w	r2, r2, #16
 8000e78:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000e7c:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000e7e:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000e80:	4b15      	ldr	r3, [pc, #84]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000e82:	69da      	ldr	r2, [r3, #28]
 8000e84:	f042 0220 	orr.w	r2, r2, #32
 8000e88:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000e8a:	69da      	ldr	r2, [r3, #28]
 8000e8c:	0692      	lsls	r2, r2, #26
 8000e8e:	d4fc      	bmi.n	8000e8a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000e90:	2210      	movs	r2, #16
 8000e92:	609a      	str	r2, [r3, #8]
            if (blend)
 8000e94:	2900      	cmp	r1, #0
 8000e96:	d0b9      	beq.n	8000e0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e98:	4a16      	ldr	r2, [pc, #88]	@ (8000ef4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e9a:	601a      	str	r2, [r3, #0]
}
 8000e9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8000ea0:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000ea4:	69da      	ldr	r2, [r3, #28]
 8000ea6:	8840      	ldrh	r0, [r0, #2]
 8000ea8:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000eac:	f100 30ff 	add.w	r0, r0, #4294967295
 8000eb0:	f022 0210 	bic.w	r2, r2, #16
 8000eb4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000eb8:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000ebc:	bf18      	it	ne
 8000ebe:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000ec0:	61da      	str	r2, [r3, #28]
                break;
 8000ec2:	e7dd      	b.n	8000e80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ec4:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ec8:	4b03      	ldr	r3, [pc, #12]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000eca:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8000ece:	e7b4      	b.n	8000e3a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000ed0:	f242 3201 	movw	r2, #8961	@ 0x2301
 8000ed4:	e7e1      	b.n	8000e9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000ed6:	bf00      	nop
 8000ed8:	4002b000 	.word	0x4002b000
 8000edc:	00012301 	.word	0x00012301
 8000ee0:	00020009 	.word	0x00020009
 8000ee4:	0002000a 	.word	0x0002000a
 8000ee8:	08025cdd 	.word	0x08025cdd
 8000eec:	08025cf7 	.word	0x08025cf7
 8000ef0:	08025c37 	.word	0x08025c37
 8000ef4:	00022301 	.word	0x00022301

08000ef8 <DMA2D_XferCpltCallback>:
        return instance;
 8000ef8:	4b02      	ldr	r3, [pc, #8]	@ (8000f04 <DMA2D_XferCpltCallback+0xc>)
 8000efa:	681b      	ldr	r3, [r3, #0]
 8000efc:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000efe:	6803      	ldr	r3, [r0, #0]
 8000f00:	695b      	ldr	r3, [r3, #20]
 8000f02:	4718      	bx	r3
 8000f04:	20013b6c 	.word	0x20013b6c

08000f08 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000f08:	b570      	push	{r4, r5, r6, lr}
 8000f0a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000f0c:	4625      	mov	r5, r4
 8000f0e:	4b0a      	ldr	r3, [pc, #40]	@ (8000f38 <_ZN8STM32DMAC1Ev+0x30>)
 8000f10:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000f12:	2600      	movs	r6, #0
 8000f14:	6060      	str	r0, [r4, #4]
 8000f16:	7226      	strb	r6, [r4, #8]
 8000f18:	7266      	strb	r6, [r4, #9]
 8000f1a:	f845 3b20 	str.w	r3, [r5], #32
 8000f1e:	2260      	movs	r2, #96	@ 0x60
 8000f20:	4629      	mov	r1, r5
 8000f22:	f00b fc11 	bl	800c748 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000f26:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8000f2a:	60ee      	str	r6, [r5, #12]
 8000f2c:	3524      	adds	r5, #36	@ 0x24
 8000f2e:	429d      	cmp	r5, r3
 8000f30:	d1fb      	bne.n	8000f2a <_ZN8STM32DMAC1Ev+0x22>
}
 8000f32:	4620      	mov	r0, r4
 8000f34:	bd70      	pop	{r4, r5, r6, pc}
 8000f36:	bf00      	nop
 8000f38:	080264e4 	.word	0x080264e4

08000f3c <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f3c:	4b03      	ldr	r3, [pc, #12]	@ (8000f4c <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000f3e:	681a      	ldr	r2, [r3, #0]
 8000f40:	07d2      	lsls	r2, r2, #31
 8000f42:	d4fc      	bmi.n	8000f3e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f44:	2223      	movs	r2, #35	@ 0x23
 8000f46:	609a      	str	r2, [r3, #8]
}
 8000f48:	4770      	bx	lr
 8000f4a:	bf00      	nop
 8000f4c:	4002b000 	.word	0x4002b000

08000f50 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8000f50:	4770      	bx	lr
	...

08000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000f54:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f56:	4c0f      	ldr	r4, [pc, #60]	@ (8000f94 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000f58:	6825      	ldr	r5, [r4, #0]
 8000f5a:	07ed      	lsls	r5, r5, #31
 8000f5c:	d4fc      	bmi.n	8000f58 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f5e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f60:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f62:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f64:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f68:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000f6a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f6c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f6e:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000f70:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8000f72:	d00a      	beq.n	8000f8a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f74:	4908      	ldr	r1, [pc, #32]	@ (8000f98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f76:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f78:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000f7c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000f7e:	4b07      	ldr	r3, [pc, #28]	@ (8000f9c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000f80:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000f82:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000f84:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f86:	6023      	str	r3, [r4, #0]
    }
}
 8000f88:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000f8a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000f8c:	9b03      	ldr	r3, [sp, #12]
 8000f8e:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f90:	4b03      	ldr	r3, [pc, #12]	@ (8000fa0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000f92:	e7f8      	b.n	8000f86 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000f94:	4002b000 	.word	0x4002b000
 8000f98:	00010009 	.word	0x00010009
 8000f9c:	00020001 	.word	0x00020001
 8000fa0:	00030001 	.word	0x00030001

08000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fa4:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fa6:	4c0e      	ldr	r4, [pc, #56]	@ (8000fe0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8000fa8:	6825      	ldr	r5, [r4, #0]
 8000faa:	07ed      	lsls	r5, r5, #31
 8000fac:	d4fc      	bmi.n	8000fa8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fae:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb0:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fb2:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb4:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fb8:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8000fba:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fbc:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fbe:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000fc0:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8000fc2:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 8000fc4:	d008      	beq.n	8000fd8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fc6:	061b      	lsls	r3, r3, #24
 8000fc8:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8000fcc:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8000fce:	4b05      	ldr	r3, [pc, #20]	@ (8000fe4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fd0:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8000fd2:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fd4:	6023      	str	r3, [r4, #0]
    }
}
 8000fd6:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fd8:	4b03      	ldr	r3, [pc, #12]	@ (8000fe8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 8000fda:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fdc:	2301      	movs	r3, #1
 8000fde:	e7f9      	b.n	8000fd4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 8000fe0:	4002b000 	.word	0x4002b000
 8000fe4:	00020001 	.word	0x00020001
 8000fe8:	ff020002 	.word	0xff020002

08000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fec:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fee:	4c0b      	ldr	r4, [pc, #44]	@ (800101c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 8000ff0:	6825      	ldr	r5, [r4, #0]
 8000ff2:	07ed      	lsls	r5, r5, #31
 8000ff4:	d4fc      	bmi.n	8000ff0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ff6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000ff8:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000ffa:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ffc:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000ffe:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001002:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001004:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001008:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800100a:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800100c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800100e:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001010:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001012:	4b03      	ldr	r3, [pc, #12]	@ (8001020 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001014:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8001016:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001018:	6023      	str	r3, [r4, #0]
}
 800101a:	bd30      	pop	{r4, r5, pc}
 800101c:	4002b000 	.word	0x4002b000
 8001020:	00020001 	.word	0x00020001

08001024 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001024:	2001      	movs	r0, #1
 8001026:	4770      	bx	lr

08001028 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001028:	200c      	movs	r0, #12
 800102a:	4770      	bx	lr

0800102c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800102c:	230c      	movs	r3, #12
 800102e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001032:	3008      	adds	r0, #8
 8001034:	4770      	bx	lr

08001036 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001036:	230c      	movs	r3, #12
 8001038:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800103c:	3008      	adds	r0, #8
 800103e:	4770      	bx	lr

08001040 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001040:	2001      	movs	r0, #1
 8001042:	4770      	bx	lr

08001044 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001044:	f44f 60cb 	mov.w	r0, #1624	@ 0x658
 8001048:	4770      	bx	lr

0800104a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800104a:	f44f 63cb 	mov.w	r3, #1624	@ 0x658
 800104e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001052:	3008      	adds	r0, #8
 8001054:	4770      	bx	lr

08001056 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001056:	f44f 63cb 	mov.w	r3, #1624	@ 0x658
 800105a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800105e:	3008      	adds	r0, #8
 8001060:	4770      	bx	lr

08001062 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001062:	2001      	movs	r0, #1
 8001064:	4770      	bx	lr

08001066 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001066:	2010      	movs	r0, #16
 8001068:	4770      	bx	lr

0800106a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800106a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800106e:	3008      	adds	r0, #8
 8001070:	4770      	bx	lr

08001072 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001072:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001076:	3008      	adds	r0, #8
 8001078:	4770      	bx	lr

0800107a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800107a:	4608      	mov	r0, r1
 800107c:	f001 bd8a 	b.w	8002b94 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001080:	b510      	push	{r4, lr}
 8001082:	4b03      	ldr	r3, [pc, #12]	@ (8001090 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001084:	6003      	str	r3, [r0, #0]
 8001086:	4604      	mov	r4, r0
 8001088:	f00a f98c 	bl	800b3a4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800108c:	4620      	mov	r0, r4
 800108e:	bd10      	pop	{r4, pc}
 8001090:	0802659c 	.word	0x0802659c

08001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001094:	b510      	push	{r4, lr}
 8001096:	4604      	mov	r4, r0
 8001098:	f7ff fff2 	bl	8001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800109c:	4620      	mov	r0, r4
 800109e:	2114      	movs	r1, #20
 80010a0:	f022 fae1 	bl	8023666 <_ZdlPvj>
 80010a4:	4620      	mov	r0, r4
 80010a6:	bd10      	pop	{r4, pc}

080010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80010a8:	b510      	push	{r4, lr}
 80010aa:	4b03      	ldr	r3, [pc, #12]	@ (80010b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010ac:	6003      	str	r3, [r0, #0]
 80010ae:	4604      	mov	r4, r0
 80010b0:	f00a f978 	bl	800b3a4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010b4:	4620      	mov	r0, r4
 80010b6:	bd10      	pop	{r4, pc}
 80010b8:	08026568 	.word	0x08026568

080010bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010bc:	b510      	push	{r4, lr}
 80010be:	4604      	mov	r4, r0
 80010c0:	f7ff fff2 	bl	80010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010c4:	4620      	mov	r0, r4
 80010c6:	f44f 61cc 	mov.w	r1, #1632	@ 0x660
 80010ca:	f022 facc 	bl	8023666 <_ZdlPvj>
 80010ce:	4620      	mov	r0, r4
 80010d0:	bd10      	pop	{r4, pc}
	...

080010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80010d4:	b510      	push	{r4, lr}
 80010d6:	4b03      	ldr	r3, [pc, #12]	@ (80010e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010d8:	6003      	str	r3, [r0, #0]
 80010da:	4604      	mov	r4, r0
 80010dc:	f00a f962 	bl	800b3a4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010e0:	4620      	mov	r0, r4
 80010e2:	bd10      	pop	{r4, pc}
 80010e4:	08026534 	.word	0x08026534

080010e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010e8:	b510      	push	{r4, lr}
 80010ea:	4604      	mov	r4, r0
 80010ec:	f7ff fff2 	bl	80010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010f0:	4620      	mov	r0, r4
 80010f2:	2118      	movs	r1, #24
 80010f4:	f022 fab7 	bl	8023666 <_ZdlPvj>
 80010f8:	4620      	mov	r0, r4
 80010fa:	bd10      	pop	{r4, pc}

080010fc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80010fc:	b510      	push	{r4, lr}
 80010fe:	4b08      	ldr	r3, [pc, #32]	@ (8001120 <_ZN12FrontendHeapD1Ev+0x24>)
 8001100:	6003      	str	r3, [r0, #0]
 8001102:	4604      	mov	r4, r0
 8001104:	f200 608c 	addw	r0, r0, #1676	@ 0x68c
 8001108:	f7ff ffba 	bl	8001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800110c:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001110:	f7ff ffca 	bl	80010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001114:	f104 0014 	add.w	r0, r4, #20
 8001118:	f7ff ffdc 	bl	80010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800111c:	4620      	mov	r0, r4
 800111e:	bd10      	pop	{r4, pc}
 8001120:	080265d0 	.word	0x080265d0

08001124 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001124:	b508      	push	{r3, lr}
 8001126:	4802      	ldr	r0, [pc, #8]	@ (8001130 <__tcf_0+0xc>)
 8001128:	f7ff ffe8 	bl	80010fc <_ZN12FrontendHeapD1Ev>
 800112c:	bd08      	pop	{r3, pc}
 800112e:	bf00      	nop
 8001130:	2000139c 	.word	0x2000139c

08001134 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001134:	b510      	push	{r4, lr}
 8001136:	4604      	mov	r4, r0
 8001138:	f7ff ffe0 	bl	80010fc <_ZN12FrontendHeapD1Ev>
 800113c:	4620      	mov	r0, r4
 800113e:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001142:	f022 fa90 	bl	8023666 <_ZdlPvj>
 8001146:	4620      	mov	r0, r4
 8001148:	bd10      	pop	{r4, pc}
	...

0800114c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800114c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001150:	f001 fb96 	bl	8002880 <_ZN14BitmapDatabase11getInstanceEv>
 8001154:	4605      	mov	r5, r0
 8001156:	f001 fb97 	bl	8002888 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800115a:	2400      	movs	r4, #0
 800115c:	4601      	mov	r1, r0
 800115e:	4623      	mov	r3, r4
 8001160:	4628      	mov	r0, r5
 8001162:	4622      	mov	r2, r4
 8001164:	9400      	str	r4, [sp, #0]
 8001166:	f013 f9eb 	bl	8014540 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800116a:	4b27      	ldr	r3, [pc, #156]	@ (8001208 <touchgfx_init+0xbc>)
 800116c:	4a27      	ldr	r2, [pc, #156]	@ (800120c <touchgfx_init+0xc0>)
 800116e:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001170:	4620      	mov	r0, r4
 8001172:	f002 fc9f 	bl	8003ab4 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 8001176:	4d26      	ldr	r5, [pc, #152]	@ (8001210 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8001178:	4b26      	ldr	r3, [pc, #152]	@ (8001214 <touchgfx_init+0xc8>)
 800117a:	4a27      	ldr	r2, [pc, #156]	@ (8001218 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 800117c:	4827      	ldr	r0, [pc, #156]	@ (800121c <touchgfx_init+0xd0>)
 800117e:	609a      	str	r2, [r3, #8]
 8001180:	f013 f946 	bl	8014410 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001184:	682b      	ldr	r3, [r5, #0]
 8001186:	f3bf 8f5b 	dmb	ish
 800118a:	07db      	lsls	r3, r3, #31
 800118c:	d435      	bmi.n	80011fa <touchgfx_init+0xae>
 800118e:	4628      	mov	r0, r5
 8001190:	f022 fa6b 	bl	802366a <__cxa_guard_acquire>
 8001194:	b388      	cbz	r0, 80011fa <touchgfx_init+0xae>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001196:	4c22      	ldr	r4, [pc, #136]	@ (8001220 <touchgfx_init+0xd4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001198:	4b22      	ldr	r3, [pc, #136]	@ (8001224 <touchgfx_init+0xd8>)
 800119a:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800119c:	f204 66a4 	addw	r6, r4, #1700	@ 0x6a4
        : presenterStorage(pres),
 80011a0:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80011a4:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 80011a8:	f204 678c 	addw	r7, r4, #1676	@ 0x68c
        : presenterStorage(pres),
 80011ac:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80011ae:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80011b2:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80011b4:	6126      	str	r6, [r4, #16]
 80011b6:	f00a f8f7 	bl	800b3a8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011ba:	4b1b      	ldr	r3, [pc, #108]	@ (8001228 <touchgfx_init+0xdc>)
 80011bc:	6163      	str	r3, [r4, #20]
 80011be:	4640      	mov	r0, r8
 80011c0:	f00a f8f2 	bl	800b3a8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011c4:	4b19      	ldr	r3, [pc, #100]	@ (800122c <touchgfx_init+0xe0>)
 80011c6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80011c8:	4638      	mov	r0, r7
 80011ca:	f00a f8ed 	bl	800b3a8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011ce:	4b18      	ldr	r3, [pc, #96]	@ (8001230 <touchgfx_init+0xe4>)
 80011d0:	f8c4 368c 	str.w	r3, [r4, #1676]	@ 0x68c
 80011d4:	f504 60d4 	add.w	r0, r4, #1696	@ 0x6a0
 80011d8:	f002 fcf4 	bl	8003bc4 <_ZN5ModelC1Ev>
 80011dc:	4622      	mov	r2, r4
 80011de:	f504 61d4 	add.w	r1, r4, #1696	@ 0x6a0
 80011e2:	4630      	mov	r0, r6
 80011e4:	f002 fce4 	bl	8003bb0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80011e8:	4630      	mov	r0, r6
 80011ea:	f001 fcd3 	bl	8002b94 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 80011ee:	4811      	ldr	r0, [pc, #68]	@ (8001234 <touchgfx_init+0xe8>)
 80011f0:	f023 f994 	bl	802451c <atexit>
 80011f4:	4628      	mov	r0, r5
 80011f6:	f022 fa44 	bl	8023682 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80011fa:	480f      	ldr	r0, [pc, #60]	@ (8001238 <touchgfx_init+0xec>)
}
 80011fc:	b002      	add	sp, #8
 80011fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001202:	f7ff bbe7 	b.w	80009d4 <_ZN11TouchGFXHAL10initializeEv>
 8001206:	bf00      	nop
 8001208:	20013bd0 	.word	0x20013bd0
 800120c:	20000548 	.word	0x20000548
 8001210:	20001398 	.word	0x20001398
 8001214:	20000568 	.word	0x20000568
 8001218:	2000054c 	.word	0x2000054c
 800121c:	20000008 	.word	0x20000008
 8001220:	2000139c 	.word	0x2000139c
 8001224:	080265d0 	.word	0x080265d0
 8001228:	08026534 	.word	0x08026534
 800122c:	08026568 	.word	0x08026568
 8001230:	0802659c 	.word	0x0802659c
 8001234:	08001125 	.word	0x08001125
 8001238:	200004c4 	.word	0x200004c4

0800123c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 800123c:	4770      	bx	lr
	...

08001240 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001240:	4801      	ldr	r0, [pc, #4]	@ (8001248 <touchgfx_taskEntry+0x8>)
 8001242:	f7ff bbd5 	b.w	80009f0 <_ZN11TouchGFXHAL9taskEntryEv>
 8001246:	bf00      	nop
 8001248:	200004c4 	.word	0x200004c4

0800124c <_GLOBAL__sub_I_touchgfx_init>:
}
 800124c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800124e:	4e26      	ldr	r6, [pc, #152]	@ (80012e8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8001250:	4c26      	ldr	r4, [pc, #152]	@ (80012ec <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 8001252:	4d27      	ldr	r5, [pc, #156]	@ (80012f0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8001254:	4b27      	ldr	r3, [pc, #156]	@ (80012f4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001256:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001258:	4630      	mov	r0, r6
 800125a:	f7ff fe55 	bl	8000f08 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800125e:	4628      	mov	r0, r5
 8001260:	f018 fa74 	bl	801974c <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 8001264:	4824      	ldr	r0, [pc, #144]	@ (80012f8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8001266:	f011 f9f7 	bl	8012658 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 800126a:	4b24      	ldr	r3, [pc, #144]	@ (80012fc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 800126c:	4824      	ldr	r0, [pc, #144]	@ (8001300 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 800126e:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001270:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001272:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 8001276:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 800127a:	4922      	ldr	r1, [pc, #136]	@ (8001304 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800127c:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 800127e:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 8001282:	4921      	ldr	r1, [pc, #132]	@ (8001308 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 8001284:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 8001288:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 800128c:	491f      	ldr	r1, [pc, #124]	@ (800130c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 800128e:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 8001292:	491f      	ldr	r1, [pc, #124]	@ (8001310 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001294:	481f      	ldr	r0, [pc, #124]	@ (8001314 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 8001296:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001298:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 800129a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800129e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80012a2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80012a6:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 80012aa:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 80012ae:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80012b2:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 80012b6:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 80012ba:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 80012bc:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 80012c0:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 80012c2:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012c6:	8001      	strh	r1, [r0, #0]
 80012c8:	4813      	ldr	r0, [pc, #76]	@ (8001318 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 80012ca:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80012cc:	4813      	ldr	r0, [pc, #76]	@ (800131c <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 80012ce:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80012d2:	8001      	strh	r1, [r0, #0]
 80012d4:	4812      	ldr	r0, [pc, #72]	@ (8001320 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 80012d6:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80012d8:	4912      	ldr	r1, [pc, #72]	@ (8001324 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 80012da:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80012dc:	2201      	movs	r2, #1
 80012de:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80012e2:	4a11      	ldr	r2, [pc, #68]	@ (8001328 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80012e4:	601a      	str	r2, [r3, #0]
}
 80012e6:	bd70      	pop	{r4, r5, r6, pc}
 80012e8:	200005f4 	.word	0x200005f4
 80012ec:	20001394 	.word	0x20001394
 80012f0:	20000568 	.word	0x20000568
 80012f4:	08025938 	.word	0x08025938
 80012f8:	2000054c 	.word	0x2000054c
 80012fc:	200004c4 	.word	0x200004c4
 8001300:	01010000 	.word	0x01010000
 8001304:	01000001 	.word	0x01000001
 8001308:	00500400 	.word	0x00500400
 800130c:	0014001a 	.word	0x0014001a
 8001310:	20013b6c 	.word	0x20013b6c
 8001314:	20013b5e 	.word	0x20013b5e
 8001318:	20013b64 	.word	0x20013b64
 800131c:	20013b60 	.word	0x20013b60
 8001320:	20013b66 	.word	0x20013b66
 8001324:	20013b62 	.word	0x20013b62
 8001328:	080263f8 	.word	0x080263f8

0800132c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 800132c:	4801      	ldr	r0, [pc, #4]	@ (8001334 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800132e:	f7ff bc77 	b.w	8000c20 <_ZN8STM32DMAD1Ev>
 8001332:	bf00      	nop
 8001334:	200005f4 	.word	0x200005f4

08001338 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001338:	2000      	movs	r0, #0
 800133a:	4770      	bx	lr

0800133c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800133c:	8081      	strh	r1, [r0, #4]
    }
 800133e:	4770      	bx	lr

08001340 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001340:	80c1      	strh	r1, [r0, #6]
    }
 8001342:	4770      	bx	lr

08001344 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001344:	8101      	strh	r1, [r0, #8]
    }
 8001346:	4770      	bx	lr

08001348 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001348:	8141      	strh	r1, [r0, #10]
    }
 800134a:	4770      	bx	lr

0800134c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800134c:	4770      	bx	lr

0800134e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800134e:	4770      	bx	lr

08001350 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001350:	4770      	bx	lr

08001352 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001352:	4770      	bx	lr

08001354 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001354:	4770      	bx	lr

08001356 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001356:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001358:	88c4      	ldrh	r4, [r0, #6]
 800135a:	6803      	ldr	r3, [r0, #0]
 800135c:	1b12      	subs	r2, r2, r4
 800135e:	8884      	ldrh	r4, [r0, #4]
 8001360:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001362:	1b09      	subs	r1, r1, r4
 8001364:	b212      	sxth	r2, r2
    }
 8001366:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800136a:	b209      	sxth	r1, r1
 800136c:	4718      	bx	r3

0800136e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800136e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001372:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001374:	f04f 33ff 	mov.w	r3, #4294967295
 8001378:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800137a:	6813      	ldr	r3, [r2, #0]
 800137c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800137e:	6010      	str	r0, [r2, #0]
    }
 8001380:	4770      	bx	lr

08001382 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001382:	2000      	movs	r0, #0
 8001384:	4770      	bx	lr

08001386 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001386:	888b      	ldrh	r3, [r1, #4]
 8001388:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800138a:	2001      	movs	r0, #1
 800138c:	4770      	bx	lr

0800138e <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800138e:	4770      	bx	lr

08001390 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001390:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 8001394:	4770      	bx	lr

08001396 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8001396:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 800139a:	4770      	bx	lr

0800139c <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 800139c:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800139e:	2200      	movs	r2, #0
        return rect.width;
 80013a0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80013a4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80013a8:	8002      	strh	r2, [r0, #0]
 80013aa:	8042      	strh	r2, [r0, #2]
 80013ac:	8084      	strh	r4, [r0, #4]
 80013ae:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80013b0:	bd10      	pop	{r4, pc}

080013b2 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80013b2:	2200      	movs	r2, #0
 80013b4:	8002      	strh	r2, [r0, #0]
 80013b6:	8042      	strh	r2, [r0, #2]
 80013b8:	8082      	strh	r2, [r0, #4]
 80013ba:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80013bc:	4770      	bx	lr

080013be <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 80013be:	7701      	strb	r1, [r0, #28]
    }
 80013c0:	4770      	bx	lr

080013c2 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 80013c2:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 80013c6:	4770      	bx	lr

080013c8 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 80013c8:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 80013cc:	4770      	bx	lr

080013ce <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 80013ce:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 80013d2:	4770      	bx	lr

080013d4 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 80013d4:	2001      	movs	r0, #1
 80013d6:	4770      	bx	lr

080013d8 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 80013d8:	3098      	adds	r0, #152	@ 0x98
 80013da:	4770      	bx	lr

080013dc <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 80013dc:	308c      	adds	r0, #140	@ 0x8c
 80013de:	4770      	bx	lr

080013e0 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 80013e0:	3084      	adds	r0, #132	@ 0x84
 80013e2:	4770      	bx	lr

080013e4 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 80013e4:	4770      	bx	lr

080013e6 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80013e6:	4770      	bx	lr

080013e8 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80013e8:	4770      	bx	lr
	...

080013ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013ec:	4b03      	ldr	r3, [pc, #12]	@ (80013fc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80013ee:	2290      	movs	r2, #144	@ 0x90
 80013f0:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 80013f4:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80013f8:	4770      	bx	lr
 80013fa:	bf00      	nop
 80013fc:	e000e100 	.word	0xe000e100

08001400 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001400:	4a09      	ldr	r2, [pc, #36]	@ (8001428 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001402:	490a      	ldr	r1, [pc, #40]	@ (800142c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001404:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001406:	480a      	ldr	r0, [pc, #40]	@ (8001430 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001408:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800140c:	3b01      	subs	r3, #1
 800140e:	b29b      	uxth	r3, r3
 8001410:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001412:	6911      	ldr	r1, [r2, #16]
 8001414:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001418:	3901      	subs	r1, #1
 800141a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800141c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800141e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001420:	f043 0301 	orr.w	r3, r3, #1
 8001424:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001426:	4770      	bx	lr
 8001428:	40016800 	.word	0x40016800
 800142c:	20001b9e 	.word	0x20001b9e
 8001430:	20001b9c 	.word	0x20001b9c

08001434 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001434:	4b01      	ldr	r3, [pc, #4]	@ (800143c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001436:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 800143a:	4770      	bx	lr
 800143c:	40016800 	.word	0x40016800

08001440 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001440:	4b02      	ldr	r3, [pc, #8]	@ (800144c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001442:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001444:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001448:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800144a:	4770      	bx	lr
 800144c:	40016800 	.word	0x40016800

08001450 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001450:	b510      	push	{r4, lr}
 8001452:	212c      	movs	r1, #44	@ 0x2c
 8001454:	4604      	mov	r4, r0
 8001456:	f022 f906 	bl	8023666 <_ZdlPvj>
 800145a:	4620      	mov	r0, r4
 800145c:	bd10      	pop	{r4, pc}

0800145e <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 800145e:	b510      	push	{r4, lr}
 8001460:	21bc      	movs	r1, #188	@ 0xbc
 8001462:	4604      	mov	r4, r0
 8001464:	f022 f8ff 	bl	8023666 <_ZdlPvj>
 8001468:	4620      	mov	r0, r4
 800146a:	bd10      	pop	{r4, pc}

0800146c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800146c:	b570      	push	{r4, r5, r6, lr}
 800146e:	4604      	mov	r4, r0
    HAL::initialize();
 8001470:	f00a fa97 	bl	800b9a2 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001474:	6823      	ldr	r3, [r4, #0]
 8001476:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8001478:	f00f fe86 	bl	8011188 <_ZN8touchgfx11Application11getInstanceEv>
 800147c:	4601      	mov	r1, r0
 800147e:	4620      	mov	r0, r4
 8001480:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001482:	6823      	ldr	r3, [r4, #0]
 8001484:	4a05      	ldr	r2, [pc, #20]	@ (800149c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001486:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 800148a:	4620      	mov	r0, r4
 800148c:	46ac      	mov	ip, r5
 800148e:	2300      	movs	r3, #0
}
 8001490:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001494:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001498:	4760      	bx	ip
 800149a:	bf00      	nop
 800149c:	d004b000 	.word	0xd004b000

080014a0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80014a0:	f00a ba66 	b.w	800b970 <_ZN8touchgfx3HAL10beginFrameEv>

080014a4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 80014a4:	f00a ba70 	b.w	800b988 <_ZN8touchgfx3HAL8endFrameEv>

080014a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80014a8:	f00a ba2c 	b.w	800b904 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080014ac <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80014ac:	f00a bb9b 	b.w	800bbe6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080014b0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80014b0:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014b4:	b112      	cbz	r2, 80014bc <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80014b6:	6803      	ldr	r3, [r0, #0]
 80014b8:	695b      	ldr	r3, [r3, #20]
 80014ba:	4718      	bx	r3
    }
 80014bc:	4770      	bx	lr

080014be <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80014be:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014c2:	b11a      	cbz	r2, 80014cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80014c4:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80014c8:	b102      	cbz	r2, 80014cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80014ca:	6018      	str	r0, [r3, #0]
        }
    }
 80014cc:	4770      	bx	lr
	...

080014d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014d0:	4b03      	ldr	r3, [pc, #12]	@ (80014e0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80014d2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014d6:	609a      	str	r2, [r3, #8]
 80014d8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014dc:	609a      	str	r2, [r3, #8]
}
 80014de:	4770      	bx	lr
 80014e0:	e000e100 	.word	0xe000e100

080014e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014e4:	4b08      	ldr	r3, [pc, #32]	@ (8001508 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80014e6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014ea:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014ee:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014f2:	f3bf 8f6f 	isb	sy
 80014f6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014fa:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014fe:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001502:	f3bf 8f6f 	isb	sy
}
 8001506:	4770      	bx	lr
 8001508:	e000e100 	.word	0xe000e100

0800150c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 800150c:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800150e:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001510:	4e12      	ldr	r6, [pc, #72]	@ (800155c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001512:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001514:	4b12      	ldr	r3, [pc, #72]	@ (8001560 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001516:	6003      	str	r3, [r0, #0]
 8001518:	6833      	ldr	r3, [r6, #0]
 800151a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 800151e:	4605      	mov	r5, r0
 8001520:	b10a      	cbz	r2, 8001526 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001522:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001524:	b900      	cbnz	r0, 8001528 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001526:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001528:	6803      	ldr	r3, [r0, #0]
 800152a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800152c:	4798      	blx	r3
        return auxiliaryLCD;
 800152e:	6833      	ldr	r3, [r6, #0]
 8001530:	fab0 f480 	clz	r4, r0
 8001534:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001536:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001538:	b130      	cbz	r0, 8001548 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800153a:	6803      	ldr	r3, [r0, #0]
 800153c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800153e:	4798      	blx	r3
 8001540:	2800      	cmp	r0, #0
 8001542:	bf08      	it	eq
 8001544:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001548:	b92c      	cbnz	r4, 8001556 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800154a:	4b06      	ldr	r3, [pc, #24]	@ (8001564 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 800154c:	4a06      	ldr	r2, [pc, #24]	@ (8001568 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800154e:	4807      	ldr	r0, [pc, #28]	@ (800156c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001550:	212c      	movs	r1, #44	@ 0x2c
 8001552:	f022 ffc5 	bl	80244e0 <__assert_func>
    }
 8001556:	4628      	mov	r0, r5
 8001558:	bd70      	pop	{r4, r5, r6, pc}
 800155a:	bf00      	nop
 800155c:	20013b6c 	.word	0x20013b6c
 8001560:	080265e4 	.word	0x080265e4
 8001564:	08025d35 	.word	0x08025d35
 8001568:	08025d93 	.word	0x08025d93
 800156c:	08025dcc 	.word	0x08025dcc

08001570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001570:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 8001572:	4e25      	ldr	r6, [pc, #148]	@ (8001608 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001574:	6835      	ldr	r5, [r6, #0]
 8001576:	f3bf 8f5b 	dmb	ish
 800157a:	f015 0501 	ands.w	r5, r5, #1
 800157e:	d140      	bne.n	8001602 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8001580:	4630      	mov	r0, r6
 8001582:	f022 f872 	bl	802366a <__cxa_guard_acquire>
 8001586:	2800      	cmp	r0, #0
 8001588:	d03b      	beq.n	8001602 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 800158a:	4c20      	ldr	r4, [pc, #128]	@ (800160c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 800158c:	4b20      	ldr	r3, [pc, #128]	@ (8001610 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 800158e:	6125      	str	r5, [r4, #16]
 8001590:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8001594:	e9c4 3500 	strd	r3, r5, [r4]
 8001598:	e9c4 5502 	strd	r5, r5, [r4, #8]
 800159c:	84e5      	strh	r5, [r4, #38]	@ 0x26
 800159e:	62a5      	str	r5, [r4, #40]	@ 0x28
 80015a0:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 80015a2:	f011 fb3e 	bl	8012c22 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 80015a6:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80015aa:	f00c fd81 	bl	800e0b0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80015ae:	4b19      	ldr	r3, [pc, #100]	@ (8001614 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 80015b0:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80015b2:	4620      	mov	r0, r4
 80015b4:	4b18      	ldr	r3, [pc, #96]	@ (8001618 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 80015b6:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80015ba:	f7ff ffa7 	bl	800150c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80015be:	4b17      	ldr	r3, [pc, #92]	@ (800161c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 80015c0:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 80015c4:	3324      	adds	r3, #36	@ 0x24
 80015c6:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 80015ca:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 80015ce:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 80015d2:	2300      	movs	r3, #0
 80015d4:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 80015d8:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 80015dc:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 80015e0:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 80015e4:	480e      	ldr	r0, [pc, #56]	@ (8001620 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 80015e6:	4b0f      	ldr	r3, [pc, #60]	@ (8001624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80015e8:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 80015ec:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80015f0:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80015f4:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80015f8:	f022 ff90 	bl	802451c <atexit>
 80015fc:	4630      	mov	r0, r6
 80015fe:	f022 f840 	bl	8023682 <__cxa_guard_release>
}
 8001602:	4802      	ldr	r0, [pc, #8]	@ (800160c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001604:	bd70      	pop	{r4, r5, r6, pc}
 8001606:	bf00      	nop
 8001608:	20001ba0 	.word	0x20001ba0
 800160c:	20001ba4 	.word	0x20001ba4
 8001610:	08027388 	.word	0x08027388
 8001614:	08026604 	.word	0x08026604
 8001618:	0802667c 	.word	0x0802667c
 800161c:	0802733c 	.word	0x0802733c
 8001620:	080013e9 	.word	0x080013e9
 8001624:	0802731c 	.word	0x0802731c

08001628 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001628:	b538      	push	{r3, r4, r5, lr}
        return instance;
 800162a:	4c18      	ldr	r4, [pc, #96]	@ (800168c <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 800162c:	6823      	ldr	r3, [r4, #0]
 800162e:	b35b      	cbz	r3, 8001688 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001630:	4b17      	ldr	r3, [pc, #92]	@ (8001690 <HAL_LTDC_LineEventCallback+0x68>)
 8001632:	4a18      	ldr	r2, [pc, #96]	@ (8001694 <HAL_LTDC_LineEventCallback+0x6c>)
 8001634:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001636:	8811      	ldrh	r1, [r2, #0]
 8001638:	428b      	cmp	r3, r1
 800163a:	d116      	bne.n	800166a <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800163c:	4b16      	ldr	r3, [pc, #88]	@ (8001698 <HAL_LTDC_LineEventCallback+0x70>)
 800163e:	8819      	ldrh	r1, [r3, #0]
 8001640:	f004 fb48 	bl	8005cd4 <HAL_LTDC_ProgramLineEvent>
 8001644:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 8001646:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 800164a:	2500      	movs	r5, #0
        vSyncCnt++;
 800164c:	3201      	adds	r2, #1
 800164e:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001652:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001656:	f7ff fab7 	bl	8000bc8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800165a:	6820      	ldr	r0, [r4, #0]
 800165c:	f00a ff1e 	bl	800c49c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001660:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001662:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001666:	f7ff b8f7 	b.w	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800166a:	f004 fb33 	bl	8005cd4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 800166e:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8001670:	6823      	ldr	r3, [r4, #0]
 8001672:	4620      	mov	r0, r4
 8001674:	6a1b      	ldr	r3, [r3, #32]
 8001676:	4798      	blx	r3
        isFrontPorchEntered = true;
 8001678:	2301      	movs	r3, #1
 800167a:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 800167e:	2000      	movs	r0, #0
    }
 8001680:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001684:	f7ff b912 	b.w	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001688:	bd38      	pop	{r3, r4, r5, pc}
 800168a:	bf00      	nop
 800168c:	20013b6c 	.word	0x20013b6c
 8001690:	40016800 	.word	0x40016800
 8001694:	20001b9e 	.word	0x20001b9e
 8001698:	20001b9c 	.word	0x20001b9c

0800169c <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 800169c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceHS, &HS_Desc, DEVICE_HS) != USBD_OK)
 800169e:	490c      	ldr	r1, [pc, #48]	@ (80016d0 <MX_USB_DEVICE_Init+0x34>)
 80016a0:	480c      	ldr	r0, [pc, #48]	@ (80016d4 <MX_USB_DEVICE_Init+0x38>)
 80016a2:	2201      	movs	r2, #1
 80016a4:	f009 f91c 	bl	800a8e0 <USBD_Init>
 80016a8:	b108      	cbz	r0, 80016ae <MX_USB_DEVICE_Init+0x12>
  {
    Error_Handler();
 80016aa:	f000 fd5d 	bl	8002168 <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceHS, &USBD_HID) != USBD_OK)
 80016ae:	490a      	ldr	r1, [pc, #40]	@ (80016d8 <MX_USB_DEVICE_Init+0x3c>)
 80016b0:	4808      	ldr	r0, [pc, #32]	@ (80016d4 <MX_USB_DEVICE_Init+0x38>)
 80016b2:	f009 f928 	bl	800a906 <USBD_RegisterClass>
 80016b6:	b108      	cbz	r0, 80016bc <MX_USB_DEVICE_Init+0x20>
  {
    Error_Handler();
 80016b8:	f000 fd56 	bl	8002168 <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceHS) != USBD_OK)
 80016bc:	4805      	ldr	r0, [pc, #20]	@ (80016d4 <MX_USB_DEVICE_Init+0x38>)
 80016be:	f009 f93b 	bl	800a938 <USBD_Start>
 80016c2:	b118      	cbz	r0, 80016cc <MX_USB_DEVICE_Init+0x30>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 80016c4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 80016c8:	f000 bd4e 	b.w	8002168 <Error_Handler>
}
 80016cc:	bd08      	pop	{r3, pc}
 80016ce:	bf00      	nop
 80016d0:	20000040 	.word	0x20000040
 80016d4:	20001c60 	.word	0x20001c60
 80016d8:	20000164 	.word	0x20000164

080016dc <USBD_HS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_HS_DeviceDesc);
 80016dc:	2312      	movs	r3, #18
  return USBD_HS_DeviceDesc;
}
 80016de:	4801      	ldr	r0, [pc, #4]	@ (80016e4 <USBD_HS_DeviceDescriptor+0x8>)
  *length = sizeof(USBD_HS_DeviceDesc);
 80016e0:	800b      	strh	r3, [r1, #0]
}
 80016e2:	4770      	bx	lr
 80016e4:	2000002c 	.word	0x2000002c

080016e8 <USBD_HS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 80016e8:	2304      	movs	r3, #4
  return USBD_LangIDDesc;
}
 80016ea:	4801      	ldr	r0, [pc, #4]	@ (80016f0 <USBD_HS_LangIDStrDescriptor+0x8>)
  *length = sizeof(USBD_LangIDDesc);
 80016ec:	800b      	strh	r3, [r1, #0]
}
 80016ee:	4770      	bx	lr
 80016f0:	20000028 	.word	0x20000028

080016f4 <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 80016f4:	2300      	movs	r3, #0
 80016f6:	b570      	push	{r4, r5, r6, lr}
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;

    pbuf[2 * idx + 1] = 0;
 80016f8:	1c4d      	adds	r5, r1, #1
 80016fa:	461e      	mov	r6, r3
      pbuf[2 * idx] = (value >> 28) + '0';
 80016fc:	0f04      	lsrs	r4, r0, #28
    if (((value >> 28)) < 0xA)
 80016fe:	f1b0 4f20 	cmp.w	r0, #2684354560	@ 0xa0000000
      pbuf[2 * idx] = (value >> 28) + '0';
 8001702:	bf34      	ite	cc
 8001704:	3430      	addcc	r4, #48	@ 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 8001706:	3437      	addcs	r4, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
 8001708:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
    pbuf[2 * idx + 1] = 0;
 800170c:	f805 6013 	strb.w	r6, [r5, r3, lsl #1]
  for (idx = 0; idx < len; idx++)
 8001710:	3301      	adds	r3, #1
 8001712:	b2dc      	uxtb	r4, r3
 8001714:	42a2      	cmp	r2, r4
    value = value << 4;
 8001716:	ea4f 1000 	mov.w	r0, r0, lsl #4
  for (idx = 0; idx < len; idx++)
 800171a:	d8ef      	bhi.n	80016fc <IntToUnicode+0x8>
  }
}
 800171c:	bd70      	pop	{r4, r5, r6, pc}
	...

08001720 <USBD_HS_SerialStrDescriptor>:
  *length = USB_SIZ_STRING_SERIAL;
 8001720:	231a      	movs	r3, #26
{
 8001722:	b510      	push	{r4, lr}
  *length = USB_SIZ_STRING_SERIAL;
 8001724:	800b      	strh	r3, [r1, #0]
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 8001726:	4b0a      	ldr	r3, [pc, #40]	@ (8001750 <USBD_HS_SerialStrDescriptor+0x30>)
 8001728:	f8d3 0a10 	ldr.w	r0, [r3, #2576]	@ 0xa10
  deviceserial0 += deviceserial2;
 800172c:	f8d3 2a18 	ldr.w	r2, [r3, #2584]	@ 0xa18
  if (deviceserial0 != 0)
 8001730:	1880      	adds	r0, r0, r2
 8001732:	d00a      	beq.n	800174a <USBD_HS_SerialStrDescriptor+0x2a>
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 8001734:	f8d3 4a14 	ldr.w	r4, [r3, #2580]	@ 0xa14
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8001738:	4906      	ldr	r1, [pc, #24]	@ (8001754 <USBD_HS_SerialStrDescriptor+0x34>)
 800173a:	2208      	movs	r2, #8
 800173c:	f7ff ffda 	bl	80016f4 <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 8001740:	2204      	movs	r2, #4
 8001742:	3110      	adds	r1, #16
 8001744:	4620      	mov	r0, r4
 8001746:	f7ff ffd5 	bl	80016f4 <IntToUnicode>
}
 800174a:	4803      	ldr	r0, [pc, #12]	@ (8001758 <USBD_HS_SerialStrDescriptor+0x38>)
 800174c:	bd10      	pop	{r4, pc}
 800174e:	bf00      	nop
 8001750:	1fff7000 	.word	0x1fff7000
 8001754:	2000000e 	.word	0x2000000e
 8001758:	2000000c 	.word	0x2000000c

0800175c <USBD_HS_ManufacturerStrDescriptor>:
{
 800175c:	b510      	push	{r4, lr}
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 800175e:	4c04      	ldr	r4, [pc, #16]	@ (8001770 <USBD_HS_ManufacturerStrDescriptor+0x14>)
 8001760:	4804      	ldr	r0, [pc, #16]	@ (8001774 <USBD_HS_ManufacturerStrDescriptor+0x18>)
{
 8001762:	460a      	mov	r2, r1
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8001764:	4621      	mov	r1, r4
 8001766:	f009 fcad 	bl	800b0c4 <USBD_GetString>
}
 800176a:	4620      	mov	r0, r4
 800176c:	bd10      	pop	{r4, pc}
 800176e:	bf00      	nop
 8001770:	20001f3c 	.word	0x20001f3c
 8001774:	08025e2e 	.word	0x08025e2e

08001778 <USBD_HS_ProductStrDescriptor>:
{
 8001778:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 800177a:	4c04      	ldr	r4, [pc, #16]	@ (800178c <USBD_HS_ProductStrDescriptor+0x14>)
 800177c:	4804      	ldr	r0, [pc, #16]	@ (8001790 <USBD_HS_ProductStrDescriptor+0x18>)
{
 800177e:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 8001780:	4621      	mov	r1, r4
 8001782:	f009 fc9f 	bl	800b0c4 <USBD_GetString>
}
 8001786:	4620      	mov	r0, r4
 8001788:	bd10      	pop	{r4, pc}
 800178a:	bf00      	nop
 800178c:	20001f3c 	.word	0x20001f3c
 8001790:	08025e41 	.word	0x08025e41

08001794 <USBD_HS_ConfigStrDescriptor>:
{
 8001794:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 8001796:	4c04      	ldr	r4, [pc, #16]	@ (80017a8 <USBD_HS_ConfigStrDescriptor+0x14>)
 8001798:	4804      	ldr	r0, [pc, #16]	@ (80017ac <USBD_HS_ConfigStrDescriptor+0x18>)
{
 800179a:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 800179c:	4621      	mov	r1, r4
 800179e:	f009 fc91 	bl	800b0c4 <USBD_GetString>
}
 80017a2:	4620      	mov	r0, r4
 80017a4:	bd10      	pop	{r4, pc}
 80017a6:	bf00      	nop
 80017a8:	20001f3c 	.word	0x20001f3c
 80017ac:	08025e57 	.word	0x08025e57

080017b0 <USBD_HS_InterfaceStrDescriptor>:
{
 80017b0:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 80017b2:	4c04      	ldr	r4, [pc, #16]	@ (80017c4 <USBD_HS_InterfaceStrDescriptor+0x14>)
 80017b4:	4804      	ldr	r0, [pc, #16]	@ (80017c8 <USBD_HS_InterfaceStrDescriptor+0x18>)
{
 80017b6:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 80017b8:	4621      	mov	r1, r4
 80017ba:	f009 fc83 	bl	800b0c4 <USBD_GetString>
}
 80017be:	4620      	mov	r0, r4
 80017c0:	bd10      	pop	{r4, pc}
 80017c2:	bf00      	nop
 80017c4:	20001f3c 	.word	0x20001f3c
 80017c8:	08025e62 	.word	0x08025e62

080017cc <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 80017cc:	b530      	push	{r4, r5, lr}
 80017ce:	4604      	mov	r4, r0
 80017d0:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017d2:	2214      	movs	r2, #20
 80017d4:	2100      	movs	r1, #0
 80017d6:	a803      	add	r0, sp, #12
 80017d8:	f023 f8bf 	bl	802495a <memset>
  if(pcdHandle->Instance==USB_OTG_HS)
 80017dc:	6822      	ldr	r2, [r4, #0]
 80017de:	4b18      	ldr	r3, [pc, #96]	@ (8001840 <HAL_PCD_MspInit+0x74>)
 80017e0:	429a      	cmp	r2, r3
 80017e2:	d12b      	bne.n	800183c <HAL_PCD_MspInit+0x70>
  {
  /* USER CODE BEGIN USB_OTG_HS_MspInit 0 */

  /* USER CODE END USB_OTG_HS_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80017e4:	4c17      	ldr	r4, [pc, #92]	@ (8001844 <HAL_PCD_MspInit+0x78>)
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017e6:	4818      	ldr	r0, [pc, #96]	@ (8001848 <HAL_PCD_MspInit+0x7c>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80017e8:	2500      	movs	r5, #0
 80017ea:	9501      	str	r5, [sp, #4]
 80017ec:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017ee:	f043 0302 	orr.w	r3, r3, #2
 80017f2:	6323      	str	r3, [r4, #48]	@ 0x30
 80017f4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017f6:	f003 0302 	and.w	r3, r3, #2
 80017fa:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80017fc:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001800:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001802:	2302      	movs	r3, #2
 8001804:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 8001808:	2103      	movs	r1, #3
 800180a:	230c      	movs	r3, #12
 800180c:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001810:	eb0d 0103 	add.w	r1, sp, r3
 8001814:	f003 fb60 	bl	8004ed8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001818:	9502      	str	r5, [sp, #8]
 800181a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800181c:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8001820:	6323      	str	r3, [r4, #48]	@ 0x30
 8001822:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001824:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8001828:	9302      	str	r3, [sp, #8]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 800182a:	204d      	movs	r0, #77	@ 0x4d
 800182c:	462a      	mov	r2, r5
 800182e:	2105      	movs	r1, #5
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001830:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 8001832:	f003 fa07 	bl	8004c44 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_HS_IRQn);
 8001836:	204d      	movs	r0, #77	@ 0x4d
 8001838:	f003 fa36 	bl	8004ca8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_OTG_HS_MspInit 1 */

  /* USER CODE END USB_OTG_HS_MspInit 1 */
  }
}
 800183c:	b009      	add	sp, #36	@ 0x24
 800183e:	bd30      	pop	{r4, r5, pc}
 8001840:	40040000 	.word	0x40040000
 8001844:	40023800 	.word	0x40023800
 8001848:	40020400 	.word	0x40020400

0800184c <HAL_PCD_SetupStageCallback>:
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 800184c:	f200 419c 	addw	r1, r0, #1180	@ 0x49c
 8001850:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001854:	f009 b882 	b.w	800a95c <USBD_LL_SetupStage>

08001858 <HAL_PCD_DataOutStageCallback>:
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 8001858:	2324      	movs	r3, #36	@ 0x24
 800185a:	fb03 0301 	mla	r3, r3, r1, r0
 800185e:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001862:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
 8001866:	f009 b8a9 	b.w	800a9bc <USBD_LL_DataOutStage>

0800186a <HAL_PCD_DataInStageCallback>:
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 800186a:	2324      	movs	r3, #36	@ 0x24
 800186c:	fb03 0301 	mla	r3, r3, r1, r0
 8001870:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001874:	6a1a      	ldr	r2, [r3, #32]
 8001876:	f009 b8d6 	b.w	800aa26 <USBD_LL_DataInStage>

0800187a <HAL_PCD_SOFCallback>:
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 800187a:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800187e:	f009 b970 	b.w	800ab62 <USBD_LL_SOF>

08001882 <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8001882:	b510      	push	{r4, lr}
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001884:	79c1      	ldrb	r1, [r0, #7]
{
 8001886:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001888:	b121      	cbz	r1, 8001894 <HAL_PCD_ResetCallback+0x12>
  {
    speed = USBD_SPEED_HIGH;
  }
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
 800188a:	2902      	cmp	r1, #2
 800188c:	d001      	beq.n	8001892 <HAL_PCD_ResetCallback+0x10>
  {
    speed = USBD_SPEED_FULL;
  }
  else
  {
    Error_Handler();
 800188e:	f000 fc6b 	bl	8002168 <Error_Handler>
    speed = USBD_SPEED_FULL;
 8001892:	2101      	movs	r1, #1
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 8001894:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
 8001898:	f009 f947 	bl	800ab2a <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 800189c:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
}
 80018a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 80018a4:	f009 b912 	b.w	800aacc <USBD_LL_Reset>

080018a8 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 80018a8:	b510      	push	{r4, lr}
 80018aa:	4604      	mov	r4, r0
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 80018ac:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018b0:	f009 f93e 	bl	800ab30 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 80018b4:	6822      	ldr	r2, [r4, #0]
 80018b6:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 80018ba:	f043 0301 	orr.w	r3, r3, #1
 80018be:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 80018c2:	7ae3      	ldrb	r3, [r4, #11]
 80018c4:	b123      	cbz	r3, 80018d0 <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 80018c6:	4a03      	ldr	r2, [pc, #12]	@ (80018d4 <HAL_PCD_SuspendCallback+0x2c>)
 80018c8:	6913      	ldr	r3, [r2, #16]
 80018ca:	f043 0306 	orr.w	r3, r3, #6
 80018ce:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 80018d0:	bd10      	pop	{r4, pc}
 80018d2:	bf00      	nop
 80018d4:	e000ed00 	.word	0xe000ed00

080018d8 <HAL_PCD_ResumeCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 80018d8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018dc:	f009 b936 	b.w	800ab4c <USBD_LL_Resume>

080018e0 <HAL_PCD_ISOOUTIncompleteCallback>:
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 80018e0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018e4:	f009 b95d 	b.w	800aba2 <USBD_LL_IsoOUTIncomplete>

080018e8 <HAL_PCD_ISOINIncompleteCallback>:
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 80018e8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018ec:	f009 b946 	b.w	800ab7c <USBD_LL_IsoINIncomplete>

080018f0 <HAL_PCD_ConnectCallback>:
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 80018f0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018f4:	f009 b968 	b.w	800abc8 <USBD_LL_DevConnected>

080018f8 <HAL_PCD_DisconnectCallback>:
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 80018f8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018fc:	f009 b966 	b.w	800abcc <USBD_LL_DevDisconnected>

08001900 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 8001900:	b508      	push	{r3, lr}
  /* Init USB Ip. */
  if (pdev->id == DEVICE_HS) {
 8001902:	7802      	ldrb	r2, [r0, #0]
 8001904:	2a01      	cmp	r2, #1
{
 8001906:	4603      	mov	r3, r0
  if (pdev->id == DEVICE_HS) {
 8001908:	d127      	bne.n	800195a <USBD_LL_Init+0x5a>
  /* Link the driver to the stack. */
  hpcd_USB_OTG_HS.pData = pdev;
 800190a:	4815      	ldr	r0, [pc, #84]	@ (8001960 <USBD_LL_Init+0x60>)
 800190c:	f8c0 34e0 	str.w	r3, [r0, #1248]	@ 0x4e0
  pdev->pData = &hpcd_USB_OTG_HS;
 8001910:	f8c3 02c8 	str.w	r0, [r3, #712]	@ 0x2c8

  hpcd_USB_OTG_HS.Instance = USB_OTG_HS;
 8001914:	4b13      	ldr	r3, [pc, #76]	@ (8001964 <USBD_LL_Init+0x64>)
 8001916:	6003      	str	r3, [r0, #0]
  hpcd_USB_OTG_HS.Init.dev_endpoints = 6;
 8001918:	2306      	movs	r3, #6
 800191a:	7103      	strb	r3, [r0, #4]
  hpcd_USB_OTG_HS.Init.speed = PCD_SPEED_FULL;
  hpcd_USB_OTG_HS.Init.dma_enable = DISABLE;
 800191c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001920:	80c3      	strh	r3, [r0, #6]
  hpcd_USB_OTG_HS.Init.phy_itface = USB_OTG_EMBEDDED_PHY;
 8001922:	2302      	movs	r3, #2
 8001924:	7243      	strb	r3, [r0, #9]
  hpcd_USB_OTG_HS.Init.Sof_enable = DISABLE;
 8001926:	2300      	movs	r3, #0
 8001928:	8143      	strh	r3, [r0, #10]
  hpcd_USB_OTG_HS.Init.low_power_enable = DISABLE;
  hpcd_USB_OTG_HS.Init.lpm_enable = DISABLE;
 800192a:	7303      	strb	r3, [r0, #12]
  hpcd_USB_OTG_HS.Init.vbus_sensing_enable = DISABLE;
 800192c:	81c3      	strh	r3, [r0, #14]
  hpcd_USB_OTG_HS.Init.use_dedicated_ep1 = DISABLE;
  hpcd_USB_OTG_HS.Init.use_external_vbus = DISABLE;
 800192e:	7403      	strb	r3, [r0, #16]
  if (HAL_PCD_Init(&hpcd_USB_OTG_HS) != HAL_OK)
 8001930:	f004 f9ee 	bl	8005d10 <HAL_PCD_Init>
 8001934:	b108      	cbz	r0, 800193a <USBD_LL_Init+0x3a>
  {
    Error_Handler( );
 8001936:	f000 fc17 	bl	8002168 <Error_Handler>
  HAL_PCD_RegisterDataOutStageCallback(&hpcd_USB_OTG_HS, PCD_DataOutStageCallback);
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_OTG_HS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_HS, 0x200);
 800193a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800193e:	4808      	ldr	r0, [pc, #32]	@ (8001960 <USBD_LL_Init+0x60>)
 8001940:	f004 ff0b 	bl	800675a <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 0, 0x80);
 8001944:	2280      	movs	r2, #128	@ 0x80
 8001946:	2100      	movs	r1, #0
 8001948:	4805      	ldr	r0, [pc, #20]	@ (8001960 <USBD_LL_Init+0x60>)
 800194a:	f004 fee7 	bl	800671c <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 1, 0x174);
 800194e:	4804      	ldr	r0, [pc, #16]	@ (8001960 <USBD_LL_Init+0x60>)
 8001950:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 8001954:	2101      	movs	r1, #1
 8001956:	f004 fee1 	bl	800671c <HAL_PCDEx_SetTxFiFo>
  }
  return USBD_OK;
}
 800195a:	2000      	movs	r0, #0
 800195c:	bd08      	pop	{r3, pc}
 800195e:	bf00      	nop
 8001960:	20002150 	.word	0x20002150
 8001964:	40040000 	.word	0x40040000

08001968 <USBD_LL_IsStallEP>:
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;

  if((ep_addr & 0x80) == 0x80)
 8001968:	f011 0f80 	tst.w	r1, #128	@ 0x80
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 800196c:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
 8001970:	f04f 0224 	mov.w	r2, #36	@ 0x24
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8001974:	bf1b      	ittet	ne
 8001976:	f001 017f 	andne.w	r1, r1, #127	@ 0x7f
 800197a:	fb02 3301 	mlane	r3, r2, r1, r3
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 800197e:	fb02 3301 	mlaeq	r3, r2, r1, r3
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8001982:	7d98      	ldrbne	r0, [r3, #22]
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8001984:	bf08      	it	eq
 8001986:	f893 0256 	ldrbeq.w	r0, [r3, #598]	@ 0x256
  }
}
 800198a:	4770      	bx	lr

0800198c <USBD_static_malloc>:
  */
void *USBD_static_malloc(uint32_t size)
{
  static uint32_t mem[(sizeof(USBD_HID_HandleTypeDef)/4)+1];/* On 32-bit boundary */
  return mem;
}
 800198c:	4800      	ldr	r0, [pc, #0]	@ (8001990 <USBD_static_malloc+0x4>)
 800198e:	4770      	bx	lr
 8001990:	2000213c 	.word	0x2000213c

08001994 <USBD_static_free>:
  * @retval None
  */
void USBD_static_free(void *p)
{

}
 8001994:	4770      	bx	lr

08001996 <USBD_Get_USB_Status>:
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 8001996:	b118      	cbz	r0, 80019a0 <USBD_Get_USB_Status+0xa>
 8001998:	2802      	cmp	r0, #2
 800199a:	bf0c      	ite	eq
 800199c:	2001      	moveq	r0, #1
 800199e:	2003      	movne	r0, #3
    default :
      usb_status = USBD_FAIL;
    break;
  }
  return usb_status;
}
 80019a0:	4770      	bx	lr

080019a2 <USBD_LL_Start>:
{
 80019a2:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 80019a4:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019a8:	f004 fa21 	bl	8005dee <HAL_PCD_Start>
}
 80019ac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019b0:	f7ff bff1 	b.w	8001996 <USBD_Get_USB_Status>

080019b4 <USBD_LL_OpenEP>:
{
 80019b4:	b510      	push	{r4, lr}
 80019b6:	4614      	mov	r4, r2
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 80019b8:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
{
 80019bc:	461a      	mov	r2, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 80019be:	4623      	mov	r3, r4
 80019c0:	f004 fa47 	bl	8005e52 <HAL_PCD_EP_Open>
}
 80019c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019c8:	f7ff bfe5 	b.w	8001996 <USBD_Get_USB_Status>

080019cc <USBD_LL_CloseEP>:
{
 80019cc:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 80019ce:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019d2:	f004 fa77 	bl	8005ec4 <HAL_PCD_EP_Close>
}
 80019d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019da:	f7ff bfdc 	b.w	8001996 <USBD_Get_USB_Status>

080019de <USBD_LL_StallEP>:
{
 80019de:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 80019e0:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019e4:	f004 fad5 	bl	8005f92 <HAL_PCD_EP_SetStall>
}
 80019e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019ec:	f7ff bfd3 	b.w	8001996 <USBD_Get_USB_Status>

080019f0 <USBD_LL_ClearStallEP>:
{
 80019f0:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 80019f2:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019f6:	f004 fb03 	bl	8006000 <HAL_PCD_EP_ClrStall>
}
 80019fa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019fe:	f7ff bfca 	b.w	8001996 <USBD_Get_USB_Status>

08001a02 <USBD_LL_SetUSBAddress>:
{
 8001a02:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 8001a04:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a08:	f004 fa10 	bl	8005e2c <HAL_PCD_SetAddress>
}
 8001a0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a10:	f7ff bfc1 	b.w	8001996 <USBD_Get_USB_Status>

08001a14 <USBD_LL_Transmit>:
{
 8001a14:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8001a16:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a1a:	f004 fa9f 	bl	8005f5c <HAL_PCD_EP_Transmit>
}
 8001a1e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a22:	f7ff bfb8 	b.w	8001996 <USBD_Get_USB_Status>

08001a26 <USBD_LL_PrepareReceive>:
{
 8001a26:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 8001a28:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a2c:	f004 fa78 	bl	8005f20 <HAL_PCD_EP_Receive>
}
 8001a30:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a34:	f7ff bfaf 	b.w	8001996 <USBD_Get_USB_Status>

08001a38 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001a38:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a3a:	4b06      	ldr	r3, [pc, #24]	@ (8001a54 <SPI5_Write+0x1c>)
{
 8001a3c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a40:	681b      	ldr	r3, [r3, #0]
 8001a42:	4805      	ldr	r0, [pc, #20]	@ (8001a58 <SPI5_Write+0x20>)
 8001a44:	2201      	movs	r2, #1
 8001a46:	f10d 0106 	add.w	r1, sp, #6
 8001a4a:	f005 fbe9 	bl	8007220 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001a4e:	b003      	add	sp, #12
 8001a50:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a54:	2000005c 	.word	0x2000005c
 8001a58:	200026c0 	.word	0x200026c0

08001a5c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001a5c:	b508      	push	{r3, lr}
  /* init code for USB_DEVICE */
  MX_USB_DEVICE_Init();
 8001a5e:	f7ff fe1d 	bl	800169c <MX_USB_DEVICE_Init>
  /* USER CODE BEGIN 5 */
  while (1)
  {
	  Mouse_HandleScroll();   //
 8001a62:	f002 fadf 	bl	8004024 <Mouse_HandleScroll>
	  Mouse_HandleClick();    // xử lý click trái / phải
 8001a66:	f002 f9ad 	bl	8003dc4 <Mouse_HandleClick>
	  osDelay(20);            //
 8001a6a:	2014      	movs	r0, #20
 8001a6c:	f006 feea 	bl	8008844 <osDelay>
  while (1)
 8001a70:	e7f7      	b.n	8001a62 <StartDefaultTask+0x6>

08001a72 <HAL_GPIO_EXTI_Callback>:
    Mouse_EXTI_Callback(GPIO_Pin);
 8001a72:	f002 b977 	b.w	8003d64 <Mouse_EXTI_Callback>
	...

08001a78 <SystemClock_Config>:
{
 8001a78:	b530      	push	{r4, r5, lr}
 8001a7a:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001a7c:	2210      	movs	r2, #16
 8001a7e:	2100      	movs	r1, #0
 8001a80:	a80a      	add	r0, sp, #40	@ 0x28
 8001a82:	f022 ff6a 	bl	802495a <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001a86:	2214      	movs	r2, #20
 8001a88:	2100      	movs	r1, #0
 8001a8a:	a803      	add	r0, sp, #12
 8001a8c:	f022 ff65 	bl	802495a <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a90:	2500      	movs	r5, #0
 8001a92:	4b1d      	ldr	r3, [pc, #116]	@ (8001b08 <SystemClock_Config+0x90>)
 8001a94:	9501      	str	r5, [sp, #4]
 8001a96:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001a98:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8001a9c:	641a      	str	r2, [r3, #64]	@ 0x40
 8001a9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001aa0:	4a1a      	ldr	r2, [pc, #104]	@ (8001b0c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001aa2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001aa6:	9301      	str	r3, [sp, #4]
 8001aa8:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001aaa:	9502      	str	r5, [sp, #8]
 8001aac:	6813      	ldr	r3, [r2, #0]
 8001aae:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8001ab2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001ab6:	6013      	str	r3, [r2, #0]
 8001ab8:	6813      	ldr	r3, [r2, #0]
 8001aba:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001abe:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001ac0:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001ac2:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001ac4:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001ac8:	2402      	movs	r4, #2
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001aca:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001ace:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001ad2:	e9cd 430e 	strd	r4, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 72;
 8001ad6:	2104      	movs	r1, #4
 8001ad8:	2348      	movs	r3, #72	@ 0x48
 8001ada:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001ade:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 3;
 8001ae0:	2303      	movs	r3, #3
 8001ae2:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001ae4:	9412      	str	r4, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001ae6:	f004 fe3d 	bl	8006764 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001aea:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001aec:	e9cd 3403 	strd	r3, r4, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001af0:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001af2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001af6:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001af8:	e9cd 3506 	strd	r3, r5, [sp, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001afc:	9505      	str	r5, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001afe:	f005 f80d 	bl	8006b1c <HAL_RCC_ClockConfig>
}
 8001b02:	b015      	add	sp, #84	@ 0x54
 8001b04:	bd30      	pop	{r4, r5, pc}
 8001b06:	bf00      	nop
 8001b08:	40023800 	.word	0x40023800
 8001b0c:	40007000 	.word	0x40007000

08001b10 <main>:
{
 8001b10:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001b14:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 8001b16:	f002 fe2d 	bl	8004774 <HAL_Init>
  SystemClock_Config();
 8001b1a:	f7ff ffad 	bl	8001a78 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b1e:	2214      	movs	r2, #20
 8001b20:	2100      	movs	r1, #0
 8001b22:	a80d      	add	r0, sp, #52	@ 0x34
 8001b24:	f022 ff19 	bl	802495a <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b28:	2400      	movs	r4, #0
 8001b2a:	4bc8      	ldr	r3, [pc, #800]	@ (8001e4c <main+0x33c>)
 8001b2c:	9400      	str	r4, [sp, #0]
 8001b2e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001b30:	48c7      	ldr	r0, [pc, #796]	@ (8001e50 <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b32:	f042 0210 	orr.w	r2, r2, #16
 8001b36:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b38:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b3a:	f002 0210 	and.w	r2, r2, #16
 8001b3e:	9200      	str	r2, [sp, #0]
 8001b40:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b42:	9401      	str	r4, [sp, #4]
 8001b44:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b46:	f042 0220 	orr.w	r2, r2, #32
 8001b4a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b4c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b4e:	f002 0220 	and.w	r2, r2, #32
 8001b52:	9201      	str	r2, [sp, #4]
 8001b54:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001b56:	9402      	str	r4, [sp, #8]
 8001b58:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b5a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001b5e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b62:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8001b66:	9202      	str	r2, [sp, #8]
 8001b68:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b6a:	9403      	str	r4, [sp, #12]
 8001b6c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b6e:	f042 0204 	orr.w	r2, r2, #4
 8001b72:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b74:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b76:	f002 0204 	and.w	r2, r2, #4
 8001b7a:	9203      	str	r2, [sp, #12]
 8001b7c:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b7e:	9404      	str	r4, [sp, #16]
 8001b80:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b82:	f042 0201 	orr.w	r2, r2, #1
 8001b86:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b88:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b8a:	f002 0201 	and.w	r2, r2, #1
 8001b8e:	9204      	str	r2, [sp, #16]
 8001b90:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b92:	9405      	str	r4, [sp, #20]
 8001b94:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b96:	f042 0202 	orr.w	r2, r2, #2
 8001b9a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b9c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b9e:	f002 0202 	and.w	r2, r2, #2
 8001ba2:	9205      	str	r2, [sp, #20]
 8001ba4:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001ba6:	9406      	str	r4, [sp, #24]
 8001ba8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001baa:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001bae:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bb0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bb2:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001bb6:	9206      	str	r2, [sp, #24]
 8001bb8:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bba:	9407      	str	r4, [sp, #28]
 8001bbc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bbe:	f042 0208 	orr.w	r2, r2, #8
 8001bc2:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bc4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001bc6:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001bca:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bcc:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001bce:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bd0:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001bd2:	f003 fa6b 	bl	80050ac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001bd6:	489f      	ldr	r0, [pc, #636]	@ (8001e54 <main+0x344>)
 8001bd8:	2201      	movs	r2, #1
 8001bda:	2102      	movs	r1, #2
 8001bdc:	f003 fa66 	bl	80050ac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001be0:	4622      	mov	r2, r4
 8001be2:	489c      	ldr	r0, [pc, #624]	@ (8001e54 <main+0x344>)
 8001be4:	2104      	movs	r1, #4
 8001be6:	f003 fa61 	bl	80050ac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001bea:	4622      	mov	r2, r4
 8001bec:	489a      	ldr	r0, [pc, #616]	@ (8001e58 <main+0x348>)
 8001bee:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8001bf2:	f003 fa5b 	bl	80050ac <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bf6:	2601      	movs	r6, #1
 8001bf8:	233c      	movs	r3, #60	@ 0x3c
 8001bfa:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001bfe:	4894      	ldr	r0, [pc, #592]	@ (8001e50 <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c00:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c02:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c04:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001c06:	f44f 1588 	mov.w	r5, #1114112	@ 0x110000
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c0a:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c0c:	f003 f964 	bl	8004ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001c10:	2340      	movs	r3, #64	@ 0x40
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c12:	4892      	ldr	r0, [pc, #584]	@ (8001e5c <main+0x34c>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001c14:	960f      	str	r6, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c16:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 8001c18:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001c1a:	e9cd 350d 	strd	r3, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c1e:	f003 f95b 	bl	8004ed8 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001c22:	488c      	ldr	r0, [pc, #560]	@ (8001e54 <main+0x344>)
 8001c24:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c26:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c2a:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001c2e:	f003 f953 	bl	8004ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001c32:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c34:	4887      	ldr	r0, [pc, #540]	@ (8001e54 <main+0x344>)
 8001c36:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c38:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c3c:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c40:	f003 f94a 	bl	8004ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001c44:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c46:	4886      	ldr	r0, [pc, #536]	@ (8001e60 <main+0x350>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001c48:	960f      	str	r6, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c4a:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001c4c:	e9cd 350d 	strd	r3, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c50:	f003 f942 	bl	8004ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5;
 8001c54:	2320      	movs	r3, #32
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c56:	487f      	ldr	r0, [pc, #508]	@ (8001e54 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001c58:	960f      	str	r6, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c5a:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001c5c:	e9cd 350d 	strd	r3, r5, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c60:	f003 f93a 	bl	8004ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001c64:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c68:	487b      	ldr	r0, [pc, #492]	@ (8001e58 <main+0x348>)
  hi2c3.Instance = I2C3;
 8001c6a:	4d7e      	ldr	r5, [pc, #504]	@ (8001e64 <main+0x354>)
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c6c:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c6e:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c72:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c76:	f003 f92f 	bl	8004ed8 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 8001c7a:	4622      	mov	r2, r4
 8001c7c:	2105      	movs	r1, #5
 8001c7e:	2017      	movs	r0, #23
 8001c80:	f002 ffe0 	bl	8004c44 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001c84:	2017      	movs	r0, #23
 8001c86:	f003 f80f 	bl	8004ca8 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001c8a:	4877      	ldr	r0, [pc, #476]	@ (8001e68 <main+0x358>)
 8001c8c:	4b77      	ldr	r3, [pc, #476]	@ (8001e6c <main+0x35c>)
 8001c8e:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001c90:	f003 f818 	bl	8004cc4 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001c94:	f8df c1f4 	ldr.w	ip, [pc, #500]	@ 8001e8c <main+0x37c>
 8001c98:	4b75      	ldr	r3, [pc, #468]	@ (8001e70 <main+0x360>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001c9a:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001c9c:	e9c5 c300 	strd	ip, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001ca0:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001ca2:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001ca6:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001caa:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001cae:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001cb2:	f003 fc15 	bl	80054e0 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001cb6:	2110      	movs	r1, #16
 8001cb8:	4628      	mov	r0, r5
 8001cba:	f003 fe59 	bl	8005970 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001cbe:	4621      	mov	r1, r4
 8001cc0:	4628      	mov	r0, r5
 8001cc2:	f003 fe74 	bl	80059ae <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001cc6:	4d6b      	ldr	r5, [pc, #428]	@ (8001e74 <main+0x364>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001cc8:	f8df e1c4 	ldr.w	lr, [pc, #452]	@ 8001e90 <main+0x380>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001ccc:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001cce:	f44f 7382 	mov.w	r3, #260	@ 0x104
 8001cd2:	e9c5 e300 	strd	lr, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001cd6:	f44f 7800 	mov.w	r8, #512	@ 0x200
 8001cda:	2318      	movs	r3, #24
 8001cdc:	e9c5 8306 	strd	r8, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001ce0:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 8001ce2:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001ce4:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001ce8:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001cec:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCPolynomial = 10;
 8001cf0:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001cf2:	f005 fa39 	bl	8007168 <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001cf6:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001cf8:	4622      	mov	r2, r4
 8001cfa:	4639      	mov	r1, r7
 8001cfc:	4855      	ldr	r0, [pc, #340]	@ (8001e54 <main+0x344>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001cfe:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 8001d02:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001d06:	f003 f9d1 	bl	80050ac <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 8001d0a:	4632      	mov	r2, r6
 8001d0c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001d10:	a909      	add	r1, sp, #36	@ 0x24
 8001d12:	4628      	mov	r0, r5
 8001d14:	f005 fa84 	bl	8007220 <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 8001d18:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001d1c:	4632      	mov	r2, r6
 8001d1e:	a90d      	add	r1, sp, #52	@ 0x34
 8001d20:	4628      	mov	r0, r5
 8001d22:	f005 fc29 	bl	8007578 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001d26:	4632      	mov	r2, r6
 8001d28:	4639      	mov	r1, r7
 8001d2a:	484a      	ldr	r0, [pc, #296]	@ (8001e54 <main+0x344>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001d2c:	4d52      	ldr	r5, [pc, #328]	@ (8001e78 <main+0x368>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001d2e:	f003 f9bd 	bl	80050ac <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 8001d32:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 8001d36:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 8001d38:	bf04      	itt	eq
 8001d3a:	4b50      	ldreq	r3, [pc, #320]	@ (8001e7c <main+0x36c>)
 8001d3c:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001d3e:	4b50      	ldr	r3, [pc, #320]	@ (8001e80 <main+0x370>)
 8001d40:	2601      	movs	r6, #1
 8001d42:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001d46:	f04f 0a10 	mov.w	sl, #16
 8001d4a:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001d4c:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001d4e:	e9c5 a304 	strd	sl, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001d52:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001d56:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001d5a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001d5e:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001d62:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001d66:	2702      	movs	r7, #2
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001d68:	f04f 0904 	mov.w	r9, #4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001d6c:	62ab      	str	r3, [r5, #40]	@ 0x28
  SdramTiming.WriteRecoveryTime = 3;
 8001d6e:	f04f 0b03 	mov.w	fp, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001d72:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001d74:	a90d      	add	r1, sp, #52	@ 0x34
 8001d76:	4628      	mov	r0, r5
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001d78:	e9cd 730d 	strd	r7, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 8001d7c:	e9cd 930f 	strd	r9, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001d80:	f04f 0808 	mov.w	r8, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001d84:	e9c5 4902 	strd	r4, r9, [r5, #8]
  SdramTiming.RPDelay = 2;
 8001d88:	e9cd b711 	strd	fp, r7, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 8001d8c:	9713      	str	r7, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001d8e:	f005 f8cf 	bl	8006f30 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d92:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001d96:	a909      	add	r1, sp, #36	@ 0x24
 8001d98:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001d9a:	e9cd 860a 	strd	r8, r6, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 8001d9e:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001da0:	9609      	str	r6, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001da2:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001da4:	f005 f8e4 	bl	8006f70 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001da8:	4630      	mov	r0, r6
 8001daa:	f002 fd0f 	bl	80047cc <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001dae:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001db2:	a909      	add	r1, sp, #36	@ 0x24
 8001db4:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001db6:	e9cd 7809 	strd	r7, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001dba:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001dbe:	f005 f8d7 	bl	8006f70 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001dc2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001dc6:	a909      	add	r1, sp, #36	@ 0x24
 8001dc8:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001dca:	e9cd b809 	strd	fp, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001dce:	e9cd 940b 	strd	r9, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001dd2:	f005 f8cd 	bl	8006f70 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001dd6:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8001dda:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001ddc:	9b08      	ldr	r3, [sp, #32]
 8001dde:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001de0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001de4:	a909      	add	r1, sp, #36	@ 0x24
 8001de6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001de8:	e9cd 9809 	strd	r9, r8, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8001dec:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001dee:	f005 f8bf 	bl	8006f70 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001df2:	f240 516a 	movw	r1, #1386	@ 0x56a
 8001df6:	4628      	mov	r0, r5
 8001df8:	f005 f8d8 	bl	8006fac <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001dfc:	2234      	movs	r2, #52	@ 0x34
 8001dfe:	4621      	mov	r1, r4
 8001e00:	eb0d 0002 	add.w	r0, sp, r2
 8001e04:	f022 fda9 	bl	802495a <memset>
  hltdc.Instance = LTDC;
 8001e08:	4d1e      	ldr	r5, [pc, #120]	@ (8001e84 <main+0x374>)
 8001e0a:	4b1f      	ldr	r3, [pc, #124]	@ (8001e88 <main+0x378>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001e0c:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001e0e:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001e12:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001e14:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001e18:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001e1a:	e9c5 3b07 	strd	r3, fp, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001e1e:	f240 120d 	movw	r2, #269	@ 0x10d
 8001e22:	f240 1343 	movw	r3, #323	@ 0x143
 8001e26:	e9c5 2309 	strd	r2, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 8001e2a:	f240 1117 	movw	r1, #279	@ 0x117
 8001e2e:	f240 1347 	movw	r3, #327	@ 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001e32:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001e34:	e9c5 130b 	strd	r1, r3, [r5, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001e38:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8001e3c:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8001e3e:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001e42:	f003 fe4f 	bl	8005ae4 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001e46:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 8001e48:	22f0      	movs	r2, #240	@ 0xf0
 8001e4a:	e023      	b.n	8001e94 <main+0x384>
 8001e4c:	40023800 	.word	0x40023800
 8001e50:	40021000 	.word	0x40021000
 8001e54:	40020800 	.word	0x40020800
 8001e58:	40020c00 	.word	0x40020c00
 8001e5c:	40021400 	.word	0x40021400
 8001e60:	40020000 	.word	0x40020000
 8001e64:	200027c0 	.word	0x200027c0
 8001e68:	20002854 	.word	0x20002854
 8001e6c:	40023000 	.word	0x40023000
 8001e70:	000186a0 	.word	0x000186a0
 8001e74:	200026c0 	.word	0x200026c0
 8001e78:	20002644 	.word	0x20002644
 8001e7c:	20002638 	.word	0x20002638
 8001e80:	a0000140 	.word	0xa0000140
 8001e84:	20002718 	.word	0x20002718
 8001e88:	40016800 	.word	0x40016800
 8001e8c:	40005c00 	.word	0x40005c00
 8001e90:	40015000 	.word	0x40015000
  pLayerCfg.Alpha0 = 0;
 8001e94:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001e98:	f44f 6080 	mov.w	r0, #1024	@ 0x400
 8001e9c:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001e9e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001ea2:	e9cd 0114 	strd	r0, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowY0 = 0;
 8001ea6:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001eaa:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.ImageWidth = 240;
 8001eac:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001eb0:	4628      	mov	r0, r5
 8001eb2:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8001eb4:	4d34      	ldr	r5, [pc, #208]	@ (8001f88 <main+0x478>)
  pLayerCfg.ImageHeight = 320;
 8001eb6:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001eb8:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  pLayerCfg.WindowX0 = 0;
 8001ebc:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001ebe:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001ec2:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001ec6:	f003 fed8 	bl	8005c7a <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001eca:	4b30      	ldr	r3, [pc, #192]	@ (8001f8c <main+0x47c>)
 8001ecc:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001ece:	681b      	ldr	r3, [r3, #0]
 8001ed0:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001ed2:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001ed4:	4d2e      	ldr	r5, [pc, #184]	@ (8001f90 <main+0x480>)
  LcdDrv->DisplayOff();
 8001ed6:	68db      	ldr	r3, [r3, #12]
 8001ed8:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001eda:	4b2e      	ldr	r3, [pc, #184]	@ (8001f94 <main+0x484>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001edc:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001ede:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001ee2:	e9c5 7402 	strd	r7, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001ee6:	e9c5 470a 	strd	r4, r7, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001eea:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001eee:	f002 fef9 	bl	8004ce4 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001ef2:	4631      	mov	r1, r6
 8001ef4:	4628      	mov	r0, r5
 8001ef6:	f002 ffab 	bl	8004e50 <HAL_DMA2D_ConfigLayer>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001efa:	4652      	mov	r2, sl
 8001efc:	4621      	mov	r1, r4
 8001efe:	a80d      	add	r0, sp, #52	@ 0x34
 8001f00:	f022 fd2b 	bl	802495a <memset>
  hadc1.Instance = ADC1;
 8001f04:	4d24      	ldr	r5, [pc, #144]	@ (8001f98 <main+0x488>)
 8001f06:	4b25      	ldr	r3, [pc, #148]	@ (8001f9c <main+0x48c>)
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001f08:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8001f0a:	e9c5 3400 	strd	r3, r4, [r5]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001f0e:	4628      	mov	r0, r5
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001f10:	4b23      	ldr	r3, [pc, #140]	@ (8001fa0 <main+0x490>)
 8001f12:	62ab      	str	r3, [r5, #40]	@ 0x28
  hadc1.Init.ScanConvMode = DISABLE;
 8001f14:	612c      	str	r4, [r5, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001f16:	762c      	strb	r4, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001f18:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001f1c:	62ec      	str	r4, [r5, #44]	@ 0x2c
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001f1e:	60ec      	str	r4, [r5, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001f20:	61ee      	str	r6, [r5, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001f22:	f885 4030 	strb.w	r4, [r5, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001f26:	616e      	str	r6, [r5, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001f28:	f002 fc64 	bl	80047f4 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001f2c:	a90d      	add	r1, sp, #52	@ 0x34
  sConfig.Channel = ADC_CHANNEL_13;
 8001f2e:	230d      	movs	r3, #13
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001f30:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 8001f32:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  huart1.Init.BaudRate = 115200;
 8001f36:	4d1b      	ldr	r5, [pc, #108]	@ (8001fa4 <main+0x494>)
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001f38:	940f      	str	r4, [sp, #60]	@ 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001f3a:	f002 fdd5 	bl	8004ae8 <HAL_ADC_ConfigChannel>
  huart1.Instance = USART1;
 8001f3e:	481a      	ldr	r0, [pc, #104]	@ (8001fa8 <main+0x498>)
  huart1.Init.BaudRate = 115200;
 8001f40:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
 8001f44:	e9c0 5300 	strd	r5, r3, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001f48:	230c      	movs	r3, #12
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001f4a:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001f4e:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001f52:	6104      	str	r4, [r0, #16]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001f54:	61c4      	str	r4, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001f56:	f005 fdcb 	bl	8007af0 <HAL_UART_Init>
  MX_TouchGFX_Init();
 8001f5a:	f7fe fbb1 	bl	80006c0 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001f5e:	f7fe fbae 	bl	80006be <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8001f62:	f006 fbff 	bl	8008764 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001f66:	4a11      	ldr	r2, [pc, #68]	@ (8001fac <main+0x49c>)
 8001f68:	4811      	ldr	r0, [pc, #68]	@ (8001fb0 <main+0x4a0>)
 8001f6a:	4621      	mov	r1, r4
 8001f6c:	f006 fc26 	bl	80087bc <osThreadNew>
 8001f70:	4b10      	ldr	r3, [pc, #64]	@ (8001fb4 <main+0x4a4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001f72:	4a11      	ldr	r2, [pc, #68]	@ (8001fb8 <main+0x4a8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001f74:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001f76:	4621      	mov	r1, r4
 8001f78:	4810      	ldr	r0, [pc, #64]	@ (8001fbc <main+0x4ac>)
 8001f7a:	f006 fc1f 	bl	80087bc <osThreadNew>
 8001f7e:	4b10      	ldr	r3, [pc, #64]	@ (8001fc0 <main+0x4b0>)
 8001f80:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001f82:	f006 fc01 	bl	8008788 <osKernelStart>
  while (1)
 8001f86:	e7fe      	b.n	8001f86 <main+0x476>
 8001f88:	20002634 	.word	0x20002634
 8001f8c:	2000006c 	.word	0x2000006c
 8001f90:	20002814 	.word	0x20002814
 8001f94:	4002b000 	.word	0x4002b000
 8001f98:	2000285c 	.word	0x2000285c
 8001f9c:	40012000 	.word	0x40012000
 8001fa0:	0f000001 	.word	0x0f000001
 8001fa4:	40011000 	.word	0x40011000
 8001fa8:	20002678 	.word	0x20002678
 8001fac:	080266e4 	.word	0x080266e4
 8001fb0:	08001a5d 	.word	0x08001a5d
 8001fb4:	20002640 	.word	0x20002640
 8001fb8:	080266c0 	.word	0x080266c0
 8001fbc:	080006cf 	.word	0x080006cf
 8001fc0:	2000263c 	.word	0x2000263c

08001fc4 <IOE_Init>:
void IOE_Init(void)
 8001fc4:	4770      	bx	lr

08001fc6 <IOE_ITConfig>:
void IOE_ITConfig(void)
 8001fc6:	4770      	bx	lr

08001fc8 <IOE_Write>:
{
 8001fc8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001fca:	4b09      	ldr	r3, [pc, #36]	@ (8001ff0 <IOE_Write+0x28>)
 8001fcc:	f88d 2017 	strb.w	r2, [sp, #23]
 8001fd0:	681b      	ldr	r3, [r3, #0]
 8001fd2:	9302      	str	r3, [sp, #8]
 8001fd4:	f10d 0217 	add.w	r2, sp, #23
 8001fd8:	2301      	movs	r3, #1
 8001fda:	9200      	str	r2, [sp, #0]
 8001fdc:	9301      	str	r3, [sp, #4]
 8001fde:	460a      	mov	r2, r1
 8001fe0:	4601      	mov	r1, r0
 8001fe2:	4804      	ldr	r0, [pc, #16]	@ (8001ff4 <IOE_Write+0x2c>)
 8001fe4:	f003 fb24 	bl	8005630 <HAL_I2C_Mem_Write>
}
 8001fe8:	b007      	add	sp, #28
 8001fea:	f85d fb04 	ldr.w	pc, [sp], #4
 8001fee:	bf00      	nop
 8001ff0:	20000060 	.word	0x20000060
 8001ff4:	200027c0 	.word	0x200027c0

08001ff8 <IOE_Read>:
{
 8001ff8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001ffa:	2300      	movs	r3, #0
 8001ffc:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8002000:	4b08      	ldr	r3, [pc, #32]	@ (8002024 <IOE_Read+0x2c>)
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	9302      	str	r3, [sp, #8]
{
 8002006:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8002008:	2301      	movs	r3, #1
 800200a:	f10d 0117 	add.w	r1, sp, #23
 800200e:	9100      	str	r1, [sp, #0]
 8002010:	9301      	str	r3, [sp, #4]
 8002012:	4601      	mov	r1, r0
 8002014:	4804      	ldr	r0, [pc, #16]	@ (8002028 <IOE_Read+0x30>)
 8002016:	f003 fb9b 	bl	8005750 <HAL_I2C_Mem_Read>
}
 800201a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800201e:	b007      	add	sp, #28
 8002020:	f85d fb04 	ldr.w	pc, [sp], #4
 8002024:	20000060 	.word	0x20000060
 8002028:	200027c0 	.word	0x200027c0

0800202c <IOE_ReadMultiple>:
{
 800202c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800202e:	4c08      	ldr	r4, [pc, #32]	@ (8002050 <IOE_ReadMultiple+0x24>)
 8002030:	6824      	ldr	r4, [r4, #0]
 8002032:	9200      	str	r2, [sp, #0]
 8002034:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002038:	460a      	mov	r2, r1
 800203a:	2301      	movs	r3, #1
 800203c:	4601      	mov	r1, r0
 800203e:	4805      	ldr	r0, [pc, #20]	@ (8002054 <IOE_ReadMultiple+0x28>)
 8002040:	f003 fb86 	bl	8005750 <HAL_I2C_Mem_Read>
}
 8002044:	3800      	subs	r0, #0
 8002046:	bf18      	it	ne
 8002048:	2001      	movne	r0, #1
 800204a:	b004      	add	sp, #16
 800204c:	bd10      	pop	{r4, pc}
 800204e:	bf00      	nop
 8002050:	20000060 	.word	0x20000060
 8002054:	200027c0 	.word	0x200027c0

08002058 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8002058:	f002 bbb8 	b.w	80047cc <HAL_Delay>

0800205c <LCD_IO_Init>:
{
 800205c:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800205e:	4c06      	ldr	r4, [pc, #24]	@ (8002078 <LCD_IO_Init+0x1c>)
 8002060:	2200      	movs	r2, #0
 8002062:	4620      	mov	r0, r4
 8002064:	2104      	movs	r1, #4
 8002066:	f003 f821 	bl	80050ac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800206a:	4620      	mov	r0, r4
 800206c:	2201      	movs	r2, #1
}
 800206e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002072:	2104      	movs	r1, #4
 8002074:	f003 b81a 	b.w	80050ac <HAL_GPIO_WritePin>
 8002078:	40020800 	.word	0x40020800

0800207c <LCD_IO_WriteData>:
{
 800207c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800207e:	4d0b      	ldr	r5, [pc, #44]	@ (80020ac <LCD_IO_WriteData+0x30>)
{
 8002080:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002082:	2201      	movs	r2, #1
 8002084:	480a      	ldr	r0, [pc, #40]	@ (80020b0 <LCD_IO_WriteData+0x34>)
 8002086:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800208a:	f003 f80f 	bl	80050ac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800208e:	2200      	movs	r2, #0
 8002090:	2104      	movs	r1, #4
 8002092:	4628      	mov	r0, r5
 8002094:	f003 f80a 	bl	80050ac <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002098:	4620      	mov	r0, r4
 800209a:	f7ff fccd 	bl	8001a38 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800209e:	4628      	mov	r0, r5
 80020a0:	2201      	movs	r2, #1
}
 80020a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020a6:	2104      	movs	r1, #4
 80020a8:	f003 b800 	b.w	80050ac <HAL_GPIO_WritePin>
 80020ac:	40020800 	.word	0x40020800
 80020b0:	40020c00 	.word	0x40020c00

080020b4 <LCD_IO_WriteReg>:
{
 80020b4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020b6:	4d0b      	ldr	r5, [pc, #44]	@ (80020e4 <LCD_IO_WriteReg+0x30>)
{
 80020b8:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80020ba:	2200      	movs	r2, #0
 80020bc:	480a      	ldr	r0, [pc, #40]	@ (80020e8 <LCD_IO_WriteReg+0x34>)
 80020be:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80020c2:	f002 fff3 	bl	80050ac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020c6:	2200      	movs	r2, #0
 80020c8:	2104      	movs	r1, #4
 80020ca:	4628      	mov	r0, r5
 80020cc:	f002 ffee 	bl	80050ac <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80020d0:	4620      	mov	r0, r4
 80020d2:	f7ff fcb1 	bl	8001a38 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020d6:	4628      	mov	r0, r5
 80020d8:	2201      	movs	r2, #1
}
 80020da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80020de:	2104      	movs	r1, #4
 80020e0:	f002 bfe4 	b.w	80050ac <HAL_GPIO_WritePin>
 80020e4:	40020800 	.word	0x40020800
 80020e8:	40020c00 	.word	0x40020c00

080020ec <LCD_IO_ReadData>:
{
 80020ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020ee:	4e14      	ldr	r6, [pc, #80]	@ (8002140 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80020f0:	4f14      	ldr	r7, [pc, #80]	@ (8002144 <LCD_IO_ReadData+0x58>)
{
 80020f2:	4605      	mov	r5, r0
 80020f4:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80020f6:	4630      	mov	r0, r6
 80020f8:	2200      	movs	r2, #0
 80020fa:	2104      	movs	r1, #4
 80020fc:	f002 ffd6 	bl	80050ac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002100:	2200      	movs	r2, #0
 8002102:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002106:	4638      	mov	r0, r7
 8002108:	f002 ffd0 	bl	80050ac <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 800210c:	4628      	mov	r0, r5
 800210e:	f7ff fc93 	bl	8001a38 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8002112:	4b0d      	ldr	r3, [pc, #52]	@ (8002148 <LCD_IO_ReadData+0x5c>)
 8002114:	480d      	ldr	r0, [pc, #52]	@ (800214c <LCD_IO_ReadData+0x60>)
 8002116:	681b      	ldr	r3, [r3, #0]
 8002118:	4622      	mov	r2, r4
 800211a:	a901      	add	r1, sp, #4
 800211c:	f005 fa2c 	bl	8007578 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002120:	4638      	mov	r0, r7
 8002122:	2201      	movs	r2, #1
 8002124:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8002128:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800212a:	f002 ffbf 	bl	80050ac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800212e:	4630      	mov	r0, r6
 8002130:	2201      	movs	r2, #1
 8002132:	2104      	movs	r1, #4
 8002134:	f002 ffba 	bl	80050ac <HAL_GPIO_WritePin>
}
 8002138:	4620      	mov	r0, r4
 800213a:	b003      	add	sp, #12
 800213c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800213e:	bf00      	nop
 8002140:	40020800 	.word	0x40020800
 8002144:	40020c00 	.word	0x40020c00
 8002148:	2000005c 	.word	0x2000005c
 800214c:	200026c0 	.word	0x200026c0

08002150 <LCD_Delay>:
  HAL_Delay(Delay);
 8002150:	f002 bb3c 	b.w	80047cc <HAL_Delay>

08002154 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 8002154:	6802      	ldr	r2, [r0, #0]
 8002156:	4b03      	ldr	r3, [pc, #12]	@ (8002164 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002158:	429a      	cmp	r2, r3
 800215a:	d101      	bne.n	8002160 <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 800215c:	f002 bb24 	b.w	80047a8 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002160:	4770      	bx	lr
 8002162:	bf00      	nop
 8002164:	40001000 	.word	0x40001000

08002168 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002168:	4770      	bx	lr
	...

0800216c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800216c:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800216e:	4b0e      	ldr	r3, [pc, #56]	@ (80021a8 <HAL_MspInit+0x3c>)
 8002170:	2200      	movs	r2, #0
 8002172:	9200      	str	r2, [sp, #0]
 8002174:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8002176:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 800217a:	6459      	str	r1, [r3, #68]	@ 0x44
 800217c:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800217e:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 8002182:	9100      	str	r1, [sp, #0]
 8002184:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002186:	9201      	str	r2, [sp, #4]
 8002188:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 800218a:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 800218e:	6419      	str	r1, [r3, #64]	@ 0x40
 8002190:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002192:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002196:	9301      	str	r3, [sp, #4]
 8002198:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800219a:	210f      	movs	r1, #15
 800219c:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80021a0:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021a2:	f002 bd4f 	b.w	8004c44 <HAL_NVIC_SetPriority>
 80021a6:	bf00      	nop
 80021a8:	40023800 	.word	0x40023800

080021ac <HAL_ADC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hadc: ADC handle pointer
  * @retval None
  */
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80021ac:	b510      	push	{r4, lr}
 80021ae:	4604      	mov	r4, r0
 80021b0:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021b2:	2214      	movs	r2, #20
 80021b4:	2100      	movs	r1, #0
 80021b6:	a803      	add	r0, sp, #12
 80021b8:	f022 fbcf 	bl	802495a <memset>
  if(hadc->Instance==ADC1)
 80021bc:	6822      	ldr	r2, [r4, #0]
 80021be:	4b12      	ldr	r3, [pc, #72]	@ (8002208 <HAL_ADC_MspInit+0x5c>)
 80021c0:	429a      	cmp	r2, r3
 80021c2:	d11e      	bne.n	8002202 <HAL_ADC_MspInit+0x56>
  {
    /* USER CODE BEGIN ADC1_MspInit 0 */

    /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80021c4:	f503 338c 	add.w	r3, r3, #71680	@ 0x11800
 80021c8:	2100      	movs	r1, #0
 80021ca:	9101      	str	r1, [sp, #4]
 80021cc:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    PC3     ------> ADC1_IN13
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021ce:	480f      	ldr	r0, [pc, #60]	@ (800220c <HAL_ADC_MspInit+0x60>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 80021d0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80021d4:	645a      	str	r2, [r3, #68]	@ 0x44
 80021d6:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80021d8:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80021dc:	9201      	str	r2, [sp, #4]
 80021de:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80021e0:	9102      	str	r1, [sp, #8]
 80021e2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80021e4:	f042 0204 	orr.w	r2, r2, #4
 80021e8:	631a      	str	r2, [r3, #48]	@ 0x30
 80021ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021ec:	f003 0304 	and.w	r3, r3, #4
 80021f0:	9302      	str	r3, [sp, #8]
 80021f2:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80021f4:	2208      	movs	r2, #8
 80021f6:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021f8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80021fa:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021fe:	f002 fe6b 	bl	8004ed8 <HAL_GPIO_Init>

    /* USER CODE END ADC1_MspInit 1 */

  }

}
 8002202:	b008      	add	sp, #32
 8002204:	bd10      	pop	{r4, pc}
 8002206:	bf00      	nop
 8002208:	40012000 	.word	0x40012000
 800220c:	40020800 	.word	0x40020800

08002210 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002210:	6802      	ldr	r2, [r0, #0]
 8002212:	4b09      	ldr	r3, [pc, #36]	@ (8002238 <HAL_CRC_MspInit+0x28>)
 8002214:	429a      	cmp	r2, r3
{
 8002216:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002218:	d10b      	bne.n	8002232 <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800221a:	2300      	movs	r3, #0
 800221c:	9301      	str	r3, [sp, #4]
 800221e:	4b07      	ldr	r3, [pc, #28]	@ (800223c <HAL_CRC_MspInit+0x2c>)
 8002220:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002222:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8002226:	631a      	str	r2, [r3, #48]	@ 0x30
 8002228:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800222a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800222e:	9301      	str	r3, [sp, #4]
 8002230:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8002232:	b002      	add	sp, #8
 8002234:	4770      	bx	lr
 8002236:	bf00      	nop
 8002238:	40023000 	.word	0x40023000
 800223c:	40023800 	.word	0x40023800

08002240 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002240:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8002242:	4b0f      	ldr	r3, [pc, #60]	@ (8002280 <HAL_DMA2D_MspInit+0x40>)
 8002244:	6802      	ldr	r2, [r0, #0]
 8002246:	429a      	cmp	r2, r3
 8002248:	d116      	bne.n	8002278 <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800224a:	2200      	movs	r2, #0
 800224c:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8002250:	9201      	str	r2, [sp, #4]
 8002252:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002254:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8002258:	6319      	str	r1, [r3, #48]	@ 0x30
 800225a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800225c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002260:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002262:	2105      	movs	r1, #5
 8002264:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002266:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002268:	f002 fcec 	bl	8004c44 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800226c:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 800226e:	b003      	add	sp, #12
 8002270:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002274:	f002 bd18 	b.w	8004ca8 <HAL_NVIC_EnableIRQ>
}
 8002278:	b003      	add	sp, #12
 800227a:	f85d fb04 	ldr.w	pc, [sp], #4
 800227e:	bf00      	nop
 8002280:	4002b000 	.word	0x4002b000

08002284 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002284:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002288:	4604      	mov	r4, r0
 800228a:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800228c:	2214      	movs	r2, #20
 800228e:	2100      	movs	r1, #0
 8002290:	a803      	add	r0, sp, #12
 8002292:	f022 fb62 	bl	802495a <memset>
  if(hi2c->Instance==I2C3)
 8002296:	6822      	ldr	r2, [r4, #0]
 8002298:	4b24      	ldr	r3, [pc, #144]	@ (800232c <HAL_I2C_MspInit+0xa8>)
 800229a:	429a      	cmp	r2, r3
 800229c:	d143      	bne.n	8002326 <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800229e:	4c24      	ldr	r4, [pc, #144]	@ (8002330 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022a0:	4824      	ldr	r0, [pc, #144]	@ (8002334 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80022a2:	2500      	movs	r5, #0
 80022a4:	9500      	str	r5, [sp, #0]
 80022a6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80022a8:	f043 0304 	orr.w	r3, r3, #4
 80022ac:	6323      	str	r3, [r4, #48]	@ 0x30
 80022ae:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80022b0:	f003 0304 	and.w	r3, r3, #4
 80022b4:	9300      	str	r3, [sp, #0]
 80022b6:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80022b8:	9501      	str	r5, [sp, #4]
 80022ba:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80022bc:	f043 0301 	orr.w	r3, r3, #1
 80022c0:	6323      	str	r3, [r4, #48]	@ 0x30
 80022c2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80022c4:	f003 0301 	and.w	r3, r3, #1
 80022c8:	9301      	str	r3, [sp, #4]
 80022ca:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022cc:	f04f 0912 	mov.w	r9, #18
 80022d0:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022d4:	f04f 0801 	mov.w	r8, #1
 80022d8:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022da:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022dc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022de:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022e2:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022e6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022e8:	f002 fdf6 	bl	8004ed8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80022ec:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022f0:	4811      	ldr	r0, [pc, #68]	@ (8002338 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022f2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022f4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80022f6:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022fa:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022fe:	f002 fdeb 	bl	8004ed8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002302:	9502      	str	r5, [sp, #8]
 8002304:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002306:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800230a:	6423      	str	r3, [r4, #64]	@ 0x40
 800230c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800230e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002312:	9302      	str	r3, [sp, #8]
 8002314:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002316:	6a23      	ldr	r3, [r4, #32]
 8002318:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800231c:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800231e:	6a23      	ldr	r3, [r4, #32]
 8002320:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8002324:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 8002326:	b009      	add	sp, #36	@ 0x24
 8002328:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800232c:	40005c00 	.word	0x40005c00
 8002330:	40023800 	.word	0x40023800
 8002334:	40020800 	.word	0x40020800
 8002338:	40020000 	.word	0x40020000

0800233c <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 800233c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800233e:	b099      	sub	sp, #100	@ 0x64
 8002340:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002342:	2214      	movs	r2, #20
 8002344:	2100      	movs	r1, #0
 8002346:	a807      	add	r0, sp, #28
 8002348:	f022 fb07 	bl	802495a <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800234c:	2230      	movs	r2, #48	@ 0x30
 800234e:	eb0d 0002 	add.w	r0, sp, r2
 8002352:	2100      	movs	r1, #0
 8002354:	f022 fb01 	bl	802495a <memset>
  if(hltdc->Instance==LTDC)
 8002358:	6822      	ldr	r2, [r4, #0]
 800235a:	4b5e      	ldr	r3, [pc, #376]	@ (80024d4 <HAL_LTDC_MspInit+0x198>)
 800235c:	429a      	cmp	r2, r3
 800235e:	f040 80b7 	bne.w	80024d0 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002362:	2308      	movs	r3, #8
 8002364:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 50;
 8002366:	2332      	movs	r3, #50	@ 0x32
 8002368:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
 800236a:	2302      	movs	r3, #2
 800236c:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800236e:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 8002370:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8002374:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002376:	f004 fcaf 	bl	8006cd8 <HAL_RCCEx_PeriphCLKConfig>
 800237a:	b108      	cbz	r0, 8002380 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 800237c:	f7ff fef4 	bl	8002168 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002380:	4b55      	ldr	r3, [pc, #340]	@ (80024d8 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002382:	4856      	ldr	r0, [pc, #344]	@ (80024dc <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002384:	2400      	movs	r4, #0
 8002386:	9400      	str	r4, [sp, #0]
 8002388:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800238a:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 800238e:	645a      	str	r2, [r3, #68]	@ 0x44
 8002390:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002392:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8002396:	9200      	str	r2, [sp, #0]
 8002398:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800239a:	9401      	str	r4, [sp, #4]
 800239c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800239e:	f042 0220 	orr.w	r2, r2, #32
 80023a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80023a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023a6:	f002 0220 	and.w	r2, r2, #32
 80023aa:	9201      	str	r2, [sp, #4]
 80023ac:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80023ae:	9402      	str	r4, [sp, #8]
 80023b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023b2:	f042 0201 	orr.w	r2, r2, #1
 80023b6:	631a      	str	r2, [r3, #48]	@ 0x30
 80023b8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023ba:	f002 0201 	and.w	r2, r2, #1
 80023be:	9202      	str	r2, [sp, #8]
 80023c0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80023c2:	9403      	str	r4, [sp, #12]
 80023c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023c6:	f042 0202 	orr.w	r2, r2, #2
 80023ca:	631a      	str	r2, [r3, #48]	@ 0x30
 80023cc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023ce:	f002 0202 	and.w	r2, r2, #2
 80023d2:	9203      	str	r2, [sp, #12]
 80023d4:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80023d6:	9404      	str	r4, [sp, #16]
 80023d8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023da:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80023de:	631a      	str	r2, [r3, #48]	@ 0x30
 80023e0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023e2:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80023e6:	9204      	str	r2, [sp, #16]
 80023e8:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023ea:	9405      	str	r4, [sp, #20]
 80023ec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023ee:	f042 0204 	orr.w	r2, r2, #4
 80023f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80023f4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023f6:	f002 0204 	and.w	r2, r2, #4
 80023fa:	9205      	str	r2, [sp, #20]
 80023fc:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023fe:	9406      	str	r4, [sp, #24]
 8002400:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002402:	f042 0208 	orr.w	r2, r2, #8
 8002406:	631a      	str	r2, [r3, #48]	@ 0x30
 8002408:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800240a:	f003 0308 	and.w	r3, r3, #8
 800240e:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002410:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002412:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002414:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002416:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002418:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800241c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800241e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002422:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002426:	f002 fd57 	bl	8004ed8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800242a:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800242e:	482c      	ldr	r0, [pc, #176]	@ (80024e0 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002430:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002432:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002434:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002438:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800243a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800243e:	f002 fd4b 	bl	8004ed8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002442:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002444:	4827      	ldr	r0, [pc, #156]	@ (80024e4 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002446:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002448:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800244a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800244e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002452:	f002 fd41 	bl	8004ed8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002456:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800245a:	4822      	ldr	r0, [pc, #136]	@ (80024e4 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800245c:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800245e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002460:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002464:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002468:	f002 fd36 	bl	8004ed8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800246c:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002470:	481d      	ldr	r0, [pc, #116]	@ (80024e8 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002472:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002474:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002476:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800247a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800247e:	f002 fd2b 	bl	8004ed8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002482:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002484:	4819      	ldr	r0, [pc, #100]	@ (80024ec <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002486:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002488:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800248a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800248e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002492:	f002 fd21 	bl	8004ed8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002496:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002498:	4815      	ldr	r0, [pc, #84]	@ (80024f0 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800249a:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800249c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800249e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80024a2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80024a6:	f002 fd17 	bl	8004ed8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80024aa:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80024ae:	480e      	ldr	r0, [pc, #56]	@ (80024e8 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80024b0:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80024b2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024b4:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80024b8:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80024bc:	f002 fd0c 	bl	8004ed8 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80024c0:	2058      	movs	r0, #88	@ 0x58
 80024c2:	4622      	mov	r2, r4
 80024c4:	2105      	movs	r1, #5
 80024c6:	f002 fbbd 	bl	8004c44 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80024ca:	2058      	movs	r0, #88	@ 0x58
 80024cc:	f002 fbec 	bl	8004ca8 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 80024d0:	b019      	add	sp, #100	@ 0x64
 80024d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80024d4:	40016800 	.word	0x40016800
 80024d8:	40023800 	.word	0x40023800
 80024dc:	40021400 	.word	0x40021400
 80024e0:	40020000 	.word	0x40020000
 80024e4:	40020400 	.word	0x40020400
 80024e8:	40021800 	.word	0x40021800
 80024ec:	40020800 	.word	0x40020800
 80024f0:	40020c00 	.word	0x40020c00

080024f4 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80024f4:	b510      	push	{r4, lr}
 80024f6:	4604      	mov	r4, r0
 80024f8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024fa:	2214      	movs	r2, #20
 80024fc:	2100      	movs	r1, #0
 80024fe:	a803      	add	r0, sp, #12
 8002500:	f022 fa2b 	bl	802495a <memset>
  if(hspi->Instance==SPI5)
 8002504:	6822      	ldr	r2, [r4, #0]
 8002506:	4b14      	ldr	r3, [pc, #80]	@ (8002558 <HAL_SPI_MspInit+0x64>)
 8002508:	429a      	cmp	r2, r3
 800250a:	d123      	bne.n	8002554 <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 800250c:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8002510:	2100      	movs	r1, #0
 8002512:	9101      	str	r1, [sp, #4]
 8002514:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002516:	4811      	ldr	r0, [pc, #68]	@ (800255c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002518:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 800251c:	645a      	str	r2, [r3, #68]	@ 0x44
 800251e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002520:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8002524:	9201      	str	r2, [sp, #4]
 8002526:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002528:	9102      	str	r1, [sp, #8]
 800252a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800252c:	f042 0220 	orr.w	r2, r2, #32
 8002530:	631a      	str	r2, [r3, #48]	@ 0x30
 8002532:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002534:	f003 0320 	and.w	r3, r3, #32
 8002538:	9302      	str	r3, [sp, #8]
 800253a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800253c:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8002540:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002542:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002544:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002548:	2305      	movs	r3, #5
 800254a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800254e:	a903      	add	r1, sp, #12
 8002550:	f002 fcc2 	bl	8004ed8 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 8002554:	b008      	add	sp, #32
 8002556:	bd10      	pop	{r4, pc}
 8002558:	40015000 	.word	0x40015000
 800255c:	40021400 	.word	0x40021400

08002560 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002560:	b510      	push	{r4, lr}
 8002562:	4604      	mov	r4, r0
 8002564:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002566:	2214      	movs	r2, #20
 8002568:	2100      	movs	r1, #0
 800256a:	a803      	add	r0, sp, #12
 800256c:	f022 f9f5 	bl	802495a <memset>
  if(huart->Instance==USART1)
 8002570:	6822      	ldr	r2, [r4, #0]
 8002572:	4b14      	ldr	r3, [pc, #80]	@ (80025c4 <HAL_UART_MspInit+0x64>)
 8002574:	429a      	cmp	r2, r3
 8002576:	d123      	bne.n	80025c0 <HAL_UART_MspInit+0x60>
  {
    /* USER CODE BEGIN USART1_MspInit 0 */

    /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8002578:	f503 3394 	add.w	r3, r3, #75776	@ 0x12800
 800257c:	2100      	movs	r1, #0
 800257e:	9101      	str	r1, [sp, #4]
 8002580:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002582:	4811      	ldr	r0, [pc, #68]	@ (80025c8 <HAL_UART_MspInit+0x68>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8002584:	f042 0210 	orr.w	r2, r2, #16
 8002588:	645a      	str	r2, [r3, #68]	@ 0x44
 800258a:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800258c:	f002 0210 	and.w	r2, r2, #16
 8002590:	9201      	str	r2, [sp, #4]
 8002592:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002594:	9102      	str	r1, [sp, #8]
 8002596:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002598:	f042 0201 	orr.w	r2, r2, #1
 800259c:	631a      	str	r2, [r3, #48]	@ 0x30
 800259e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80025a0:	f003 0301 	and.w	r3, r3, #1
 80025a4:	9302      	str	r3, [sp, #8]
 80025a6:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025a8:	f44f 62c0 	mov.w	r2, #1536	@ 0x600
 80025ac:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80025ae:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025b0:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80025b4:	2307      	movs	r3, #7
 80025b6:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80025ba:	a903      	add	r1, sp, #12
 80025bc:	f002 fc8c 	bl	8004ed8 <HAL_GPIO_Init>

    /* USER CODE END USART1_MspInit 1 */

  }

}
 80025c0:	b008      	add	sp, #32
 80025c2:	bd10      	pop	{r4, pc}
 80025c4:	40011000 	.word	0x40011000
 80025c8:	40020000 	.word	0x40020000

080025cc <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80025cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80025d0:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80025d2:	2300      	movs	r3, #0
 80025d4:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80025d6:	4b2b      	ldr	r3, [pc, #172]	@ (8002684 <HAL_SDRAM_MspInit+0xb8>)
 80025d8:	681c      	ldr	r4, [r3, #0]
 80025da:	2c00      	cmp	r4, #0
 80025dc:	d14f      	bne.n	800267e <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 80025de:	f04f 0801 	mov.w	r8, #1
 80025e2:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 80025e6:	4b28      	ldr	r3, [pc, #160]	@ (8002688 <HAL_SDRAM_MspInit+0xbc>)
 80025e8:	9400      	str	r4, [sp, #0]
 80025ea:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80025ec:	4827      	ldr	r0, [pc, #156]	@ (800268c <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80025ee:	ea42 0208 	orr.w	r2, r2, r8
 80025f2:	639a      	str	r2, [r3, #56]	@ 0x38
 80025f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80025f6:	ea03 0308 	and.w	r3, r3, r8
 80025fa:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025fc:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025fe:	2603      	movs	r6, #3
 8002600:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002602:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002604:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002606:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 800260a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800260e:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002612:	f002 fc61 	bl	8004ed8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002616:	481e      	ldr	r0, [pc, #120]	@ (8002690 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002618:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800261a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800261c:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002620:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002624:	f002 fc58 	bl	8004ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002628:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800262c:	4819      	ldr	r0, [pc, #100]	@ (8002694 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800262e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002630:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002632:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002636:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800263a:	f002 fc4d 	bl	8004ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800263e:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002642:	4815      	ldr	r0, [pc, #84]	@ (8002698 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002644:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002646:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002648:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800264c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002650:	f002 fc42 	bl	8004ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002654:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002658:	4810      	ldr	r0, [pc, #64]	@ (800269c <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800265a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800265c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800265e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002662:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002666:	f002 fc37 	bl	8004ed8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800266a:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800266c:	480c      	ldr	r0, [pc, #48]	@ (80026a0 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800266e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002670:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002672:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002676:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800267a:	f002 fc2d 	bl	8004ed8 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800267e:	b006      	add	sp, #24
 8002680:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002684:	200028a4 	.word	0x200028a4
 8002688:	40023800 	.word	0x40023800
 800268c:	40021400 	.word	0x40021400
 8002690:	40020800 	.word	0x40020800
 8002694:	40021800 	.word	0x40021800
 8002698:	40021000 	.word	0x40021000
 800269c:	40020c00 	.word	0x40020c00
 80026a0:	40020400 	.word	0x40020400

080026a4 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80026a4:	b570      	push	{r4, r5, r6, lr}
 80026a6:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80026a8:	2300      	movs	r3, #0
 80026aa:	9302      	str	r3, [sp, #8]
 80026ac:	4b20      	ldr	r3, [pc, #128]	@ (8002730 <HAL_InitTick+0x8c>)
 80026ae:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80026b0:	f042 0210 	orr.w	r2, r2, #16
 80026b4:	641a      	str	r2, [r3, #64]	@ 0x40
 80026b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80026b8:	f003 0310 	and.w	r3, r3, #16
 80026bc:	9302      	str	r3, [sp, #8]
{
 80026be:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80026c0:	a901      	add	r1, sp, #4
 80026c2:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80026c4:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80026c6:	f004 fae9 	bl	8006c9c <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80026ca:	9b06      	ldr	r3, [sp, #24]
 80026cc:	bb4b      	cbnz	r3, 8002722 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80026ce:	f004 fac5 	bl	8006c5c <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80026d2:	4e18      	ldr	r6, [pc, #96]	@ (8002734 <HAL_InitTick+0x90>)
 80026d4:	4b18      	ldr	r3, [pc, #96]	@ (8002738 <HAL_InitTick+0x94>)
 80026d6:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80026d8:	f240 33e7 	movw	r3, #999	@ 0x3e7
 80026dc:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80026de:	4b17      	ldr	r3, [pc, #92]	@ (800273c <HAL_InitTick+0x98>)
 80026e0:	fbb0 f3f3 	udiv	r3, r0, r3
 80026e4:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80026e6:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80026e8:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 80026ea:	2300      	movs	r3, #0
 80026ec:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80026ee:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80026f0:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 80026f2:	f005 f911 	bl	8007918 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80026f6:	4604      	mov	r4, r0
 80026f8:	b980      	cbnz	r0, 800271c <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 80026fa:	4630      	mov	r0, r6
 80026fc:	f004 ffe2 	bl	80076c4 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002700:	4604      	mov	r4, r0
 8002702:	b958      	cbnz	r0, 800271c <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002704:	2036      	movs	r0, #54	@ 0x36
 8002706:	f002 facf 	bl	8004ca8 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800270a:	2d0f      	cmp	r5, #15
 800270c:	d80d      	bhi.n	800272a <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800270e:	4622      	mov	r2, r4
 8002710:	4629      	mov	r1, r5
 8002712:	2036      	movs	r0, #54	@ 0x36
 8002714:	f002 fa96 	bl	8004c44 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002718:	4b09      	ldr	r3, [pc, #36]	@ (8002740 <HAL_InitTick+0x9c>)
 800271a:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 800271c:	4620      	mov	r0, r4
 800271e:	b008      	add	sp, #32
 8002720:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002722:	f004 fa9b 	bl	8006c5c <HAL_RCC_GetPCLK1Freq>
 8002726:	0040      	lsls	r0, r0, #1
 8002728:	e7d3      	b.n	80026d2 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 800272a:	2401      	movs	r4, #1
 800272c:	e7f6      	b.n	800271c <HAL_InitTick+0x78>
 800272e:	bf00      	nop
 8002730:	40023800 	.word	0x40023800
 8002734:	200028a8 	.word	0x200028a8
 8002738:	40001000 	.word	0x40001000
 800273c:	000f4240 	.word	0x000f4240
 8002740:	200000d4 	.word	0x200000d4

08002744 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002744:	4770      	bx	lr

08002746 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002746:	e7fe      	b.n	8002746 <HardFault_Handler>

08002748 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002748:	e7fe      	b.n	8002748 <MemManage_Handler>

0800274a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800274a:	e7fe      	b.n	800274a <BusFault_Handler>

0800274c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800274c:	e7fe      	b.n	800274c <UsageFault_Handler>

0800274e <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 800274e:	4770      	bx	lr

08002750 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8002750:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 8002752:	2020      	movs	r0, #32
 8002754:	f002 fcb8 	bl	80050c8 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 8002758:	2040      	movs	r0, #64	@ 0x40
 800275a:	f002 fcb5 	bl	80050c8 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_7);
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 800275e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_7);
 8002762:	2080      	movs	r0, #128	@ 0x80
 8002764:	f002 bcb0 	b.w	80050c8 <HAL_GPIO_EXTI_IRQHandler>

08002768 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002768:	4801      	ldr	r0, [pc, #4]	@ (8002770 <TIM6_DAC_IRQHandler+0x8>)
 800276a:	f004 bfe9 	b.w	8007740 <HAL_TIM_IRQHandler>
 800276e:	bf00      	nop
 8002770:	200028a8 	.word	0x200028a8

08002774 <OTG_HS_IRQHandler>:
void OTG_HS_IRQHandler(void)
{
  /* USER CODE BEGIN OTG_HS_IRQn 0 */

  /* USER CODE END OTG_HS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_HS);
 8002774:	4801      	ldr	r0, [pc, #4]	@ (800277c <OTG_HS_IRQHandler+0x8>)
 8002776:	f003 bc89 	b.w	800608c <HAL_PCD_IRQHandler>
 800277a:	bf00      	nop
 800277c:	20002150 	.word	0x20002150

08002780 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002780:	4801      	ldr	r0, [pc, #4]	@ (8002788 <LTDC_IRQHandler+0x8>)
 8002782:	f003 ba1d 	b.w	8005bc0 <HAL_LTDC_IRQHandler>
 8002786:	bf00      	nop
 8002788:	20002718 	.word	0x20002718

0800278c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800278c:	4801      	ldr	r0, [pc, #4]	@ (8002794 <DMA2D_IRQHandler+0x8>)
 800278e:	f002 bad5 	b.w	8004d3c <HAL_DMA2D_IRQHandler>
 8002792:	bf00      	nop
 8002794:	20002814 	.word	0x20002814

08002798 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002798:	2001      	movs	r0, #1
 800279a:	4770      	bx	lr

0800279c <_kill>:

int _kill(int pid, int sig)
{
 800279c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800279e:	f022 f97f 	bl	8024aa0 <__errno>
 80027a2:	2316      	movs	r3, #22
 80027a4:	6003      	str	r3, [r0, #0]
	return -1;
}
 80027a6:	f04f 30ff 	mov.w	r0, #4294967295
 80027aa:	bd08      	pop	{r3, pc}

080027ac <_exit>:

void _exit (int status)
{
 80027ac:	b508      	push	{r3, lr}
	errno = EINVAL;
 80027ae:	f022 f977 	bl	8024aa0 <__errno>
 80027b2:	2316      	movs	r3, #22
 80027b4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80027b6:	e7fe      	b.n	80027b6 <_exit+0xa>

080027b8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80027b8:	b570      	push	{r4, r5, r6, lr}
 80027ba:	460d      	mov	r5, r1
 80027bc:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80027be:	460e      	mov	r6, r1
 80027c0:	1b73      	subs	r3, r6, r5
 80027c2:	429c      	cmp	r4, r3
 80027c4:	dc01      	bgt.n	80027ca <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 80027c6:	4620      	mov	r0, r4
 80027c8:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 80027ca:	f3af 8000 	nop.w
 80027ce:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80027d2:	e7f5      	b.n	80027c0 <_read+0x8>

080027d4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80027d4:	b570      	push	{r4, r5, r6, lr}
 80027d6:	460d      	mov	r5, r1
 80027d8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80027da:	460e      	mov	r6, r1
 80027dc:	1b73      	subs	r3, r6, r5
 80027de:	429c      	cmp	r4, r3
 80027e0:	dc01      	bgt.n	80027e6 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80027e2:	4620      	mov	r0, r4
 80027e4:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80027e6:	f816 0b01 	ldrb.w	r0, [r6], #1
 80027ea:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80027ee:	e7f5      	b.n	80027dc <_write+0x8>

080027f0 <_close>:

int _close(int file)
{
	return -1;
}
 80027f0:	f04f 30ff 	mov.w	r0, #4294967295
 80027f4:	4770      	bx	lr

080027f6 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80027f6:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80027fa:	604b      	str	r3, [r1, #4]
	return 0;
}
 80027fc:	2000      	movs	r0, #0
 80027fe:	4770      	bx	lr

08002800 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002800:	2001      	movs	r0, #1
 8002802:	4770      	bx	lr

08002804 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002804:	2000      	movs	r0, #0
 8002806:	4770      	bx	lr

08002808 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002808:	4a0a      	ldr	r2, [pc, #40]	@ (8002834 <_sbrk+0x2c>)
 800280a:	6811      	ldr	r1, [r2, #0]
{
 800280c:	b508      	push	{r3, lr}
 800280e:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002810:	b909      	cbnz	r1, 8002816 <_sbrk+0xe>
		heap_end = &end;
 8002812:	4909      	ldr	r1, [pc, #36]	@ (8002838 <_sbrk+0x30>)
 8002814:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002816:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002818:	4669      	mov	r1, sp
 800281a:	4403      	add	r3, r0
 800281c:	428b      	cmp	r3, r1
 800281e:	d906      	bls.n	800282e <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002820:	f022 f93e 	bl	8024aa0 <__errno>
 8002824:	230c      	movs	r3, #12
 8002826:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002828:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 800282c:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800282e:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002830:	e7fc      	b.n	800282c <_sbrk+0x24>
 8002832:	bf00      	nop
 8002834:	200028f0 	.word	0x200028f0
 8002838:	200148b0 	.word	0x200148b0

0800283c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;         // tahomabd_12_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // tahomabd_9_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800283c:	4770      	bx	lr

0800283e <_ZN23ApplicationFontProviderD0Ev>:
 800283e:	b510      	push	{r4, lr}
 8002840:	2104      	movs	r1, #4
 8002842:	4604      	mov	r4, r0
 8002844:	f020 ff0f 	bl	8023666 <_ZdlPvj>
 8002848:	4620      	mov	r0, r4
 800284a:	bd10      	pop	{r4, pc}

0800284c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800284c:	b508      	push	{r3, lr}
    switch (typography)
 800284e:	2903      	cmp	r1, #3
 8002850:	d813      	bhi.n	800287a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002852:	e8df f001 	tbb	[pc, r1]
 8002856:	0602      	.short	0x0602
 8002858:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // tahomabd_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800285a:	f001 f977 	bl	8003b4c <_ZN17TypedTextDatabase8getFontsEv>
 800285e:	6800      	ldr	r0, [r0, #0]
        // tahomabd_9_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002860:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002862:	f001 f973 	bl	8003b4c <_ZN17TypedTextDatabase8getFontsEv>
 8002866:	6840      	ldr	r0, [r0, #4]
 8002868:	e7fa      	b.n	8002860 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800286a:	f001 f96f 	bl	8003b4c <_ZN17TypedTextDatabase8getFontsEv>
 800286e:	6880      	ldr	r0, [r0, #8]
 8002870:	e7f6      	b.n	8002860 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002872:	f001 f96b 	bl	8003b4c <_ZN17TypedTextDatabase8getFontsEv>
 8002876:	68c0      	ldr	r0, [r0, #12]
 8002878:	e7f2      	b.n	8002860 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800287a:	2000      	movs	r0, #0
 800287c:	e7f0      	b.n	8002860 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002880 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002880:	4800      	ldr	r0, [pc, #0]	@ (8002884 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002882:	4770      	bx	lr
 8002884:	0802671c 	.word	0x0802671c

08002888 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002888:	2001      	movs	r0, #1
 800288a:	4770      	bx	lr

0800288c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800288c:	b513      	push	{r0, r1, r4, lr}
 800288e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002890:	b151      	cbz	r1, 80028a8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002892:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002894:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002896:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800289a:	aa01      	add	r2, sp, #4
 800289c:	689c      	ldr	r4, [r3, #8]
 800289e:	f10d 0303 	add.w	r3, sp, #3
 80028a2:	47a0      	blx	r4
        return glyph;
    }
 80028a4:	b002      	add	sp, #8
 80028a6:	bd10      	pop	{r4, pc}
            return 0;
 80028a8:	4608      	mov	r0, r1
 80028aa:	e7fb      	b.n	80028a4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080028ac <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80028ac:	89c0      	ldrh	r0, [r0, #14]
 80028ae:	4770      	bx	lr

080028b0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80028b0:	8a00      	ldrh	r0, [r0, #16]
 80028b2:	4770      	bx	lr

080028b4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80028b4:	88c0      	ldrh	r0, [r0, #6]
 80028b6:	4770      	bx	lr

080028b8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80028b8:	8880      	ldrh	r0, [r0, #4]
 80028ba:	4770      	bx	lr

080028bc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80028bc:	7a80      	ldrb	r0, [r0, #10]
    }
 80028be:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 80028c2:	4770      	bx	lr

080028c4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80028c4:	7a80      	ldrb	r0, [r0, #10]
    }
 80028c6:	09c0      	lsrs	r0, r0, #7
 80028c8:	4770      	bx	lr

080028ca <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 80028ca:	2000      	movs	r0, #0
 80028cc:	4770      	bx	lr
	...

080028d0 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 80028d0:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80028d8 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 80028d4:	4770      	bx	lr
 80028d6:	bf00      	nop
 80028d8:	00000000 	.word	0x00000000

080028dc <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80028dc:	4770      	bx	lr

080028de <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80028de:	b510      	push	{r4, lr}
    }
 80028e0:	2108      	movs	r1, #8
    virtual ~TypedText()
 80028e2:	4604      	mov	r4, r0
    }
 80028e4:	f020 febf 	bl	8023666 <_ZdlPvj>
 80028e8:	4620      	mov	r0, r4
 80028ea:	bd10      	pop	{r4, pc}

080028ec <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80028ec:	4770      	bx	lr

080028ee <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80028ee:	4770      	bx	lr

080028f0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80028f0:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 80028f4:	6808      	ldr	r0, [r1, #0]
 80028f6:	6849      	ldr	r1, [r1, #4]
 80028f8:	c303      	stmia	r3!, {r0, r1}
    }
 80028fa:	4770      	bx	lr

080028fc <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80028fc:	4770      	bx	lr

080028fe <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80028fe:	4770      	bx	lr

08002900 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002900:	6041      	str	r1, [r0, #4]
    }
 8002902:	4770      	bx	lr

08002904 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002904:	4770      	bx	lr

08002906 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002906:	4770      	bx	lr

08002908 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8002908:	4b06      	ldr	r3, [pc, #24]	@ (8002924 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800290a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800290e:	2300      	movs	r3, #0
 8002910:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002914:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002918:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800291c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002920:	4770      	bx	lr
 8002922:	bf00      	nop
 8002924:	080029c9 	.word	0x080029c9

08002928 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002928:	2301      	movs	r3, #1
 800292a:	7203      	strb	r3, [r0, #8]
    }
 800292c:	4770      	bx	lr

0800292e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800292e:	4770      	bx	lr

08002930 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002930:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002932:	68c2      	ldr	r2, [r0, #12]
 8002934:	6841      	ldr	r1, [r0, #4]
 8002936:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002938:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800293a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800293e:	07d2      	lsls	r2, r2, #31
 8002940:	bf48      	it	mi
 8002942:	590a      	ldrmi	r2, [r1, r4]
 8002944:	689b      	ldr	r3, [r3, #8]
    }
 8002946:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800294a:	bf48      	it	mi
 800294c:	58d3      	ldrmi	r3, [r2, r3]
 800294e:	4718      	bx	r3

08002950 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002950:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002952:	6840      	ldr	r0, [r0, #4]
 8002954:	b130      	cbz	r0, 8002964 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002956:	689a      	ldr	r2, [r3, #8]
 8002958:	b91a      	cbnz	r2, 8002962 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 800295a:	68d8      	ldr	r0, [r3, #12]
 800295c:	f000 0001 	and.w	r0, r0, #1
 8002960:	4770      	bx	lr
 8002962:	2001      	movs	r0, #1
    }
 8002964:	4770      	bx	lr

08002966 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002966:	b510      	push	{r4, lr}
 8002968:	210c      	movs	r1, #12
 800296a:	4604      	mov	r4, r0
 800296c:	f020 fe7b 	bl	8023666 <_ZdlPvj>
 8002970:	4620      	mov	r0, r4
 8002972:	bd10      	pop	{r4, pc}

08002974 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002974:	b510      	push	{r4, lr}
 8002976:	2110      	movs	r1, #16
 8002978:	4604      	mov	r4, r0
 800297a:	f020 fe74 	bl	8023666 <_ZdlPvj>
 800297e:	4620      	mov	r0, r4
 8002980:	bd10      	pop	{r4, pc}

08002982 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002982:	b510      	push	{r4, lr}
 8002984:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002988:	4604      	mov	r4, r0
 800298a:	f020 fe6c 	bl	8023666 <_ZdlPvj>
 800298e:	4620      	mov	r0, r4
 8002990:	bd10      	pop	{r4, pc}

08002992 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002992:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002994:	f00e fbf8 	bl	8011188 <_ZN8touchgfx11Application11getInstanceEv>
 8002998:	6803      	ldr	r3, [r0, #0]
    }
 800299a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800299e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80029a0:	4718      	bx	r3

080029a2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80029a2:	b510      	push	{r4, lr}
 80029a4:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80029a6:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 80029aa:	b158      	cbz	r0, 80029c4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80029ac:	6803      	ldr	r3, [r0, #0]
 80029ae:	68db      	ldr	r3, [r3, #12]
 80029b0:	4798      	blx	r3
 80029b2:	b138      	cbz	r0, 80029c4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80029b4:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 80029b8:	6803      	ldr	r3, [r0, #0]
 80029ba:	689b      	ldr	r3, [r3, #8]
 80029bc:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80029be:	2300      	movs	r3, #0
 80029c0:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 80029c4:	bd10      	pop	{r4, pc}
	...

080029c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80029c8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80029cc:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80029d0:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80029d2:	68b0      	ldr	r0, [r6, #8]
 80029d4:	6803      	ldr	r3, [r0, #0]
 80029d6:	6a1b      	ldr	r3, [r3, #32]
 80029d8:	4798      	blx	r3
 80029da:	f5b0 6fcb 	cmp.w	r0, #1624	@ 0x658
 80029de:	d205      	bcs.n	80029ec <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80029e0:	4b44      	ldr	r3, [pc, #272]	@ (8002af4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 80029e2:	4a45      	ldr	r2, [pc, #276]	@ (8002af8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80029e4:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80029e6:	4845      	ldr	r0, [pc, #276]	@ (8002afc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80029e8:	f021 fd7a 	bl	80244e0 <__assert_func>
 80029ec:	6870      	ldr	r0, [r6, #4]
 80029ee:	6803      	ldr	r3, [r0, #0]
 80029f0:	6a1b      	ldr	r3, [r3, #32]
 80029f2:	4798      	blx	r3
 80029f4:	280f      	cmp	r0, #15
 80029f6:	d803      	bhi.n	8002a00 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 80029f8:	4b41      	ldr	r3, [pc, #260]	@ (8002b00 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80029fa:	4a3f      	ldr	r2, [pc, #252]	@ (8002af8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80029fc:	21a4      	movs	r1, #164	@ 0xa4
 80029fe:	e7f2      	b.n	80029e6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002a00:	68f0      	ldr	r0, [r6, #12]
 8002a02:	6803      	ldr	r3, [r0, #0]
 8002a04:	6a1b      	ldr	r3, [r3, #32]
 8002a06:	4798      	blx	r3
 8002a08:	280b      	cmp	r0, #11
 8002a0a:	d803      	bhi.n	8002a14 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002a0c:	4b3d      	ldr	r3, [pc, #244]	@ (8002b04 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002a0e:	4a3a      	ldr	r2, [pc, #232]	@ (8002af8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002a10:	21a5      	movs	r1, #165	@ 0xa5
 8002a12:	e7e8      	b.n	80029e6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002a14:	f00e fbb8 	bl	8011188 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002a18:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002b0c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002a1c:	3004      	adds	r0, #4
 8002a1e:	f00e fbd8 	bl	80111d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002a22:	f8d9 0000 	ldr.w	r0, [r9]
 8002a26:	b110      	cbz	r0, 8002a2e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002a28:	6803      	ldr	r3, [r0, #0]
 8002a2a:	68db      	ldr	r3, [r3, #12]
 8002a2c:	4798      	blx	r3
    if (*currentTrans)
 8002a2e:	f8d9 0000 	ldr.w	r0, [r9]
 8002a32:	b110      	cbz	r0, 8002a3a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002a34:	6803      	ldr	r3, [r0, #0]
 8002a36:	681b      	ldr	r3, [r3, #0]
 8002a38:	4798      	blx	r3
    if (*currentScreen)
 8002a3a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8002b10 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 8002a3e:	f8d8 0000 	ldr.w	r0, [r8]
 8002a42:	b110      	cbz	r0, 8002a4a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002a44:	6803      	ldr	r3, [r0, #0]
 8002a46:	695b      	ldr	r3, [r3, #20]
 8002a48:	4798      	blx	r3
    if (*currentPresenter)
 8002a4a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002a4e:	b110      	cbz	r0, 8002a56 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002a50:	6803      	ldr	r3, [r0, #0]
 8002a52:	685b      	ldr	r3, [r3, #4]
 8002a54:	4798      	blx	r3
    if (*currentScreen)
 8002a56:	f8d8 0000 	ldr.w	r0, [r8]
 8002a5a:	b110      	cbz	r0, 8002a62 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002a5c:	6803      	ldr	r3, [r0, #0]
 8002a5e:	681b      	ldr	r3, [r3, #0]
 8002a60:	4798      	blx	r3
    if (*currentPresenter)
 8002a62:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002a66:	b110      	cbz	r0, 8002a6e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002a68:	6803      	ldr	r3, [r0, #0]
 8002a6a:	689b      	ldr	r3, [r3, #8]
 8002a6c:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002a6e:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002a70:	6803      	ldr	r3, [r0, #0]
 8002a72:	2100      	movs	r1, #0
 8002a74:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a76:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002a78:	f04f 0b00 	mov.w	fp, #0
 8002a7c:	4b22      	ldr	r3, [pc, #136]	@ (8002b08 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002a7e:	f8c0 b004 	str.w	fp, [r0, #4]
 8002a82:	4604      	mov	r4, r0
 8002a84:	f880 b008 	strb.w	fp, [r0, #8]
 8002a88:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002a8a:	68b0      	ldr	r0, [r6, #8]
 8002a8c:	6803      	ldr	r3, [r0, #0]
 8002a8e:	4659      	mov	r1, fp
 8002a90:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a92:	4798      	blx	r3
 8002a94:	4605      	mov	r5, r0
 8002a96:	f001 f925 	bl	8003ce4 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002a9a:	6870      	ldr	r0, [r6, #4]
 8002a9c:	6803      	ldr	r3, [r0, #0]
 8002a9e:	4659      	mov	r1, fp
 8002aa0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002aa2:	4798      	blx	r3
 8002aa4:	4629      	mov	r1, r5
 8002aa6:	4606      	mov	r6, r0
 8002aa8:	f001 f89e 	bl	8003be8 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002aac:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002aae:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002ab2:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002ab6:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002aba:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002abe:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002ac0:	f8c6 a008 	str.w	sl, [r6, #8]
 8002ac4:	4628      	mov	r0, r5
 8002ac6:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002ac8:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002aca:	4798      	blx	r3
    newPresenter->activate();
 8002acc:	6833      	ldr	r3, [r6, #0]
 8002ace:	4630      	mov	r0, r6
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002ad4:	4621      	mov	r1, r4
 8002ad6:	4628      	mov	r0, r5
 8002ad8:	f010 fd06 	bl	80134e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002adc:	6823      	ldr	r3, [r4, #0]
 8002ade:	4620      	mov	r0, r4
 8002ae0:	691b      	ldr	r3, [r3, #16]
 8002ae2:	4798      	blx	r3
    newTransition->invalidate();
 8002ae4:	6823      	ldr	r3, [r4, #0]
 8002ae6:	695b      	ldr	r3, [r3, #20]
 8002ae8:	4620      	mov	r0, r4
}
 8002aea:	b001      	add	sp, #4
 8002aec:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002af0:	4718      	bx	r3
 8002af2:	bf00      	nop
 8002af4:	08025e85 	.word	0x08025e85
 8002af8:	08025f13 	.word	0x08025f13
 8002afc:	08025fe5 	.word	0x08025fe5
 8002b00:	0802602c 	.word	0x0802602c
 8002b04:	080260cf 	.word	0x080260cf
 8002b08:	080267b4 	.word	0x080267b4
 8002b0c:	20013bb4 	.word	0x20013bb4
 8002b10:	20013bb0 	.word	0x20013bb0

08002b14 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002b14:	4b04      	ldr	r3, [pc, #16]	@ (8002b28 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002b1c:	b10a      	cbz	r2, 8002b22 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002b1e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8002b20:	b900      	cbnz	r0, 8002b24 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002b22:	6898      	ldr	r0, [r3, #8]
    }
 8002b24:	4770      	bx	lr
 8002b26:	bf00      	nop
 8002b28:	20013b6c 	.word	0x20013b6c

08002b2c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002b2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b2e:	4617      	mov	r7, r2
 8002b30:	4604      	mov	r4, r0
 8002b32:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002b34:	f00e fbea 	bl	801130c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002b38:	4b12      	ldr	r3, [pc, #72]	@ (8002b84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002b3a:	601c      	str	r4, [r3, #0]
      model(m)
 8002b3c:	4b12      	ldr	r3, [pc, #72]	@ (8002b88 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002b3e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002b40:	4b12      	ldr	r3, [pc, #72]	@ (8002b8c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
        : currentPresenter(0),
 8002b42:	2500      	movs	r5, #0
 8002b44:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 8002b48:	4b11      	ldr	r3, [pc, #68]	@ (8002b90 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8002b4a:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 8002b4e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002b50:	6803      	ldr	r3, [r0, #0]
 8002b52:	2101      	movs	r1, #1
 8002b54:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002b56:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 8002b5a:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002b5e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002b60:	4628      	mov	r0, r5
 8002b62:	f000 ffa7 	bl	8003ab4 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002b66:	f7ff ffd5 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 8002b6a:	f018 fc98 	bl	801b49e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002b6e:	f7ff ffd1 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 8002b72:	f018 fd0f 	bl	801b594 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8002b76:	f7ff ffcd 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 8002b7a:	f018 fd17 	bl	801b5ac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8002b7e:	4620      	mov	r0, r4
 8002b80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002b82:	bf00      	nop
 8002b84:	20013bc0 	.word	0x20013bc0
 8002b88:	08026760 	.word	0x08026760
 8002b8c:	08026748 	.word	0x08026748
 8002b90:	20013b6c 	.word	0x20013b6c

08002b94 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002b94:	4b06      	ldr	r3, [pc, #24]	@ (8002bb0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002b96:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002b9a:	2300      	movs	r3, #0
 8002b9c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002ba0:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002ba4:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002ba8:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002bac:	4770      	bx	lr
 8002bae:	bf00      	nop
 8002bb0:	080029c9 	.word	0x080029c9

08002bb4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002bb4:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002bb6:	4770      	bx	lr

08002bb8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002bb8:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002bba:	4770      	bx	lr

08002bbc <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002bbc:	4770      	bx	lr

08002bbe <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002bbe:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 8002bc0:	880b      	ldrh	r3, [r1, #0]
{
 8002bc2:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002bc4:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 8002bc6:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002bc8:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 8002bca:	b29b      	uxth	r3, r3
    return pixels + offset;
 8002bcc:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 8002bd0:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 8002bd4:	4418      	add	r0, r3
 8002bd6:	bd10      	pop	{r4, pc}

08002bd8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002bd8:	b510      	push	{r4, lr}
 8002bda:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8002bdc:	b1ba      	cbz	r2, 8002c0e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002bde:	7b10      	ldrb	r0, [r2, #12]
 8002be0:	b168      	cbz	r0, 8002bfe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002be2:	7b53      	ldrb	r3, [r2, #13]
 8002be4:	7ad2      	ldrb	r2, [r2, #11]
 8002be6:	021b      	lsls	r3, r3, #8
 8002be8:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002bec:	431a      	orrs	r2, r3
 8002bee:	6a23      	ldr	r3, [r4, #32]
 8002bf0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002bf4:	881a      	ldrh	r2, [r3, #0]
 8002bf6:	428a      	cmp	r2, r1
 8002bf8:	d102      	bne.n	8002c00 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002bfa:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8002bfe:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002c00:	d805      	bhi.n	8002c0e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002c02:	3801      	subs	r0, #1
 8002c04:	b280      	uxth	r0, r0
 8002c06:	3304      	adds	r3, #4
 8002c08:	2800      	cmp	r0, #0
 8002c0a:	d1f3      	bne.n	8002bf4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002c0c:	e7f7      	b.n	8002bfe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002c0e:	2000      	movs	r0, #0
 8002c10:	e7f5      	b.n	8002bfe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002c12 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002c12:	b510      	push	{r4, lr}
 8002c14:	212c      	movs	r1, #44	@ 0x2c
 8002c16:	4604      	mov	r4, r0
 8002c18:	f020 fd25 	bl	8023666 <_ZdlPvj>
 8002c1c:	4620      	mov	r0, r4
 8002c1e:	bd10      	pop	{r4, pc}

08002c20 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002c20:	b530      	push	{r4, r5, lr}
 8002c22:	b08b      	sub	sp, #44	@ 0x2c
 8002c24:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002c26:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8002c2a:	9508      	str	r5, [sp, #32]
 8002c2c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8002c30:	9507      	str	r5, [sp, #28]
 8002c32:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8002c36:	9506      	str	r5, [sp, #24]
 8002c38:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8002c3c:	9505      	str	r5, [sp, #20]
 8002c3e:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8002c42:	9504      	str	r5, [sp, #16]
 8002c44:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8002c48:	9503      	str	r5, [sp, #12]
 8002c4a:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8002c4e:	9502      	str	r5, [sp, #8]
 8002c50:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8002c54:	9501      	str	r5, [sp, #4]
 8002c56:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8002c5a:	9500      	str	r5, [sp, #0]
 8002c5c:	f010 f89e 	bl	8012d9c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8002c60:	4b06      	ldr	r3, [pc, #24]	@ (8002c7c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8002c62:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002c64:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002c66:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002c68:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002c6a:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8002c6c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002c6e:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8002c70:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8002c72:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8002c74:	4620      	mov	r0, r4
 8002c76:	b00b      	add	sp, #44	@ 0x2c
 8002c78:	bd30      	pop	{r4, r5, pc}
 8002c7a:	bf00      	nop
 8002c7c:	080267d8 	.word	0x080267d8

08002c80 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002c80:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002c82:	4770      	bx	lr

08002c84 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002c84:	4770      	bx	lr

08002c86 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002c86:	4770      	bx	lr

08002c88 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002c88:	4770      	bx	lr

08002c8a <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002c8a:	4770      	bx	lr

08002c8c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002c8c:	4770      	bx	lr

08002c8e <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>:
    GenericCallback<const AbstractButtonContainer&>* action; ///< The action to be executed

    /** Handles what should happen when the pressed state is updated. */
    virtual void handlePressedUpdated()
    {
    }
 8002c8e:	4770      	bx	lr

08002c90 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>:

    /** Handles what should happen when the alpha is updated. */
    virtual void handleAlphaUpdated()
    {
    }
 8002c90:	4770      	bx	lr

08002c92 <_ZN8touchgfx23AbstractButtonContainerD1Ev>:
class AbstractButtonContainer : public Container
 8002c92:	4770      	bx	lr

08002c94 <_ZN15Screen1ViewBase15btnUpSenClickedEv>:
     * Virtual Action Handlers
     */
    virtual void btnUpSenClicked()
    {
        // Override and implement this function in Screen1
    }
 8002c94:	4770      	bx	lr

08002c96 <_ZN15Screen1ViewBase17btnDownSenClickedEv>:
    virtual void btnDownSenClicked()
    {
        // Override and implement this function in Screen1
    }
 8002c96:	4770      	bx	lr

08002c98 <_ZN15Screen1ViewBase20btnDownScrollClickedEv>:
    virtual void btnDownScrollClicked()
    {
        // Override and implement this function in Screen1
    }
 8002c98:	4770      	bx	lr

08002c9a <_ZN15Screen1ViewBase18btnUpScrollClickedEv>:
    virtual void btnUpScrollClicked()
    {
        // Override and implement this function in Screen1
    }
 8002c9a:	4770      	bx	lr

08002c9c <_ZN15Screen1ViewBase15recMacroClickedEv>:
    virtual void recMacroClicked()
    {
        // Override and implement this function in Screen1
    }
 8002c9c:	4770      	bx	lr

08002c9e <_ZN15Screen1ViewBase16playMacroClickedEv>:
    virtual void playMacroClicked()
    {
        // Override and implement this function in Screen1
    }
 8002c9e:	4770      	bx	lr

08002ca0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8002ca0:	4770      	bx	lr

08002ca2 <_ZN8touchgfx9DraggableINS_13ClickListenerINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEEEED1Ev>:
 * can be freely moved around using the touch screen.
 *
 * @tparam T specifies the type to extend with the Draggable behavior.
 */
template <class T>
class Draggable : public T
 8002ca2:	4770      	bx	lr

08002ca4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 8002ca4:	4770      	bx	lr

08002ca6 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * receives a click event.
 *
 * @tparam T specifies the type to extend with the ClickListener behavior.
 */
template <class T>
class ClickListener : public T
 8002ca6:	4770      	bx	lr

08002ca8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEED1Ev>:
 8002ca8:	4770      	bx	lr

08002caa <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEEEED1Ev>:
 8002caa:	4770      	bx	lr

08002cac <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002cac:	4770      	bx	lr

08002cae <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 8002cae:	4770      	bx	lr

08002cb0 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 8002cb0:	4770      	bx	lr

08002cb2 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &upSen)
 8002cb2:	f500 73d2 	add.w	r3, r0, #420	@ 0x1a4
 8002cb6:	4299      	cmp	r1, r3
{
 8002cb8:	b570      	push	{r4, r5, r6, lr}
 8002cba:	4604      	mov	r4, r0
 8002cbc:	460d      	mov	r5, r1
    if (&src == &upSen)
 8002cbe:	d102      	bne.n	8002cc6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    {
        //Interaction1
        //When upSen clicked call virtual function
        //Call btnUpSenClicked
        btnUpSenClicked();
 8002cc0:	6803      	ldr	r3, [r0, #0]
 8002cc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002cc4:	4798      	blx	r3
    }
    if (&src == &downSen)
 8002cc6:	f504 731a 	add.w	r3, r4, #616	@ 0x268
 8002cca:	429d      	cmp	r5, r3
 8002ccc:	d103      	bne.n	8002cd6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
    {
        //Interaction2
        //When downSen clicked call virtual function
        //Call btnDownSenClicked
        btnDownSenClicked();
 8002cce:	6823      	ldr	r3, [r4, #0]
 8002cd0:	4620      	mov	r0, r4
 8002cd2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002cd4:	4798      	blx	r3
    }
    if (&src == &downScroll)
 8002cd6:	f504 734b 	add.w	r3, r4, #812	@ 0x32c
 8002cda:	429d      	cmp	r5, r3
 8002cdc:	d103      	bne.n	8002ce6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x34>
    {
        //Interaction3
        //When downScroll clicked call virtual function
        //Call btnDownScrollClicked
        btnDownScrollClicked();
 8002cde:	6823      	ldr	r3, [r4, #0]
 8002ce0:	4620      	mov	r0, r4
 8002ce2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002ce4:	4798      	blx	r3
    }
    if (&src == &upScroll)
 8002ce6:	f504 737c 	add.w	r3, r4, #1008	@ 0x3f0
 8002cea:	429d      	cmp	r5, r3
 8002cec:	d103      	bne.n	8002cf6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x44>
    {
        //Interaction4
        //When upScroll clicked call virtual function
        //Call btnUpScrollClicked
        btnUpScrollClicked();
 8002cee:	6823      	ldr	r3, [r4, #0]
 8002cf0:	4620      	mov	r0, r4
 8002cf2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002cf4:	4798      	blx	r3
    }
    if (&src == &recMacro)
 8002cf6:	f204 43b4 	addw	r3, r4, #1204	@ 0x4b4
 8002cfa:	429d      	cmp	r5, r3
 8002cfc:	d103      	bne.n	8002d06 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x54>
    {
        //Interaction5
        //When recMacro clicked call virtual function
        //Call recMacroClicked
        recMacroClicked();
 8002cfe:	6823      	ldr	r3, [r4, #0]
 8002d00:	4620      	mov	r0, r4
 8002d02:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002d04:	4798      	blx	r3
    }
    if (&src == &playMacro)
 8002d06:	f204 537c 	addw	r3, r4, #1404	@ 0x57c
 8002d0a:	429d      	cmp	r5, r3
 8002d0c:	d105      	bne.n	8002d1a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x68>
    {
        //Interaction6
        //When playMacro clicked call virtual function
        //Call playMacroClicked
        playMacroClicked();
 8002d0e:	6823      	ldr	r3, [r4, #0]
 8002d10:	4620      	mov	r0, r4
 8002d12:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
    }
}
 8002d14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        playMacroClicked();
 8002d18:	4718      	bx	r3
}
 8002d1a:	bd70      	pop	{r4, r5, r6, pc}

08002d1c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv>:
        return pressed;
 8002d1c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002d20:	b14b      	cbz	r3, 8002d36 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002d22:	f100 026c 	add.w	r2, r0, #108	@ 0x6c
 8002d26:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002d28:	65c2      	str	r2, [r0, #92]	@ 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002d2a:	b13b      	cbz	r3, 8002d3c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002d2c:	f100 0374 	add.w	r3, r0, #116	@ 0x74
 8002d30:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002d32:	6603      	str	r3, [r0, #96]	@ 0x60
        T::handlePressedUpdated();
    }
 8002d34:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002d36:	f100 0268 	add.w	r2, r0, #104	@ 0x68
 8002d3a:	e7f4      	b.n	8002d26 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002d3c:	f100 0370 	add.w	r3, r0, #112	@ 0x70
 8002d40:	e7f6      	b.n	8002d30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002d42 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
 8002d42:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
        borderBox.setColor(T::getPressed() ? down : up);
 8002d46:	b14b      	cbz	r3, 8002d5c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002d48:	f100 026c 	add.w	r2, r0, #108	@ 0x6c
 8002d4c:	6812      	ldr	r2, [r2, #0]
 8002d4e:	65c2      	str	r2, [r0, #92]	@ 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002d50:	b13b      	cbz	r3, 8002d62 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002d52:	f100 0374 	add.w	r3, r0, #116	@ 0x74
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	6603      	str	r3, [r0, #96]	@ 0x60
    }
 8002d5a:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002d5c:	f100 0268 	add.w	r2, r0, #104	@ 0x68
 8002d60:	e7f4      	b.n	8002d4c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002d62:	f100 0370 	add.w	r3, r0, #112	@ 0x70
 8002d66:	e7f6      	b.n	8002d56 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002d68 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEE20handlePressedUpdatedEv>:
 8002d68:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
        borderBox.setColor(T::getPressed() ? down : up);
 8002d6c:	b14b      	cbz	r3, 8002d82 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002d6e:	f100 0270 	add.w	r2, r0, #112	@ 0x70
 8002d72:	6812      	ldr	r2, [r2, #0]
 8002d74:	6602      	str	r2, [r0, #96]	@ 0x60
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002d76:	b13b      	cbz	r3, 8002d88 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002d78:	f100 0378 	add.w	r3, r0, #120	@ 0x78
 8002d7c:	681b      	ldr	r3, [r3, #0]
 8002d7e:	6643      	str	r3, [r0, #100]	@ 0x64
    }
 8002d80:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002d82:	f100 026c 	add.w	r2, r0, #108	@ 0x6c
 8002d86:	e7f4      	b.n	8002d72 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002d88:	f100 0374 	add.w	r3, r0, #116	@ 0x74
 8002d8c:	e7f6      	b.n	8002d7c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002d8e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002d8e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002d90:	68c2      	ldr	r2, [r0, #12]
 8002d92:	6844      	ldr	r4, [r0, #4]
 8002d94:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002d96:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002d98:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002d9c:	07d2      	lsls	r2, r2, #31
 8002d9e:	bf48      	it	mi
 8002da0:	5962      	ldrmi	r2, [r4, r5]
 8002da2:	689b      	ldr	r3, [r3, #8]
    }
 8002da4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002da6:	bf48      	it	mi
 8002da8:	58d3      	ldrmi	r3, [r2, r3]
 8002daa:	4718      	bx	r3

08002dac <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8002dac:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8002dae:	6840      	ldr	r0, [r0, #4]
 8002db0:	b130      	cbz	r0, 8002dc0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002db2:	689a      	ldr	r2, [r3, #8]
 8002db4:	b91a      	cbnz	r2, 8002dbe <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8002db6:	68d8      	ldr	r0, [r3, #12]
 8002db8:	f000 0001 	and.w	r0, r0, #1
 8002dbc:	4770      	bx	lr
 8002dbe:	2001      	movs	r0, #1
    }
 8002dc0:	4770      	bx	lr

08002dc2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002dc2:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
 8002dc6:	f880 305e 	strb.w	r3, [r0, #94]	@ 0x5e
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002dca:	4770      	bx	lr

08002dcc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002dcc:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
 8002dd0:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
 8002dd4:	4770      	bx	lr

08002dd6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE18handleAlphaUpdatedEv>:
 8002dd6:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
 8002dda:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
 8002dde:	4770      	bx	lr

08002de0 <_ZN8touchgfx23AbstractButtonContainerD0Ev>:
class AbstractButtonContainer : public Container
 8002de0:	b510      	push	{r4, lr}
 8002de2:	2134      	movs	r1, #52	@ 0x34
 8002de4:	4604      	mov	r4, r0
 8002de6:	f020 fc3e 	bl	8023666 <_ZdlPvj>
 8002dea:	4620      	mov	r0, r4
 8002dec:	bd10      	pop	{r4, pc}

08002dee <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002dee:	b510      	push	{r4, lr}
 8002df0:	2178      	movs	r1, #120	@ 0x78
 8002df2:	4604      	mov	r4, r0
 8002df4:	f020 fc37 	bl	8023666 <_ZdlPvj>
 8002df8:	4620      	mov	r0, r4
 8002dfa:	bd10      	pop	{r4, pc}

08002dfc <_ZN8touchgfx9DraggableINS_13ClickListenerINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEEEED0Ev>:
 8002dfc:	b510      	push	{r4, lr}
 8002dfe:	217c      	movs	r1, #124	@ 0x7c
 8002e00:	4604      	mov	r4, r0
 8002e02:	f020 fc30 	bl	8023666 <_ZdlPvj>
 8002e06:	4620      	mov	r0, r4
 8002e08:	bd10      	pop	{r4, pc}

08002e0a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
 8002e0a:	b510      	push	{r4, lr}
 8002e0c:	2178      	movs	r1, #120	@ 0x78
 8002e0e:	4604      	mov	r4, r0
 8002e10:	f020 fc29 	bl	8023666 <_ZdlPvj>
 8002e14:	4620      	mov	r0, r4
 8002e16:	bd10      	pop	{r4, pc}

08002e18 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
 8002e18:	b510      	push	{r4, lr}
 8002e1a:	217c      	movs	r1, #124	@ 0x7c
 8002e1c:	4604      	mov	r4, r0
 8002e1e:	f020 fc22 	bl	8023666 <_ZdlPvj>
 8002e22:	4620      	mov	r0, r4
 8002e24:	bd10      	pop	{r4, pc}

08002e26 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEED0Ev>:
 8002e26:	b510      	push	{r4, lr}
 8002e28:	217c      	movs	r1, #124	@ 0x7c
 8002e2a:	4604      	mov	r4, r0
 8002e2c:	f020 fc1b 	bl	8023666 <_ZdlPvj>
 8002e30:	4620      	mov	r0, r4
 8002e32:	bd10      	pop	{r4, pc}

08002e34 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEEEED0Ev>:
 8002e34:	b510      	push	{r4, lr}
 8002e36:	2180      	movs	r1, #128	@ 0x80
 8002e38:	4604      	mov	r4, r0
 8002e3a:	f020 fc14 	bl	8023666 <_ZdlPvj>
 8002e3e:	4620      	mov	r0, r4
 8002e40:	bd10      	pop	{r4, pc}

08002e42 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002e42:	b510      	push	{r4, lr}
 8002e44:	2110      	movs	r1, #16
 8002e46:	4604      	mov	r4, r0
 8002e48:	f020 fc0d 	bl	8023666 <_ZdlPvj>
 8002e4c:	4620      	mov	r0, r4
 8002e4e:	bd10      	pop	{r4, pc}

08002e50 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8002e50:	b510      	push	{r4, lr}
}
 8002e52:	f240 6154 	movw	r1, #1620	@ 0x654
Screen1ViewBase::~Screen1ViewBase()
 8002e56:	4604      	mov	r4, r0
}
 8002e58:	f020 fc05 	bl	8023666 <_ZdlPvj>
 8002e5c:	4620      	mov	r0, r4
 8002e5e:	bd10      	pop	{r4, pc}

08002e60 <_ZN8touchgfx9DraggableINS_13ClickListenerINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEEEE15handleDragEventERKNS_9DragEventE>:
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragNewY - dragOldY;
 8002e60:	890b      	ldrh	r3, [r1, #8]
 8002e62:	898a      	ldrh	r2, [r1, #12]
 8002e64:	1ad2      	subs	r2, r2, r3
        return dragNewX - dragOldX;
 8002e66:	894b      	ldrh	r3, [r1, #10]
 8002e68:	88c9      	ldrh	r1, [r1, #6]
 8002e6a:	1a59      	subs	r1, r3, r1
     * @param  event The drag event.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        T::handleDragEvent(event);
        T::moveRelative(event.getDeltaX(), event.getDeltaY());
 8002e6c:	b212      	sxth	r2, r2
 8002e6e:	b209      	sxth	r1, r1
 8002e70:	f00f bbbe 	b.w	80125f0 <_ZN8touchgfx8Drawable12moveRelativeEss>

08002e74 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    virtual void executeAction()
 8002e74:	b510      	push	{r4, lr}
 8002e76:	4604      	mov	r4, r0
        if (action && action->isValid())
 8002e78:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8002e7a:	b150      	cbz	r0, 8002e92 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002e7c:	6803      	ldr	r3, [r0, #0]
 8002e7e:	68db      	ldr	r3, [r3, #12]
 8002e80:	4798      	blx	r3
 8002e82:	b130      	cbz	r0, 8002e92 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
            action->execute(*this);
 8002e84:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8002e86:	6803      	ldr	r3, [r0, #0]
 8002e88:	4621      	mov	r1, r4
 8002e8a:	689b      	ldr	r3, [r3, #8]
    }
 8002e8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002e90:	4718      	bx	r3
    }
 8002e92:	bd10      	pop	{r4, pc}

08002e94 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8002e94:	4a07      	ldr	r2, [pc, #28]	@ (8002eb4 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 8002e96:	6002      	str	r2, [r0, #0]
 8002e98:	2200      	movs	r2, #0
 8002e9a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002e9e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002ea2:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002ea6:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002eaa:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8002eae:	8482      	strh	r2, [r0, #36]	@ 0x24
    }
 8002eb0:	4770      	bx	lr
 8002eb2:	bf00      	nop
 8002eb4:	08027610 	.word	0x08027610

08002eb8 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002eb8:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002eba:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002ebc:	4604      	mov	r4, r0
        setX(x);
 8002ebe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8002ec0:	4615      	mov	r5, r2
        setX(x);
 8002ec2:	4798      	blx	r3
        setY(y);
 8002ec4:	6823      	ldr	r3, [r4, #0]
 8002ec6:	4629      	mov	r1, r5
 8002ec8:	4620      	mov	r0, r4
 8002eca:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 8002ecc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002ed0:	4718      	bx	r3

08002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002ed2:	b570      	push	{r4, r5, r6, lr}
 8002ed4:	4604      	mov	r4, r0
 8002ed6:	461d      	mov	r5, r3
 8002ed8:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002edc:	f7ff ffec 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002ee0:	6823      	ldr	r3, [r4, #0]
 8002ee2:	4629      	mov	r1, r5
 8002ee4:	4620      	mov	r0, r4
 8002ee6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002ee8:	4798      	blx	r3
        setHeight(height);
 8002eea:	6823      	ldr	r3, [r4, #0]
 8002eec:	4631      	mov	r1, r6
 8002eee:	4620      	mov	r0, r4
 8002ef0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8002ef2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002ef6:	4718      	bx	r3

08002ef8 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002ef8:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002efa:	2226      	movs	r2, #38	@ 0x26
    Box()
 8002efc:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002efe:	2100      	movs	r1, #0
 8002f00:	f021 fd2b 	bl	802495a <memset>
class Widget : public Drawable
 8002f04:	4620      	mov	r0, r4
 8002f06:	f7ff ffc5 	bl	8002e94 <_ZN8touchgfx8DrawableC1Ev>
 8002f0a:	4b04      	ldr	r3, [pc, #16]	@ (8002f1c <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002f0c:	6023      	str	r3, [r4, #0]
 8002f0e:	23ff      	movs	r3, #255	@ 0xff
 8002f10:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
        : color(col)
 8002f14:	2300      	movs	r3, #0
 8002f16:	62a3      	str	r3, [r4, #40]	@ 0x28
    }
 8002f18:	4620      	mov	r0, r4
 8002f1a:	bd10      	pop	{r4, pc}
 8002f1c:	080274dc 	.word	0x080274dc

08002f20 <_ZN8touchgfx23AbstractButtonContainerC1Ev>:
    AbstractButtonContainer()
 8002f20:	b510      	push	{r4, lr}
 8002f22:	4604      	mov	r4, r0
          firstChild(0)
 8002f24:	f7ff ffb6 	bl	8002e94 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 8002f28:	4b06      	ldr	r3, [pc, #24]	@ (8002f44 <_ZN8touchgfx23AbstractButtonContainerC1Ev+0x24>)
 8002f2a:	6023      	str	r3, [r4, #0]
 8002f2c:	f44f 427f 	mov.w	r2, #65280	@ 0xff00
 8002f30:	2300      	movs	r3, #0
 8002f32:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002f34:	6323      	str	r3, [r4, #48]	@ 0x30
 8002f36:	85a2      	strh	r2, [r4, #44]	@ 0x2c
        touchable = touch;
 8002f38:	2301      	movs	r3, #1
 8002f3a:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
    }
 8002f3e:	4620      	mov	r0, r4
 8002f40:	bd10      	pop	{r4, pc}
 8002f42:	bf00      	nop
 8002f44:	08026840 	.word	0x08026840

08002f48 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>:
        handlePressedUpdated();
 8002f48:	6803      	ldr	r3, [r0, #0]
        pressed = isPressed;
 8002f4a:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
        handlePressedUpdated();
 8002f4e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8002f52:	4718      	bx	r3

08002f54 <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002f54:	b570      	push	{r4, r5, r6, lr}
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002f56:	790d      	ldrb	r5, [r1, #4]
        return pressed;
 8002f58:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8002f5c:	4604      	mov	r4, r0
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002f5e:	b93d      	cbnz	r5, 8002f70 <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1c>
 8002f60:	b13b      	cbz	r3, 8002f72 <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            setPressed(newPressedValue);
            invalidate();
        }
        if (newPressedValue)
        {
            executeAction();
 8002f62:	6823      	ldr	r3, [r4, #0]
 8002f64:	4620      	mov	r0, r4
 8002f66:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
        }
    }
 8002f6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002f6e:	4718      	bx	r3
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002f70:	b15b      	cbz	r3, 8002f8a <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
            setPressed(newPressedValue);
 8002f72:	fab5 f185 	clz	r1, r5
 8002f76:	4620      	mov	r0, r4
 8002f78:	0949      	lsrs	r1, r1, #5
 8002f7a:	f7ff ffe5 	bl	8002f48 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 8002f7e:	6823      	ldr	r3, [r4, #0]
 8002f80:	4620      	mov	r0, r4
 8002f82:	695b      	ldr	r3, [r3, #20]
 8002f84:	4798      	blx	r3
        if (newPressedValue)
 8002f86:	2d00      	cmp	r5, #0
 8002f88:	d0eb      	beq.n	8002f62 <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE+0xe>
    }
 8002f8a:	bd70      	pop	{r4, r5, r6, pc}

08002f8c <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE16handleClickEventERKNS_10ClickEventE>:
     * Ensures that the clickEvent is propagated to the super class T and to the clickAction
     * listener.
     *
     * @param  event Information about the click.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002f8c:	b570      	push	{r4, r5, r6, lr}
 8002f8e:	4604      	mov	r4, r0
 8002f90:	460d      	mov	r5, r1
    {
        T::handleClickEvent(event);
 8002f92:	f7ff ffdf 	bl	8002f54 <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE>
        if (clickAction && clickAction->isValid())
 8002f96:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
 8002f98:	b158      	cbz	r0, 8002fb2 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE16handleClickEventERKNS_10ClickEventE+0x26>
 8002f9a:	6803      	ldr	r3, [r0, #0]
 8002f9c:	68db      	ldr	r3, [r3, #12]
 8002f9e:	4798      	blx	r3
 8002fa0:	b138      	cbz	r0, 8002fb2 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEEE16handleClickEventERKNS_10ClickEventE+0x26>
        {
            clickAction->execute(*this, event);
 8002fa2:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
 8002fa4:	6803      	ldr	r3, [r0, #0]
 8002fa6:	462a      	mov	r2, r5
 8002fa8:	4621      	mov	r1, r4
 8002faa:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002fac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            clickAction->execute(*this, event);
 8002fb0:	4718      	bx	r3
    }
 8002fb2:	bd70      	pop	{r4, r5, r6, pc}

08002fb4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002fb4:	b570      	push	{r4, r5, r6, lr}
 8002fb6:	460d      	mov	r5, r1
 8002fb8:	7909      	ldrb	r1, [r1, #4]
 8002fba:	f890 602c 	ldrb.w	r6, [r0, #44]	@ 0x2c
 8002fbe:	4604      	mov	r4, r0
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002fc0:	b909      	cbnz	r1, 8002fc6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x12>
 8002fc2:	b116      	cbz	r6, 8002fca <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
        {
            executeAction();
        }
    }
 8002fc4:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002fc6:	2e00      	cmp	r6, #0
 8002fc8:	d0fc      	beq.n	8002fc4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            setPressed(newPressedValue);
 8002fca:	fab1 f181 	clz	r1, r1
 8002fce:	4620      	mov	r0, r4
 8002fd0:	0949      	lsrs	r1, r1, #5
 8002fd2:	f7ff ffb9 	bl	8002f48 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 8002fd6:	6823      	ldr	r3, [r4, #0]
 8002fd8:	4620      	mov	r0, r4
 8002fda:	695b      	ldr	r3, [r3, #20]
 8002fdc:	4798      	blx	r3
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002fde:	2e00      	cmp	r6, #0
 8002fe0:	d0f0      	beq.n	8002fc4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
 8002fe2:	792b      	ldrb	r3, [r5, #4]
 8002fe4:	2b01      	cmp	r3, #1
 8002fe6:	d1ed      	bne.n	8002fc4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002fe8:	6823      	ldr	r3, [r4, #0]
 8002fea:	4620      	mov	r0, r4
 8002fec:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    }
 8002ff0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002ff4:	4718      	bx	r3

08002ff6 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE16handleClickEventERKNS_10ClickEventE>:
    virtual void handleClickEvent(const ClickEvent& event)
 8002ff6:	b570      	push	{r4, r5, r6, lr}
 8002ff8:	4604      	mov	r4, r0
 8002ffa:	460d      	mov	r5, r1
        T::handleClickEvent(event);
 8002ffc:	f7ff ffda 	bl	8002fb4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>
        if (clickAction && clickAction->isValid())
 8003000:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
 8003002:	b158      	cbz	r0, 800301c <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE16handleClickEventERKNS_10ClickEventE+0x26>
 8003004:	6803      	ldr	r3, [r0, #0]
 8003006:	68db      	ldr	r3, [r3, #12]
 8003008:	4798      	blx	r3
 800300a:	b138      	cbz	r0, 800301c <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE16handleClickEventERKNS_10ClickEventE+0x26>
            clickAction->execute(*this, event);
 800300c:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
 800300e:	6803      	ldr	r3, [r0, #0]
 8003010:	462a      	mov	r2, r5
 8003012:	4621      	mov	r1, r4
 8003014:	689b      	ldr	r3, [r3, #8]
    }
 8003016:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            clickAction->execute(*this, event);
 800301a:	4718      	bx	r3
    }
 800301c:	bd70      	pop	{r4, r5, r6, pc}

0800301e <_ZN8touchgfx19ToggleButtonTrigger16handleClickEventERKNS_10ClickEventE>:
    bool getToggleCanceled()
    {
        return toggleCanceled;
    }

    virtual void handleClickEvent(const ClickEvent& event)
 800301e:	b570      	push	{r4, r5, r6, lr}
 8003020:	460d      	mov	r5, r1
        return toggleCanceled;
 8003022:	f890 3034 	ldrb.w	r3, [r0, #52]	@ 0x34
 8003026:	792a      	ldrb	r2, [r5, #4]
 8003028:	f890 102c 	ldrb.w	r1, [r0, #44]	@ 0x2c
    {
        bool wasPressed = getPressed();
        bool newPressedValue = !getPressed();
        bool toggleCanceled = getToggleCanceled();
        setToggleCanceled(event.getType() == ClickEvent::CANCEL);
 800302c:	f1a2 0c02 	sub.w	ip, r2, #2
 8003030:	f1dc 0600 	rsbs	r6, ip, #0
 8003034:	eb46 060c 	adc.w	r6, r6, ip

        if (((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed)) && (event.getType() != ClickEvent::RELEASED) && !toggleCanceled)
 8003038:	2a01      	cmp	r2, #1
    virtual void handleClickEvent(const ClickEvent& event)
 800303a:	4604      	mov	r4, r0
        setToggleCanceled(event.getType() == ClickEvent::CANCEL);
 800303c:	f880 6034 	strb.w	r6, [r0, #52]	@ 0x34
        if (((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed)) && (event.getType() != ClickEvent::RELEASED) && !toggleCanceled)
 8003040:	d012      	beq.n	8003068 <_ZN8touchgfx19ToggleButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4a>
 8003042:	b99b      	cbnz	r3, 800306c <_ZN8touchgfx19ToggleButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4e>
        {
            setPressed(newPressedValue);
 8003044:	f081 0101 	eor.w	r1, r1, #1
 8003048:	f7ff ff7e 	bl	8002f48 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800304c:	6823      	ldr	r3, [r4, #0]
 800304e:	4620      	mov	r0, r4
 8003050:	695b      	ldr	r3, [r3, #20]
 8003052:	4798      	blx	r3
        }

        if (!toggleCanceled && (event.getType() == ClickEvent::RELEASED))
 8003054:	792b      	ldrb	r3, [r5, #4]
 8003056:	2b01      	cmp	r3, #1
 8003058:	d108      	bne.n	800306c <_ZN8touchgfx19ToggleButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4e>
        {
            executeAction();
 800305a:	6823      	ldr	r3, [r4, #0]
 800305c:	4620      	mov	r0, r4
 800305e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
        }
    }
 8003062:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8003066:	4718      	bx	r3
        if (!toggleCanceled && (event.getType() == ClickEvent::RELEASED))
 8003068:	2b00      	cmp	r3, #0
 800306a:	d0f6      	beq.n	800305a <_ZN8touchgfx19ToggleButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
    }
 800306c:	bd70      	pop	{r4, r5, r6, pc}

0800306e <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEEEE16handleClickEventERKNS_10ClickEventE>:
    virtual void handleClickEvent(const ClickEvent& event)
 800306e:	b570      	push	{r4, r5, r6, lr}
 8003070:	4604      	mov	r4, r0
 8003072:	460d      	mov	r5, r1
        T::handleClickEvent(event);
 8003074:	f7ff ffd3 	bl	800301e <_ZN8touchgfx19ToggleButtonTrigger16handleClickEventERKNS_10ClickEventE>
        if (clickAction && clickAction->isValid())
 8003078:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
 800307a:	b158      	cbz	r0, 8003094 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEEEE16handleClickEventERKNS_10ClickEventE+0x26>
 800307c:	6803      	ldr	r3, [r0, #0]
 800307e:	68db      	ldr	r3, [r3, #12]
 8003080:	4798      	blx	r3
 8003082:	b138      	cbz	r0, 8003094 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEEEE16handleClickEventERKNS_10ClickEventE+0x26>
            clickAction->execute(*this, event);
 8003084:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
 8003086:	6803      	ldr	r3, [r0, #0]
 8003088:	462a      	mov	r2, r5
 800308a:	4621      	mov	r1, r4
 800308c:	689b      	ldr	r3, [r3, #8]
    }
 800308e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            clickAction->execute(*this, event);
 8003092:	4718      	bx	r3
    }
 8003094:	bd70      	pop	{r4, r5, r6, pc}
	...

08003098 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8003098:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800309a:	2226      	movs	r2, #38	@ 0x26
    TextArea()
 800309c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800309e:	2100      	movs	r1, #0
 80030a0:	f021 fc5b 	bl	802495a <memset>
 80030a4:	4620      	mov	r0, r4
 80030a6:	f7ff fef5 	bl	8002e94 <_ZN8touchgfx8DrawableC1Ev>
 80030aa:	4b0a      	ldr	r3, [pc, #40]	@ (80030d4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80030ac:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80030ae:	4b0a      	ldr	r3, [pc, #40]	@ (80030d8 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80030b0:	62a3      	str	r3, [r4, #40]	@ 0x28
 80030b2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80030b6:	85a3      	strh	r3, [r4, #44]	@ 0x2c
 80030b8:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
 80030bc:	2300      	movs	r3, #0
 80030be:	e9c4 320c 	strd	r3, r2, [r4, #48]	@ 0x30
 80030c2:	8723      	strh	r3, [r4, #56]	@ 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80030c4:	f04f 32ff 	mov.w	r2, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 80030c8:	e9c4 2310 	strd	r2, r3, [r4, #64]	@ 0x40
 80030cc:	63e3      	str	r3, [r4, #60]	@ 0x3c
    }
 80030ce:	4620      	mov	r0, r4
 80030d0:	bd10      	pop	{r4, pc}
 80030d2:	bf00      	nop
 80030d4:	0802744c 	.word	0x0802744c
 80030d8:	08026738 	.word	0x08026738

080030dc <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    ClickListener()
 80030dc:	b570      	push	{r4, r5, r6, lr}
        : T(), up(), down()
 80030de:	2234      	movs	r2, #52	@ 0x34
 80030e0:	4604      	mov	r4, r0
 80030e2:	2100      	movs	r1, #0
 80030e4:	f021 fc39 	bl	802495a <memset>
 80030e8:	4626      	mov	r6, r4
class ClickButtonTrigger : public AbstractButtonContainer
 80030ea:	4620      	mov	r0, r4
 80030ec:	f7ff ff18 	bl	8002f20 <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 80030f0:	4b10      	ldr	r3, [pc, #64]	@ (8003134 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x58>)
 80030f2:	f846 3b34 	str.w	r3, [r6], #52
        : Box(), borderColor(0), borderSize(0)
 80030f6:	4630      	mov	r0, r6
 80030f8:	f7ff fefe 	bl	8002ef8 <_ZN8touchgfx3BoxC1Ev>
        : color(col)
 80030fc:	2500      	movs	r5, #0
 80030fe:	4b0e      	ldr	r3, [pc, #56]	@ (8003138 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x5c>)
 8003100:	6363      	str	r3, [r4, #52]	@ 0x34
        borderBox.setXY(0, 0);
 8003102:	462a      	mov	r2, r5
 8003104:	4629      	mov	r1, r5
 8003106:	4630      	mov	r0, r6
        : color(0)
 8003108:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
 800310c:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
        : color(col)
 8003110:	6625      	str	r5, [r4, #96]	@ 0x60
 8003112:	f8a4 5064 	strh.w	r5, [r4, #100]	@ 0x64
 8003116:	f7ff fecf 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800311a:	4620      	mov	r0, r4
 800311c:	4631      	mov	r1, r6
 800311e:	f008 f955 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T(), clickAction(0)
 8003122:	4b06      	ldr	r3, [pc, #24]	@ (800313c <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x60>)
 8003124:	6023      	str	r3, [r4, #0]
 8003126:	2301      	movs	r3, #1
 8003128:	67a5      	str	r5, [r4, #120]	@ 0x78
 800312a:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
    }
 800312e:	4620      	mov	r0, r4
 8003130:	bd70      	pop	{r4, r5, r6, pc}
 8003132:	bf00      	nop
 8003134:	08026a14 	.word	0x08026a14
 8003138:	08027544 	.word	0x08027544
 800313c:	08026ab0 	.word	0x08026ab0

08003140 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEEEEC1Ev>:
    ClickListener()
 8003140:	b570      	push	{r4, r5, r6, lr}
 8003142:	4604      	mov	r4, r0
        : T(), up(), down()
 8003144:	4626      	mov	r6, r4
        : AbstractButtonContainer(), toggleCanceled(false)
 8003146:	2500      	movs	r5, #0
 8003148:	f7ff feea 	bl	8002f20 <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800314c:	4b10      	ldr	r3, [pc, #64]	@ (8003190 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEEEEC1Ev+0x50>)
 800314e:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8003152:	f846 3b38 	str.w	r3, [r6], #56
 8003156:	4630      	mov	r0, r6
 8003158:	f7ff fece 	bl	8002ef8 <_ZN8touchgfx3BoxC1Ev>
 800315c:	4b0d      	ldr	r3, [pc, #52]	@ (8003194 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEEEEC1Ev+0x54>)
 800315e:	63a3      	str	r3, [r4, #56]	@ 0x38
        borderBox.setXY(0, 0);
 8003160:	462a      	mov	r2, r5
 8003162:	4629      	mov	r1, r5
 8003164:	4630      	mov	r0, r6
        : color(0)
 8003166:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 800316a:	e9c4 551d 	strd	r5, r5, [r4, #116]	@ 0x74
        : color(col)
 800316e:	6665      	str	r5, [r4, #100]	@ 0x64
 8003170:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8003174:	f7ff fea0 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8003178:	4620      	mov	r0, r4
 800317a:	4631      	mov	r1, r6
 800317c:	f008 f926 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T(), clickAction(0)
 8003180:	4b05      	ldr	r3, [pc, #20]	@ (8003198 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEEEEC1Ev+0x58>)
 8003182:	6023      	str	r3, [r4, #0]
 8003184:	2301      	movs	r3, #1
 8003186:	67e5      	str	r5, [r4, #124]	@ 0x7c
 8003188:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
    }
 800318c:	4620      	mov	r0, r4
 800318e:	bd70      	pop	{r4, r5, r6, pc}
 8003190:	08026b4c 	.word	0x08026b4c
 8003194:	08027544 	.word	0x08027544
 8003198:	08026be8 	.word	0x08026be8

0800319c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800319c:	b410      	push	{r4}
        borderUp = borderColorReleased;
 800319e:	6703      	str	r3, [r0, #112]	@ 0x70
        borderDown = borderColorPressed;
 80031a0:	9b01      	ldr	r3, [sp, #4]
 80031a2:	6743      	str	r3, [r0, #116]	@ 0x74
        handlePressedUpdated();
 80031a4:	6803      	ldr	r3, [r0, #0]
    }
 80031a6:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 80031aa:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        down = colorPressed;
 80031ae:	e9c0 121a 	strd	r1, r2, [r0, #104]	@ 0x68
        handlePressedUpdated();
 80031b2:	4718      	bx	r3

080031b4 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 80031b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031b8:	4604      	mov	r4, r0
 80031ba:	b097      	sub	sp, #92	@ 0x5c
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 80031bc:	46a0      	mov	r8, r4
        : presenter(0)
 80031be:	2500      	movs	r5, #0
 80031c0:	f00f ffe6 	bl	8013190 <_ZN8touchgfx6ScreenC1Ev>
 80031c4:	4be1      	ldr	r3, [pc, #900]	@ (800354c <_ZN15Screen1ViewBaseC1Ev+0x398>)
 80031c6:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80031c8:	f848 3b40 	str.w	r3, [r8], #64
 80031cc:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 80031d0:	4640      	mov	r0, r8
        : T(), up(), down()
 80031d2:	f104 0798 	add.w	r7, r4, #152	@ 0x98
 80031d6:	f7ff fe8f 	bl	8002ef8 <_ZN8touchgfx3BoxC1Ev>
 80031da:	4650      	mov	r0, sl
 80031dc:	f7ff fe8c 	bl	8002ef8 <_ZN8touchgfx3BoxC1Ev>
 80031e0:	4629      	mov	r1, r5
 80031e2:	2234      	movs	r2, #52	@ 0x34
 80031e4:	4638      	mov	r0, r7
 80031e6:	f021 fbb8 	bl	802495a <memset>
class TouchButtonTrigger : public AbstractButtonContainer
 80031ea:	4638      	mov	r0, r7
 80031ec:	f7ff fe98 	bl	8002f20 <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 80031f0:	f104 0bcc 	add.w	fp, r4, #204	@ 0xcc
 80031f4:	4bd6      	ldr	r3, [pc, #856]	@ (8003550 <_ZN15Screen1ViewBaseC1Ev+0x39c>)
 80031f6:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80031fa:	4658      	mov	r0, fp
 80031fc:	f7ff fe7c 	bl	8002ef8 <_ZN8touchgfx3BoxC1Ev>
 8003200:	4bd4      	ldr	r3, [pc, #848]	@ (8003554 <_ZN15Screen1ViewBaseC1Ev+0x3a0>)
 8003202:	f8c4 30cc 	str.w	r3, [r4, #204]	@ 0xcc
        borderBox.setXY(0, 0);
 8003206:	462a      	mov	r2, r5
 8003208:	4629      	mov	r1, r5
 800320a:	4658      	mov	r0, fp
        : color(0)
 800320c:	e9c4 5540 	strd	r5, r5, [r4, #256]	@ 0x100
 8003210:	e9c4 5542 	strd	r5, r5, [r4, #264]	@ 0x108
        : color(col)
 8003214:	f8c4 50f8 	str.w	r5, [r4, #248]	@ 0xf8
 8003218:	f8a4 50fc 	strh.w	r5, [r4, #252]	@ 0xfc
 800321c:	f7ff fe4c 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8003220:	4659      	mov	r1, fp
 8003222:	4638      	mov	r0, r7
 8003224:	f008 f8d2 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003228:	f04f 0301 	mov.w	r3, #1
 800322c:	f884 30bc 	strb.w	r3, [r4, #188]	@ 0xbc
        : T()
 8003230:	4bc9      	ldr	r3, [pc, #804]	@ (8003558 <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 8003232:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 8003236:	f504 738a 	add.w	r3, r4, #276	@ 0x114
 800323a:	f504 79ae 	add.w	r9, r4, #348	@ 0x15c
 800323e:	4618      	mov	r0, r3
        : T(), clickAction(0)
 8003240:	f8c4 5110 	str.w	r5, [r4, #272]	@ 0x110
 8003244:	9303      	str	r3, [sp, #12]
 8003246:	f7ff ff27 	bl	8003098 <_ZN8touchgfx8TextAreaC1Ev>
 800324a:	4648      	mov	r0, r9
 800324c:	f7ff ff24 	bl	8003098 <_ZN8touchgfx8TextAreaC1Ev>
 8003250:	f504 73d2 	add.w	r3, r4, #420	@ 0x1a4
 8003254:	4618      	mov	r0, r3
 8003256:	930a      	str	r3, [sp, #40]	@ 0x28
 8003258:	f7ff ff40 	bl	80030dc <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800325c:	f504 7308 	add.w	r3, r4, #544	@ 0x220
 8003260:	4618      	mov	r0, r3
 8003262:	9304      	str	r3, [sp, #16]
 8003264:	f7ff ff18 	bl	8003098 <_ZN8touchgfx8TextAreaC1Ev>
 8003268:	f504 731a 	add.w	r3, r4, #616	@ 0x268
 800326c:	4618      	mov	r0, r3
 800326e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003270:	f7ff ff34 	bl	80030dc <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003274:	f504 7339 	add.w	r3, r4, #740	@ 0x2e4
 8003278:	4618      	mov	r0, r3
 800327a:	9305      	str	r3, [sp, #20]
 800327c:	f7ff ff0c 	bl	8003098 <_ZN8touchgfx8TextAreaC1Ev>
 8003280:	f504 734b 	add.w	r3, r4, #812	@ 0x32c
 8003284:	4618      	mov	r0, r3
 8003286:	930c      	str	r3, [sp, #48]	@ 0x30
 8003288:	f7ff ff28 	bl	80030dc <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800328c:	f504 736a 	add.w	r3, r4, #936	@ 0x3a8
 8003290:	4618      	mov	r0, r3
 8003292:	9306      	str	r3, [sp, #24]
 8003294:	f7ff ff00 	bl	8003098 <_ZN8touchgfx8TextAreaC1Ev>
 8003298:	f504 737c 	add.w	r3, r4, #1008	@ 0x3f0
 800329c:	4618      	mov	r0, r3
 800329e:	930d      	str	r3, [sp, #52]	@ 0x34
 80032a0:	f7ff ff1c 	bl	80030dc <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80032a4:	f204 436c 	addw	r3, r4, #1132	@ 0x46c
 80032a8:	4618      	mov	r0, r3
 80032aa:	9307      	str	r3, [sp, #28]
 80032ac:	f7ff fef4 	bl	8003098 <_ZN8touchgfx8TextAreaC1Ev>
 80032b0:	f204 43b4 	addw	r3, r4, #1204	@ 0x4b4
 80032b4:	4618      	mov	r0, r3
 80032b6:	930e      	str	r3, [sp, #56]	@ 0x38
 80032b8:	f7ff ff42 	bl	8003140 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEEEEC1Ev>
 80032bc:	f204 5334 	addw	r3, r4, #1332	@ 0x534
 80032c0:	4618      	mov	r0, r3
 80032c2:	9308      	str	r3, [sp, #32]
 80032c4:	f7ff fee8 	bl	8003098 <_ZN8touchgfx8TextAreaC1Ev>
 80032c8:	f204 537c 	addw	r3, r4, #1404	@ 0x57c
 80032cc:	4618      	mov	r0, r3
 80032ce:	930f      	str	r3, [sp, #60]	@ 0x3c
 80032d0:	f7ff ff36 	bl	8003140 <_ZN8touchgfx13ClickListenerINS_24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEEEEC1Ev>
 80032d4:	f204 53fc 	addw	r3, r4, #1532	@ 0x5fc
 80032d8:	4618      	mov	r0, r3
 80032da:	9309      	str	r3, [sp, #36]	@ 0x24
 80032dc:	f7ff fedc 	bl	8003098 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80032e0:	4b9e      	ldr	r3, [pc, #632]	@ (800355c <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
 80032e2:	f8c4 3644 	str.w	r3, [r4, #1604]	@ 0x644
 80032e6:	4b9e      	ldr	r3, [pc, #632]	@ (8003560 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 80032e8:	f8c4 364c 	str.w	r3, [r4, #1612]	@ 0x64c
    __background.setPosition(0, 0, 240, 320);
 80032ec:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80032f0:	462a      	mov	r2, r5
 80032f2:	f8c4 4648 	str.w	r4, [r4, #1608]	@ 0x648
 80032f6:	f8c4 5650 	str.w	r5, [r4, #1616]	@ 0x650
 80032fa:	4629      	mov	r1, r5
 80032fc:	9300      	str	r3, [sp, #0]
 80032fe:	4640      	mov	r0, r8
 8003300:	23f0      	movs	r3, #240	@ 0xf0
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003302:	1d26      	adds	r6, r4, #4
 8003304:	f7ff fde5 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003308:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800330c:	66a3      	str	r3, [r4, #104]	@ 0x68
 800330e:	4641      	mov	r1, r8
 8003310:	4630      	mov	r0, r6
 8003312:	f008 f85b 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setPosition(0, 0, 240, 320);
 8003316:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800331a:	462a      	mov	r2, r5
 800331c:	9300      	str	r3, [sp, #0]
 800331e:	4629      	mov	r1, r5
 8003320:	4650      	mov	r0, sl
 8003322:	23f0      	movs	r3, #240	@ 0xf0
 8003324:	f7ff fdd5 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003328:	4b8e      	ldr	r3, [pc, #568]	@ (8003564 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
 800332a:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 800332e:	4651      	mov	r1, sl
 8003330:	4630      	mov	r0, r6
        borderBox.setPosition(x, y, width, height);
 8003332:	f04f 08de 	mov.w	r8, #222	@ 0xde
 8003336:	f008 f849 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800333a:	462a      	mov	r2, r5
 800333c:	f8cd 8000 	str.w	r8, [sp]
 8003340:	4629      	mov	r1, r5
 8003342:	4658      	mov	r0, fp
 8003344:	23db      	movs	r3, #219	@ 0xdb
 8003346:	f7ff fdc4 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 800334a:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8003574 <_ZN15Screen1ViewBaseC1Ev+0x3c0>
 800334e:	4b86      	ldr	r3, [pc, #536]	@ (8003568 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
        borderUp = borderColorReleased;
 8003350:	4986      	ldr	r1, [pc, #536]	@ (800356c <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8003352:	f8c4 1108 	str.w	r1, [r4, #264]	@ 0x108
        down = colorPressed;
 8003356:	e9c4 a340 	strd	sl, r3, [r4, #256]	@ 0x100
        borderDown = borderColorPressed;
 800335a:	f503 134d 	add.w	r3, r3, #3358720	@ 0x334000
 800335e:	f203 2369 	addw	r3, r3, #617	@ 0x269
 8003362:	f8c4 310c 	str.w	r3, [r4, #268]	@ 0x10c
        handlePressedUpdated();
 8003366:	4638      	mov	r0, r7
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003368:	f8a4 50fc 	strh.w	r5, [r4, #252]	@ 0xfc
 800336c:	f7ff fcd6 	bl	8002d1c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv>
    touchArea.setPosition(11, 25, 219, 222);
 8003370:	23db      	movs	r3, #219	@ 0xdb
 8003372:	f8cd 8000 	str.w	r8, [sp]
 8003376:	2219      	movs	r2, #25
 8003378:	4638      	mov	r0, r7
 800337a:	210b      	movs	r1, #11
 800337c:	f7ff fda9 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003380:	4639      	mov	r1, r7
 8003382:	4630      	mov	r0, r6
        boundingArea = calculateBoundingArea();
 8003384:	af10      	add	r7, sp, #64	@ 0x40
        color = newColor;
 8003386:	f04f 3bff 	mov.w	fp, #4294967295
 800338a:	f008 f81f 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    Touchpad.setXY(64, 220);
 800338e:	9803      	ldr	r0, [sp, #12]
 8003390:	f8df 81e4 	ldr.w	r8, [pc, #484]	@ 8003578 <_ZN15Screen1ViewBaseC1Ev+0x3c4>
 8003394:	22dc      	movs	r2, #220	@ 0xdc
 8003396:	2140      	movs	r1, #64	@ 0x40
 8003398:	f7ff fd8e 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800339c:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 800339e:	f8c4 b144 	str.w	fp, [r4, #324]	@ 0x144
        boundingArea = calculateBoundingArea();
 80033a2:	4638      	mov	r0, r7
        linespace = space;
 80033a4:	f8a4 5148 	strh.w	r5, [r4, #328]	@ 0x148
        boundingArea = calculateBoundingArea();
 80033a8:	f00a ffda 	bl	800e360 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80033ac:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80033b0:	f504 73a8 	add.w	r3, r4, #336	@ 0x150
 80033b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80033b8:	f04f 0001 	mov.w	r0, #1
 80033bc:	f8ad 0054 	strh.w	r0, [sp, #84]	@ 0x54
    Touchpad.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RNKQ));
 80033c0:	a814      	add	r0, sp, #80	@ 0x50
 80033c2:	4601      	mov	r1, r0
 80033c4:	9803      	ldr	r0, [sp, #12]
 80033c6:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 80033ca:	f00b fa71 	bl	800e8b0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80033ce:	9903      	ldr	r1, [sp, #12]
 80033d0:	4630      	mov	r0, r6
 80033d2:	f007 fffb 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    MOUSE.setXY(83, 1);
 80033d6:	2201      	movs	r2, #1
 80033d8:	4648      	mov	r0, r9
 80033da:	2153      	movs	r1, #83	@ 0x53
 80033dc:	f7ff fd6c 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
 80033e0:	4649      	mov	r1, r9
 80033e2:	4638      	mov	r0, r7
        color = newColor;
 80033e4:	f8c4 a18c 	str.w	sl, [r4, #396]	@ 0x18c
        linespace = space;
 80033e8:	f8a4 5190 	strh.w	r5, [r4, #400]	@ 0x190
        boundingArea = calculateBoundingArea();
 80033ec:	f00a ffb8 	bl	800e360 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80033f0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80033f4:	f504 73cc 	add.w	r3, r4, #408	@ 0x198
 80033f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    MOUSE.setTypedText(touchgfx::TypedText(T_MOUSE));
 80033fc:	a814      	add	r0, sp, #80	@ 0x50
 80033fe:	2307      	movs	r3, #7
 8003400:	4601      	mov	r1, r0
 8003402:	4648      	mov	r0, r9
 8003404:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8003408:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 800340c:	f00b fa50 	bl	800e8b0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003410:	4649      	mov	r1, r9
 8003412:	4630      	mov	r0, r6
        borderBox.setPosition(x, y, width, height);
 8003414:	f04f 0916 	mov.w	r9, #22
 8003418:	f007 ffd8 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800341c:	462a      	mov	r2, r5
 800341e:	4629      	mov	r1, r5
 8003420:	f504 70ec 	add.w	r0, r4, #472	@ 0x1d8
 8003424:	f8cd 9000 	str.w	r9, [sp]
 8003428:	2344      	movs	r3, #68	@ 0x44
 800342a:	f7ff fd52 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
    upSen.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 36, 48), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800342e:	4b50      	ldr	r3, [pc, #320]	@ (8003570 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8003430:	f8a4 5208 	strh.w	r5, [r4, #520]	@ 0x208
 8003434:	9300      	str	r3, [sp, #0]
 8003436:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 800343a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800343c:	4a4a      	ldr	r2, [pc, #296]	@ (8003568 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 800343e:	4651      	mov	r1, sl
 8003440:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8003444:	f7ff feaa 	bl	800319c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    upSen.setAction(flexButtonCallback);
 8003448:	f204 6044 	addw	r0, r4, #1604	@ 0x644
    upSen.setPosition(11, 257, 68, 22);
 800344c:	2344      	movs	r3, #68	@ 0x44
        action = &callback;
 800344e:	f8c4 01d4 	str.w	r0, [r4, #468]	@ 0x1d4
    upSen.setAction(flexButtonCallback);
 8003452:	9003      	str	r0, [sp, #12]
    upSen.setPosition(11, 257, 68, 22);
 8003454:	f240 1201 	movw	r2, #257	@ 0x101
 8003458:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800345a:	f8cd 9000 	str.w	r9, [sp]
 800345e:	210b      	movs	r1, #11
 8003460:	f7ff fd37 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003464:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003466:	4630      	mov	r0, r6
 8003468:	f007 ffb0 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    MOUSE_1.setXY(16, 261);
 800346c:	9804      	ldr	r0, [sp, #16]
 800346e:	f240 1205 	movw	r2, #261	@ 0x105
 8003472:	2110      	movs	r1, #16
 8003474:	f7ff fd20 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
 8003478:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 800347a:	f8c4 b250 	str.w	fp, [r4, #592]	@ 0x250
        boundingArea = calculateBoundingArea();
 800347e:	4638      	mov	r0, r7
        linespace = space;
 8003480:	f8a4 5254 	strh.w	r5, [r4, #596]	@ 0x254
        boundingArea = calculateBoundingArea();
 8003484:	f00a ff6c 	bl	800e360 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003488:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800348c:	f504 7317 	add.w	r3, r4, #604	@ 0x25c
 8003490:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    MOUSE_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_718A));
 8003494:	a814      	add	r0, sp, #80	@ 0x50
 8003496:	2306      	movs	r3, #6
 8003498:	4601      	mov	r1, r0
 800349a:	9804      	ldr	r0, [sp, #16]
 800349c:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 80034a0:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 80034a4:	f00b fa04 	bl	800e8b0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80034a8:	9904      	ldr	r1, [sp, #16]
 80034aa:	4630      	mov	r0, r6
 80034ac:	f007 ff8e 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034b0:	462a      	mov	r2, r5
 80034b2:	4629      	mov	r1, r5
 80034b4:	f504 7027 	add.w	r0, r4, #668	@ 0x29c
 80034b8:	f8cd 9000 	str.w	r9, [sp]
 80034bc:	2344      	movs	r3, #68	@ 0x44
 80034be:	f7ff fd08 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
    downSen.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 36, 48), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80034c2:	4b2b      	ldr	r3, [pc, #172]	@ (8003570 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 80034c4:	f8a4 52cc 	strh.w	r5, [r4, #716]	@ 0x2cc
 80034c8:	9300      	str	r3, [sp, #0]
 80034ca:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 80034ce:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80034d0:	4a25      	ldr	r2, [pc, #148]	@ (8003568 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 80034d2:	4651      	mov	r1, sl
 80034d4:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 80034d8:	f7ff fe60 	bl	800319c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80034dc:	9803      	ldr	r0, [sp, #12]
 80034de:	f8c4 0298 	str.w	r0, [r4, #664]	@ 0x298
    downSen.setPosition(11, 286, 68, 22);
 80034e2:	2344      	movs	r3, #68	@ 0x44
 80034e4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80034e6:	f8cd 9000 	str.w	r9, [sp]
 80034ea:	f44f 728f 	mov.w	r2, #286	@ 0x11e
 80034ee:	210b      	movs	r1, #11
 80034f0:	f7ff fcef 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
 80034f4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80034f6:	4630      	mov	r0, r6
 80034f8:	f007 ff68 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    MOUSE_1_1.setXY(19, 290);
 80034fc:	9805      	ldr	r0, [sp, #20]
 80034fe:	f44f 7291 	mov.w	r2, #290	@ 0x122
 8003502:	2113      	movs	r1, #19
 8003504:	f7ff fcd8 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
 8003508:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 800350a:	f8c4 b314 	str.w	fp, [r4, #788]	@ 0x314
        boundingArea = calculateBoundingArea();
 800350e:	4638      	mov	r0, r7
        linespace = space;
 8003510:	f8a4 5318 	strh.w	r5, [r4, #792]	@ 0x318
        boundingArea = calculateBoundingArea();
 8003514:	f00a ff24 	bl	800e360 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003518:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800351c:	f504 7348 	add.w	r3, r4, #800	@ 0x320
 8003520:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    MOUSE_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C98T));
 8003524:	a814      	add	r0, sp, #80	@ 0x50
 8003526:	2305      	movs	r3, #5
 8003528:	4601      	mov	r1, r0
 800352a:	9805      	ldr	r0, [sp, #20]
 800352c:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8003530:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8003534:	f00b f9bc 	bl	800e8b0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003538:	9905      	ldr	r1, [sp, #20]
 800353a:	4630      	mov	r0, r6
 800353c:	f007 ff46 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003540:	462a      	mov	r2, r5
 8003542:	4629      	mov	r1, r5
 8003544:	f504 7058 	add.w	r0, r4, #864	@ 0x360
 8003548:	e018      	b.n	800357c <_ZN15Screen1ViewBaseC1Ev+0x3c8>
 800354a:	bf00      	nop
 800354c:	08026c9c 	.word	0x08026c9c
 8003550:	080268dc 	.word	0x080268dc
 8003554:	08027544 	.word	0x08027544
 8003558:	08026978 	.word	0x08026978
 800355c:	08026c84 	.word	0x08026c84
 8003560:	08002cb3 	.word	0x08002cb3
 8003564:	fface3fa 	.word	0xfface3fa
 8003568:	ff002430 	.word	0xff002430
 800356c:	ff003366 	.word	0xff003366
 8003570:	ff336699 	.word	0xff336699
 8003574:	ff006699 	.word	0xff006699
 8003578:	08026738 	.word	0x08026738
 800357c:	f8cd 9000 	str.w	r9, [sp]
 8003580:	2344      	movs	r3, #68	@ 0x44
 8003582:	f7ff fca6 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
    downScroll.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 36, 48), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003586:	4b8f      	ldr	r3, [pc, #572]	@ (80037c4 <_ZN15Screen1ViewBaseC1Ev+0x610>)
 8003588:	f8a4 5390 	strh.w	r5, [r4, #912]	@ 0x390
 800358c:	9300      	str	r3, [sp, #0]
 800358e:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8003592:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8003594:	4a8c      	ldr	r2, [pc, #560]	@ (80037c8 <_ZN15Screen1ViewBaseC1Ev+0x614>)
 8003596:	4651      	mov	r1, sl
 8003598:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 800359c:	f7ff fdfe 	bl	800319c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80035a0:	9803      	ldr	r0, [sp, #12]
 80035a2:	f8c4 035c 	str.w	r0, [r4, #860]	@ 0x35c
    downScroll.setPosition(86, 286, 68, 22);
 80035a6:	2344      	movs	r3, #68	@ 0x44
 80035a8:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80035aa:	f8cd 9000 	str.w	r9, [sp]
 80035ae:	f44f 728f 	mov.w	r2, #286	@ 0x11e
 80035b2:	2156      	movs	r1, #86	@ 0x56
 80035b4:	f7ff fc8d 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
 80035b8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80035ba:	4630      	mov	r0, r6
 80035bc:	f007 ff06 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    MOUSE_1_1_1.setXY(92, 290);
 80035c0:	9806      	ldr	r0, [sp, #24]
 80035c2:	f44f 7291 	mov.w	r2, #290	@ 0x122
 80035c6:	215c      	movs	r1, #92	@ 0x5c
 80035c8:	f7ff fc76 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
 80035cc:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 80035ce:	f8c4 b3d8 	str.w	fp, [r4, #984]	@ 0x3d8
        boundingArea = calculateBoundingArea();
 80035d2:	4638      	mov	r0, r7
        linespace = space;
 80035d4:	f8a4 53dc 	strh.w	r5, [r4, #988]	@ 0x3dc
        boundingArea = calculateBoundingArea();
 80035d8:	f00a fec2 	bl	800e360 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80035dc:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80035e0:	f504 7379 	add.w	r3, r4, #996	@ 0x3e4
 80035e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    MOUSE_1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ANO4));
 80035e8:	a814      	add	r0, sp, #80	@ 0x50
 80035ea:	2304      	movs	r3, #4
 80035ec:	4601      	mov	r1, r0
 80035ee:	9806      	ldr	r0, [sp, #24]
 80035f0:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 80035f4:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 80035f8:	f00b f95a 	bl	800e8b0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035fc:	9906      	ldr	r1, [sp, #24]
 80035fe:	4630      	mov	r0, r6
 8003600:	f007 fee4 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003604:	462a      	mov	r2, r5
 8003606:	4629      	mov	r1, r5
 8003608:	f204 4024 	addw	r0, r4, #1060	@ 0x424
 800360c:	f8cd 9000 	str.w	r9, [sp]
 8003610:	2344      	movs	r3, #68	@ 0x44
 8003612:	f7ff fc5e 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
    upScroll.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 36, 48), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003616:	4b6b      	ldr	r3, [pc, #428]	@ (80037c4 <_ZN15Screen1ViewBaseC1Ev+0x610>)
 8003618:	f8a4 5454 	strh.w	r5, [r4, #1108]	@ 0x454
 800361c:	9300      	str	r3, [sp, #0]
 800361e:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8003622:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8003624:	4a68      	ldr	r2, [pc, #416]	@ (80037c8 <_ZN15Screen1ViewBaseC1Ev+0x614>)
 8003626:	4651      	mov	r1, sl
 8003628:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 800362c:	f7ff fdb6 	bl	800319c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003630:	9803      	ldr	r0, [sp, #12]
 8003632:	f8c4 0420 	str.w	r0, [r4, #1056]	@ 0x420
    upScroll.setPosition(86, 257, 68, 22);
 8003636:	2344      	movs	r3, #68	@ 0x44
 8003638:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800363a:	f8cd 9000 	str.w	r9, [sp]
 800363e:	f240 1201 	movw	r2, #257	@ 0x101
 8003642:	2156      	movs	r1, #86	@ 0x56
 8003644:	f7ff fc45 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003648:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800364a:	4630      	mov	r0, r6
 800364c:	f007 febe 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    MOUSE_1_2.setXY(89, 261);
 8003650:	9807      	ldr	r0, [sp, #28]
 8003652:	f240 1205 	movw	r2, #261	@ 0x105
 8003656:	2159      	movs	r1, #89	@ 0x59
 8003658:	f7ff fc2e 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
 800365c:	9907      	ldr	r1, [sp, #28]
        color = newColor;
 800365e:	f8c4 b49c 	str.w	fp, [r4, #1180]	@ 0x49c
        boundingArea = calculateBoundingArea();
 8003662:	4638      	mov	r0, r7
        linespace = space;
 8003664:	f8a4 54a0 	strh.w	r5, [r4, #1184]	@ 0x4a0
        boundingArea = calculateBoundingArea();
 8003668:	f00a fe7a 	bl	800e360 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800366c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003670:	f504 6395 	add.w	r3, r4, #1192	@ 0x4a8
 8003674:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    MOUSE_1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y2J7));
 8003678:	a814      	add	r0, sp, #80	@ 0x50
 800367a:	2303      	movs	r3, #3
 800367c:	4601      	mov	r1, r0
 800367e:	9807      	ldr	r0, [sp, #28]
 8003680:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8003684:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8003688:	f00b f912 	bl	800e8b0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800368c:	9907      	ldr	r1, [sp, #28]
 800368e:	4630      	mov	r0, r6
 8003690:	f007 fe9c 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003694:	462a      	mov	r2, r5
 8003696:	4629      	mov	r1, r5
 8003698:	f204 40ec 	addw	r0, r4, #1260	@ 0x4ec
 800369c:	f8cd 9000 	str.w	r9, [sp]
 80036a0:	2344      	movs	r3, #68	@ 0x44
 80036a2:	f7ff fc16 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 80036a6:	4a48      	ldr	r2, [pc, #288]	@ (80037c8 <_ZN15Screen1ViewBaseC1Ev+0x614>)
        borderUp = borderColorReleased;
 80036a8:	4948      	ldr	r1, [pc, #288]	@ (80037cc <_ZN15Screen1ViewBaseC1Ev+0x618>)
        borderDown = borderColorPressed;
 80036aa:	4b46      	ldr	r3, [pc, #280]	@ (80037c4 <_ZN15Screen1ViewBaseC1Ev+0x610>)
        handlePressedUpdated();
 80036ac:	980e      	ldr	r0, [sp, #56]	@ 0x38
        down = colorPressed;
 80036ae:	f8c4 2524 	str.w	r2, [r4, #1316]	@ 0x524
        borderUp = borderColorReleased;
 80036b2:	f8c4 1528 	str.w	r1, [r4, #1320]	@ 0x528
        borderDown = borderColorPressed;
 80036b6:	f8c4 352c 	str.w	r3, [r4, #1324]	@ 0x52c
 80036ba:	f8a4 551c 	strh.w	r5, [r4, #1308]	@ 0x51c
        up = colorReleased;
 80036be:	f8c4 a520 	str.w	sl, [r4, #1312]	@ 0x520
        handlePressedUpdated();
 80036c2:	f7ff fb51 	bl	8002d68 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEE20handlePressedUpdatedEv>
 80036c6:	9803      	ldr	r0, [sp, #12]
 80036c8:	f8c4 04e4 	str.w	r0, [r4, #1252]	@ 0x4e4
    recMacro.setPosition(162, 257, 68, 22);
 80036cc:	2344      	movs	r3, #68	@ 0x44
 80036ce:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80036d0:	f8cd 9000 	str.w	r9, [sp]
 80036d4:	f240 1201 	movw	r2, #257	@ 0x101
 80036d8:	21a2      	movs	r1, #162	@ 0xa2
 80036da:	f7ff fbfa 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
 80036de:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80036e0:	4630      	mov	r0, r6
 80036e2:	f007 fe73 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    recMacroText.setXY(174, 258);
 80036e6:	9808      	ldr	r0, [sp, #32]
 80036e8:	f44f 7281 	mov.w	r2, #258	@ 0x102
 80036ec:	21ae      	movs	r1, #174	@ 0xae
 80036ee:	f7ff fbe3 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
 80036f2:	9908      	ldr	r1, [sp, #32]
        color = newColor;
 80036f4:	f8c4 b564 	str.w	fp, [r4, #1380]	@ 0x564
        boundingArea = calculateBoundingArea();
 80036f8:	4638      	mov	r0, r7
        linespace = space;
 80036fa:	f8a4 5568 	strh.w	r5, [r4, #1384]	@ 0x568
        boundingArea = calculateBoundingArea();
 80036fe:	f00a fe2f 	bl	800e360 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003702:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003706:	f504 63ae 	add.w	r3, r4, #1392	@ 0x570
 800370a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    recMacroText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TD1F));
 800370e:	a814      	add	r0, sp, #80	@ 0x50
 8003710:	2302      	movs	r3, #2
 8003712:	4601      	mov	r1, r0
 8003714:	9808      	ldr	r0, [sp, #32]
 8003716:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 800371a:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 800371e:	f00b f8c7 	bl	800e8b0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003722:	9908      	ldr	r1, [sp, #32]
 8003724:	4630      	mov	r0, r6
 8003726:	f007 fe51 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 800372a:	462a      	mov	r2, r5
 800372c:	4629      	mov	r1, r5
 800372e:	f204 50b4 	addw	r0, r4, #1460	@ 0x5b4
 8003732:	f8cd 9000 	str.w	r9, [sp]
 8003736:	2344      	movs	r3, #68	@ 0x44
 8003738:	f7ff fbcb 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 800373c:	4a22      	ldr	r2, [pc, #136]	@ (80037c8 <_ZN15Screen1ViewBaseC1Ev+0x614>)
        borderUp = borderColorReleased;
 800373e:	4923      	ldr	r1, [pc, #140]	@ (80037cc <_ZN15Screen1ViewBaseC1Ev+0x618>)
        borderDown = borderColorPressed;
 8003740:	4b20      	ldr	r3, [pc, #128]	@ (80037c4 <_ZN15Screen1ViewBaseC1Ev+0x610>)
        handlePressedUpdated();
 8003742:	980f      	ldr	r0, [sp, #60]	@ 0x3c
        down = colorPressed;
 8003744:	f8c4 25ec 	str.w	r2, [r4, #1516]	@ 0x5ec
        borderUp = borderColorReleased;
 8003748:	f8c4 15f0 	str.w	r1, [r4, #1520]	@ 0x5f0
        borderDown = borderColorPressed;
 800374c:	f8c4 35f4 	str.w	r3, [r4, #1524]	@ 0x5f4
 8003750:	f8a4 55e4 	strh.w	r5, [r4, #1508]	@ 0x5e4
        up = colorReleased;
 8003754:	f8c4 a5e8 	str.w	sl, [r4, #1512]	@ 0x5e8
        handlePressedUpdated();
 8003758:	f7ff fb06 	bl	8002d68 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19ToggleButtonTriggerEE20handlePressedUpdatedEv>
 800375c:	9b03      	ldr	r3, [sp, #12]
 800375e:	f8c4 35ac 	str.w	r3, [r4, #1452]	@ 0x5ac
    playMacro.setPosition(162, 285, 68, 22);
 8003762:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8003764:	f8cd 9000 	str.w	r9, [sp]
 8003768:	2344      	movs	r3, #68	@ 0x44
 800376a:	f240 121d 	movw	r2, #285	@ 0x11d
 800376e:	21a2      	movs	r1, #162	@ 0xa2
 8003770:	f7ff fbaf 	bl	8002ed2 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003774:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8003776:	4630      	mov	r0, r6
 8003778:	f007 fe28 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    playMacroText.setXY(179, 286);
 800377c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800377e:	f44f 728f 	mov.w	r2, #286	@ 0x11e
 8003782:	21b3      	movs	r1, #179	@ 0xb3
 8003784:	f7ff fb98 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
 8003788:	9909      	ldr	r1, [sp, #36]	@ 0x24
        color = newColor;
 800378a:	f8c4 b62c 	str.w	fp, [r4, #1580]	@ 0x62c
        boundingArea = calculateBoundingArea();
 800378e:	4638      	mov	r0, r7
        linespace = space;
 8003790:	f8a4 5630 	strh.w	r5, [r4, #1584]	@ 0x630
        boundingArea = calculateBoundingArea();
 8003794:	f00a fde4 	bl	800e360 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003798:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800379c:	f504 63c7 	add.w	r3, r4, #1592	@ 0x638
 80037a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    playMacroText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RP92));
 80037a4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80037a6:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 80037aa:	a914      	add	r1, sp, #80	@ 0x50
 80037ac:	f8ad 5054 	strh.w	r5, [sp, #84]	@ 0x54
 80037b0:	f00b f87e 	bl	800e8b0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80037b4:	4630      	mov	r0, r6
 80037b6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80037b8:	f007 fe08 	bl	800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80037bc:	4620      	mov	r0, r4
 80037be:	b017      	add	sp, #92	@ 0x5c
 80037c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037c4:	ff336699 	.word	0xff336699
 80037c8:	ff002430 	.word	0xff002430
 80037cc:	ff003366 	.word	0xff003366

080037d0 <__tcf_0>:
extern const touchgfx::FontContextualFormsTable tahomabd_contextualFormsTable;
touchgfx::GeneratedFont& getFont_tahomabd_12_4bpp();

touchgfx::GeneratedFont& getFont_tahomabd_12_4bpp()
{
    static touchgfx::GeneratedFont tahomabd_12_4bpp(glyphs_tahomabd_12_4bpp, 12, 12, 12, 0, 0, 4, 1, 0, 0, unicodes_tahomabd_12_4bpp, kerning_tahomabd_12_4bpp, 63, 0, 0, &tahomabd_contextualFormsTable);
 80037d0:	4770      	bx	lr
	...

080037d4 <_Z24getFont_tahomabd_12_4bppv>:
{
 80037d4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont tahomabd_12_4bpp(glyphs_tahomabd_12_4bpp, 12, 12, 12, 0, 0, 4, 1, 0, 0, unicodes_tahomabd_12_4bpp, kerning_tahomabd_12_4bpp, 63, 0, 0, &tahomabd_contextualFormsTable);
 80037d6:	4d17      	ldr	r5, [pc, #92]	@ (8003834 <_Z24getFont_tahomabd_12_4bppv+0x60>)
 80037d8:	682c      	ldr	r4, [r5, #0]
 80037da:	f014 0401 	ands.w	r4, r4, #1
{
 80037de:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont tahomabd_12_4bpp(glyphs_tahomabd_12_4bpp, 12, 12, 12, 0, 0, 4, 1, 0, 0, unicodes_tahomabd_12_4bpp, kerning_tahomabd_12_4bpp, 63, 0, 0, &tahomabd_contextualFormsTable);
 80037e0:	f3bf 8f5b 	dmb	ish
 80037e4:	d122      	bne.n	800382c <_Z24getFont_tahomabd_12_4bppv+0x58>
 80037e6:	4628      	mov	r0, r5
 80037e8:	f01f ff3f 	bl	802366a <__cxa_guard_acquire>
 80037ec:	b1f0      	cbz	r0, 800382c <_Z24getFont_tahomabd_12_4bppv+0x58>
 80037ee:	4b12      	ldr	r3, [pc, #72]	@ (8003838 <_Z24getFont_tahomabd_12_4bppv+0x64>)
 80037f0:	4912      	ldr	r1, [pc, #72]	@ (800383c <_Z24getFont_tahomabd_12_4bppv+0x68>)
 80037f2:	4813      	ldr	r0, [pc, #76]	@ (8003840 <_Z24getFont_tahomabd_12_4bppv+0x6c>)
 80037f4:	940a      	str	r4, [sp, #40]	@ 0x28
 80037f6:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 80037fa:	233f      	movs	r3, #63	@ 0x3f
 80037fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80037fe:	4b11      	ldr	r3, [pc, #68]	@ (8003844 <_Z24getFont_tahomabd_12_4bppv+0x70>)
 8003800:	9308      	str	r3, [sp, #32]
 8003802:	4b11      	ldr	r3, [pc, #68]	@ (8003848 <_Z24getFont_tahomabd_12_4bppv+0x74>)
 8003804:	9405      	str	r4, [sp, #20]
 8003806:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800380a:	2201      	movs	r2, #1
 800380c:	2304      	movs	r3, #4
 800380e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003812:	230c      	movs	r3, #12
 8003814:	9300      	str	r3, [sp, #0]
 8003816:	461a      	mov	r2, r3
 8003818:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800381c:	f7ff fa00 	bl	8002c20 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003820:	480a      	ldr	r0, [pc, #40]	@ (800384c <_Z24getFont_tahomabd_12_4bppv+0x78>)
 8003822:	f020 fe7b 	bl	802451c <atexit>
 8003826:	4628      	mov	r0, r5
 8003828:	f01f ff2b 	bl	8023682 <__cxa_guard_release>
    return tahomabd_12_4bpp;
}
 800382c:	4804      	ldr	r0, [pc, #16]	@ (8003840 <_Z24getFont_tahomabd_12_4bppv+0x6c>)
 800382e:	b00f      	add	sp, #60	@ 0x3c
 8003830:	bd30      	pop	{r4, r5, pc}
 8003832:	bf00      	nop
 8003834:	200028f4 	.word	0x200028f4
 8003838:	08026ce0 	.word	0x08026ce0
 800383c:	08028678 	.word	0x08028678
 8003840:	200028f8 	.word	0x200028f8
 8003844:	08028880 	.word	0x08028880
 8003848:	08028890 	.word	0x08028890
 800384c:	080037d1 	.word	0x080037d1

08003850 <__tcf_0>:
extern const touchgfx::FontContextualFormsTable tahomabd_contextualFormsTable;
touchgfx::GeneratedFont& getFont_tahomabd_20_4bpp();

touchgfx::GeneratedFont& getFont_tahomabd_20_4bpp()
{
    static touchgfx::GeneratedFont tahomabd_20_4bpp(glyphs_tahomabd_20_4bpp, 12, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_tahomabd_20_4bpp, kerning_tahomabd_20_4bpp, 63, 0, 0, &tahomabd_contextualFormsTable);
 8003850:	4770      	bx	lr
	...

08003854 <_Z24getFont_tahomabd_20_4bppv>:
{
 8003854:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont tahomabd_20_4bpp(glyphs_tahomabd_20_4bpp, 12, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_tahomabd_20_4bpp, kerning_tahomabd_20_4bpp, 63, 0, 0, &tahomabd_contextualFormsTable);
 8003856:	4d17      	ldr	r5, [pc, #92]	@ (80038b4 <_Z24getFont_tahomabd_20_4bppv+0x60>)
 8003858:	682c      	ldr	r4, [r5, #0]
 800385a:	f014 0401 	ands.w	r4, r4, #1
{
 800385e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont tahomabd_20_4bpp(glyphs_tahomabd_20_4bpp, 12, 20, 20, 0, 0, 4, 1, 0, 1, unicodes_tahomabd_20_4bpp, kerning_tahomabd_20_4bpp, 63, 0, 0, &tahomabd_contextualFormsTable);
 8003860:	f3bf 8f5b 	dmb	ish
 8003864:	d122      	bne.n	80038ac <_Z24getFont_tahomabd_20_4bppv+0x58>
 8003866:	4628      	mov	r0, r5
 8003868:	f01f feff 	bl	802366a <__cxa_guard_acquire>
 800386c:	b1f0      	cbz	r0, 80038ac <_Z24getFont_tahomabd_20_4bppv+0x58>
 800386e:	4b12      	ldr	r3, [pc, #72]	@ (80038b8 <_Z24getFont_tahomabd_20_4bppv+0x64>)
 8003870:	4912      	ldr	r1, [pc, #72]	@ (80038bc <_Z24getFont_tahomabd_20_4bppv+0x68>)
 8003872:	4813      	ldr	r0, [pc, #76]	@ (80038c0 <_Z24getFont_tahomabd_20_4bppv+0x6c>)
 8003874:	940a      	str	r4, [sp, #40]	@ 0x28
 8003876:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 800387a:	233f      	movs	r3, #63	@ 0x3f
 800387c:	9309      	str	r3, [sp, #36]	@ 0x24
 800387e:	4b11      	ldr	r3, [pc, #68]	@ (80038c4 <_Z24getFont_tahomabd_20_4bppv+0x70>)
 8003880:	9308      	str	r3, [sp, #32]
 8003882:	4b11      	ldr	r3, [pc, #68]	@ (80038c8 <_Z24getFont_tahomabd_20_4bppv+0x74>)
 8003884:	9307      	str	r3, [sp, #28]
 8003886:	2301      	movs	r3, #1
 8003888:	e9cd 4305 	strd	r4, r3, [sp, #20]
 800388c:	9304      	str	r3, [sp, #16]
 800388e:	2304      	movs	r3, #4
 8003890:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8003894:	2314      	movs	r3, #20
 8003896:	9300      	str	r3, [sp, #0]
 8003898:	220c      	movs	r2, #12
 800389a:	9401      	str	r4, [sp, #4]
 800389c:	f7ff f9c0 	bl	8002c20 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80038a0:	480a      	ldr	r0, [pc, #40]	@ (80038cc <_Z24getFont_tahomabd_20_4bppv+0x78>)
 80038a2:	f020 fe3b 	bl	802451c <atexit>
 80038a6:	4628      	mov	r0, r5
 80038a8:	f01f feeb 	bl	8023682 <__cxa_guard_release>
    return tahomabd_20_4bpp;
}
 80038ac:	4804      	ldr	r0, [pc, #16]	@ (80038c0 <_Z24getFont_tahomabd_20_4bppv+0x6c>)
 80038ae:	b00f      	add	sp, #60	@ 0x3c
 80038b0:	bd30      	pop	{r4, r5, pc}
 80038b2:	bf00      	nop
 80038b4:	20002924 	.word	0x20002924
 80038b8:	08026ce0 	.word	0x08026ce0
 80038bc:	08028720 	.word	0x08028720
 80038c0:	20002928 	.word	0x20002928
 80038c4:	08028884 	.word	0x08028884
 80038c8:	08028894 	.word	0x08028894
 80038cc:	08003851 	.word	0x08003851

080038d0 <__tcf_0>:

touchgfx::GeneratedFont& getFont_tahomabd_9_4bpp();

touchgfx::GeneratedFont& getFont_tahomabd_9_4bpp()
{
    static touchgfx::GeneratedFont tahomabd_9_4bpp(glyphs_tahomabd_9_4bpp, 12, 9, 9, 0, 0, 4, 1, 0, 1, unicodes_tahomabd_9_4bpp, kerning_tahomabd_9_4bpp, 63, 0, 0, &tahomabd_contextualFormsTable);
 80038d0:	4770      	bx	lr
	...

080038d4 <_Z23getFont_tahomabd_9_4bppv>:
{
 80038d4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont tahomabd_9_4bpp(glyphs_tahomabd_9_4bpp, 12, 9, 9, 0, 0, 4, 1, 0, 1, unicodes_tahomabd_9_4bpp, kerning_tahomabd_9_4bpp, 63, 0, 0, &tahomabd_contextualFormsTable);
 80038d6:	4d17      	ldr	r5, [pc, #92]	@ (8003934 <_Z23getFont_tahomabd_9_4bppv+0x60>)
 80038d8:	682c      	ldr	r4, [r5, #0]
 80038da:	f014 0401 	ands.w	r4, r4, #1
{
 80038de:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont tahomabd_9_4bpp(glyphs_tahomabd_9_4bpp, 12, 9, 9, 0, 0, 4, 1, 0, 1, unicodes_tahomabd_9_4bpp, kerning_tahomabd_9_4bpp, 63, 0, 0, &tahomabd_contextualFormsTable);
 80038e0:	f3bf 8f5b 	dmb	ish
 80038e4:	d122      	bne.n	800392c <_Z23getFont_tahomabd_9_4bppv+0x58>
 80038e6:	4628      	mov	r0, r5
 80038e8:	f01f febf 	bl	802366a <__cxa_guard_acquire>
 80038ec:	b1f0      	cbz	r0, 800392c <_Z23getFont_tahomabd_9_4bppv+0x58>
 80038ee:	4b12      	ldr	r3, [pc, #72]	@ (8003938 <_Z23getFont_tahomabd_9_4bppv+0x64>)
 80038f0:	4912      	ldr	r1, [pc, #72]	@ (800393c <_Z23getFont_tahomabd_9_4bppv+0x68>)
 80038f2:	4813      	ldr	r0, [pc, #76]	@ (8003940 <_Z23getFont_tahomabd_9_4bppv+0x6c>)
 80038f4:	940a      	str	r4, [sp, #40]	@ 0x28
 80038f6:	e9cd 430b 	strd	r4, r3, [sp, #44]	@ 0x2c
 80038fa:	233f      	movs	r3, #63	@ 0x3f
 80038fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80038fe:	4b11      	ldr	r3, [pc, #68]	@ (8003944 <_Z23getFont_tahomabd_9_4bppv+0x70>)
 8003900:	9308      	str	r3, [sp, #32]
 8003902:	4b11      	ldr	r3, [pc, #68]	@ (8003948 <_Z23getFont_tahomabd_9_4bppv+0x74>)
 8003904:	9307      	str	r3, [sp, #28]
 8003906:	2301      	movs	r3, #1
 8003908:	e9cd 4305 	strd	r4, r3, [sp, #20]
 800390c:	9304      	str	r3, [sp, #16]
 800390e:	2304      	movs	r3, #4
 8003910:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8003914:	2309      	movs	r3, #9
 8003916:	9300      	str	r3, [sp, #0]
 8003918:	220c      	movs	r2, #12
 800391a:	9401      	str	r4, [sp, #4]
 800391c:	f7ff f980 	bl	8002c20 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003920:	480a      	ldr	r0, [pc, #40]	@ (800394c <_Z23getFont_tahomabd_9_4bppv+0x78>)
 8003922:	f020 fdfb 	bl	802451c <atexit>
 8003926:	4628      	mov	r0, r5
 8003928:	f01f feab 	bl	8023682 <__cxa_guard_release>
    return tahomabd_9_4bpp;
}
 800392c:	4804      	ldr	r0, [pc, #16]	@ (8003940 <_Z23getFont_tahomabd_9_4bppv+0x6c>)
 800392e:	b00f      	add	sp, #60	@ 0x3c
 8003930:	bd30      	pop	{r4, r5, pc}
 8003932:	bf00      	nop
 8003934:	20002954 	.word	0x20002954
 8003938:	08026ce0 	.word	0x08026ce0
 800393c:	080287c8 	.word	0x080287c8
 8003940:	20002958 	.word	0x20002958
 8003944:	08028888 	.word	0x08028888
 8003948:	08028898 	.word	0x08028898
 800394c:	080038d1 	.word	0x080038d1

08003950 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003950:	4770      	bx	lr
	...

08003954 <_Z23getFont_verdana_40_4bppv>:
{
 8003954:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003956:	4d16      	ldr	r5, [pc, #88]	@ (80039b0 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8003958:	682c      	ldr	r4, [r5, #0]
 800395a:	f014 0401 	ands.w	r4, r4, #1
{
 800395e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003960:	f3bf 8f5b 	dmb	ish
 8003964:	d120      	bne.n	80039a8 <_Z23getFont_verdana_40_4bppv+0x54>
 8003966:	4628      	mov	r0, r5
 8003968:	f01f fe7f 	bl	802366a <__cxa_guard_acquire>
 800396c:	b1e0      	cbz	r0, 80039a8 <_Z23getFont_verdana_40_4bppv+0x54>
 800396e:	233f      	movs	r3, #63	@ 0x3f
 8003970:	9309      	str	r3, [sp, #36]	@ 0x24
 8003972:	4b10      	ldr	r3, [pc, #64]	@ (80039b4 <_Z23getFont_verdana_40_4bppv+0x60>)
 8003974:	9308      	str	r3, [sp, #32]
 8003976:	4b10      	ldr	r3, [pc, #64]	@ (80039b8 <_Z23getFont_verdana_40_4bppv+0x64>)
 8003978:	4910      	ldr	r1, [pc, #64]	@ (80039bc <_Z23getFont_verdana_40_4bppv+0x68>)
 800397a:	4811      	ldr	r0, [pc, #68]	@ (80039c0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800397c:	940a      	str	r4, [sp, #40]	@ 0x28
 800397e:	2201      	movs	r2, #1
 8003980:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8003984:	2304      	movs	r3, #4
 8003986:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800398a:	2328      	movs	r3, #40	@ 0x28
 800398c:	9300      	str	r3, [sp, #0]
 800398e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8003992:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8003996:	9405      	str	r4, [sp, #20]
 8003998:	f7ff f942 	bl	8002c20 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800399c:	4809      	ldr	r0, [pc, #36]	@ (80039c4 <_Z23getFont_verdana_40_4bppv+0x70>)
 800399e:	f020 fdbd 	bl	802451c <atexit>
 80039a2:	4628      	mov	r0, r5
 80039a4:	f01f fe6d 	bl	8023682 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80039a8:	4805      	ldr	r0, [pc, #20]	@ (80039c0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80039aa:	b00f      	add	sp, #60	@ 0x3c
 80039ac:	bd30      	pop	{r4, r5, pc}
 80039ae:	bf00      	nop
 80039b0:	20002984 	.word	0x20002984
 80039b4:	0802888c 	.word	0x0802888c
 80039b8:	0802889c 	.word	0x0802889c
 80039bc:	08028870 	.word	0x08028870
 80039c0:	20002988 	.word	0x20002988
 80039c4:	08003951 	.word	0x08003951

080039c8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 80039c8:	2000      	movs	r0, #0
 80039ca:	4770      	bx	lr

080039cc <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 80039cc:	2000      	movs	r0, #0
 80039ce:	4770      	bx	lr

080039d0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80039d0:	b40e      	push	{r1, r2, r3}
 80039d2:	b503      	push	{r0, r1, lr}
 80039d4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80039d6:	2100      	movs	r1, #0
{
 80039d8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80039dc:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80039de:	f00e fc5b 	bl	8012298 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80039e2:	b002      	add	sp, #8
 80039e4:	f85d eb04 	ldr.w	lr, [sp], #4
 80039e8:	b003      	add	sp, #12
 80039ea:	4770      	bx	lr

080039ec <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80039ec:	b40c      	push	{r2, r3}
 80039ee:	b507      	push	{r0, r1, r2, lr}
 80039f0:	ab04      	add	r3, sp, #16
 80039f2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80039f6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80039f8:	f00e fc4e 	bl	8012298 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80039fc:	b003      	add	sp, #12
 80039fe:	f85d eb04 	ldr.w	lr, [sp], #4
 8003a02:	b002      	add	sp, #8
 8003a04:	4770      	bx	lr
	...

08003a08 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003a08:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8003a0a:	b510      	push	{r4, lr}
 8003a0c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8003a0e:	b373      	cbz	r3, 8003a6e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8003a10:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8003a12:	b92b      	cbnz	r3, 8003a20 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003a14:	4b18      	ldr	r3, [pc, #96]	@ (8003a78 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8003a16:	4a19      	ldr	r2, [pc, #100]	@ (8003a7c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8003a18:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8003a1a:	4819      	ldr	r0, [pc, #100]	@ (8003a80 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8003a1c:	f020 fd60 	bl	80244e0 <__assert_func>
            return buffer[pos];
 8003a20:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8003a22:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8003a26:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8003a28:	b30b      	cbz	r3, 8003a6e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8003a2a:	f010 fab6 	bl	8013f9a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8003a2e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8003a30:	2b01      	cmp	r3, #1
 8003a32:	d803      	bhi.n	8003a3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003a34:	4b13      	ldr	r3, [pc, #76]	@ (8003a84 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8003a36:	4a14      	ldr	r2, [pc, #80]	@ (8003a88 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8003a38:	21cb      	movs	r1, #203	@ 0xcb
 8003a3a:	e7ee      	b.n	8003a1a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8003a3c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8003a3e:	1c53      	adds	r3, r2, #1
 8003a40:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8003a42:	2b09      	cmp	r3, #9
 8003a44:	4619      	mov	r1, r3
 8003a46:	bf88      	it	hi
 8003a48:	f1a3 010a 	subhi.w	r1, r3, #10
 8003a4c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8003a50:	f640 103f 	movw	r0, #2367	@ 0x93f
 8003a54:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8003a56:	4281      	cmp	r1, r0
 8003a58:	d109      	bne.n	8003a6e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003a5a:	2b0a      	cmp	r3, #10
 8003a5c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003a60:	bf28      	it	cs
 8003a62:	2300      	movcs	r3, #0
 8003a64:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8003a68:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8003a6a:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8003a6c:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8003a6e:	4620      	mov	r0, r4
}
 8003a70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003a74:	f010 b994 	b.w	8013da0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003a78:	08026172 	.word	0x08026172
 8003a7c:	0802617b 	.word	0x0802617b
 8003a80:	08026226 	.word	0x08026226
 8003a84:	08026270 	.word	0x08026270
 8003a88:	0802627e 	.word	0x0802627e

08003a8c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8003a8c:	f010 b94f 	b.w	8013d2e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08003a90 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8003a90:	b510      	push	{r4, lr}
 8003a92:	b086      	sub	sp, #24
 8003a94:	ac02      	add	r4, sp, #8
 8003a96:	e884 0006 	stmia.w	r4, {r1, r2}
 8003a9a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8003a9c:	ab0a      	add	r3, sp, #40	@ 0x28
 8003a9e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8003aa0:	9301      	str	r3, [sp, #4]
 8003aa2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003aa4:	9300      	str	r3, [sp, #0]
 8003aa6:	4621      	mov	r1, r4
 8003aa8:	9b08      	ldr	r3, [sp, #32]
 8003aaa:	f00c ff0b 	bl	80108c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8003aae:	b006      	add	sp, #24
 8003ab0:	bd10      	pop	{r4, pc}
	...

08003ab4 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8003ab4:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8003ab6:	bb18      	cbnz	r0, 8003b00 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8003ab8:	4b12      	ldr	r3, [pc, #72]	@ (8003b04 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8003aba:	4813      	ldr	r0, [pc, #76]	@ (8003b08 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8003abc:	681c      	ldr	r4, [r3, #0]
 8003abe:	4913      	ldr	r1, [pc, #76]	@ (8003b0c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8003ac0:	b1b4      	cbz	r4, 8003af0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8003ac2:	6822      	ldr	r2, [r4, #0]
 8003ac4:	4422      	add	r2, r4
 8003ac6:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8003ac8:	6862      	ldr	r2, [r4, #4]
 8003aca:	4422      	add	r2, r4
 8003acc:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8003ace:	68a2      	ldr	r2, [r4, #8]
 8003ad0:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8003ad2:	4b0f      	ldr	r3, [pc, #60]	@ (8003b10 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8003ad4:	2200      	movs	r2, #0
 8003ad6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8003ad8:	f000 f838 	bl	8003b4c <_ZN17TypedTextDatabase8getFontsEv>
 8003adc:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8003ade:	f000 f833 	bl	8003b48 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8003ae2:	4b0c      	ldr	r3, [pc, #48]	@ (8003b14 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003ae4:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003ae6:	4b0c      	ldr	r3, [pc, #48]	@ (8003b18 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003ae8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003aea:	4b0c      	ldr	r3, [pc, #48]	@ (8003b1c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003aec:	8018      	strh	r0, [r3, #0]
    }
}
 8003aee:	e007      	b.n	8003b00 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8003af0:	4b0b      	ldr	r3, [pc, #44]	@ (8003b20 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8003af2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003af4:	4b0b      	ldr	r3, [pc, #44]	@ (8003b24 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003af6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003af8:	4b0b      	ldr	r3, [pc, #44]	@ (8003b28 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003afa:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003afc:	2c00      	cmp	r4, #0
 8003afe:	d1e8      	bne.n	8003ad2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8003b00:	bd38      	pop	{r3, r4, r5, pc}
 8003b02:	bf00      	nop
 8003b04:	200029c0 	.word	0x200029c0
 8003b08:	200029b8 	.word	0x200029b8
 8003b0c:	200029b4 	.word	0x200029b4
 8003b10:	200029bc 	.word	0x200029bc
 8003b14:	20013bc4 	.word	0x20013bc4
 8003b18:	20013bcc 	.word	0x20013bcc
 8003b1c:	20013bc8 	.word	0x20013bc8
 8003b20:	080288c0 	.word	0x080288c0
 8003b24:	080288a0 	.word	0x080288a0
 8003b28:	08028950 	.word	0x08028950

08003b2c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8003b2c:	4b04      	ldr	r3, [pc, #16]	@ (8003b40 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8003b2e:	681b      	ldr	r3, [r3, #0]
 8003b30:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8003b34:	4b03      	ldr	r3, [pc, #12]	@ (8003b44 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8003b36:	681b      	ldr	r3, [r3, #0]
}
 8003b38:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003b3c:	4770      	bx	lr
 8003b3e:	bf00      	nop
 8003b40:	200029b4 	.word	0x200029b4
 8003b44:	200029b8 	.word	0x200029b8

08003b48 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003b48:	2008      	movs	r0, #8
 8003b4a:	4770      	bx	lr

08003b4c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003b4c:	4800      	ldr	r0, [pc, #0]	@ (8003b50 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8003b4e:	4770      	bx	lr
 8003b50:	200029c4 	.word	0x200029c4

08003b54 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_tahomabd_9_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003b54:	b510      	push	{r4, lr}
    &(getFont_tahomabd_20_4bpp()),
 8003b56:	f7ff fe7d 	bl	8003854 <_Z24getFont_tahomabd_20_4bppv>
};
 8003b5a:	4c06      	ldr	r4, [pc, #24]	@ (8003b74 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8003b5c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8003b5e:	f7ff fef9 	bl	8003954 <_Z23getFont_verdana_40_4bppv>
};
 8003b62:	6060      	str	r0, [r4, #4]
    &(getFont_tahomabd_12_4bpp()),
 8003b64:	f7ff fe36 	bl	80037d4 <_Z24getFont_tahomabd_12_4bppv>
};
 8003b68:	60a0      	str	r0, [r4, #8]
    &(getFont_tahomabd_9_4bpp())
 8003b6a:	f7ff feb3 	bl	80038d4 <_Z23getFont_tahomabd_9_4bppv>
};
 8003b6e:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8003b70:	bd10      	pop	{r4, pc}
 8003b72:	bf00      	nop
 8003b74:	200029c4 	.word	0x200029c4

08003b78 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 8003b78:	b510      	push	{r4, lr}
    pointArray = 0;
 8003b7a:	2400      	movs	r4, #0
 8003b7c:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 8003b7e:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 8003b80:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 8003b82:	601c      	str	r4, [r3, #0]
}
 8003b84:	bd10      	pop	{r4, pc}

08003b86 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003b86:	4770      	bx	lr

08003b88 <_ZN19FrontendApplicationD0Ev>:
 8003b88:	b510      	push	{r4, lr}
 8003b8a:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003b8e:	4604      	mov	r4, r0
 8003b90:	f01f fd69 	bl	8023666 <_ZdlPvj>
 8003b94:	4620      	mov	r0, r4
 8003b96:	bd10      	pop	{r4, pc}

08003b98 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003b98:	b510      	push	{r4, lr}
 8003b9a:	4604      	mov	r4, r0
    {
        model.tick();
 8003b9c:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8003ba0:	f000 f813 	bl	8003bca <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003ba4:	4620      	mov	r0, r4
    }
 8003ba6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003baa:	f00d bb6f 	b.w	801128c <_ZN8touchgfx11Application15handleTickEventEv>
	...

08003bb0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003bb0:	b510      	push	{r4, lr}
 8003bb2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003bb4:	f7fe ffba 	bl	8002b2c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003bb8:	4b01      	ldr	r3, [pc, #4]	@ (8003bc0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8003bba:	6023      	str	r3, [r4, #0]
{

}
 8003bbc:	4620      	mov	r0, r4
 8003bbe:	bd10      	pop	{r4, pc}
 8003bc0:	08027140 	.word	0x08027140

08003bc4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003bc4:	2200      	movs	r2, #0
 8003bc6:	6002      	str	r2, [r0, #0]
{

}
 8003bc8:	4770      	bx	lr

08003bca <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8003bca:	4770      	bx	lr

08003bcc <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8003bcc:	4770      	bx	lr

08003bce <_ZThn4_N16Screen1PresenterD1Ev>:
 8003bce:	3804      	subs	r0, #4
 8003bd0:	4770      	bx	lr

08003bd2 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8003bd2:	4770      	bx	lr

08003bd4 <_ZN16Screen1PresenterD0Ev>:
 8003bd4:	b510      	push	{r4, lr}
 8003bd6:	2110      	movs	r1, #16
 8003bd8:	4604      	mov	r4, r0
 8003bda:	f01f fd44 	bl	8023666 <_ZdlPvj>
 8003bde:	4620      	mov	r0, r4
 8003be0:	bd10      	pop	{r4, pc}

08003be2 <_ZThn4_N16Screen1PresenterD0Ev>:
 8003be2:	f1a0 0004 	sub.w	r0, r0, #4
 8003be6:	e7f5      	b.n	8003bd4 <_ZN16Screen1PresenterD0Ev>

08003be8 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8003be8:	2200      	movs	r2, #0
 8003bea:	6082      	str	r2, [r0, #8]
    : view(v)
 8003bec:	4a02      	ldr	r2, [pc, #8]	@ (8003bf8 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 8003bee:	6002      	str	r2, [r0, #0]
 8003bf0:	3218      	adds	r2, #24
 8003bf2:	6042      	str	r2, [r0, #4]
 8003bf4:	60c1      	str	r1, [r0, #12]
}
 8003bf6:	4770      	bx	lr
 8003bf8:	08027194 	.word	0x08027194

08003bfc <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8003bfc:	4770      	bx	lr

08003bfe <_ZN11Screen1View15handleDragEventERKN8touchgfx9DragEventE>:
	default: break;
	}
}

void Screen1View::handleDragEvent(const DragEvent& evt)
{
 8003bfe:	460b      	mov	r3, r1
    Touchpad_Drag(evt.getNewX(), evt.getNewY());
 8003c00:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
 8003c04:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8003c08:	f000 bab2 	b.w	8004170 <Touchpad_Drag>

08003c0c <_ZN11Screen1View15btnUpSenClickedEv>:
}

void Screen1View::btnUpSenClicked()      { Touchpad_SetMouseGain (gMouseGain  < 8 ? ++gMouseGain  : 8); }
 8003c0c:	4a07      	ldr	r2, [pc, #28]	@ (8003c2c <_ZN11Screen1View15btnUpSenClickedEv+0x20>)
 8003c0e:	7813      	ldrb	r3, [r2, #0]
 8003c10:	b25b      	sxtb	r3, r3
 8003c12:	2b07      	cmp	r3, #7
 8003c14:	bfdd      	ittte	le
 8003c16:	7813      	ldrble	r3, [r2, #0]
 8003c18:	3301      	addle	r3, #1
 8003c1a:	f003 00ff 	andle.w	r0, r3, #255	@ 0xff
 8003c1e:	2008      	movgt	r0, #8
 8003c20:	bfdc      	itt	le
 8003c22:	b25b      	sxtble	r3, r3
 8003c24:	7013      	strble	r3, [r2, #0]
 8003c26:	f000 baeb 	b.w	8004200 <Touchpad_SetMouseGain>
 8003c2a:	bf00      	nop
 8003c2c:	20000065 	.word	0x20000065

08003c30 <_ZN11Screen1View17btnDownSenClickedEv>:
void Screen1View::btnDownSenClicked()    { Touchpad_SetMouseGain (gMouseGain  > 1 ? --gMouseGain  : 1); }
 8003c30:	4a07      	ldr	r2, [pc, #28]	@ (8003c50 <_ZN11Screen1View17btnDownSenClickedEv+0x20>)
 8003c32:	7813      	ldrb	r3, [r2, #0]
 8003c34:	b25b      	sxtb	r3, r3
 8003c36:	2b01      	cmp	r3, #1
 8003c38:	bfc3      	ittte	gt
 8003c3a:	7813      	ldrbgt	r3, [r2, #0]
 8003c3c:	f103 33ff 	addgt.w	r3, r3, #4294967295
 8003c40:	f003 00ff 	andgt.w	r0, r3, #255	@ 0xff
 8003c44:	2001      	movle	r0, #1
 8003c46:	bfc4      	itt	gt
 8003c48:	b25b      	sxtbgt	r3, r3
 8003c4a:	7013      	strbgt	r3, [r2, #0]
 8003c4c:	f000 bad8 	b.w	8004200 <Touchpad_SetMouseGain>
 8003c50:	20000065 	.word	0x20000065

08003c54 <_ZN11Screen1View18btnUpScrollClickedEv>:
void Screen1View::btnUpScrollClicked()   { Touchpad_SetScrollGain(gScrollGain < 8 ? ++gScrollGain : 8); }
 8003c54:	4a07      	ldr	r2, [pc, #28]	@ (8003c74 <_ZN11Screen1View18btnUpScrollClickedEv+0x20>)
 8003c56:	7813      	ldrb	r3, [r2, #0]
 8003c58:	b25b      	sxtb	r3, r3
 8003c5a:	2b07      	cmp	r3, #7
 8003c5c:	bfdd      	ittte	le
 8003c5e:	7813      	ldrble	r3, [r2, #0]
 8003c60:	3301      	addle	r3, #1
 8003c62:	f003 00ff 	andle.w	r0, r3, #255	@ 0xff
 8003c66:	2008      	movgt	r0, #8
 8003c68:	bfdc      	itt	le
 8003c6a:	b25b      	sxtble	r3, r3
 8003c6c:	7013      	strble	r3, [r2, #0]
 8003c6e:	f000 bad3 	b.w	8004218 <Touchpad_SetScrollGain>
 8003c72:	bf00      	nop
 8003c74:	20000064 	.word	0x20000064

08003c78 <_ZN11Screen1View20btnDownScrollClickedEv>:
void Screen1View::btnDownScrollClicked() { Touchpad_SetScrollGain(gScrollGain > 1 ? --gScrollGain : 1); }
 8003c78:	4a07      	ldr	r2, [pc, #28]	@ (8003c98 <_ZN11Screen1View20btnDownScrollClickedEv+0x20>)
 8003c7a:	7813      	ldrb	r3, [r2, #0]
 8003c7c:	b25b      	sxtb	r3, r3
 8003c7e:	2b01      	cmp	r3, #1
 8003c80:	bfc3      	ittte	gt
 8003c82:	7813      	ldrbgt	r3, [r2, #0]
 8003c84:	f103 33ff 	addgt.w	r3, r3, #4294967295
 8003c88:	f003 00ff 	andgt.w	r0, r3, #255	@ 0xff
 8003c8c:	2001      	movle	r0, #1
 8003c8e:	bfc4      	itt	gt
 8003c90:	b25b      	sxtbgt	r3, r3
 8003c92:	7013      	strbgt	r3, [r2, #0]
 8003c94:	f000 bac0 	b.w	8004218 <Touchpad_SetScrollGain>
 8003c98:	20000064 	.word	0x20000064

08003c9c <_ZN11Screen1View15recMacroClickedEv>:

void Screen1View::recMacroClicked()
{
    macroRecord();
 8003c9c:	f000 b9be 	b.w	800401c <macroRecord>

08003ca0 <_ZN11Screen1View16playMacroClickedEv>:

}

void Screen1View::playMacroClicked()
{
 8003ca0:	b508      	push	{r3, lr}
    if (!Macro_IsRecording())
 8003ca2:	f000 f92f 	bl	8003f04 <Macro_IsRecording>
 8003ca6:	b918      	cbnz	r0, 8003cb0 <_ZN11Screen1View16playMacroClickedEv+0x10>
        macroPlay();
}
 8003ca8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        macroPlay();
 8003cac:	f000 b9b8 	b.w	8004020 <macroPlay>
}
 8003cb0:	bd08      	pop	{r3, pc}

08003cb2 <_ZN11Screen1View15handleTickEventEv>:


void Screen1View::handleTickEvent()
{
    Screen1ViewBase::handleTickEvent();
    Macro_Service();
 8003cb2:	f000 b97d 	b.w	8003fb0 <Macro_Service>
	...

08003cb8 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8003cb8:	b510      	push	{r4, lr}
 8003cba:	4b03      	ldr	r3, [pc, #12]	@ (8003cc8 <_ZN11Screen1ViewD1Ev+0x10>)
 8003cbc:	6003      	str	r3, [r0, #0]
 8003cbe:	4604      	mov	r4, r0
 8003cc0:	f7fe fff5 	bl	8002cae <_ZN15Screen1ViewBaseD1Ev>
 8003cc4:	4620      	mov	r0, r4
 8003cc6:	bd10      	pop	{r4, pc}
 8003cc8:	080271bc 	.word	0x080271bc

08003ccc <_ZN11Screen1ViewD0Ev>:
 8003ccc:	b510      	push	{r4, lr}
 8003cce:	4604      	mov	r4, r0
 8003cd0:	f7ff fff2 	bl	8003cb8 <_ZN11Screen1ViewD1Ev>
 8003cd4:	4620      	mov	r0, r4
 8003cd6:	f44f 61cb 	mov.w	r1, #1624	@ 0x658
 8003cda:	f01f fcc4 	bl	8023666 <_ZdlPvj>
 8003cde:	4620      	mov	r0, r4
 8003ce0:	bd10      	pop	{r4, pc}
	...

08003ce4 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8003ce4:	b510      	push	{r4, lr}
 8003ce6:	4604      	mov	r4, r0
    , lastY(-1)
 8003ce8:	f7ff fa64 	bl	80031b4 <_ZN15Screen1ViewBaseC1Ev>
 8003cec:	4b03      	ldr	r3, [pc, #12]	@ (8003cfc <_ZN11Screen1ViewC1Ev+0x18>)
 8003cee:	6023      	str	r3, [r4, #0]
    : lastX(-1)
 8003cf0:	f04f 33ff 	mov.w	r3, #4294967295
 8003cf4:	f8c4 3654 	str.w	r3, [r4, #1620]	@ 0x654
}
 8003cf8:	4620      	mov	r0, r4
 8003cfa:	bd10      	pop	{r4, pc}
 8003cfc:	080271bc 	.word	0x080271bc

08003d00 <_ZN11Screen1View11setupScreenEv>:
{
 8003d00:	b513      	push	{r0, r1, r4, lr}
 8003d02:	4604      	mov	r4, r0
    Screen1ViewBase::setupScreen();
 8003d04:	f7fe ffd4 	bl	8002cb0 <_ZN15Screen1ViewBase11setupScreenEv>
    Rect r = touchArea.getAbsoluteRect();
 8003d08:	f104 0198 	add.w	r1, r4, #152	@ 0x98
 8003d0c:	4668      	mov	r0, sp
 8003d0e:	f00e fc89 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
    Touchpad_Init(r.x, r.y, r.width, r.height);
 8003d12:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8003d16:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8003d1a:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8003d1e:	f9bd 0000 	ldrsh.w	r0, [sp]
}
 8003d22:	b002      	add	sp, #8
 8003d24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    Touchpad_Init(r.x, r.y, r.width, r.height);
 8003d28:	f000 b9f8 	b.w	800411c <Touchpad_Init>

08003d2c <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE>:
{
 8003d2c:	b510      	push	{r4, lr}
 8003d2e:	460c      	mov	r4, r1
	Screen1ViewBase::handleClickEvent(evt);
 8003d30:	f00f f918 	bl	8012f64 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
 8003d34:	7923      	ldrb	r3, [r4, #4]
	switch (evt.getType())
 8003d36:	b11b      	cbz	r3, 8003d40 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x14>
 8003d38:	3b01      	subs	r3, #1
 8003d3a:	2b01      	cmp	r3, #1
 8003d3c:	d908      	bls.n	8003d50 <_ZN11Screen1View16handleClickEventERKN8touchgfx10ClickEventE+0x24>
}
 8003d3e:	bd10      	pop	{r4, pc}
	case ClickEvent::PRESSED:   Touchpad_Press  (evt.getX(), evt.getY()); break;
 8003d40:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8003d44:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
}
 8003d48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	case ClickEvent::PRESSED:   Touchpad_Press  (evt.getX(), evt.getY()); break;
 8003d4c:	f000 ba02 	b.w	8004154 <Touchpad_Press>
}
 8003d50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	case ClickEvent::CANCEL:    Touchpad_Release();                      break;
 8003d54:	f000 ba48 	b.w	80041e8 <Touchpad_Release>

08003d58 <Mouse_GetButtons>:
    Mouse_SendReport(buttons, x, y, wheel);
}

uint8_t Mouse_GetButtons(void)
{
    return current_buttons;
 8003d58:	4b01      	ldr	r3, [pc, #4]	@ (8003d60 <Mouse_GetButtons+0x8>)
 8003d5a:	7818      	ldrb	r0, [r3, #0]
}
 8003d5c:	4770      	bx	lr
 8003d5e:	bf00      	nop
 8003d60:	200029e0 	.word	0x200029e0

08003d64 <Mouse_EXTI_Callback>:

void Mouse_EXTI_Callback(uint16_t GPIO_Pin)
{
 8003d64:	b510      	push	{r4, lr}
 8003d66:	4604      	mov	r4, r0
    uint32_t now = HAL_GetTick();
 8003d68:	f000 fd2a 	bl	80047c0 <HAL_GetTick>

    if (GPIO_Pin == GPIO_PIN_7 && (now - last_left_tick) > DEBOUNCE_MS) // LEFT – PA7
 8003d6c:	2c80      	cmp	r4, #128	@ 0x80
 8003d6e:	d109      	bne.n	8003d84 <Mouse_EXTI_Callback+0x20>
 8003d70:	4a0e      	ldr	r2, [pc, #56]	@ (8003dac <Mouse_EXTI_Callback+0x48>)
 8003d72:	6813      	ldr	r3, [r2, #0]
 8003d74:	1ac3      	subs	r3, r0, r3
 8003d76:	2bc8      	cmp	r3, #200	@ 0xc8
 8003d78:	d903      	bls.n	8003d82 <Mouse_EXTI_Callback+0x1e>
    {
        last_left_tick = now;
        flag_left_click = 1;
 8003d7a:	4b0d      	ldr	r3, [pc, #52]	@ (8003db0 <Mouse_EXTI_Callback+0x4c>)
        last_left_tick = now;
 8003d7c:	6010      	str	r0, [r2, #0]
#endif
    }
    else if (GPIO_Pin == GPIO_PIN_6 && (now - last_multi_tick) > DEBOUNCE_MS) // MULTI – PF6
    {
        last_multi_tick = now;
        flag_multi_toggle = 1;
 8003d7e:	2201      	movs	r2, #1
 8003d80:	701a      	strb	r2, [r3, #0]
#ifdef DEBUG_UART_CLICK
        const char *msg = "\nmulti click";
        HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), 10);
#endif
    }
}
 8003d82:	bd10      	pop	{r4, pc}
    else if (GPIO_Pin == GPIO_PIN_5 && (now - last_right_tick) > DEBOUNCE_MS) // RIGHT – PC5
 8003d84:	2c20      	cmp	r4, #32
 8003d86:	d107      	bne.n	8003d98 <Mouse_EXTI_Callback+0x34>
 8003d88:	4a0a      	ldr	r2, [pc, #40]	@ (8003db4 <Mouse_EXTI_Callback+0x50>)
 8003d8a:	6813      	ldr	r3, [r2, #0]
 8003d8c:	1ac3      	subs	r3, r0, r3
 8003d8e:	2bc8      	cmp	r3, #200	@ 0xc8
 8003d90:	d9f7      	bls.n	8003d82 <Mouse_EXTI_Callback+0x1e>
        flag_right_click = 1;
 8003d92:	4b09      	ldr	r3, [pc, #36]	@ (8003db8 <Mouse_EXTI_Callback+0x54>)
        last_right_tick = now;
 8003d94:	6010      	str	r0, [r2, #0]
        flag_right_click = 1;
 8003d96:	e7f2      	b.n	8003d7e <Mouse_EXTI_Callback+0x1a>
    else if (GPIO_Pin == GPIO_PIN_6 && (now - last_multi_tick) > DEBOUNCE_MS) // MULTI – PF6
 8003d98:	2c40      	cmp	r4, #64	@ 0x40
 8003d9a:	d1f2      	bne.n	8003d82 <Mouse_EXTI_Callback+0x1e>
 8003d9c:	4a07      	ldr	r2, [pc, #28]	@ (8003dbc <Mouse_EXTI_Callback+0x58>)
 8003d9e:	6813      	ldr	r3, [r2, #0]
 8003da0:	1ac3      	subs	r3, r0, r3
 8003da2:	2bc8      	cmp	r3, #200	@ 0xc8
 8003da4:	d9ed      	bls.n	8003d82 <Mouse_EXTI_Callback+0x1e>
        flag_multi_toggle = 1;
 8003da6:	4b06      	ldr	r3, [pc, #24]	@ (8003dc0 <Mouse_EXTI_Callback+0x5c>)
        last_multi_tick = now;
 8003da8:	6010      	str	r0, [r2, #0]
        flag_multi_toggle = 1;
 8003daa:	e7e8      	b.n	8003d7e <Mouse_EXTI_Callback+0x1a>
 8003dac:	200029dc 	.word	0x200029dc
 8003db0:	200029e5 	.word	0x200029e5
 8003db4:	200029d8 	.word	0x200029d8
 8003db8:	200029e4 	.word	0x200029e4
 8003dbc:	200029d4 	.word	0x200029d4
 8003dc0:	200029e3 	.word	0x200029e3

08003dc4 <Mouse_HandleClick>:

// Main loop – call often from scheduler

void Mouse_HandleClick(void)
{
 8003dc4:	b570      	push	{r4, r5, r6, lr}
    // 1. Toggle Multitask (drag lock) mode
    if (flag_multi_toggle)
 8003dc6:	4b2c      	ldr	r3, [pc, #176]	@ (8003e78 <Mouse_HandleClick+0xb4>)
 8003dc8:	781a      	ldrb	r2, [r3, #0]
 8003dca:	b1b2      	cbz	r2, 8003dfa <Mouse_HandleClick+0x36>
    {
        flag_multi_toggle = 0;
 8003dcc:	2200      	movs	r2, #0
 8003dce:	701a      	strb	r2, [r3, #0]
        gMultitaskMode ^= 1;   // flip
 8003dd0:	4b2a      	ldr	r3, [pc, #168]	@ (8003e7c <Mouse_HandleClick+0xb8>)
 8003dd2:	781a      	ldrb	r2, [r3, #0]
 8003dd4:	f082 0201 	eor.w	r2, r2, #1
 8003dd8:	701a      	strb	r2, [r3, #0]

        if (!gMultitaskMode && hold_left)
 8003dda:	781b      	ldrb	r3, [r3, #0]
 8003ddc:	f003 04ff 	and.w	r4, r3, #255	@ 0xff
 8003de0:	b95b      	cbnz	r3, 8003dfa <Mouse_HandleClick+0x36>
 8003de2:	4d27      	ldr	r5, [pc, #156]	@ (8003e80 <Mouse_HandleClick+0xbc>)
 8003de4:	782b      	ldrb	r3, [r5, #0]
 8003de6:	b143      	cbz	r3, 8003dfa <Mouse_HandleClick+0x36>
    current_buttons = buttons;
 8003de8:	4b26      	ldr	r3, [pc, #152]	@ (8003e84 <Mouse_HandleClick+0xc0>)
    Mouse_SendReport(buttons, x, y, wheel);
 8003dea:	4622      	mov	r2, r4
    current_buttons = buttons;
 8003dec:	701c      	strb	r4, [r3, #0]
    Mouse_SendReport(buttons, x, y, wheel);
 8003dee:	4621      	mov	r1, r4
 8003df0:	4623      	mov	r3, r4
 8003df2:	4620      	mov	r0, r4
 8003df4:	f000 f84c 	bl	8003e90 <Mouse_SendReport>
        {
            // Exiting – release left button
            send_report(0x00, 0, 0, 0);
            hold_left = 0;
 8003df8:	702c      	strb	r4, [r5, #0]
        }
    }

    // Handle LEFT button event
    if (flag_left_click)
 8003dfa:	4a23      	ldr	r2, [pc, #140]	@ (8003e88 <Mouse_HandleClick+0xc4>)
 8003dfc:	7813      	ldrb	r3, [r2, #0]
 8003dfe:	b183      	cbz	r3, 8003e22 <Mouse_HandleClick+0x5e>
    {
        flag_left_click = 0;
 8003e00:	2300      	movs	r3, #0
 8003e02:	7013      	strb	r3, [r2, #0]

        if (gMultitaskMode)
 8003e04:	4a1d      	ldr	r2, [pc, #116]	@ (8003e7c <Mouse_HandleClick+0xb8>)
 8003e06:	4e1f      	ldr	r6, [pc, #124]	@ (8003e84 <Mouse_HandleClick+0xc0>)
 8003e08:	7812      	ldrb	r2, [r2, #0]
 8003e0a:	2501      	movs	r5, #1
 8003e0c:	f002 04ff 	and.w	r4, r2, #255	@ 0xff
    current_buttons = buttons;
 8003e10:	7035      	strb	r5, [r6, #0]
        if (gMultitaskMode)
 8003e12:	b1fa      	cbz	r2, 8003e54 <Mouse_HandleClick+0x90>
    Mouse_SendReport(buttons, x, y, wheel);
 8003e14:	461a      	mov	r2, r3
 8003e16:	4619      	mov	r1, r3
 8003e18:	4628      	mov	r0, r5
 8003e1a:	f000 f839 	bl	8003e90 <Mouse_SendReport>
        {
            // Press & HOLD (drag lock)
            send_report(0x01, 0, 0, 0);
            hold_left = 1;
 8003e1e:	4b18      	ldr	r3, [pc, #96]	@ (8003e80 <Mouse_HandleClick+0xbc>)
 8003e20:	701d      	strb	r5, [r3, #0]
            send_report(0x00, 0, 0, 0);   // release
        }
    }

    // Handle RIGHT button event
    if (flag_right_click)
 8003e22:	4b1a      	ldr	r3, [pc, #104]	@ (8003e8c <Mouse_HandleClick+0xc8>)
 8003e24:	781a      	ldrb	r2, [r3, #0]
 8003e26:	b332      	cbz	r2, 8003e76 <Mouse_HandleClick+0xb2>
    {
        flag_right_click = 0;
 8003e28:	2400      	movs	r4, #0
    current_buttons = buttons;
 8003e2a:	4d16      	ldr	r5, [pc, #88]	@ (8003e84 <Mouse_HandleClick+0xc0>)
        flag_right_click = 0;
 8003e2c:	701c      	strb	r4, [r3, #0]
    Mouse_SendReport(buttons, x, y, wheel);
 8003e2e:	4622      	mov	r2, r4
 8003e30:	4623      	mov	r3, r4
 8003e32:	4621      	mov	r1, r4
    current_buttons = buttons;
 8003e34:	2002      	movs	r0, #2
 8003e36:	7028      	strb	r0, [r5, #0]
    Mouse_SendReport(buttons, x, y, wheel);
 8003e38:	f000 f82a 	bl	8003e90 <Mouse_SendReport>

        send_report(0x02, 0, 0, 0);   // press
        HAL_Delay(20);
 8003e3c:	2014      	movs	r0, #20
 8003e3e:	f000 fcc5 	bl	80047cc <HAL_Delay>
    current_buttons = buttons;
 8003e42:	702c      	strb	r4, [r5, #0]
    Mouse_SendReport(buttons, x, y, wheel);
 8003e44:	4623      	mov	r3, r4
 8003e46:	4622      	mov	r2, r4
 8003e48:	4621      	mov	r1, r4
 8003e4a:	4620      	mov	r0, r4
        send_report(0x00, 0, 0, 0);   // release
    }
}
 8003e4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    Mouse_SendReport(buttons, x, y, wheel);
 8003e50:	f000 b81e 	b.w	8003e90 <Mouse_SendReport>
 8003e54:	4623      	mov	r3, r4
 8003e56:	4622      	mov	r2, r4
 8003e58:	4621      	mov	r1, r4
 8003e5a:	4628      	mov	r0, r5
 8003e5c:	f000 f818 	bl	8003e90 <Mouse_SendReport>
            HAL_Delay(20);
 8003e60:	2014      	movs	r0, #20
 8003e62:	f000 fcb3 	bl	80047cc <HAL_Delay>
    Mouse_SendReport(buttons, x, y, wheel);
 8003e66:	4623      	mov	r3, r4
 8003e68:	4622      	mov	r2, r4
 8003e6a:	4621      	mov	r1, r4
 8003e6c:	4620      	mov	r0, r4
    current_buttons = buttons;
 8003e6e:	7034      	strb	r4, [r6, #0]
    Mouse_SendReport(buttons, x, y, wheel);
 8003e70:	f000 f80e 	bl	8003e90 <Mouse_SendReport>
}
 8003e74:	e7d5      	b.n	8003e22 <Mouse_HandleClick+0x5e>
}
 8003e76:	bd70      	pop	{r4, r5, r6, pc}
 8003e78:	200029e3 	.word	0x200029e3
 8003e7c:	200029e2 	.word	0x200029e2
 8003e80:	200029e1 	.word	0x200029e1
 8003e84:	200029e0 	.word	0x200029e0
 8003e88:	200029e5 	.word	0x200029e5
 8003e8c:	200029e4 	.word	0x200029e4

08003e90 <Mouse_SendReport>:
#include "mouse_macro.h"

extern USBD_HandleTypeDef hUsbDeviceHS;

void Mouse_SendReport(uint8_t buttons, int8_t x, int8_t y, int8_t wheel)
{
 8003e90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003e92:	4607      	mov	r7, r0
 8003e94:	460e      	mov	r6, r1
 8003e96:	4615      	mov	r5, r2
 8003e98:	461c      	mov	r4, r3
    Macro_RecordEvent(buttons, x, y, wheel);
 8003e9a:	f000 f839 	bl	8003f10 <Macro_RecordEvent>

    uint8_t report[4] = {buttons, x, y, wheel};
    USBD_HID_SendReport(&hUsbDeviceHS, report, sizeof(report));
 8003e9e:	2204      	movs	r2, #4
 8003ea0:	eb0d 0102 	add.w	r1, sp, r2
 8003ea4:	4806      	ldr	r0, [pc, #24]	@ (8003ec0 <Mouse_SendReport+0x30>)
    uint8_t report[4] = {buttons, x, y, wheel};
 8003ea6:	f88d 7004 	strb.w	r7, [sp, #4]
 8003eaa:	f88d 6005 	strb.w	r6, [sp, #5]
 8003eae:	f88d 5006 	strb.w	r5, [sp, #6]
 8003eb2:	f88d 4007 	strb.w	r4, [sp, #7]
    USBD_HID_SendReport(&hUsbDeviceHS, report, sizeof(report));
 8003eb6:	f007 fa06 	bl	800b2c6 <USBD_HID_SendReport>
}
 8003eba:	b003      	add	sp, #12
 8003ebc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003ebe:	bf00      	nop
 8003ec0:	20001c60 	.word	0x20001c60

08003ec4 <Macro_StartRecording>:
static uint32_t   play_last_tick   = 0; // tick when previous event sent

// Recording
void Macro_StartRecording(void)
{
    macro_count = 0;
 8003ec4:	4a06      	ldr	r2, [pc, #24]	@ (8003ee0 <Macro_StartRecording+0x1c>)
{
 8003ec6:	b508      	push	{r3, lr}
    macro_count = 0;
 8003ec8:	2300      	movs	r3, #0
 8003eca:	8013      	strh	r3, [r2, #0]
    recording   = 1;
 8003ecc:	4a05      	ldr	r2, [pc, #20]	@ (8003ee4 <Macro_StartRecording+0x20>)
 8003ece:	2101      	movs	r1, #1
 8003ed0:	7011      	strb	r1, [r2, #0]
    playing     = 0;               // cannot play while recording
 8003ed2:	4a05      	ldr	r2, [pc, #20]	@ (8003ee8 <Macro_StartRecording+0x24>)
 8003ed4:	7013      	strb	r3, [r2, #0]
    last_tick   = HAL_GetTick();
 8003ed6:	f000 fc73 	bl	80047c0 <HAL_GetTick>
 8003eda:	4b04      	ldr	r3, [pc, #16]	@ (8003eec <Macro_StartRecording+0x28>)
 8003edc:	6018      	str	r0, [r3, #0]
}
 8003ede:	bd08      	pop	{r3, pc}
 8003ee0:	200029f6 	.word	0x200029f6
 8003ee4:	200029f4 	.word	0x200029f4
 8003ee8:	200029ee 	.word	0x200029ee
 8003eec:	200029f0 	.word	0x200029f0

08003ef0 <Macro_ToggleRecording>:
    recording = 0;
}

void Macro_ToggleRecording(void)
{
    if (recording)
 8003ef0:	4b03      	ldr	r3, [pc, #12]	@ (8003f00 <Macro_ToggleRecording+0x10>)
 8003ef2:	781a      	ldrb	r2, [r3, #0]
 8003ef4:	b112      	cbz	r2, 8003efc <Macro_ToggleRecording+0xc>
    recording = 0;
 8003ef6:	2200      	movs	r2, #0
 8003ef8:	701a      	strb	r2, [r3, #0]
        Macro_StopRecording();
    else
        Macro_StartRecording();
}
 8003efa:	4770      	bx	lr
        Macro_StartRecording();
 8003efc:	f7ff bfe2 	b.w	8003ec4 <Macro_StartRecording>
 8003f00:	200029f4 	.word	0x200029f4

08003f04 <Macro_IsRecording>:

uint8_t Macro_IsRecording(void)
{
    return recording;
}
 8003f04:	4b01      	ldr	r3, [pc, #4]	@ (8003f0c <Macro_IsRecording+0x8>)
 8003f06:	7818      	ldrb	r0, [r3, #0]
 8003f08:	4770      	bx	lr
 8003f0a:	bf00      	nop
 8003f0c:	200029f4 	.word	0x200029f4

08003f10 <Macro_RecordEvent>:

// Called by Mouse_SendReport() each time an HID report is emitted
void Macro_RecordEvent(uint8_t buttons, int8_t x, int8_t y, int8_t wheel)
{
 8003f10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f14:	469a      	mov	sl, r3
    if (!recording || playing)                 // ignore when not recording or while playing
 8003f16:	4b11      	ldr	r3, [pc, #68]	@ (8003f5c <Macro_RecordEvent+0x4c>)
 8003f18:	781b      	ldrb	r3, [r3, #0]
{
 8003f1a:	4680      	mov	r8, r0
 8003f1c:	460f      	mov	r7, r1
 8003f1e:	4691      	mov	r9, r2
    if (!recording || playing)                 // ignore when not recording or while playing
 8003f20:	b1d3      	cbz	r3, 8003f58 <Macro_RecordEvent+0x48>
 8003f22:	4b0f      	ldr	r3, [pc, #60]	@ (8003f60 <Macro_RecordEvent+0x50>)
 8003f24:	781b      	ldrb	r3, [r3, #0]
 8003f26:	b9bb      	cbnz	r3, 8003f58 <Macro_RecordEvent+0x48>
        return;

    if (macro_count >= MAX_MACRO_EVENTS)
 8003f28:	4e0e      	ldr	r6, [pc, #56]	@ (8003f64 <Macro_RecordEvent+0x54>)
 8003f2a:	8833      	ldrh	r3, [r6, #0]
 8003f2c:	2b7f      	cmp	r3, #127	@ 0x7f
 8003f2e:	d813      	bhi.n	8003f58 <Macro_RecordEvent+0x48>
        return;                                // buffer full – ignore additional events

    uint32_t now = HAL_GetTick();
 8003f30:	f000 fc46 	bl	80047c0 <HAL_GetTick>
    uint32_t delay = now - last_tick;
 8003f34:	4a0c      	ldr	r2, [pc, #48]	@ (8003f68 <Macro_RecordEvent+0x58>)
    last_tick = now;

    macro_buffer[macro_count].buttons   = buttons;
 8003f36:	8835      	ldrh	r5, [r6, #0]
    uint32_t delay = now - last_tick;
 8003f38:	6814      	ldr	r4, [r2, #0]
    last_tick = now;
 8003f3a:	6010      	str	r0, [r2, #0]
    uint32_t delay = now - last_tick;
 8003f3c:	1b03      	subs	r3, r0, r4
    macro_buffer[macro_count].buttons   = buttons;
 8003f3e:	480b      	ldr	r0, [pc, #44]	@ (8003f6c <Macro_RecordEvent+0x5c>)
 8003f40:	f800 8035 	strb.w	r8, [r0, r5, lsl #3]
    macro_buffer[macro_count].x         = x;
 8003f44:	eb00 00c5 	add.w	r0, r0, r5, lsl #3
    macro_buffer[macro_count].y         = y;
    macro_buffer[macro_count].wheel     = wheel;
    macro_buffer[macro_count].delay_ms  = delay;

    macro_count++;
 8003f48:	3501      	adds	r5, #1
    macro_buffer[macro_count].x         = x;
 8003f4a:	7047      	strb	r7, [r0, #1]
    macro_buffer[macro_count].y         = y;
 8003f4c:	f880 9002 	strb.w	r9, [r0, #2]
    macro_buffer[macro_count].wheel     = wheel;
 8003f50:	f880 a003 	strb.w	sl, [r0, #3]
    macro_buffer[macro_count].delay_ms  = delay;
 8003f54:	6043      	str	r3, [r0, #4]
    macro_count++;
 8003f56:	8035      	strh	r5, [r6, #0]
}
 8003f58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003f5c:	200029f4 	.word	0x200029f4
 8003f60:	200029ee 	.word	0x200029ee
 8003f64:	200029f6 	.word	0x200029f6
 8003f68:	200029f0 	.word	0x200029f0
 8003f6c:	200029f8 	.word	0x200029f8

08003f70 <Macro_TogglePlay>:

// Playback
void Macro_TogglePlay(void)
{
 8003f70:	b508      	push	{r3, lr}
    // Never start playback while recording, and need at least 1 event
    if (recording || (macro_count == 0))
 8003f72:	4b0a      	ldr	r3, [pc, #40]	@ (8003f9c <Macro_TogglePlay+0x2c>)
 8003f74:	781a      	ldrb	r2, [r3, #0]
 8003f76:	b96a      	cbnz	r2, 8003f94 <Macro_TogglePlay+0x24>
 8003f78:	4b09      	ldr	r3, [pc, #36]	@ (8003fa0 <Macro_TogglePlay+0x30>)
 8003f7a:	881b      	ldrh	r3, [r3, #0]
 8003f7c:	b153      	cbz	r3, 8003f94 <Macro_TogglePlay+0x24>
        return;

    if (!playing) {
 8003f7e:	4b09      	ldr	r3, [pc, #36]	@ (8003fa4 <Macro_TogglePlay+0x34>)
 8003f80:	7819      	ldrb	r1, [r3, #0]
 8003f82:	b941      	cbnz	r1, 8003f96 <Macro_TogglePlay+0x26>
        // Start playback
        playing         = 1;
 8003f84:	2201      	movs	r2, #1
 8003f86:	701a      	strb	r2, [r3, #0]
        play_index      = 0;
 8003f88:	4b07      	ldr	r3, [pc, #28]	@ (8003fa8 <Macro_TogglePlay+0x38>)
 8003f8a:	8019      	strh	r1, [r3, #0]
        play_last_tick  = HAL_GetTick();
 8003f8c:	f000 fc18 	bl	80047c0 <HAL_GetTick>
 8003f90:	4b06      	ldr	r3, [pc, #24]	@ (8003fac <Macro_TogglePlay+0x3c>)
 8003f92:	6018      	str	r0, [r3, #0]
    } else {
        // Stop playback
        playing = 0;
    }
}
 8003f94:	bd08      	pop	{r3, pc}
        playing = 0;
 8003f96:	701a      	strb	r2, [r3, #0]
 8003f98:	e7fc      	b.n	8003f94 <Macro_TogglePlay+0x24>
 8003f9a:	bf00      	nop
 8003f9c:	200029f4 	.word	0x200029f4
 8003fa0:	200029f6 	.word	0x200029f6
 8003fa4:	200029ee 	.word	0x200029ee
 8003fa8:	200029ec 	.word	0x200029ec
 8003fac:	200029e8 	.word	0x200029e8

08003fb0 <Macro_Service>:
    return playing;
}

// To be called regularly from TouchGFX handleTickEvent()
void Macro_Service(void)
{
 8003fb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (!playing || (macro_count == 0))
 8003fb2:	4b15      	ldr	r3, [pc, #84]	@ (8004008 <Macro_Service+0x58>)
 8003fb4:	781b      	ldrb	r3, [r3, #0]
 8003fb6:	b32b      	cbz	r3, 8004004 <Macro_Service+0x54>
 8003fb8:	4e14      	ldr	r6, [pc, #80]	@ (800400c <Macro_Service+0x5c>)
 8003fba:	8833      	ldrh	r3, [r6, #0]
 8003fbc:	b313      	cbz	r3, 8004004 <Macro_Service+0x54>
        return;

    uint32_t now = HAL_GetTick();

    if ((now - play_last_tick) >= macro_buffer[play_index].delay_ms) {
 8003fbe:	4f14      	ldr	r7, [pc, #80]	@ (8004010 <Macro_Service+0x60>)
 8003fc0:	4c14      	ldr	r4, [pc, #80]	@ (8004014 <Macro_Service+0x64>)
    uint32_t now = HAL_GetTick();
 8003fc2:	f000 fbfd 	bl	80047c0 <HAL_GetTick>
    if ((now - play_last_tick) >= macro_buffer[play_index].delay_ms) {
 8003fc6:	683b      	ldr	r3, [r7, #0]
 8003fc8:	f8b4 c000 	ldrh.w	ip, [r4]
 8003fcc:	1ac3      	subs	r3, r0, r3
    uint32_t now = HAL_GetTick();
 8003fce:	4605      	mov	r5, r0
    if ((now - play_last_tick) >= macro_buffer[play_index].delay_ms) {
 8003fd0:	4811      	ldr	r0, [pc, #68]	@ (8004018 <Macro_Service+0x68>)
 8003fd2:	eb00 01cc 	add.w	r1, r0, ip, lsl #3
 8003fd6:	684a      	ldr	r2, [r1, #4]
 8003fd8:	4293      	cmp	r3, r2
 8003fda:	d313      	bcc.n	8004004 <Macro_Service+0x54>
        // Time to send next event
        Mouse_SendReport(macro_buffer[play_index].buttons,
 8003fdc:	f991 3003 	ldrsb.w	r3, [r1, #3]
 8003fe0:	f991 2002 	ldrsb.w	r2, [r1, #2]
 8003fe4:	f810 003c 	ldrb.w	r0, [r0, ip, lsl #3]
 8003fe8:	f991 1001 	ldrsb.w	r1, [r1, #1]
 8003fec:	f7ff ff50 	bl	8003e90 <Mouse_SendReport>
                         macro_buffer[play_index].x,
                         macro_buffer[play_index].y,
                         macro_buffer[play_index].wheel);

        play_last_tick = now;
        play_index++;
 8003ff0:	8823      	ldrh	r3, [r4, #0]

        if (play_index >= macro_count)        // loop endlessly – change to stop if desired
 8003ff2:	8832      	ldrh	r2, [r6, #0]
        play_last_tick = now;
 8003ff4:	603d      	str	r5, [r7, #0]
        play_index++;
 8003ff6:	3301      	adds	r3, #1
 8003ff8:	b29b      	uxth	r3, r3
        if (play_index >= macro_count)        // loop endlessly – change to stop if desired
 8003ffa:	429a      	cmp	r2, r3
        play_index++;
 8003ffc:	8023      	strh	r3, [r4, #0]
            play_index = 0;
 8003ffe:	bf9c      	itt	ls
 8004000:	2300      	movls	r3, #0
 8004002:	8023      	strhls	r3, [r4, #0]
    }
}
 8004004:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004006:	bf00      	nop
 8004008:	200029ee 	.word	0x200029ee
 800400c:	200029f6 	.word	0x200029f6
 8004010:	200029e8 	.word	0x200029e8
 8004014:	200029ec 	.word	0x200029ec
 8004018:	200029f8 	.word	0x200029f8

0800401c <macroRecord>:

// wrappers for TouchGFX buttons
void macroRecord(void)
{
    Macro_ToggleRecording();
 800401c:	f7ff bf68 	b.w	8003ef0 <Macro_ToggleRecording>

08004020 <macroPlay>:
}

void macroPlay(void)
{
    Macro_TogglePlay();
 8004020:	f7ff bfa6 	b.w	8003f70 <Macro_TogglePlay>

08004024 <Mouse_HandleScroll>:

#define UPPER 2300
#define LOWER 1800

void Mouse_HandleScroll(void)
{
 8004024:	b570      	push	{r4, r5, r6, lr}
    // 1. Lấy trung bình ADC
    uint32_t total = 0;
    for (int i = 0; i < 10; i++)
    {
        HAL_ADC_Start(&hadc1);
 8004026:	4e27      	ldr	r6, [pc, #156]	@ (80040c4 <Mouse_HandleScroll+0xa0>)
{
 8004028:	b08c      	sub	sp, #48	@ 0x30
 800402a:	250a      	movs	r5, #10
    uint32_t total = 0;
 800402c:	2400      	movs	r4, #0
        HAL_ADC_Start(&hadc1);
 800402e:	4630      	mov	r0, r6
 8004030:	f000 fc86 	bl	8004940 <HAL_ADC_Start>
        HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8004034:	f04f 31ff 	mov.w	r1, #4294967295
 8004038:	4630      	mov	r0, r6
 800403a:	f000 fcff 	bl	8004a3c <HAL_ADC_PollForConversion>
        total += HAL_ADC_GetValue(&hadc1);
 800403e:	4630      	mov	r0, r6
 8004040:	f000 fd4f 	bl	8004ae2 <HAL_ADC_GetValue>
 8004044:	4404      	add	r4, r0
        osDelay(1);
 8004046:	2001      	movs	r0, #1
 8004048:	f004 fbfc 	bl	8008844 <osDelay>
    for (int i = 0; i < 10; i++)
 800404c:	3d01      	subs	r5, #1
 800404e:	d1ee      	bne.n	800402e <Mouse_HandleScroll+0xa>
    }
    uint16_t adc_val = total / 10;
 8004050:	230a      	movs	r3, #10

    // 2. Chuyển thành scroll (-1, 0, +1)
    int8_t scrollStep = 0;
    if (adc_val > UPPER)
 8004052:	f640 02fc 	movw	r2, #2300	@ 0x8fc
    uint16_t adc_val = total / 10;
 8004056:	fbb4 f5f3 	udiv	r5, r4, r3
 800405a:	b2ab      	uxth	r3, r5
    if (adc_val > UPPER)
 800405c:	4293      	cmp	r3, r2
 800405e:	d82c      	bhi.n	80040ba <Mouse_HandleScroll+0x96>
        scrollStep = -1;               // cuộn xuống
    else if (adc_val < LOWER)
 8004060:	f5b3 6fe1 	cmp.w	r3, #1800	@ 0x708
 8004064:	d227      	bcs.n	80040b6 <Mouse_HandleScroll+0x92>
        scrollStep = +1;               // cuộn lên
 8004066:	2301      	movs	r3, #1

    // 3. Áp dụng độ nhạy (gain) & clamp về ±127
    if (scrollStep != 0)
    {
        int32_t scroll = scrollStep * gScrollGain;  // gScrollGain = 1-8
 8004068:	4e17      	ldr	r6, [pc, #92]	@ (80040c8 <Mouse_HandleScroll+0xa4>)
 800406a:	7834      	ldrb	r4, [r6, #0]
 800406c:	b264      	sxtb	r4, r4
 800406e:	435c      	muls	r4, r3

        if (scroll >  127) scroll =  127;
 8004070:	2c80      	cmp	r4, #128	@ 0x80
 8004072:	d025      	beq.n	80040c0 <Mouse_HandleScroll+0x9c>
        if (scroll < -127) scroll = -127;
 8004074:	f114 0f80 	cmn.w	r4, #128	@ 0x80
 8004078:	bf08      	it	eq
 800407a:	f06f 047e 	mvneq.w	r4, #126	@ 0x7e

        Mouse_SendReport(0, 0, 0, (int8_t)scroll);
 800407e:	2200      	movs	r2, #0
 8004080:	4611      	mov	r1, r2
 8004082:	4610      	mov	r0, r2
 8004084:	b263      	sxtb	r3, r4
 8004086:	f7ff ff03 	bl	8003e90 <Mouse_SendReport>

        // Log
        char msg[40];
        snprintf(msg, sizeof(msg), "ADC:%u  Scroll:%ld  Gain:%d\r\n",
 800408a:	7833      	ldrb	r3, [r6, #0]
 800408c:	4a0f      	ldr	r2, [pc, #60]	@ (80040cc <Mouse_HandleScroll+0xa8>)
 800408e:	b25b      	sxtb	r3, r3
 8004090:	2128      	movs	r1, #40	@ 0x28
 8004092:	e9cd 4300 	strd	r4, r3, [sp]
 8004096:	a802      	add	r0, sp, #8
 8004098:	b2ab      	uxth	r3, r5
 800409a:	f020 fbe5 	bl	8024868 <sniprintf>
                 adc_val, scroll, gScrollGain);
        HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), 10);
 800409e:	a802      	add	r0, sp, #8
 80040a0:	f7fc f8a6 	bl	80001f0 <strlen>
 80040a4:	230a      	movs	r3, #10
 80040a6:	b282      	uxth	r2, r0
 80040a8:	a902      	add	r1, sp, #8
 80040aa:	4809      	ldr	r0, [pc, #36]	@ (80040d0 <Mouse_HandleScroll+0xac>)
 80040ac:	f003 fd4f 	bl	8007b4e <HAL_UART_Transmit>

        osDelay(100);
 80040b0:	2064      	movs	r0, #100	@ 0x64
 80040b2:	f004 fbc7 	bl	8008844 <osDelay>
    }
}
 80040b6:	b00c      	add	sp, #48	@ 0x30
 80040b8:	bd70      	pop	{r4, r5, r6, pc}
        scrollStep = -1;               // cuộn xuống
 80040ba:	f04f 33ff 	mov.w	r3, #4294967295
 80040be:	e7d3      	b.n	8004068 <Mouse_HandleScroll+0x44>
        if (scroll >  127) scroll =  127;
 80040c0:	247f      	movs	r4, #127	@ 0x7f
 80040c2:	e7dc      	b.n	800407e <Mouse_HandleScroll+0x5a>
 80040c4:	2000285c 	.word	0x2000285c
 80040c8:	20000064 	.word	0x20000064
 80040cc:	08026350 	.word	0x08026350
 80040d0:	20002678 	.word	0x20002678

080040d4 <inside>:
    lastX = lastY = -1;
}

static bool inside(int16_t x, int16_t y)
{
    return (x >= areaX0) && (y >= areaY0) &&
 80040d4:	4b0d      	ldr	r3, [pc, #52]	@ (800410c <inside+0x38>)
{
 80040d6:	b510      	push	{r4, lr}
    return (x >= areaX0) && (y >= areaY0) &&
 80040d8:	f9b3 4000 	ldrsh.w	r4, [r3]
           (x <  areaX0 + areaW) && (y <  areaY0 + areaH);
 80040dc:	4284      	cmp	r4, r0
 80040de:	dc13      	bgt.n	8004108 <inside+0x34>
    return (x >= areaX0) && (y >= areaY0) &&
 80040e0:	4b0b      	ldr	r3, [pc, #44]	@ (8004110 <inside+0x3c>)
 80040e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80040e6:	428a      	cmp	r2, r1
 80040e8:	dc0e      	bgt.n	8004108 <inside+0x34>
           (x <  areaX0 + areaW) && (y <  areaY0 + areaH);
 80040ea:	4b0a      	ldr	r3, [pc, #40]	@ (8004114 <inside+0x40>)
 80040ec:	f9b3 3000 	ldrsh.w	r3, [r3]
 80040f0:	4423      	add	r3, r4
    return (x >= areaX0) && (y >= areaY0) &&
 80040f2:	4298      	cmp	r0, r3
 80040f4:	da08      	bge.n	8004108 <inside+0x34>
           (x <  areaX0 + areaW) && (y <  areaY0 + areaH);
 80040f6:	4b08      	ldr	r3, [pc, #32]	@ (8004118 <inside+0x44>)
 80040f8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80040fc:	4413      	add	r3, r2
 80040fe:	4299      	cmp	r1, r3
 8004100:	bfac      	ite	ge
 8004102:	2000      	movge	r0, #0
 8004104:	2001      	movlt	r0, #1
}
 8004106:	bd10      	pop	{r4, pc}
           (x <  areaX0 + areaW) && (y <  areaY0 + areaH);
 8004108:	2000      	movs	r0, #0
 800410a:	e7fc      	b.n	8004106 <inside+0x32>
 800410c:	20002dfe 	.word	0x20002dfe
 8004110:	20002dfc 	.word	0x20002dfc
 8004114:	20002dfa 	.word	0x20002dfa
 8004118:	20002df8 	.word	0x20002df8

0800411c <Touchpad_Init>:
{
 800411c:	b510      	push	{r4, lr}
    areaX0 = x0; areaY0 = y0; areaW = w; areaH = h;
 800411e:	4c07      	ldr	r4, [pc, #28]	@ (800413c <Touchpad_Init+0x20>)
 8004120:	8020      	strh	r0, [r4, #0]
 8004122:	4807      	ldr	r0, [pc, #28]	@ (8004140 <Touchpad_Init+0x24>)
 8004124:	8001      	strh	r1, [r0, #0]
 8004126:	4907      	ldr	r1, [pc, #28]	@ (8004144 <Touchpad_Init+0x28>)
 8004128:	800a      	strh	r2, [r1, #0]
 800412a:	4a07      	ldr	r2, [pc, #28]	@ (8004148 <Touchpad_Init+0x2c>)
 800412c:	8013      	strh	r3, [r2, #0]
    lastX = lastY = -1;
 800412e:	4a07      	ldr	r2, [pc, #28]	@ (800414c <Touchpad_Init+0x30>)
 8004130:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8004134:	8013      	strh	r3, [r2, #0]
 8004136:	4a06      	ldr	r2, [pc, #24]	@ (8004150 <Touchpad_Init+0x34>)
 8004138:	8013      	strh	r3, [r2, #0]
}
 800413a:	bd10      	pop	{r4, pc}
 800413c:	20002dfe 	.word	0x20002dfe
 8004140:	20002dfc 	.word	0x20002dfc
 8004144:	20002dfa 	.word	0x20002dfa
 8004148:	20002df8 	.word	0x20002df8
 800414c:	20000068 	.word	0x20000068
 8004150:	2000006a 	.word	0x2000006a

08004154 <Touchpad_Press>:

void Touchpad_Press(int16_t x, int16_t y)
{
 8004154:	b538      	push	{r3, r4, r5, lr}
 8004156:	4605      	mov	r5, r0
    if (inside(x, y)) {
 8004158:	f7ff ffbc 	bl	80040d4 <inside>
 800415c:	b118      	cbz	r0, 8004166 <Touchpad_Press+0x12>
        lastX = x;
 800415e:	4b02      	ldr	r3, [pc, #8]	@ (8004168 <Touchpad_Press+0x14>)
 8004160:	801d      	strh	r5, [r3, #0]
        lastY = y;
 8004162:	4b02      	ldr	r3, [pc, #8]	@ (800416c <Touchpad_Press+0x18>)
 8004164:	8019      	strh	r1, [r3, #0]
    }
}
 8004166:	bd38      	pop	{r3, r4, r5, pc}
 8004168:	2000006a 	.word	0x2000006a
 800416c:	20000068 	.word	0x20000068

08004170 <Touchpad_Drag>:

void Touchpad_Drag(int16_t x, int16_t y)
{
 8004170:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004174:	4607      	mov	r7, r0
 8004176:	460e      	mov	r6, r1
    if (!inside(x, y) || lastX < 0) return;
 8004178:	f7ff ffac 	bl	80040d4 <inside>
 800417c:	b360      	cbz	r0, 80041d8 <Touchpad_Drag+0x68>
 800417e:	f8df 9060 	ldr.w	r9, [pc, #96]	@ 80041e0 <Touchpad_Drag+0x70>
 8004182:	f9b9 4000 	ldrsh.w	r4, [r9]
 8004186:	2c00      	cmp	r4, #0
 8004188:	db26      	blt.n	80041d8 <Touchpad_Drag+0x68>

    int32_t dx = (x - lastX) * mouseGain;
    int32_t dy = (y - lastY) * mouseGain;
 800418a:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 80041e4 <Touchpad_Drag+0x74>
    int32_t dx = (x - lastX) * mouseGain;
 800418e:	4b13      	ldr	r3, [pc, #76]	@ (80041dc <Touchpad_Drag+0x6c>)
    int32_t dy = (y - lastY) * mouseGain;
 8004190:	f9b8 5000 	ldrsh.w	r5, [r8]
    int32_t dx = (x - lastX) * mouseGain;
 8004194:	f893 b000 	ldrb.w	fp, [r3]
    int32_t dy = (y - lastY) * mouseGain;
 8004198:	1b4d      	subs	r5, r1, r5
 800419a:	fb0b f505 	mul.w	r5, fp, r5

    dx = LIMIT_127(dx);
    dy = LIMIT_127(dy);
 800419e:	f06f 0a7e 	mvn.w	sl, #126	@ 0x7e
 80041a2:	4555      	cmp	r5, sl
 80041a4:	bfb8      	it	lt
 80041a6:	4655      	movlt	r5, sl
 80041a8:	2d7f      	cmp	r5, #127	@ 0x7f
    int32_t dx = (x - lastX) * mouseGain;
 80041aa:	eba7 0404 	sub.w	r4, r7, r4
 80041ae:	bfa8      	it	ge
 80041b0:	257f      	movge	r5, #127	@ 0x7f

    Mouse_SendReport(Mouse_GetButtons(), dx, dy, 0);
 80041b2:	f7ff fdd1 	bl	8003d58 <Mouse_GetButtons>
    int32_t dx = (x - lastX) * mouseGain;
 80041b6:	fb0b f104 	mul.w	r1, fp, r4
    dx = LIMIT_127(dx);
 80041ba:	4551      	cmp	r1, sl
 80041bc:	bfb8      	it	lt
 80041be:	4651      	movlt	r1, sl
    Mouse_SendReport(Mouse_GetButtons(), dx, dy, 0);
 80041c0:	297f      	cmp	r1, #127	@ 0x7f
 80041c2:	bfa8      	it	ge
 80041c4:	217f      	movge	r1, #127	@ 0x7f
 80041c6:	2300      	movs	r3, #0
 80041c8:	b26a      	sxtb	r2, r5
 80041ca:	b249      	sxtb	r1, r1
 80041cc:	f7ff fe60 	bl	8003e90 <Mouse_SendReport>

    lastX = x;
 80041d0:	f8a9 7000 	strh.w	r7, [r9]
    lastY = y;
 80041d4:	f8a8 6000 	strh.w	r6, [r8]
}
 80041d8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80041dc:	20000066 	.word	0x20000066
 80041e0:	2000006a 	.word	0x2000006a
 80041e4:	20000068 	.word	0x20000068

080041e8 <Touchpad_Release>:

void Touchpad_Release(void)
{
    lastX = lastY = -1;
 80041e8:	4a03      	ldr	r2, [pc, #12]	@ (80041f8 <Touchpad_Release+0x10>)
 80041ea:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80041ee:	8013      	strh	r3, [r2, #0]
 80041f0:	4a02      	ldr	r2, [pc, #8]	@ (80041fc <Touchpad_Release+0x14>)
 80041f2:	8013      	strh	r3, [r2, #0]
}
 80041f4:	4770      	bx	lr
 80041f6:	bf00      	nop
 80041f8:	20000068 	.word	0x20000068
 80041fc:	2000006a 	.word	0x2000006a

08004200 <Touchpad_SetMouseGain>:

// gain
void Touchpad_SetMouseGain(uint8_t g)  { mouseGain  = (g < 1) ? 1 : (g > 8) ? 8 : g; }
 8004200:	2808      	cmp	r0, #8
 8004202:	bf28      	it	cs
 8004204:	2008      	movcs	r0, #8
 8004206:	4b03      	ldr	r3, [pc, #12]	@ (8004214 <Touchpad_SetMouseGain+0x14>)
 8004208:	2801      	cmp	r0, #1
 800420a:	bf38      	it	cc
 800420c:	2001      	movcc	r0, #1
 800420e:	7018      	strb	r0, [r3, #0]
 8004210:	4770      	bx	lr
 8004212:	bf00      	nop
 8004214:	20000066 	.word	0x20000066

08004218 <Touchpad_SetScrollGain>:
void Touchpad_SetScrollGain(uint8_t g) { scrollGain = (g < 1) ? 1 : (g > 8) ? 8 : g; }
 8004218:	4770      	bx	lr

0800421a <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800421a:	20f0      	movs	r0, #240	@ 0xf0
 800421c:	4770      	bx	lr

0800421e <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800421e:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 8004222:	4770      	bx	lr

08004224 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8004224:	2029      	movs	r0, #41	@ 0x29
 8004226:	f7fd bf45 	b.w	80020b4 <LCD_IO_WriteReg>

0800422a <ili9341_DisplayOff>:
 800422a:	2028      	movs	r0, #40	@ 0x28
 800422c:	f7fd bf42 	b.w	80020b4 <LCD_IO_WriteReg>

08004230 <ili9341_Init>:
{
 8004230:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004232:	f7fd ff13 	bl	800205c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8004236:	20ca      	movs	r0, #202	@ 0xca
 8004238:	f7fd ff3c 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800423c:	20c3      	movs	r0, #195	@ 0xc3
 800423e:	f7fd ff1d 	bl	800207c <LCD_IO_WriteData>
 8004242:	2008      	movs	r0, #8
 8004244:	f7fd ff1a 	bl	800207c <LCD_IO_WriteData>
 8004248:	2050      	movs	r0, #80	@ 0x50
 800424a:	f7fd ff17 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800424e:	20cf      	movs	r0, #207	@ 0xcf
 8004250:	f7fd ff30 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004254:	2000      	movs	r0, #0
 8004256:	f7fd ff11 	bl	800207c <LCD_IO_WriteData>
 800425a:	20c1      	movs	r0, #193	@ 0xc1
 800425c:	f7fd ff0e 	bl	800207c <LCD_IO_WriteData>
 8004260:	2030      	movs	r0, #48	@ 0x30
 8004262:	f7fd ff0b 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004266:	20ed      	movs	r0, #237	@ 0xed
 8004268:	f7fd ff24 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800426c:	2064      	movs	r0, #100	@ 0x64
 800426e:	f7fd ff05 	bl	800207c <LCD_IO_WriteData>
 8004272:	2003      	movs	r0, #3
 8004274:	f7fd ff02 	bl	800207c <LCD_IO_WriteData>
 8004278:	2012      	movs	r0, #18
 800427a:	f7fd feff 	bl	800207c <LCD_IO_WriteData>
 800427e:	2081      	movs	r0, #129	@ 0x81
 8004280:	f7fd fefc 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004284:	20e8      	movs	r0, #232	@ 0xe8
 8004286:	f7fd ff15 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800428a:	2085      	movs	r0, #133	@ 0x85
 800428c:	f7fd fef6 	bl	800207c <LCD_IO_WriteData>
 8004290:	2000      	movs	r0, #0
 8004292:	f7fd fef3 	bl	800207c <LCD_IO_WriteData>
 8004296:	2078      	movs	r0, #120	@ 0x78
 8004298:	f7fd fef0 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800429c:	20cb      	movs	r0, #203	@ 0xcb
 800429e:	f7fd ff09 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042a2:	2039      	movs	r0, #57	@ 0x39
 80042a4:	f7fd feea 	bl	800207c <LCD_IO_WriteData>
 80042a8:	202c      	movs	r0, #44	@ 0x2c
 80042aa:	f7fd fee7 	bl	800207c <LCD_IO_WriteData>
 80042ae:	2000      	movs	r0, #0
 80042b0:	f7fd fee4 	bl	800207c <LCD_IO_WriteData>
 80042b4:	2034      	movs	r0, #52	@ 0x34
 80042b6:	f7fd fee1 	bl	800207c <LCD_IO_WriteData>
 80042ba:	2002      	movs	r0, #2
 80042bc:	f7fd fede 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042c0:	20f7      	movs	r0, #247	@ 0xf7
 80042c2:	f7fd fef7 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042c6:	2020      	movs	r0, #32
 80042c8:	f7fd fed8 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042cc:	20ea      	movs	r0, #234	@ 0xea
 80042ce:	f7fd fef1 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042d2:	2000      	movs	r0, #0
 80042d4:	f7fd fed2 	bl	800207c <LCD_IO_WriteData>
 80042d8:	2000      	movs	r0, #0
 80042da:	f7fd fecf 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042de:	20b1      	movs	r0, #177	@ 0xb1
 80042e0:	f7fd fee8 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042e4:	2000      	movs	r0, #0
 80042e6:	f7fd fec9 	bl	800207c <LCD_IO_WriteData>
 80042ea:	201b      	movs	r0, #27
 80042ec:	f7fd fec6 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80042f0:	20b6      	movs	r0, #182	@ 0xb6
 80042f2:	f7fd fedf 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80042f6:	200a      	movs	r0, #10
 80042f8:	f7fd fec0 	bl	800207c <LCD_IO_WriteData>
 80042fc:	20a2      	movs	r0, #162	@ 0xa2
 80042fe:	f7fd febd 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004302:	20c0      	movs	r0, #192	@ 0xc0
 8004304:	f7fd fed6 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004308:	2010      	movs	r0, #16
 800430a:	f7fd feb7 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800430e:	20c1      	movs	r0, #193	@ 0xc1
 8004310:	f7fd fed0 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004314:	2010      	movs	r0, #16
 8004316:	f7fd feb1 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800431a:	20c5      	movs	r0, #197	@ 0xc5
 800431c:	f7fd feca 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004320:	2045      	movs	r0, #69	@ 0x45
 8004322:	f7fd feab 	bl	800207c <LCD_IO_WriteData>
 8004326:	2015      	movs	r0, #21
 8004328:	f7fd fea8 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800432c:	20c7      	movs	r0, #199	@ 0xc7
 800432e:	f7fd fec1 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004332:	2090      	movs	r0, #144	@ 0x90
 8004334:	f7fd fea2 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004338:	2036      	movs	r0, #54	@ 0x36
 800433a:	f7fd febb 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800433e:	20c8      	movs	r0, #200	@ 0xc8
 8004340:	f7fd fe9c 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004344:	20f2      	movs	r0, #242	@ 0xf2
 8004346:	f7fd feb5 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800434a:	2000      	movs	r0, #0
 800434c:	f7fd fe96 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004350:	20b0      	movs	r0, #176	@ 0xb0
 8004352:	f7fd feaf 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004356:	20c2      	movs	r0, #194	@ 0xc2
 8004358:	f7fd fe90 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800435c:	20b6      	movs	r0, #182	@ 0xb6
 800435e:	f7fd fea9 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004362:	200a      	movs	r0, #10
 8004364:	f7fd fe8a 	bl	800207c <LCD_IO_WriteData>
 8004368:	20a7      	movs	r0, #167	@ 0xa7
 800436a:	f7fd fe87 	bl	800207c <LCD_IO_WriteData>
 800436e:	2027      	movs	r0, #39	@ 0x27
 8004370:	f7fd fe84 	bl	800207c <LCD_IO_WriteData>
 8004374:	2004      	movs	r0, #4
 8004376:	f7fd fe81 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800437a:	202a      	movs	r0, #42	@ 0x2a
 800437c:	f7fd fe9a 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004380:	2000      	movs	r0, #0
 8004382:	f7fd fe7b 	bl	800207c <LCD_IO_WriteData>
 8004386:	2000      	movs	r0, #0
 8004388:	f7fd fe78 	bl	800207c <LCD_IO_WriteData>
 800438c:	2000      	movs	r0, #0
 800438e:	f7fd fe75 	bl	800207c <LCD_IO_WriteData>
 8004392:	20ef      	movs	r0, #239	@ 0xef
 8004394:	f7fd fe72 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004398:	202b      	movs	r0, #43	@ 0x2b
 800439a:	f7fd fe8b 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800439e:	2000      	movs	r0, #0
 80043a0:	f7fd fe6c 	bl	800207c <LCD_IO_WriteData>
 80043a4:	2000      	movs	r0, #0
 80043a6:	f7fd fe69 	bl	800207c <LCD_IO_WriteData>
 80043aa:	2001      	movs	r0, #1
 80043ac:	f7fd fe66 	bl	800207c <LCD_IO_WriteData>
 80043b0:	203f      	movs	r0, #63	@ 0x3f
 80043b2:	f7fd fe63 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80043b6:	20f6      	movs	r0, #246	@ 0xf6
 80043b8:	f7fd fe7c 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80043bc:	2001      	movs	r0, #1
 80043be:	f7fd fe5d 	bl	800207c <LCD_IO_WriteData>
 80043c2:	2000      	movs	r0, #0
 80043c4:	f7fd fe5a 	bl	800207c <LCD_IO_WriteData>
 80043c8:	2006      	movs	r0, #6
 80043ca:	f7fd fe57 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80043ce:	202c      	movs	r0, #44	@ 0x2c
 80043d0:	f7fd fe70 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80043d4:	20c8      	movs	r0, #200	@ 0xc8
 80043d6:	f7fd febb 	bl	8002150 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80043da:	2026      	movs	r0, #38	@ 0x26
 80043dc:	f7fd fe6a 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80043e0:	2001      	movs	r0, #1
 80043e2:	f7fd fe4b 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80043e6:	20e0      	movs	r0, #224	@ 0xe0
 80043e8:	f7fd fe64 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80043ec:	200f      	movs	r0, #15
 80043ee:	f7fd fe45 	bl	800207c <LCD_IO_WriteData>
 80043f2:	2029      	movs	r0, #41	@ 0x29
 80043f4:	f7fd fe42 	bl	800207c <LCD_IO_WriteData>
 80043f8:	2024      	movs	r0, #36	@ 0x24
 80043fa:	f7fd fe3f 	bl	800207c <LCD_IO_WriteData>
 80043fe:	200c      	movs	r0, #12
 8004400:	f7fd fe3c 	bl	800207c <LCD_IO_WriteData>
 8004404:	200e      	movs	r0, #14
 8004406:	f7fd fe39 	bl	800207c <LCD_IO_WriteData>
 800440a:	2009      	movs	r0, #9
 800440c:	f7fd fe36 	bl	800207c <LCD_IO_WriteData>
 8004410:	204e      	movs	r0, #78	@ 0x4e
 8004412:	f7fd fe33 	bl	800207c <LCD_IO_WriteData>
 8004416:	2078      	movs	r0, #120	@ 0x78
 8004418:	f7fd fe30 	bl	800207c <LCD_IO_WriteData>
 800441c:	203c      	movs	r0, #60	@ 0x3c
 800441e:	f7fd fe2d 	bl	800207c <LCD_IO_WriteData>
 8004422:	2009      	movs	r0, #9
 8004424:	f7fd fe2a 	bl	800207c <LCD_IO_WriteData>
 8004428:	2013      	movs	r0, #19
 800442a:	f7fd fe27 	bl	800207c <LCD_IO_WriteData>
 800442e:	2005      	movs	r0, #5
 8004430:	f7fd fe24 	bl	800207c <LCD_IO_WriteData>
 8004434:	2017      	movs	r0, #23
 8004436:	f7fd fe21 	bl	800207c <LCD_IO_WriteData>
 800443a:	2011      	movs	r0, #17
 800443c:	f7fd fe1e 	bl	800207c <LCD_IO_WriteData>
 8004440:	2000      	movs	r0, #0
 8004442:	f7fd fe1b 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004446:	20e1      	movs	r0, #225	@ 0xe1
 8004448:	f7fd fe34 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800444c:	2000      	movs	r0, #0
 800444e:	f7fd fe15 	bl	800207c <LCD_IO_WriteData>
 8004452:	2016      	movs	r0, #22
 8004454:	f7fd fe12 	bl	800207c <LCD_IO_WriteData>
 8004458:	201b      	movs	r0, #27
 800445a:	f7fd fe0f 	bl	800207c <LCD_IO_WriteData>
 800445e:	2004      	movs	r0, #4
 8004460:	f7fd fe0c 	bl	800207c <LCD_IO_WriteData>
 8004464:	2011      	movs	r0, #17
 8004466:	f7fd fe09 	bl	800207c <LCD_IO_WriteData>
 800446a:	2007      	movs	r0, #7
 800446c:	f7fd fe06 	bl	800207c <LCD_IO_WriteData>
 8004470:	2031      	movs	r0, #49	@ 0x31
 8004472:	f7fd fe03 	bl	800207c <LCD_IO_WriteData>
 8004476:	2033      	movs	r0, #51	@ 0x33
 8004478:	f7fd fe00 	bl	800207c <LCD_IO_WriteData>
 800447c:	2042      	movs	r0, #66	@ 0x42
 800447e:	f7fd fdfd 	bl	800207c <LCD_IO_WriteData>
 8004482:	2005      	movs	r0, #5
 8004484:	f7fd fdfa 	bl	800207c <LCD_IO_WriteData>
 8004488:	200c      	movs	r0, #12
 800448a:	f7fd fdf7 	bl	800207c <LCD_IO_WriteData>
 800448e:	200a      	movs	r0, #10
 8004490:	f7fd fdf4 	bl	800207c <LCD_IO_WriteData>
 8004494:	2028      	movs	r0, #40	@ 0x28
 8004496:	f7fd fdf1 	bl	800207c <LCD_IO_WriteData>
 800449a:	202f      	movs	r0, #47	@ 0x2f
 800449c:	f7fd fdee 	bl	800207c <LCD_IO_WriteData>
 80044a0:	200f      	movs	r0, #15
 80044a2:	f7fd fdeb 	bl	800207c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044a6:	2011      	movs	r0, #17
 80044a8:	f7fd fe04 	bl	80020b4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80044ac:	20c8      	movs	r0, #200	@ 0xc8
 80044ae:	f7fd fe4f 	bl	8002150 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80044b2:	2029      	movs	r0, #41	@ 0x29
 80044b4:	f7fd fdfe 	bl	80020b4 <LCD_IO_WriteReg>
}
 80044b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80044bc:	202c      	movs	r0, #44	@ 0x2c
 80044be:	f7fd bdf9 	b.w	80020b4 <LCD_IO_WriteReg>

080044c2 <ili9341_ReadID>:
{
 80044c2:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80044c4:	f7fd fdca 	bl	800205c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80044c8:	2103      	movs	r1, #3
 80044ca:	20d3      	movs	r0, #211	@ 0xd3
 80044cc:	f7fd fe0e 	bl	80020ec <LCD_IO_ReadData>
}
 80044d0:	b280      	uxth	r0, r0
 80044d2:	bd08      	pop	{r3, pc}

080044d4 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80044d4:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80044d6:	b2c4      	uxtb	r4, r0
 80044d8:	2202      	movs	r2, #2
 80044da:	2103      	movs	r1, #3
 80044dc:	4620      	mov	r0, r4
 80044de:	f7fd fd73 	bl	8001fc8 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80044e2:	200a      	movs	r0, #10
 80044e4:	f7fd fdb8 	bl	8002058 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80044e8:	4620      	mov	r0, r4
 80044ea:	2200      	movs	r2, #0
 80044ec:	2103      	movs	r1, #3
 80044ee:	f7fd fd6b 	bl	8001fc8 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80044f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80044f6:	2002      	movs	r0, #2
 80044f8:	f7fd bdae 	b.w	8002058 <IOE_Delay>

080044fc <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80044fc:	b538      	push	{r3, r4, r5, lr}
 80044fe:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004500:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8004502:	f7fd fd5f 	bl	8001fc4 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004506:	2100      	movs	r1, #0
 8004508:	4620      	mov	r0, r4
 800450a:	f7fd fd75 	bl	8001ff8 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800450e:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004510:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8004512:	4620      	mov	r0, r4
 8004514:	f7fd fd70 	bl	8001ff8 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004518:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 800451c:	b280      	uxth	r0, r0
 800451e:	bd38      	pop	{r3, r4, r5, pc}

08004520 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8004520:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8004522:	b2c4      	uxtb	r4, r0
 8004524:	2140      	movs	r1, #64	@ 0x40
 8004526:	4620      	mov	r0, r4
 8004528:	f7fd fd66 	bl	8001ff8 <IOE_Read>
  
  if(state > 0)
 800452c:	0603      	lsls	r3, r0, #24
 800452e:	d507      	bpl.n	8004540 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8004530:	214c      	movs	r1, #76	@ 0x4c
 8004532:	4620      	mov	r0, r4
 8004534:	f7fd fd60 	bl	8001ff8 <IOE_Read>
 8004538:	3800      	subs	r0, #0
 800453a:	bf18      	it	ne
 800453c:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 800453e:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004540:	2201      	movs	r2, #1
 8004542:	214b      	movs	r1, #75	@ 0x4b
 8004544:	4620      	mov	r0, r4
 8004546:	f7fd fd3f 	bl	8001fc8 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800454a:	4620      	mov	r0, r4
 800454c:	2200      	movs	r2, #0
 800454e:	214b      	movs	r1, #75	@ 0x4b
 8004550:	f7fd fd3a 	bl	8001fc8 <IOE_Write>
  uint8_t ret = 0;
 8004554:	2000      	movs	r0, #0
 8004556:	e7f2      	b.n	800453e <stmpe811_TS_DetectTouch+0x1e>

08004558 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8004558:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800455a:	2304      	movs	r3, #4
 800455c:	b2c4      	uxtb	r4, r0
{
 800455e:	460e      	mov	r6, r1
 8004560:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004562:	21d7      	movs	r1, #215	@ 0xd7
 8004564:	eb0d 0203 	add.w	r2, sp, r3
 8004568:	4620      	mov	r0, r4
 800456a:	f7fd fd5f 	bl	800202c <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800456e:	9b01      	ldr	r3, [sp, #4]
 8004570:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004572:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004574:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004578:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800457a:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800457c:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800457e:	2201      	movs	r2, #1
 8004580:	214b      	movs	r1, #75	@ 0x4b
 8004582:	f7fd fd21 	bl	8001fc8 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004586:	2200      	movs	r2, #0
 8004588:	214b      	movs	r1, #75	@ 0x4b
 800458a:	4620      	mov	r0, r4
 800458c:	f7fd fd1c 	bl	8001fc8 <IOE_Write>
}
 8004590:	b002      	add	sp, #8
 8004592:	bd70      	pop	{r4, r5, r6, pc}

08004594 <stmpe811_Init>:
{
 8004594:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8004596:	4a0a      	ldr	r2, [pc, #40]	@ (80045c0 <stmpe811_Init+0x2c>)
 8004598:	7813      	ldrb	r3, [r2, #0]
 800459a:	4298      	cmp	r0, r3
{
 800459c:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800459e:	d00d      	beq.n	80045bc <stmpe811_Init+0x28>
 80045a0:	7851      	ldrb	r1, [r2, #1]
 80045a2:	4288      	cmp	r0, r1
 80045a4:	d00a      	beq.n	80045bc <stmpe811_Init+0x28>
 80045a6:	b10b      	cbz	r3, 80045ac <stmpe811_Init+0x18>
 80045a8:	b941      	cbnz	r1, 80045bc <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 80045aa:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 80045ac:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80045ae:	f7fd fd09 	bl	8001fc4 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 80045b2:	4620      	mov	r0, r4
}
 80045b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 80045b8:	f7ff bf8c 	b.w	80044d4 <stmpe811_Reset>
}
 80045bc:	bd10      	pop	{r4, pc}
 80045be:	bf00      	nop
 80045c0:	20002e00 	.word	0x20002e00

080045c4 <stmpe811_EnableGlobalIT>:
{
 80045c4:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80045c6:	b2c4      	uxtb	r4, r0
 80045c8:	2109      	movs	r1, #9
 80045ca:	4620      	mov	r0, r4
 80045cc:	f7fd fd14 	bl	8001ff8 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80045d0:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80045d4:	b2d2      	uxtb	r2, r2
 80045d6:	4620      	mov	r0, r4
 80045d8:	2109      	movs	r1, #9
}
 80045da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80045de:	f7fd bcf3 	b.w	8001fc8 <IOE_Write>

080045e2 <stmpe811_DisableGlobalIT>:
{
 80045e2:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80045e4:	b2c4      	uxtb	r4, r0
 80045e6:	2109      	movs	r1, #9
 80045e8:	4620      	mov	r0, r4
 80045ea:	f7fd fd05 	bl	8001ff8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80045ee:	2109      	movs	r1, #9
 80045f0:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 80045f4:	4620      	mov	r0, r4
}
 80045f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80045fa:	f7fd bce5 	b.w	8001fc8 <IOE_Write>

080045fe <stmpe811_EnableITSource>:
{
 80045fe:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004600:	b2c4      	uxtb	r4, r0
{
 8004602:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004604:	4620      	mov	r0, r4
 8004606:	210a      	movs	r1, #10
 8004608:	f7fd fcf6 	bl	8001ff8 <IOE_Read>
  tmp |= Source; 
 800460c:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004610:	b2d2      	uxtb	r2, r2
 8004612:	4620      	mov	r0, r4
 8004614:	210a      	movs	r1, #10
}
 8004616:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800461a:	f7fd bcd5 	b.w	8001fc8 <IOE_Write>

0800461e <stmpe811_TS_EnableIT>:
{
 800461e:	b510      	push	{r4, lr}
 8004620:	4604      	mov	r4, r0
  IOE_ITConfig();
 8004622:	f7fd fcd0 	bl	8001fc6 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004626:	4620      	mov	r0, r4
 8004628:	211f      	movs	r1, #31
 800462a:	f7ff ffe8 	bl	80045fe <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 800462e:	4620      	mov	r0, r4
}
 8004630:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004634:	f7ff bfc6 	b.w	80045c4 <stmpe811_EnableGlobalIT>

08004638 <stmpe811_DisableITSource>:
{
 8004638:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800463a:	b2c4      	uxtb	r4, r0
{
 800463c:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800463e:	4620      	mov	r0, r4
 8004640:	210a      	movs	r1, #10
 8004642:	f7fd fcd9 	bl	8001ff8 <IOE_Read>
  tmp &= ~Source; 
 8004646:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800464a:	b2d2      	uxtb	r2, r2
 800464c:	4620      	mov	r0, r4
 800464e:	210a      	movs	r1, #10
}
 8004650:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004654:	f7fd bcb8 	b.w	8001fc8 <IOE_Write>

08004658 <stmpe811_TS_DisableIT>:
{
 8004658:	b510      	push	{r4, lr}
 800465a:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 800465c:	f7ff ffc1 	bl	80045e2 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004660:	4620      	mov	r0, r4
 8004662:	211f      	movs	r1, #31
}
 8004664:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004668:	f7ff bfe6 	b.w	8004638 <stmpe811_DisableITSource>

0800466c <stmpe811_ReadGITStatus>:
{
 800466c:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800466e:	b2c0      	uxtb	r0, r0
{
 8004670:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004672:	210b      	movs	r1, #11
 8004674:	f7fd fcc0 	bl	8001ff8 <IOE_Read>
}
 8004678:	4020      	ands	r0, r4
 800467a:	bd10      	pop	{r4, pc}

0800467c <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 800467c:	211f      	movs	r1, #31
 800467e:	f7ff bff5 	b.w	800466c <stmpe811_ReadGITStatus>

08004682 <stmpe811_ClearGlobalIT>:
{
 8004682:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8004684:	b2c0      	uxtb	r0, r0
 8004686:	210b      	movs	r1, #11
 8004688:	f7fd bc9e 	b.w	8001fc8 <IOE_Write>

0800468c <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 800468c:	211f      	movs	r1, #31
 800468e:	f7ff bff8 	b.w	8004682 <stmpe811_ClearGlobalIT>

08004692 <stmpe811_IO_EnableAF>:
{
 8004692:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004694:	b2c4      	uxtb	r4, r0
{
 8004696:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004698:	4620      	mov	r0, r4
 800469a:	2117      	movs	r1, #23
 800469c:	f7fd fcac 	bl	8001ff8 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 80046a0:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80046a4:	b2d2      	uxtb	r2, r2
 80046a6:	4620      	mov	r0, r4
 80046a8:	2117      	movs	r1, #23
}
 80046aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80046ae:	f7fd bc8b 	b.w	8001fc8 <IOE_Write>

080046b2 <stmpe811_TS_Start>:
{
 80046b2:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80046b4:	b2c4      	uxtb	r4, r0
{
 80046b6:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80046b8:	2104      	movs	r1, #4
 80046ba:	4620      	mov	r0, r4
 80046bc:	f7fd fc9c 	bl	8001ff8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80046c0:	2104      	movs	r1, #4
 80046c2:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80046c6:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80046c8:	4620      	mov	r0, r4
 80046ca:	f7fd fc7d 	bl	8001fc8 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 80046ce:	4630      	mov	r0, r6
 80046d0:	21f0      	movs	r1, #240	@ 0xf0
 80046d2:	f7ff ffde 	bl	8004692 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80046d6:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 80046da:	4620      	mov	r0, r4
 80046dc:	2104      	movs	r1, #4
 80046de:	f7fd fc73 	bl	8001fc8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80046e2:	2249      	movs	r2, #73	@ 0x49
 80046e4:	2120      	movs	r1, #32
 80046e6:	4620      	mov	r0, r4
 80046e8:	f7fd fc6e 	bl	8001fc8 <IOE_Write>
  IOE_Delay(2); 
 80046ec:	2002      	movs	r0, #2
 80046ee:	f7fd fcb3 	bl	8002058 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80046f2:	4620      	mov	r0, r4
 80046f4:	2201      	movs	r2, #1
 80046f6:	2121      	movs	r1, #33	@ 0x21
 80046f8:	f7fd fc66 	bl	8001fc8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80046fc:	4620      	mov	r0, r4
 80046fe:	229a      	movs	r2, #154	@ 0x9a
 8004700:	2141      	movs	r1, #65	@ 0x41
 8004702:	f7fd fc61 	bl	8001fc8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8004706:	4620      	mov	r0, r4
 8004708:	2201      	movs	r2, #1
 800470a:	214a      	movs	r1, #74	@ 0x4a
 800470c:	f7fd fc5c 	bl	8001fc8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004710:	4620      	mov	r0, r4
 8004712:	2201      	movs	r2, #1
 8004714:	214b      	movs	r1, #75	@ 0x4b
 8004716:	f7fd fc57 	bl	8001fc8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800471a:	4620      	mov	r0, r4
 800471c:	2200      	movs	r2, #0
 800471e:	214b      	movs	r1, #75	@ 0x4b
 8004720:	f7fd fc52 	bl	8001fc8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8004724:	4620      	mov	r0, r4
 8004726:	2201      	movs	r2, #1
 8004728:	2156      	movs	r1, #86	@ 0x56
 800472a:	f7fd fc4d 	bl	8001fc8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800472e:	4620      	mov	r0, r4
 8004730:	2201      	movs	r2, #1
 8004732:	2158      	movs	r1, #88	@ 0x58
 8004734:	f7fd fc48 	bl	8001fc8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8004738:	4620      	mov	r0, r4
 800473a:	2201      	movs	r2, #1
 800473c:	2140      	movs	r1, #64	@ 0x40
 800473e:	f7fd fc43 	bl	8001fc8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8004742:	4620      	mov	r0, r4
 8004744:	22ff      	movs	r2, #255	@ 0xff
 8004746:	210b      	movs	r1, #11
 8004748:	f7fd fc3e 	bl	8001fc8 <IOE_Write>
}
 800474c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8004750:	2002      	movs	r0, #2
 8004752:	f7fd bc81 	b.w	8002058 <IOE_Delay>
	...

08004758 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004758:	4b05      	ldr	r3, [pc, #20]	@ (8004770 <SystemInit+0x18>)
 800475a:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800475e:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8004762:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004766:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800476a:	609a      	str	r2, [r3, #8]
#endif
}
 800476c:	4770      	bx	lr
 800476e:	bf00      	nop
 8004770:	e000ed00 	.word	0xe000ed00

08004774 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004774:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8004776:	4b0b      	ldr	r3, [pc, #44]	@ (80047a4 <HAL_Init+0x30>)
 8004778:	681a      	ldr	r2, [r3, #0]
 800477a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800477e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004780:	681a      	ldr	r2, [r3, #0]
 8004782:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004786:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004788:	681a      	ldr	r2, [r3, #0]
 800478a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800478e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004790:	2003      	movs	r0, #3
 8004792:	f000 fa45 	bl	8004c20 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004796:	2000      	movs	r0, #0
 8004798:	f7fd ff84 	bl	80026a4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800479c:	f7fd fce6 	bl	800216c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80047a0:	2000      	movs	r0, #0
 80047a2:	bd08      	pop	{r3, pc}
 80047a4:	40023c00 	.word	0x40023c00

080047a8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80047a8:	4a03      	ldr	r2, [pc, #12]	@ (80047b8 <HAL_IncTick+0x10>)
 80047aa:	4b04      	ldr	r3, [pc, #16]	@ (80047bc <HAL_IncTick+0x14>)
 80047ac:	6811      	ldr	r1, [r2, #0]
 80047ae:	781b      	ldrb	r3, [r3, #0]
 80047b0:	440b      	add	r3, r1
 80047b2:	6013      	str	r3, [r2, #0]
}
 80047b4:	4770      	bx	lr
 80047b6:	bf00      	nop
 80047b8:	20002e04 	.word	0x20002e04
 80047bc:	200000d0 	.word	0x200000d0

080047c0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80047c0:	4b01      	ldr	r3, [pc, #4]	@ (80047c8 <HAL_GetTick+0x8>)
 80047c2:	6818      	ldr	r0, [r3, #0]
}
 80047c4:	4770      	bx	lr
 80047c6:	bf00      	nop
 80047c8:	20002e04 	.word	0x20002e04

080047cc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80047cc:	b538      	push	{r3, r4, r5, lr}
 80047ce:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80047d0:	f7ff fff6 	bl	80047c0 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80047d4:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80047d6:	bf1c      	itt	ne
 80047d8:	4b05      	ldrne	r3, [pc, #20]	@ (80047f0 <HAL_Delay+0x24>)
 80047da:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80047dc:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80047de:	bf18      	it	ne
 80047e0:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80047e2:	f7ff ffed 	bl	80047c0 <HAL_GetTick>
 80047e6:	1b43      	subs	r3, r0, r5
 80047e8:	42a3      	cmp	r3, r4
 80047ea:	d3fa      	bcc.n	80047e2 <HAL_Delay+0x16>
  {
  }
}
 80047ec:	bd38      	pop	{r3, r4, r5, pc}
 80047ee:	bf00      	nop
 80047f0:	200000d0 	.word	0x200000d0

080047f4 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 80047f4:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;

  /* Check ADC handle */
  if (hadc == NULL)
 80047f6:	4604      	mov	r4, r0
 80047f8:	2800      	cmp	r0, #0
 80047fa:	f000 809b 	beq.w	8004934 <HAL_ADC_Init+0x140>
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if (hadc->State == HAL_ADC_STATE_RESET)
 80047fe:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8004800:	b925      	cbnz	r5, 800480c <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8004802:	f7fd fcd3 	bl	80021ac <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8004806:	6465      	str	r5, [r4, #68]	@ 0x44

    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8004808:	f884 503c 	strb.w	r5, [r4, #60]	@ 0x3c
  }

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800480c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800480e:	06db      	lsls	r3, r3, #27
 8004810:	f100 808e 	bmi.w	8004930 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8004814:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004816:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800481a:	f023 0302 	bic.w	r3, r3, #2
 800481e:	f043 0302 	orr.w	r3, r3, #2
 8004822:	6423      	str	r3, [r4, #64]	@ 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8004824:	4b44      	ldr	r3, [pc, #272]	@ (8004938 <HAL_ADC_Init+0x144>)
 8004826:	685a      	ldr	r2, [r3, #4]
 8004828:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 800482c:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800482e:	685a      	ldr	r2, [r3, #4]
 8004830:	6861      	ldr	r1, [r4, #4]
 8004832:	430a      	orrs	r2, r1
 8004834:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8004836:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8004838:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800483a:	685a      	ldr	r2, [r3, #4]
 800483c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004840:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8004842:	685a      	ldr	r2, [r3, #4]
 8004844:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004848:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800484a:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800484c:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800484e:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8004852:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8004854:	685a      	ldr	r2, [r3, #4]
 8004856:	430a      	orrs	r2, r1
 8004858:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800485a:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800485c:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800485e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004862:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8004864:	689a      	ldr	r2, [r3, #8]
 8004866:	430a      	orrs	r2, r1
 8004868:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800486a:	4934      	ldr	r1, [pc, #208]	@ (800493c <HAL_ADC_Init+0x148>)
 800486c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800486e:	428a      	cmp	r2, r1
 8004870:	d052      	beq.n	8004918 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8004872:	6899      	ldr	r1, [r3, #8]
 8004874:	f021 6170 	bic.w	r1, r1, #251658240	@ 0xf000000
 8004878:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800487a:	6899      	ldr	r1, [r3, #8]
 800487c:	430a      	orrs	r2, r1
 800487e:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8004880:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8004882:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8004884:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8004888:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800488a:	689a      	ldr	r2, [r3, #8]
 800488c:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800488e:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8004890:	689a      	ldr	r2, [r3, #8]
 8004892:	f022 0202 	bic.w	r2, r2, #2
 8004896:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8004898:	689a      	ldr	r2, [r3, #8]
 800489a:	7e21      	ldrb	r1, [r4, #24]
 800489c:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 80048a0:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 80048a2:	f894 2020 	ldrb.w	r2, [r4, #32]
 80048a6:	2a00      	cmp	r2, #0
 80048a8:	d03e      	beq.n	8004928 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80048aa:	685a      	ldr	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80048ac:	6a61      	ldr	r1, [r4, #36]	@ 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80048ae:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80048b2:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 80048b4:	685a      	ldr	r2, [r3, #4]
 80048b6:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 80048ba:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80048bc:	685a      	ldr	r2, [r3, #4]
 80048be:	3901      	subs	r1, #1
 80048c0:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80048c4:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80048c6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80048c8:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80048ca:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80048ce:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80048d0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80048d2:	3901      	subs	r1, #1
 80048d4:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 80048d8:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80048da:	689a      	ldr	r2, [r3, #8]
 80048dc:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80048e0:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80048e2:	689a      	ldr	r2, [r3, #8]
 80048e4:	f894 1030 	ldrb.w	r1, [r4, #48]	@ 0x30
 80048e8:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 80048ec:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80048ee:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80048f0:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80048f2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80048f6:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80048f8:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 80048fa:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80048fc:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8004900:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8004902:	6460      	str	r0, [r4, #68]	@ 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8004904:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004906:	f023 0303 	bic.w	r3, r3, #3
 800490a:	f043 0301 	orr.w	r3, r3, #1
 800490e:	6423      	str	r3, [r4, #64]	@ 0x40
  __HAL_UNLOCK(hadc);
 8004910:	2300      	movs	r3, #0
 8004912:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
 8004916:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8004918:	689a      	ldr	r2, [r3, #8]
 800491a:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800491e:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8004920:	689a      	ldr	r2, [r3, #8]
 8004922:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8004926:	e7b2      	b.n	800488e <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8004928:	685a      	ldr	r2, [r3, #4]
 800492a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800492e:	e7c9      	b.n	80048c4 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8004930:	2001      	movs	r0, #1
 8004932:	e7ed      	b.n	8004910 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8004934:	2001      	movs	r0, #1
 8004936:	e7ee      	b.n	8004916 <HAL_ADC_Init+0x122>
 8004938:	40012300 	.word	0x40012300
 800493c:	0f000001 	.word	0x0f000001

08004940 <HAL_ADC_Start>:
{
 8004940:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8004942:	2300      	movs	r3, #0
 8004944:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8004946:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 800494a:	2b01      	cmp	r3, #1
 800494c:	d069      	beq.n	8004a22 <HAL_ADC_Start+0xe2>
 800494e:	2301      	movs	r3, #1
 8004950:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8004954:	6803      	ldr	r3, [r0, #0]
 8004956:	689a      	ldr	r2, [r3, #8]
 8004958:	07d2      	lsls	r2, r2, #31
 800495a:	d50b      	bpl.n	8004974 <HAL_ADC_Start+0x34>
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 800495c:	689a      	ldr	r2, [r3, #8]
 800495e:	07d1      	lsls	r1, r2, #31
 8004960:	d41a      	bmi.n	8004998 <HAL_ADC_Start+0x58>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8004962:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8004964:	f043 0310 	orr.w	r3, r3, #16
 8004968:	6403      	str	r3, [r0, #64]	@ 0x40
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 800496a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 800496c:	f043 0301 	orr.w	r3, r3, #1
 8004970:	6443      	str	r3, [r0, #68]	@ 0x44
 8004972:	e04c      	b.n	8004a0e <HAL_ADC_Start+0xce>
    __HAL_ADC_ENABLE(hadc);
 8004974:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8004976:	492c      	ldr	r1, [pc, #176]	@ (8004a28 <HAL_ADC_Start+0xe8>)
    __HAL_ADC_ENABLE(hadc);
 8004978:	f042 0201 	orr.w	r2, r2, #1
 800497c:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800497e:	4a2b      	ldr	r2, [pc, #172]	@ (8004a2c <HAL_ADC_Start+0xec>)
 8004980:	6812      	ldr	r2, [r2, #0]
 8004982:	fbb2 f2f1 	udiv	r2, r2, r1
 8004986:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 800498a:	9201      	str	r2, [sp, #4]
    while (counter != 0U)
 800498c:	9a01      	ldr	r2, [sp, #4]
 800498e:	2a00      	cmp	r2, #0
 8004990:	d0e4      	beq.n	800495c <HAL_ADC_Start+0x1c>
      counter--;
 8004992:	9a01      	ldr	r2, [sp, #4]
 8004994:	3a01      	subs	r2, #1
 8004996:	e7f8      	b.n	800498a <HAL_ADC_Start+0x4a>
    ADC_STATE_CLR_SET(hadc->State,
 8004998:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 800499a:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800499e:	f022 0201 	bic.w	r2, r2, #1
 80049a2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80049a6:	6402      	str	r2, [r0, #64]	@ 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 80049a8:	685a      	ldr	r2, [r3, #4]
 80049aa:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 80049ac:	bf41      	itttt	mi
 80049ae:	6c02      	ldrmi	r2, [r0, #64]	@ 0x40
 80049b0:	f422 5240 	bicmi.w	r2, r2, #12288	@ 0x3000
 80049b4:	f442 5280 	orrmi.w	r2, r2, #4096	@ 0x1000
 80049b8:	6402      	strmi	r2, [r0, #64]	@ 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80049ba:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 80049bc:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 80049c0:	bf1c      	itt	ne
 80049c2:	6c42      	ldrne	r2, [r0, #68]	@ 0x44
 80049c4:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 80049c8:	6442      	str	r2, [r0, #68]	@ 0x44
    __HAL_UNLOCK(hadc);
 80049ca:	2200      	movs	r2, #0
 80049cc:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 80049d0:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 80049d4:	601a      	str	r2, [r3, #0]
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 80049d6:	4a16      	ldr	r2, [pc, #88]	@ (8004a30 <HAL_ADC_Start+0xf0>)
 80049d8:	6851      	ldr	r1, [r2, #4]
 80049da:	f011 0f1f 	tst.w	r1, #31
 80049de:	4915      	ldr	r1, [pc, #84]	@ (8004a34 <HAL_ADC_Start+0xf4>)
 80049e0:	d11c      	bne.n	8004a1c <HAL_ADC_Start+0xdc>
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 80049e2:	428b      	cmp	r3, r1
 80049e4:	d007      	beq.n	80049f6 <HAL_ADC_Start+0xb6>
 80049e6:	f501 7180 	add.w	r1, r1, #256	@ 0x100
 80049ea:	428b      	cmp	r3, r1
 80049ec:	d10c      	bne.n	8004a08 <HAL_ADC_Start+0xc8>
 80049ee:	6852      	ldr	r2, [r2, #4]
 80049f0:	f012 0f1f 	tst.w	r2, #31
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 80049f4:	d10b      	bne.n	8004a0e <HAL_ADC_Start+0xce>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 80049f6:	689a      	ldr	r2, [r3, #8]
 80049f8:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 80049fc:	d107      	bne.n	8004a0e <HAL_ADC_Start+0xce>
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 80049fe:	689a      	ldr	r2, [r3, #8]
 8004a00:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8004a04:	609a      	str	r2, [r3, #8]
 8004a06:	e002      	b.n	8004a0e <HAL_ADC_Start+0xce>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8004a08:	490b      	ldr	r1, [pc, #44]	@ (8004a38 <HAL_ADC_Start+0xf8>)
 8004a0a:	428b      	cmp	r3, r1
 8004a0c:	d002      	beq.n	8004a14 <HAL_ADC_Start+0xd4>
  return HAL_OK;
 8004a0e:	2000      	movs	r0, #0
}
 8004a10:	b002      	add	sp, #8
 8004a12:	4770      	bx	lr
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8004a14:	6852      	ldr	r2, [r2, #4]
 8004a16:	f012 0f10 	tst.w	r2, #16
 8004a1a:	e7eb      	b.n	80049f4 <HAL_ADC_Start+0xb4>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8004a1c:	428b      	cmp	r3, r1
 8004a1e:	d1f6      	bne.n	8004a0e <HAL_ADC_Start+0xce>
 8004a20:	e7e9      	b.n	80049f6 <HAL_ADC_Start+0xb6>
  __HAL_LOCK(hadc);
 8004a22:	2002      	movs	r0, #2
 8004a24:	e7f4      	b.n	8004a10 <HAL_ADC_Start+0xd0>
 8004a26:	bf00      	nop
 8004a28:	000f4240 	.word	0x000f4240
 8004a2c:	200000cc 	.word	0x200000cc
 8004a30:	40012300 	.word	0x40012300
 8004a34:	40012000 	.word	0x40012000
 8004a38:	40012200 	.word	0x40012200

08004a3c <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8004a3c:	6803      	ldr	r3, [r0, #0]
 8004a3e:	689a      	ldr	r2, [r3, #8]
 8004a40:	0552      	lsls	r2, r2, #21
{
 8004a42:	b570      	push	{r4, r5, r6, lr}
 8004a44:	4604      	mov	r4, r0
 8004a46:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8004a48:	d50b      	bpl.n	8004a62 <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
 8004a4a:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8004a4c:	05de      	lsls	r6, r3, #23
 8004a4e:	d508      	bpl.n	8004a62 <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8004a50:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8004a52:	f043 0320 	orr.w	r3, r3, #32
 8004a56:	6403      	str	r3, [r0, #64]	@ 0x40
    __HAL_UNLOCK(hadc);
 8004a58:	2300      	movs	r3, #0
 8004a5a:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
    return HAL_ERROR;
 8004a5e:	2001      	movs	r0, #1
}
 8004a60:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 8004a62:	f7ff fead 	bl	80047c0 <HAL_GetTick>
 8004a66:	4606      	mov	r6, r0
  while (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8004a68:	6823      	ldr	r3, [r4, #0]
 8004a6a:	681a      	ldr	r2, [r3, #0]
 8004a6c:	0791      	lsls	r1, r2, #30
 8004a6e:	d50c      	bpl.n	8004a8a <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8004a70:	f06f 0212 	mvn.w	r2, #18
 8004a74:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8004a76:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8004a78:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004a7c:	6422      	str	r2, [r4, #64]	@ 0x40
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8004a7e:	689a      	ldr	r2, [r3, #8]
 8004a80:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 8004a84:	d017      	beq.n	8004ab6 <HAL_ADC_PollForConversion+0x7a>
  return HAL_OK;
 8004a86:	2000      	movs	r0, #0
 8004a88:	e7ea      	b.n	8004a60 <HAL_ADC_PollForConversion+0x24>
    if (Timeout != HAL_MAX_DELAY)
 8004a8a:	1c68      	adds	r0, r5, #1
 8004a8c:	d0ed      	beq.n	8004a6a <HAL_ADC_PollForConversion+0x2e>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8004a8e:	b965      	cbnz	r5, 8004aaa <HAL_ADC_PollForConversion+0x6e>
        if (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8004a90:	6823      	ldr	r3, [r4, #0]
 8004a92:	681b      	ldr	r3, [r3, #0]
 8004a94:	f013 0302 	ands.w	r3, r3, #2
 8004a98:	d1e6      	bne.n	8004a68 <HAL_ADC_PollForConversion+0x2c>
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8004a9a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hadc);
 8004a9c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8004aa0:	f042 0204 	orr.w	r2, r2, #4
 8004aa4:	6422      	str	r2, [r4, #64]	@ 0x40
          return HAL_TIMEOUT;
 8004aa6:	2003      	movs	r0, #3
 8004aa8:	e7da      	b.n	8004a60 <HAL_ADC_PollForConversion+0x24>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8004aaa:	f7ff fe89 	bl	80047c0 <HAL_GetTick>
 8004aae:	1b80      	subs	r0, r0, r6
 8004ab0:	42a8      	cmp	r0, r5
 8004ab2:	d8ed      	bhi.n	8004a90 <HAL_ADC_PollForConversion+0x54>
 8004ab4:	e7d8      	b.n	8004a68 <HAL_ADC_PollForConversion+0x2c>
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8004ab6:	7e22      	ldrb	r2, [r4, #24]
 8004ab8:	2a00      	cmp	r2, #0
 8004aba:	d1e4      	bne.n	8004a86 <HAL_ADC_PollForConversion+0x4a>
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8004abc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8004abe:	f412 0f70 	tst.w	r2, #15728640	@ 0xf00000
 8004ac2:	d002      	beq.n	8004aca <HAL_ADC_PollForConversion+0x8e>
       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8004ac4:	689b      	ldr	r3, [r3, #8]
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8004ac6:	055a      	lsls	r2, r3, #21
 8004ac8:	d4dd      	bmi.n	8004a86 <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8004aca:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004acc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004ad0:	6423      	str	r3, [r4, #64]	@ 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8004ad2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004ad4:	04db      	lsls	r3, r3, #19
 8004ad6:	d4d6      	bmi.n	8004a86 <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8004ad8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004ada:	f043 0301 	orr.w	r3, r3, #1
 8004ade:	6423      	str	r3, [r4, #64]	@ 0x40
 8004ae0:	e7d1      	b.n	8004a86 <HAL_ADC_PollForConversion+0x4a>

08004ae2 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8004ae2:	6803      	ldr	r3, [r0, #0]
 8004ae4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
}
 8004ae6:	4770      	bx	lr

08004ae8 <HAL_ADC_ConfigChannel>:
{
 8004ae8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8004aea:	2300      	movs	r3, #0
 8004aec:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8004aee:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8004af2:	2b01      	cmp	r3, #1
{
 8004af4:	4605      	mov	r5, r0
  __HAL_LOCK(hadc);
 8004af6:	f000 8086 	beq.w	8004c06 <HAL_ADC_ConfigChannel+0x11e>
 8004afa:	2301      	movs	r3, #1
 8004afc:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8004b00:	6808      	ldr	r0, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8004b02:	682b      	ldr	r3, [r5, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8004b04:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8004b06:	2809      	cmp	r0, #9
 8004b08:	b284      	uxth	r4, r0
 8004b0a:	d933      	bls.n	8004b74 <HAL_ADC_ConfigChannel+0x8c>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8004b0c:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8004b10:	68df      	ldr	r7, [r3, #12]
 8004b12:	3a1e      	subs	r2, #30
 8004b14:	f04f 0c07 	mov.w	ip, #7
 8004b18:	fa0c fc02 	lsl.w	ip, ip, r2
 8004b1c:	ea27 070c 	bic.w	r7, r7, ip
 8004b20:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8004b22:	68df      	ldr	r7, [r3, #12]
 8004b24:	fa06 f202 	lsl.w	r2, r6, r2
 8004b28:	433a      	orrs	r2, r7
 8004b2a:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8004b2c:	6849      	ldr	r1, [r1, #4]
 8004b2e:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8004b30:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8004b34:	d82d      	bhi.n	8004b92 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8004b36:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004b38:	3a05      	subs	r2, #5
 8004b3a:	261f      	movs	r6, #31
 8004b3c:	4096      	lsls	r6, r2
 8004b3e:	ea21 0106 	bic.w	r1, r1, r6
 8004b42:	6359      	str	r1, [r3, #52]	@ 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8004b44:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8004b46:	fa04 f202 	lsl.w	r2, r4, r2
 8004b4a:	430a      	orrs	r2, r1
 8004b4c:	635a      	str	r2, [r3, #52]	@ 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8004b4e:	4a2f      	ldr	r2, [pc, #188]	@ (8004c0c <HAL_ADC_ConfigChannel+0x124>)
 8004b50:	4293      	cmp	r3, r2
 8004b52:	d10a      	bne.n	8004b6a <HAL_ADC_ConfigChannel+0x82>
 8004b54:	2812      	cmp	r0, #18
 8004b56:	d137      	bne.n	8004bc8 <HAL_ADC_ConfigChannel+0xe0>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8004b58:	4b2d      	ldr	r3, [pc, #180]	@ (8004c10 <HAL_ADC_ConfigChannel+0x128>)
 8004b5a:	685a      	ldr	r2, [r3, #4]
 8004b5c:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8004b60:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8004b62:	685a      	ldr	r2, [r3, #4]
 8004b64:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 8004b68:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8004b6a:	2000      	movs	r0, #0
 8004b6c:	f885 003c 	strb.w	r0, [r5, #60]	@ 0x3c
}
 8004b70:	b003      	add	sp, #12
 8004b72:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8004b74:	691a      	ldr	r2, [r3, #16]
 8004b76:	eb00 0c40 	add.w	ip, r0, r0, lsl #1
 8004b7a:	2707      	movs	r7, #7
 8004b7c:	fa07 f70c 	lsl.w	r7, r7, ip
 8004b80:	ea22 0207 	bic.w	r2, r2, r7
 8004b84:	611a      	str	r2, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8004b86:	691a      	ldr	r2, [r3, #16]
 8004b88:	fa06 f60c 	lsl.w	r6, r6, ip
 8004b8c:	4316      	orrs	r6, r2
 8004b8e:	611e      	str	r6, [r3, #16]
 8004b90:	e7cc      	b.n	8004b2c <HAL_ADC_ConfigChannel+0x44>
  else if (sConfig->Rank < 13U)
 8004b92:	290c      	cmp	r1, #12
 8004b94:	f04f 011f 	mov.w	r1, #31
 8004b98:	d80b      	bhi.n	8004bb2 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8004b9a:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 8004b9c:	3a23      	subs	r2, #35	@ 0x23
 8004b9e:	4091      	lsls	r1, r2
 8004ba0:	ea26 0101 	bic.w	r1, r6, r1
 8004ba4:	6319      	str	r1, [r3, #48]	@ 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8004ba6:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8004ba8:	fa04 f202 	lsl.w	r2, r4, r2
 8004bac:	430a      	orrs	r2, r1
 8004bae:	631a      	str	r2, [r3, #48]	@ 0x30
 8004bb0:	e7cd      	b.n	8004b4e <HAL_ADC_ConfigChannel+0x66>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8004bb2:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
 8004bb4:	3a41      	subs	r2, #65	@ 0x41
 8004bb6:	4091      	lsls	r1, r2
 8004bb8:	ea26 0101 	bic.w	r1, r6, r1
 8004bbc:	62d9      	str	r1, [r3, #44]	@ 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8004bbe:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8004bc0:	4094      	lsls	r4, r2
 8004bc2:	430c      	orrs	r4, r1
 8004bc4:	62dc      	str	r4, [r3, #44]	@ 0x2c
 8004bc6:	e7c2      	b.n	8004b4e <HAL_ADC_ConfigChannel+0x66>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8004bc8:	4b12      	ldr	r3, [pc, #72]	@ (8004c14 <HAL_ADC_ConfigChannel+0x12c>)
 8004bca:	4298      	cmp	r0, r3
 8004bcc:	d001      	beq.n	8004bd2 <HAL_ADC_ConfigChannel+0xea>
 8004bce:	2811      	cmp	r0, #17
 8004bd0:	d1cb      	bne.n	8004b6a <HAL_ADC_ConfigChannel+0x82>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8004bd2:	4b0f      	ldr	r3, [pc, #60]	@ (8004c10 <HAL_ADC_ConfigChannel+0x128>)
 8004bd4:	685a      	ldr	r2, [r3, #4]
 8004bd6:	f422 0280 	bic.w	r2, r2, #4194304	@ 0x400000
 8004bda:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8004bdc:	685a      	ldr	r2, [r3, #4]
 8004bde:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8004be2:	605a      	str	r2, [r3, #4]
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8004be4:	4b0b      	ldr	r3, [pc, #44]	@ (8004c14 <HAL_ADC_ConfigChannel+0x12c>)
 8004be6:	4298      	cmp	r0, r3
 8004be8:	d1bf      	bne.n	8004b6a <HAL_ADC_ConfigChannel+0x82>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8004bea:	4b0b      	ldr	r3, [pc, #44]	@ (8004c18 <HAL_ADC_ConfigChannel+0x130>)
 8004bec:	4a0b      	ldr	r2, [pc, #44]	@ (8004c1c <HAL_ADC_ConfigChannel+0x134>)
 8004bee:	681b      	ldr	r3, [r3, #0]
 8004bf0:	fbb3 f3f2 	udiv	r3, r3, r2
 8004bf4:	220a      	movs	r2, #10
 8004bf6:	4353      	muls	r3, r2
        counter--;
 8004bf8:	9301      	str	r3, [sp, #4]
      while (counter != 0U)
 8004bfa:	9b01      	ldr	r3, [sp, #4]
 8004bfc:	2b00      	cmp	r3, #0
 8004bfe:	d0b4      	beq.n	8004b6a <HAL_ADC_ConfigChannel+0x82>
        counter--;
 8004c00:	9b01      	ldr	r3, [sp, #4]
 8004c02:	3b01      	subs	r3, #1
 8004c04:	e7f8      	b.n	8004bf8 <HAL_ADC_ConfigChannel+0x110>
  __HAL_LOCK(hadc);
 8004c06:	2002      	movs	r0, #2
 8004c08:	e7b2      	b.n	8004b70 <HAL_ADC_ConfigChannel+0x88>
 8004c0a:	bf00      	nop
 8004c0c:	40012000 	.word	0x40012000
 8004c10:	40012300 	.word	0x40012300
 8004c14:	10000012 	.word	0x10000012
 8004c18:	200000cc 	.word	0x200000cc
 8004c1c:	000f4240 	.word	0x000f4240

08004c20 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004c20:	4907      	ldr	r1, [pc, #28]	@ (8004c40 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8004c22:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004c24:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004c28:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004c2a:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004c2c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004c30:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004c32:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8004c34:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004c38:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8004c3c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8004c3e:	4770      	bx	lr
 8004c40:	e000ed00 	.word	0xe000ed00

08004c44 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004c44:	4b16      	ldr	r3, [pc, #88]	@ (8004ca0 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004c46:	b530      	push	{r4, r5, lr}
 8004c48:	68dc      	ldr	r4, [r3, #12]
 8004c4a:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004c4e:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004c52:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004c54:	2b04      	cmp	r3, #4
 8004c56:	bf28      	it	cs
 8004c58:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004c5a:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004c5c:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004c60:	bf8c      	ite	hi
 8004c62:	3c03      	subhi	r4, #3
 8004c64:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004c66:	fa05 f303 	lsl.w	r3, r5, r3
 8004c6a:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004c6e:	40a5      	lsls	r5, r4
 8004c70:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004c74:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8004c76:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004c78:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c7c:	bfac      	ite	ge
 8004c7e:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c82:	4a08      	ldrlt	r2, [pc, #32]	@ (8004ca4 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c84:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c88:	bfb8      	it	lt
 8004c8a:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c8e:	b2db      	uxtb	r3, r3
 8004c90:	bfaa      	itet	ge
 8004c92:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c96:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c98:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004c9c:	bd30      	pop	{r4, r5, pc}
 8004c9e:	bf00      	nop
 8004ca0:	e000ed00 	.word	0xe000ed00
 8004ca4:	e000ed14 	.word	0xe000ed14

08004ca8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004ca8:	2800      	cmp	r0, #0
 8004caa:	db07      	blt.n	8004cbc <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004cac:	4a04      	ldr	r2, [pc, #16]	@ (8004cc0 <HAL_NVIC_EnableIRQ+0x18>)
 8004cae:	0941      	lsrs	r1, r0, #5
 8004cb0:	2301      	movs	r3, #1
 8004cb2:	f000 001f 	and.w	r0, r0, #31
 8004cb6:	4083      	lsls	r3, r0
 8004cb8:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004cbc:	4770      	bx	lr
 8004cbe:	bf00      	nop
 8004cc0:	e000e100 	.word	0xe000e100

08004cc4 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004cc4:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004cc6:	4604      	mov	r4, r0
 8004cc8:	b150      	cbz	r0, 8004ce0 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004cca:	7943      	ldrb	r3, [r0, #5]
 8004ccc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004cd0:	b913      	cbnz	r3, 8004cd8 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8004cd2:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004cd4:	f7fd fa9c 	bl	8002210 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004cd8:	2301      	movs	r3, #1
 8004cda:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004cdc:	2000      	movs	r0, #0
}
 8004cde:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004ce0:	2001      	movs	r0, #1
 8004ce2:	e7fc      	b.n	8004cde <HAL_CRC_Init+0x1a>

08004ce4 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004ce4:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004ce6:	4604      	mov	r4, r0
 8004ce8:	b320      	cbz	r0, 8004d34 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004cea:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8004cee:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004cf2:	b91b      	cbnz	r3, 8004cfc <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004cf4:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004cf8:	f7fd faa2 	bl	8002240 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004cfc:	2302      	movs	r3, #2
 8004cfe:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004d02:	6823      	ldr	r3, [r4, #0]
 8004d04:	6861      	ldr	r1, [r4, #4]
 8004d06:	681a      	ldr	r2, [r3, #0]
 8004d08:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8004d0c:	430a      	orrs	r2, r1
 8004d0e:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004d10:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004d12:	68a1      	ldr	r1, [r4, #8]
 8004d14:	f022 0207 	bic.w	r2, r2, #7
 8004d18:	430a      	orrs	r2, r1
 8004d1a:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004d1c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004d1e:	68e1      	ldr	r1, [r4, #12]
 8004d20:	f36f 020d 	bfc	r2, #0, #14
 8004d24:	430a      	orrs	r2, r1
 8004d26:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004d28:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004d2a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004d2c:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004d2e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8004d32:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004d34:	2001      	movs	r0, #1
 8004d36:	e7fc      	b.n	8004d32 <HAL_DMA2D_Init+0x4e>

08004d38 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8004d38:	4770      	bx	lr

08004d3a <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8004d3a:	4770      	bx	lr

08004d3c <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004d3c:	6803      	ldr	r3, [r0, #0]
{
 8004d3e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004d40:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004d42:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004d44:	07f2      	lsls	r2, r6, #31
{
 8004d46:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004d48:	d514      	bpl.n	8004d74 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004d4a:	05e9      	lsls	r1, r5, #23
 8004d4c:	d512      	bpl.n	8004d74 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004d4e:	681a      	ldr	r2, [r3, #0]
 8004d50:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004d54:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004d56:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004d58:	f042 0201 	orr.w	r2, r2, #1
 8004d5c:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004d5e:	2201      	movs	r2, #1
 8004d60:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004d62:	2304      	movs	r3, #4
 8004d64:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004d68:	2300      	movs	r3, #0
 8004d6a:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004d6e:	6943      	ldr	r3, [r0, #20]
 8004d70:	b103      	cbz	r3, 8004d74 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8004d72:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004d74:	06b2      	lsls	r2, r6, #26
 8004d76:	d516      	bpl.n	8004da6 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004d78:	04ab      	lsls	r3, r5, #18
 8004d7a:	d514      	bpl.n	8004da6 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004d7c:	6823      	ldr	r3, [r4, #0]
 8004d7e:	681a      	ldr	r2, [r3, #0]
 8004d80:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004d84:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004d86:	2220      	movs	r2, #32
 8004d88:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004d8a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004d8c:	f043 0302 	orr.w	r3, r3, #2
 8004d90:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004d92:	2304      	movs	r3, #4
 8004d94:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004d98:	2300      	movs	r3, #0
 8004d9a:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004d9e:	6963      	ldr	r3, [r4, #20]
 8004da0:	b10b      	cbz	r3, 8004da6 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004da2:	4620      	mov	r0, r4
 8004da4:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004da6:	0730      	lsls	r0, r6, #28
 8004da8:	d516      	bpl.n	8004dd8 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004daa:	0529      	lsls	r1, r5, #20
 8004dac:	d514      	bpl.n	8004dd8 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004dae:	6823      	ldr	r3, [r4, #0]
 8004db0:	681a      	ldr	r2, [r3, #0]
 8004db2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004db6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004db8:	2208      	movs	r2, #8
 8004dba:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004dbc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004dbe:	f043 0304 	orr.w	r3, r3, #4
 8004dc2:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004dc4:	2304      	movs	r3, #4
 8004dc6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004dca:	2300      	movs	r3, #0
 8004dcc:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8004dd0:	6963      	ldr	r3, [r4, #20]
 8004dd2:	b10b      	cbz	r3, 8004dd8 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004dd4:	4620      	mov	r0, r4
 8004dd6:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004dd8:	0772      	lsls	r2, r6, #29
 8004dda:	d50b      	bpl.n	8004df4 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004ddc:	056b      	lsls	r3, r5, #21
 8004dde:	d509      	bpl.n	8004df4 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004de0:	6823      	ldr	r3, [r4, #0]
 8004de2:	681a      	ldr	r2, [r3, #0]
 8004de4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004de8:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004dea:	2204      	movs	r2, #4
 8004dec:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004dee:	4620      	mov	r0, r4
 8004df0:	f7ff ffa2 	bl	8004d38 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004df4:	07b0      	lsls	r0, r6, #30
 8004df6:	d514      	bpl.n	8004e22 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004df8:	05a9      	lsls	r1, r5, #22
 8004dfa:	d512      	bpl.n	8004e22 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004dfc:	6823      	ldr	r3, [r4, #0]
 8004dfe:	681a      	ldr	r2, [r3, #0]
 8004e00:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004e04:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004e06:	2202      	movs	r2, #2
 8004e08:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004e0a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004e0c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004e0e:	2301      	movs	r3, #1
 8004e10:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004e14:	2300      	movs	r3, #0
 8004e16:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8004e1a:	6923      	ldr	r3, [r4, #16]
 8004e1c:	b10b      	cbz	r3, 8004e22 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004e1e:	4620      	mov	r0, r4
 8004e20:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004e22:	06f2      	lsls	r2, r6, #27
 8004e24:	d513      	bpl.n	8004e4e <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004e26:	04eb      	lsls	r3, r5, #19
 8004e28:	d511      	bpl.n	8004e4e <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004e2a:	6823      	ldr	r3, [r4, #0]
 8004e2c:	681a      	ldr	r2, [r3, #0]
 8004e2e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004e32:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004e34:	2210      	movs	r2, #16
 8004e36:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004e38:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8004e3a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004e3c:	2301      	movs	r3, #1
 8004e3e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8004e42:	2300      	movs	r3, #0
 8004e44:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004e48:	4620      	mov	r0, r4
 8004e4a:	f7ff ff76 	bl	8004d3a <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004e4e:	bd70      	pop	{r4, r5, r6, pc}

08004e50 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004e50:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004e52:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8004e56:	2a01      	cmp	r2, #1
{
 8004e58:	4603      	mov	r3, r0
 8004e5a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 8004e5e:	d02b      	beq.n	8004eb8 <HAL_DMA2D_ConfigLayer+0x68>
 8004e60:	2201      	movs	r2, #1
 8004e62:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004e66:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004e6a:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8004e6e:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8004e72:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8004e74:	4f17      	ldr	r7, [pc, #92]	@ (8004ed4 <HAL_DMA2D_ConfigLayer+0x84>)
 8004e76:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004e7a:	3c09      	subs	r4, #9
 8004e7c:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004e7e:	bf9c      	itt	ls
 8004e80:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8004e84:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004e86:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004e8a:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004e8c:	bf88      	it	hi
 8004e8e:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004e92:	b991      	cbnz	r1, 8004eba <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004e94:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8004e96:	4039      	ands	r1, r7
 8004e98:	4301      	orrs	r1, r0
 8004e9a:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004e9c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004e9e:	6999      	ldr	r1, [r3, #24]
 8004ea0:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004ea2:	d803      	bhi.n	8004eac <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8004ea4:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8004ea6:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8004eaa:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004eac:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004eae:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004eb0:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8004eb4:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8004eb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004eba:	69d1      	ldr	r1, [r2, #28]
 8004ebc:	4039      	ands	r1, r7
 8004ebe:	4301      	orrs	r1, r0
 8004ec0:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004ec2:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004ec4:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004ec6:	6989      	ldr	r1, [r1, #24]
 8004ec8:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004eca:	bf9c      	itt	ls
 8004ecc:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8004ed0:	6215      	strls	r5, [r2, #32]
 8004ed2:	e7eb      	b.n	8004eac <HAL_DMA2D_ConfigLayer+0x5c>
 8004ed4:	00fcfff0 	.word	0x00fcfff0

08004ed8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004ed8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004edc:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 800509c <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004ee0:	4a6c      	ldr	r2, [pc, #432]	@ (8005094 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004ee2:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004ee4:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8004ee6:	2401      	movs	r4, #1
 8004ee8:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004eea:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8004eee:	43ac      	bics	r4, r5
 8004ef0:	f040 80b7 	bne.w	8005062 <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004ef4:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004ef6:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004ef8:	f005 0403 	and.w	r4, r5, #3
 8004efc:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004f00:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004f04:	1e67      	subs	r7, r4, #1
 8004f06:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004f08:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004f0c:	d834      	bhi.n	8004f78 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8004f0e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004f10:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004f14:	68cf      	ldr	r7, [r1, #12]
 8004f16:	fa07 f708 	lsl.w	r7, r7, r8
 8004f1a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8004f1e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004f20:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004f22:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004f26:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8004f2a:	409f      	lsls	r7, r3
 8004f2c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8004f30:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8004f32:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004f34:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004f38:	688f      	ldr	r7, [r1, #8]
 8004f3a:	fa07 f708 	lsl.w	r7, r7, r8
 8004f3e:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004f42:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8004f44:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004f46:	d119      	bne.n	8004f7c <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8004f48:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004f4c:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004f50:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8004f54:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004f58:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004f5c:	f04f 0e0f 	mov.w	lr, #15
 8004f60:	fa0e fe0b 	lsl.w	lr, lr, fp
 8004f64:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004f68:	690f      	ldr	r7, [r1, #16]
 8004f6a:	fa07 f70b 	lsl.w	r7, r7, fp
 8004f6e:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8004f72:	f8ca 7020 	str.w	r7, [sl, #32]
 8004f76:	e001      	b.n	8004f7c <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004f78:	2c03      	cmp	r4, #3
 8004f7a:	d1da      	bne.n	8004f32 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8004f7c:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004f7e:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004f82:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004f86:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004f88:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8004f8c:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004f8e:	d068      	beq.n	8005062 <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004f90:	2400      	movs	r4, #0
 8004f92:	9401      	str	r4, [sp, #4]
 8004f94:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8004f98:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8004f9c:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8004fa0:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8004fa4:	f023 0703 	bic.w	r7, r3, #3
 8004fa8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8004fac:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8004fb0:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8004fb4:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004fb6:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004fba:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8004fbc:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004fc0:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004fc4:	240f      	movs	r4, #15
 8004fc6:	fa04 f40c 	lsl.w	r4, r4, ip
 8004fca:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004fce:	4c32      	ldr	r4, [pc, #200]	@ (8005098 <HAL_GPIO_Init+0x1c0>)
 8004fd0:	42a0      	cmp	r0, r4
 8004fd2:	d04d      	beq.n	8005070 <HAL_GPIO_Init+0x198>
 8004fd4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004fd8:	42a0      	cmp	r0, r4
 8004fda:	d04b      	beq.n	8005074 <HAL_GPIO_Init+0x19c>
 8004fdc:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004fe0:	42a0      	cmp	r0, r4
 8004fe2:	d049      	beq.n	8005078 <HAL_GPIO_Init+0x1a0>
 8004fe4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004fe8:	42a0      	cmp	r0, r4
 8004fea:	d047      	beq.n	800507c <HAL_GPIO_Init+0x1a4>
 8004fec:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004ff0:	42a0      	cmp	r0, r4
 8004ff2:	d045      	beq.n	8005080 <HAL_GPIO_Init+0x1a8>
 8004ff4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8004ff8:	42a0      	cmp	r0, r4
 8004ffa:	d043      	beq.n	8005084 <HAL_GPIO_Init+0x1ac>
 8004ffc:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005000:	42a0      	cmp	r0, r4
 8005002:	d041      	beq.n	8005088 <HAL_GPIO_Init+0x1b0>
 8005004:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005008:	42a0      	cmp	r0, r4
 800500a:	d03f      	beq.n	800508c <HAL_GPIO_Init+0x1b4>
 800500c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005010:	42a0      	cmp	r0, r4
 8005012:	d03d      	beq.n	8005090 <HAL_GPIO_Init+0x1b8>
 8005014:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8005018:	42a0      	cmp	r0, r4
 800501a:	bf14      	ite	ne
 800501c:	240a      	movne	r4, #10
 800501e:	2409      	moveq	r4, #9
 8005020:	fa04 f40c 	lsl.w	r4, r4, ip
 8005024:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005028:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 800502a:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800502c:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800502e:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 8005032:	bf0c      	ite	eq
 8005034:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005036:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8005038:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800503a:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800503c:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 8005040:	bf0c      	ite	eq
 8005042:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005044:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8005046:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8005048:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800504a:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 800504e:	bf0c      	ite	eq
 8005050:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8005052:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 8005054:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8005056:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8005058:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800505a:	bf54      	ite	pl
 800505c:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 800505e:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 8005060:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005062:	3301      	adds	r3, #1
 8005064:	2b10      	cmp	r3, #16
 8005066:	f47f af3d 	bne.w	8004ee4 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800506a:	b003      	add	sp, #12
 800506c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005070:	2400      	movs	r4, #0
 8005072:	e7d5      	b.n	8005020 <HAL_GPIO_Init+0x148>
 8005074:	2401      	movs	r4, #1
 8005076:	e7d3      	b.n	8005020 <HAL_GPIO_Init+0x148>
 8005078:	2402      	movs	r4, #2
 800507a:	e7d1      	b.n	8005020 <HAL_GPIO_Init+0x148>
 800507c:	2403      	movs	r4, #3
 800507e:	e7cf      	b.n	8005020 <HAL_GPIO_Init+0x148>
 8005080:	2404      	movs	r4, #4
 8005082:	e7cd      	b.n	8005020 <HAL_GPIO_Init+0x148>
 8005084:	2405      	movs	r4, #5
 8005086:	e7cb      	b.n	8005020 <HAL_GPIO_Init+0x148>
 8005088:	2406      	movs	r4, #6
 800508a:	e7c9      	b.n	8005020 <HAL_GPIO_Init+0x148>
 800508c:	2407      	movs	r4, #7
 800508e:	e7c7      	b.n	8005020 <HAL_GPIO_Init+0x148>
 8005090:	2408      	movs	r4, #8
 8005092:	e7c5      	b.n	8005020 <HAL_GPIO_Init+0x148>
 8005094:	40013c00 	.word	0x40013c00
 8005098:	40020000 	.word	0x40020000
 800509c:	40023800 	.word	0x40023800

080050a0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80050a0:	6903      	ldr	r3, [r0, #16]
 80050a2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80050a4:	bf14      	ite	ne
 80050a6:	2001      	movne	r0, #1
 80050a8:	2000      	moveq	r0, #0
 80050aa:	4770      	bx	lr

080050ac <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80050ac:	b10a      	cbz	r2, 80050b2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80050ae:	6181      	str	r1, [r0, #24]
  }
}
 80050b0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80050b2:	0409      	lsls	r1, r1, #16
 80050b4:	e7fb      	b.n	80050ae <HAL_GPIO_WritePin+0x2>

080050b6 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80050b6:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80050b8:	ea01 0203 	and.w	r2, r1, r3
 80050bc:	ea21 0103 	bic.w	r1, r1, r3
 80050c0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80050c4:	6181      	str	r1, [r0, #24]
}
 80050c6:	4770      	bx	lr

080050c8 <HAL_GPIO_EXTI_IRQHandler>:
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80050c8:	4a04      	ldr	r2, [pc, #16]	@ (80050dc <HAL_GPIO_EXTI_IRQHandler+0x14>)
 80050ca:	6951      	ldr	r1, [r2, #20]
 80050cc:	4201      	tst	r1, r0
{
 80050ce:	b508      	push	{r3, lr}
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80050d0:	d002      	beq.n	80050d8 <HAL_GPIO_EXTI_IRQHandler+0x10>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80050d2:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80050d4:	f7fc fccd 	bl	8001a72 <HAL_GPIO_EXTI_Callback>
  }
}
 80050d8:	bd08      	pop	{r3, pc}
 80050da:	bf00      	nop
 80050dc:	40013c00 	.word	0x40013c00

080050e0 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80050e0:	6801      	ldr	r1, [r0, #0]
 80050e2:	694b      	ldr	r3, [r1, #20]
 80050e4:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 80050e8:	f04f 0200 	mov.w	r2, #0
 80050ec:	d010      	beq.n	8005110 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80050ee:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 80050f2:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 80050f4:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 80050f6:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80050f8:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80050fc:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005100:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005102:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005106:	f043 0304 	orr.w	r3, r3, #4
 800510a:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 800510c:	2001      	movs	r0, #1
 800510e:	4770      	bx	lr
  }
  return HAL_OK;
 8005110:	4618      	mov	r0, r3
}
 8005112:	4770      	bx	lr

08005114 <I2C_WaitOnFlagUntilTimeout>:
{
 8005114:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8005118:	4606      	mov	r6, r0
 800511a:	460f      	mov	r7, r1
 800511c:	4691      	mov	r9, r2
 800511e:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005120:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8005124:	6833      	ldr	r3, [r6, #0]
 8005126:	f1ba 0f01 	cmp.w	sl, #1
 800512a:	bf0c      	ite	eq
 800512c:	695c      	ldreq	r4, [r3, #20]
 800512e:	699c      	ldrne	r4, [r3, #24]
 8005130:	ea27 0404 	bic.w	r4, r7, r4
 8005134:	b2a4      	uxth	r4, r4
 8005136:	fab4 f484 	clz	r4, r4
 800513a:	0964      	lsrs	r4, r4, #5
 800513c:	45a1      	cmp	r9, r4
 800513e:	d001      	beq.n	8005144 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8005140:	2000      	movs	r0, #0
 8005142:	e025      	b.n	8005190 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 8005144:	1c6a      	adds	r2, r5, #1
 8005146:	d0ee      	beq.n	8005126 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005148:	f7ff fb3a 	bl	80047c0 <HAL_GetTick>
 800514c:	9b08      	ldr	r3, [sp, #32]
 800514e:	1ac0      	subs	r0, r0, r3
 8005150:	42a8      	cmp	r0, r5
 8005152:	d801      	bhi.n	8005158 <I2C_WaitOnFlagUntilTimeout+0x44>
 8005154:	2d00      	cmp	r5, #0
 8005156:	d1e5      	bne.n	8005124 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8005158:	6833      	ldr	r3, [r6, #0]
 800515a:	f1ba 0f01 	cmp.w	sl, #1
 800515e:	bf0c      	ite	eq
 8005160:	695b      	ldreq	r3, [r3, #20]
 8005162:	699b      	ldrne	r3, [r3, #24]
 8005164:	ea27 0303 	bic.w	r3, r7, r3
 8005168:	b29b      	uxth	r3, r3
 800516a:	fab3 f383 	clz	r3, r3
 800516e:	095b      	lsrs	r3, r3, #5
 8005170:	4599      	cmp	r9, r3
 8005172:	d1d7      	bne.n	8005124 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8005174:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 8005176:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 8005178:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800517a:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800517e:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005182:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8005184:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005188:	f042 0220 	orr.w	r2, r2, #32
 800518c:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 800518e:	2001      	movs	r0, #1
}
 8005190:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08005194 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8005194:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005198:	4604      	mov	r4, r0
 800519a:	460f      	mov	r7, r1
 800519c:	4616      	mov	r6, r2
 800519e:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80051a0:	6825      	ldr	r5, [r4, #0]
 80051a2:	6968      	ldr	r0, [r5, #20]
 80051a4:	ea27 0000 	bic.w	r0, r7, r0
 80051a8:	b280      	uxth	r0, r0
 80051aa:	b1c0      	cbz	r0, 80051de <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80051ac:	696b      	ldr	r3, [r5, #20]
 80051ae:	055a      	lsls	r2, r3, #21
 80051b0:	d517      	bpl.n	80051e2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80051b2:	682b      	ldr	r3, [r5, #0]
 80051b4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80051b8:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80051ba:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 80051be:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80051c0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80051c2:	2300      	movs	r3, #0
 80051c4:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80051c6:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80051ca:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80051ce:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80051d0:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80051d4:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80051d6:	2300      	movs	r3, #0
 80051d8:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 80051dc:	2001      	movs	r0, #1
}
 80051de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80051e2:	1c73      	adds	r3, r6, #1
 80051e4:	d0dd      	beq.n	80051a2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80051e6:	f7ff faeb 	bl	80047c0 <HAL_GetTick>
 80051ea:	eba0 0008 	sub.w	r0, r0, r8
 80051ee:	42b0      	cmp	r0, r6
 80051f0:	d801      	bhi.n	80051f6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 80051f2:	2e00      	cmp	r6, #0
 80051f4:	d1d4      	bne.n	80051a0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 80051f6:	6823      	ldr	r3, [r4, #0]
 80051f8:	695a      	ldr	r2, [r3, #20]
 80051fa:	ea27 0202 	bic.w	r2, r7, r2
 80051fe:	b292      	uxth	r2, r2
 8005200:	2a00      	cmp	r2, #0
 8005202:	d0cd      	beq.n	80051a0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 8005204:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 8005206:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8005208:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800520a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800520e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005212:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005214:	4313      	orrs	r3, r2
 8005216:	e7dd      	b.n	80051d4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08005218 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8005218:	b570      	push	{r4, r5, r6, lr}
 800521a:	4604      	mov	r4, r0
 800521c:	460d      	mov	r5, r1
 800521e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005220:	6823      	ldr	r3, [r4, #0]
 8005222:	695b      	ldr	r3, [r3, #20]
 8005224:	061b      	lsls	r3, r3, #24
 8005226:	d501      	bpl.n	800522c <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8005228:	2000      	movs	r0, #0
 800522a:	e01e      	b.n	800526a <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800522c:	4620      	mov	r0, r4
 800522e:	f7ff ff57 	bl	80050e0 <I2C_IsAcknowledgeFailed>
 8005232:	b9c8      	cbnz	r0, 8005268 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8005234:	1c6a      	adds	r2, r5, #1
 8005236:	d0f3      	beq.n	8005220 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005238:	f7ff fac2 	bl	80047c0 <HAL_GetTick>
 800523c:	1b80      	subs	r0, r0, r6
 800523e:	42a8      	cmp	r0, r5
 8005240:	d801      	bhi.n	8005246 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8005242:	2d00      	cmp	r5, #0
 8005244:	d1ec      	bne.n	8005220 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8005246:	6823      	ldr	r3, [r4, #0]
 8005248:	695b      	ldr	r3, [r3, #20]
 800524a:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 800524e:	d1e7      	bne.n	8005220 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8005250:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8005252:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8005254:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005258:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800525c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800525e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005262:	f042 0220 	orr.w	r2, r2, #32
 8005266:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005268:	2001      	movs	r0, #1
}
 800526a:	bd70      	pop	{r4, r5, r6, pc}

0800526c <I2C_RequestMemoryWrite>:
{
 800526c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005270:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005272:	6802      	ldr	r2, [r0, #0]
{
 8005274:	b085      	sub	sp, #20
 8005276:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 800527a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800527c:	6813      	ldr	r3, [r2, #0]
 800527e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005282:	6013      	str	r3, [r2, #0]
{
 8005284:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005286:	463b      	mov	r3, r7
 8005288:	f8cd 8000 	str.w	r8, [sp]
 800528c:	2200      	movs	r2, #0
 800528e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8005292:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005294:	f7ff ff3e 	bl	8005114 <I2C_WaitOnFlagUntilTimeout>
 8005298:	6823      	ldr	r3, [r4, #0]
 800529a:	b138      	cbz	r0, 80052ac <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	05db      	lsls	r3, r3, #23
 80052a0:	d502      	bpl.n	80052a8 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80052a2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80052a6:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 80052a8:	2603      	movs	r6, #3
 80052aa:	e020      	b.n	80052ee <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80052ac:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 80052b0:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80052b2:	491a      	ldr	r1, [pc, #104]	@ (800531c <I2C_RequestMemoryWrite+0xb0>)
 80052b4:	4643      	mov	r3, r8
 80052b6:	463a      	mov	r2, r7
 80052b8:	4620      	mov	r0, r4
 80052ba:	f7ff ff6b 	bl	8005194 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80052be:	b9a8      	cbnz	r0, 80052ec <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80052c0:	6823      	ldr	r3, [r4, #0]
 80052c2:	9003      	str	r0, [sp, #12]
 80052c4:	695a      	ldr	r2, [r3, #20]
 80052c6:	9203      	str	r2, [sp, #12]
 80052c8:	699b      	ldr	r3, [r3, #24]
 80052ca:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80052cc:	4642      	mov	r2, r8
 80052ce:	4639      	mov	r1, r7
 80052d0:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80052d2:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80052d4:	f7ff ffa0 	bl	8005218 <I2C_WaitOnTXEFlagUntilTimeout>
 80052d8:	4606      	mov	r6, r0
 80052da:	b160      	cbz	r0, 80052f6 <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80052dc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80052de:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80052e0:	bf01      	itttt	eq
 80052e2:	6822      	ldreq	r2, [r4, #0]
 80052e4:	6813      	ldreq	r3, [r2, #0]
 80052e6:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 80052ea:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 80052ec:	2601      	movs	r6, #1
}
 80052ee:	4630      	mov	r0, r6
 80052f0:	b005      	add	sp, #20
 80052f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80052f6:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80052fa:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80052fc:	d102      	bne.n	8005304 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80052fe:	b2ed      	uxtb	r5, r5
 8005300:	611d      	str	r5, [r3, #16]
 8005302:	e7f4      	b.n	80052ee <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005304:	0a2a      	lsrs	r2, r5, #8
 8005306:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005308:	4639      	mov	r1, r7
 800530a:	4642      	mov	r2, r8
 800530c:	4620      	mov	r0, r4
 800530e:	f7ff ff83 	bl	8005218 <I2C_WaitOnTXEFlagUntilTimeout>
 8005312:	2800      	cmp	r0, #0
 8005314:	d1e2      	bne.n	80052dc <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005316:	6823      	ldr	r3, [r4, #0]
 8005318:	e7f1      	b.n	80052fe <I2C_RequestMemoryWrite+0x92>
 800531a:	bf00      	nop
 800531c:	00010002 	.word	0x00010002

08005320 <I2C_RequestMemoryRead>:
{
 8005320:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005324:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005326:	6803      	ldr	r3, [r0, #0]
{
 8005328:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800532a:	681a      	ldr	r2, [r3, #0]
 800532c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8005330:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005332:	681a      	ldr	r2, [r3, #0]
{
 8005334:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005338:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800533c:	601a      	str	r2, [r3, #0]
{
 800533e:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005340:	463b      	mov	r3, r7
 8005342:	f8cd 8000 	str.w	r8, [sp]
 8005346:	2200      	movs	r2, #0
 8005348:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 800534c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800534e:	f7ff fee1 	bl	8005114 <I2C_WaitOnFlagUntilTimeout>
 8005352:	6823      	ldr	r3, [r4, #0]
 8005354:	b138      	cbz	r0, 8005366 <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005356:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005358:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800535a:	bf44      	itt	mi
 800535c:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8005360:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8005362:	2003      	movs	r0, #3
 8005364:	e021      	b.n	80053aa <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005366:	fa5f f986 	uxtb.w	r9, r6
 800536a:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 800536e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005370:	492b      	ldr	r1, [pc, #172]	@ (8005420 <I2C_RequestMemoryRead+0x100>)
 8005372:	4643      	mov	r3, r8
 8005374:	463a      	mov	r2, r7
 8005376:	4620      	mov	r0, r4
 8005378:	f7ff ff0c 	bl	8005194 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800537c:	b9a0      	cbnz	r0, 80053a8 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800537e:	6823      	ldr	r3, [r4, #0]
 8005380:	9003      	str	r0, [sp, #12]
 8005382:	695a      	ldr	r2, [r3, #20]
 8005384:	9203      	str	r2, [sp, #12]
 8005386:	699b      	ldr	r3, [r3, #24]
 8005388:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800538a:	4642      	mov	r2, r8
 800538c:	4639      	mov	r1, r7
 800538e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005390:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005392:	f7ff ff41 	bl	8005218 <I2C_WaitOnTXEFlagUntilTimeout>
 8005396:	b158      	cbz	r0, 80053b0 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005398:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800539a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800539c:	bf01      	itttt	eq
 800539e:	6822      	ldreq	r2, [r4, #0]
 80053a0:	6813      	ldreq	r3, [r2, #0]
 80053a2:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 80053a6:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 80053a8:	2001      	movs	r0, #1
}
 80053aa:	b004      	add	sp, #16
 80053ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80053b0:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80053b4:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80053b6:	d11a      	bne.n	80053ee <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80053b8:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80053ba:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80053bc:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80053be:	4639      	mov	r1, r7
 80053c0:	4620      	mov	r0, r4
 80053c2:	f7ff ff29 	bl	8005218 <I2C_WaitOnTXEFlagUntilTimeout>
 80053c6:	4602      	mov	r2, r0
 80053c8:	2800      	cmp	r0, #0
 80053ca:	d1e5      	bne.n	8005398 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80053cc:	6821      	ldr	r1, [r4, #0]
 80053ce:	680b      	ldr	r3, [r1, #0]
 80053d0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80053d4:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80053d6:	4620      	mov	r0, r4
 80053d8:	f8cd 8000 	str.w	r8, [sp]
 80053dc:	463b      	mov	r3, r7
 80053de:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80053e2:	f7ff fe97 	bl	8005114 <I2C_WaitOnFlagUntilTimeout>
 80053e6:	6822      	ldr	r2, [r4, #0]
 80053e8:	b160      	cbz	r0, 8005404 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80053ea:	6813      	ldr	r3, [r2, #0]
 80053ec:	e7b4      	b.n	8005358 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80053ee:	0a2a      	lsrs	r2, r5, #8
 80053f0:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80053f2:	4639      	mov	r1, r7
 80053f4:	4642      	mov	r2, r8
 80053f6:	4620      	mov	r0, r4
 80053f8:	f7ff ff0e 	bl	8005218 <I2C_WaitOnTXEFlagUntilTimeout>
 80053fc:	2800      	cmp	r0, #0
 80053fe:	d1cb      	bne.n	8005398 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005400:	6823      	ldr	r3, [r4, #0]
 8005402:	e7d9      	b.n	80053b8 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005404:	f049 0301 	orr.w	r3, r9, #1
 8005408:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800540a:	4905      	ldr	r1, [pc, #20]	@ (8005420 <I2C_RequestMemoryRead+0x100>)
 800540c:	4643      	mov	r3, r8
 800540e:	463a      	mov	r2, r7
 8005410:	4620      	mov	r0, r4
 8005412:	f7ff febf 	bl	8005194 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005416:	3800      	subs	r0, #0
 8005418:	bf18      	it	ne
 800541a:	2001      	movne	r0, #1
 800541c:	e7c5      	b.n	80053aa <I2C_RequestMemoryRead+0x8a>
 800541e:	bf00      	nop
 8005420:	00010002 	.word	0x00010002

08005424 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8005424:	b570      	push	{r4, r5, r6, lr}
 8005426:	4604      	mov	r4, r0
 8005428:	460d      	mov	r5, r1
 800542a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800542c:	6823      	ldr	r3, [r4, #0]
 800542e:	695b      	ldr	r3, [r3, #20]
 8005430:	075b      	lsls	r3, r3, #29
 8005432:	d501      	bpl.n	8005438 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8005434:	2000      	movs	r0, #0
 8005436:	e01e      	b.n	8005476 <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005438:	4620      	mov	r0, r4
 800543a:	f7ff fe51 	bl	80050e0 <I2C_IsAcknowledgeFailed>
 800543e:	b9c8      	cbnz	r0, 8005474 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8005440:	1c6a      	adds	r2, r5, #1
 8005442:	d0f3      	beq.n	800542c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005444:	f7ff f9bc 	bl	80047c0 <HAL_GetTick>
 8005448:	1b80      	subs	r0, r0, r6
 800544a:	42a8      	cmp	r0, r5
 800544c:	d801      	bhi.n	8005452 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800544e:	2d00      	cmp	r5, #0
 8005450:	d1ec      	bne.n	800542c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8005452:	6823      	ldr	r3, [r4, #0]
 8005454:	695b      	ldr	r3, [r3, #20]
 8005456:	f013 0304 	ands.w	r3, r3, #4
 800545a:	d1e7      	bne.n	800542c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 800545c:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800545e:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8005460:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005464:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005468:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800546a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800546e:	f042 0220 	orr.w	r2, r2, #32
 8005472:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8005474:	2001      	movs	r0, #1
}
 8005476:	bd70      	pop	{r4, r5, r6, pc}

08005478 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8005478:	b570      	push	{r4, r5, r6, lr}
 800547a:	4604      	mov	r4, r0
 800547c:	460d      	mov	r5, r1
 800547e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005480:	6821      	ldr	r1, [r4, #0]
 8005482:	694b      	ldr	r3, [r1, #20]
 8005484:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8005488:	d001      	beq.n	800548e <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800548a:	2000      	movs	r0, #0
 800548c:	e011      	b.n	80054b2 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800548e:	694a      	ldr	r2, [r1, #20]
 8005490:	06d2      	lsls	r2, r2, #27
 8005492:	d50f      	bpl.n	80054b4 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005494:	f06f 0210 	mvn.w	r2, #16
 8005498:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800549a:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800549c:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800549e:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80054a2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80054a6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80054a8:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 80054aa:	2300      	movs	r3, #0
 80054ac:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 80054b0:	2001      	movs	r0, #1
}
 80054b2:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80054b4:	f7ff f984 	bl	80047c0 <HAL_GetTick>
 80054b8:	1b80      	subs	r0, r0, r6
 80054ba:	42a8      	cmp	r0, r5
 80054bc:	d801      	bhi.n	80054c2 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 80054be:	2d00      	cmp	r5, #0
 80054c0:	d1de      	bne.n	8005480 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 80054c2:	6823      	ldr	r3, [r4, #0]
 80054c4:	695b      	ldr	r3, [r3, #20]
 80054c6:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 80054ca:	d1d9      	bne.n	8005480 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 80054cc:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80054ce:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80054d0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80054d4:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80054d8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80054da:	4313      	orrs	r3, r2
 80054dc:	e7e4      	b.n	80054a8 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

080054e0 <HAL_I2C_Init>:
{
 80054e0:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80054e2:	4604      	mov	r4, r0
 80054e4:	b908      	cbnz	r0, 80054ea <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80054e6:	2001      	movs	r0, #1
}
 80054e8:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80054ea:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80054ee:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80054f2:	b91b      	cbnz	r3, 80054fc <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80054f4:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 80054f8:	f7fc fec4 	bl	8002284 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80054fc:	2324      	movs	r3, #36	@ 0x24
 80054fe:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005502:	6823      	ldr	r3, [r4, #0]
 8005504:	681a      	ldr	r2, [r3, #0]
 8005506:	f022 0201 	bic.w	r2, r2, #1
 800550a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800550c:	681a      	ldr	r2, [r3, #0]
 800550e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005512:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005514:	681a      	ldr	r2, [r3, #0]
 8005516:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800551a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800551c:	f001 fb9e 	bl	8006c5c <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005520:	4b3f      	ldr	r3, [pc, #252]	@ (8005620 <HAL_I2C_Init+0x140>)
 8005522:	6865      	ldr	r5, [r4, #4]
 8005524:	429d      	cmp	r5, r3
 8005526:	bf94      	ite	ls
 8005528:	4b3e      	ldrls	r3, [pc, #248]	@ (8005624 <HAL_I2C_Init+0x144>)
 800552a:	4b3f      	ldrhi	r3, [pc, #252]	@ (8005628 <HAL_I2C_Init+0x148>)
 800552c:	4298      	cmp	r0, r3
 800552e:	bf8c      	ite	hi
 8005530:	2300      	movhi	r3, #0
 8005532:	2301      	movls	r3, #1
 8005534:	2b00      	cmp	r3, #0
 8005536:	d1d6      	bne.n	80054e6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005538:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800553a:	4e39      	ldr	r6, [pc, #228]	@ (8005620 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800553c:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800553e:	4b3b      	ldr	r3, [pc, #236]	@ (800562c <HAL_I2C_Init+0x14c>)
 8005540:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005544:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8005548:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800554a:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800554c:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800554e:	bf88      	it	hi
 8005550:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8005554:	6a11      	ldr	r1, [r2, #32]
 8005556:	bf88      	it	hi
 8005558:	4373      	mulhi	r3, r6
 800555a:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800555e:	bf84      	itt	hi
 8005560:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8005564:	fbb3 f3f6 	udivhi	r3, r3, r6
 8005568:	3301      	adds	r3, #1
 800556a:	430b      	orrs	r3, r1
 800556c:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800556e:	69d1      	ldr	r1, [r2, #28]
 8005570:	1e43      	subs	r3, r0, #1
 8005572:	482b      	ldr	r0, [pc, #172]	@ (8005620 <HAL_I2C_Init+0x140>)
 8005574:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 8005578:	4285      	cmp	r5, r0
 800557a:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800557e:	d832      	bhi.n	80055e6 <HAL_I2C_Init+0x106>
 8005580:	006d      	lsls	r5, r5, #1
 8005582:	f640 70fc 	movw	r0, #4092	@ 0xffc
 8005586:	fbb3 f3f5 	udiv	r3, r3, r5
 800558a:	3301      	adds	r3, #1
 800558c:	4203      	tst	r3, r0
 800558e:	d042      	beq.n	8005616 <HAL_I2C_Init+0x136>
 8005590:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005594:	4319      	orrs	r1, r3
 8005596:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8005598:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800559c:	6811      	ldr	r1, [r2, #0]
 800559e:	4303      	orrs	r3, r0
 80055a0:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 80055a4:	430b      	orrs	r3, r1
 80055a6:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80055a8:	6891      	ldr	r1, [r2, #8]
 80055aa:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80055ae:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 80055b2:	4303      	orrs	r3, r0
 80055b4:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80055b8:	430b      	orrs	r3, r1
 80055ba:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80055bc:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80055c0:	68d1      	ldr	r1, [r2, #12]
 80055c2:	4303      	orrs	r3, r0
 80055c4:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 80055c8:	430b      	orrs	r3, r1
 80055ca:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80055cc:	6813      	ldr	r3, [r2, #0]
 80055ce:	f043 0301 	orr.w	r3, r3, #1
 80055d2:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80055d4:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80055d6:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80055d8:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80055da:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80055de:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80055e0:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 80055e4:	e780      	b.n	80054e8 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80055e6:	68a0      	ldr	r0, [r4, #8]
 80055e8:	b950      	cbnz	r0, 8005600 <HAL_I2C_Init+0x120>
 80055ea:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80055ee:	fbb3 f3f5 	udiv	r3, r3, r5
 80055f2:	3301      	adds	r3, #1
 80055f4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80055f8:	b17b      	cbz	r3, 800561a <HAL_I2C_Init+0x13a>
 80055fa:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80055fe:	e7c9      	b.n	8005594 <HAL_I2C_Init+0xb4>
 8005600:	2019      	movs	r0, #25
 8005602:	4368      	muls	r0, r5
 8005604:	fbb3 f3f0 	udiv	r3, r3, r0
 8005608:	3301      	adds	r3, #1
 800560a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800560e:	b123      	cbz	r3, 800561a <HAL_I2C_Init+0x13a>
 8005610:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8005614:	e7be      	b.n	8005594 <HAL_I2C_Init+0xb4>
 8005616:	2304      	movs	r3, #4
 8005618:	e7bc      	b.n	8005594 <HAL_I2C_Init+0xb4>
 800561a:	2301      	movs	r3, #1
 800561c:	e7ba      	b.n	8005594 <HAL_I2C_Init+0xb4>
 800561e:	bf00      	nop
 8005620:	000186a0 	.word	0x000186a0
 8005624:	001e847f 	.word	0x001e847f
 8005628:	003d08ff 	.word	0x003d08ff
 800562c:	000f4240 	.word	0x000f4240

08005630 <HAL_I2C_Mem_Write>:
{
 8005630:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005634:	4604      	mov	r4, r0
 8005636:	4699      	mov	r9, r3
 8005638:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800563a:	460f      	mov	r7, r1
 800563c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800563e:	f7ff f8bf 	bl	80047c0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005642:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8005646:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005648:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800564a:	d003      	beq.n	8005654 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 800564c:	2002      	movs	r0, #2
}
 800564e:	b003      	add	sp, #12
 8005650:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005654:	9000      	str	r0, [sp, #0]
 8005656:	493c      	ldr	r1, [pc, #240]	@ (8005748 <HAL_I2C_Mem_Write+0x118>)
 8005658:	2319      	movs	r3, #25
 800565a:	2201      	movs	r2, #1
 800565c:	4620      	mov	r0, r4
 800565e:	f7ff fd59 	bl	8005114 <I2C_WaitOnFlagUntilTimeout>
 8005662:	2800      	cmp	r0, #0
 8005664:	d1f2      	bne.n	800564c <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8005666:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800566a:	2b01      	cmp	r3, #1
 800566c:	d0ee      	beq.n	800564c <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800566e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005670:	2301      	movs	r3, #1
 8005672:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005676:	6803      	ldr	r3, [r0, #0]
 8005678:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800567a:	bf5e      	ittt	pl
 800567c:	6803      	ldrpl	r3, [r0, #0]
 800567e:	f043 0301 	orrpl.w	r3, r3, #1
 8005682:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005684:	6803      	ldr	r3, [r0, #0]
 8005686:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800568a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800568c:	2321      	movs	r3, #33	@ 0x21
 800568e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005692:	2340      	movs	r3, #64	@ 0x40
 8005694:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005698:	2300      	movs	r3, #0
 800569a:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 800569c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800569e:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80056a0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80056a4:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80056a6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80056a8:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80056aa:	4b28      	ldr	r3, [pc, #160]	@ (800574c <HAL_I2C_Mem_Write+0x11c>)
 80056ac:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80056ae:	4642      	mov	r2, r8
 80056b0:	e9cd 6500 	strd	r6, r5, [sp]
 80056b4:	464b      	mov	r3, r9
 80056b6:	4639      	mov	r1, r7
 80056b8:	4620      	mov	r0, r4
 80056ba:	f7ff fdd7 	bl	800526c <I2C_RequestMemoryWrite>
 80056be:	2800      	cmp	r0, #0
 80056c0:	d02a      	beq.n	8005718 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80056c2:	2001      	movs	r0, #1
 80056c4:	e7c3      	b.n	800564e <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80056c6:	f7ff fda7 	bl	8005218 <I2C_WaitOnTXEFlagUntilTimeout>
 80056ca:	b140      	cbz	r0, 80056de <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80056cc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80056ce:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80056d0:	bf01      	itttt	eq
 80056d2:	6822      	ldreq	r2, [r4, #0]
 80056d4:	6813      	ldreq	r3, [r2, #0]
 80056d6:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 80056da:	6013      	streq	r3, [r2, #0]
 80056dc:	e7f1      	b.n	80056c2 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80056de:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80056e0:	6827      	ldr	r7, [r4, #0]
 80056e2:	461a      	mov	r2, r3
 80056e4:	f812 1b01 	ldrb.w	r1, [r2], #1
 80056e8:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80056ea:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 80056ec:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 80056ee:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 80056f0:	3a01      	subs	r2, #1
 80056f2:	b292      	uxth	r2, r2
 80056f4:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80056f6:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80056f8:	1e48      	subs	r0, r1, #1
 80056fa:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80056fc:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80056fe:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005700:	d50a      	bpl.n	8005718 <HAL_I2C_Mem_Write+0xe8>
 8005702:	b148      	cbz	r0, 8005718 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005704:	785a      	ldrb	r2, [r3, #1]
 8005706:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005708:	3302      	adds	r3, #2
 800570a:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800570c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800570e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005710:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005712:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005714:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 8005716:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8005718:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800571a:	462a      	mov	r2, r5
 800571c:	4631      	mov	r1, r6
 800571e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005720:	2b00      	cmp	r3, #0
 8005722:	d1d0      	bne.n	80056c6 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005724:	f7ff fe7e 	bl	8005424 <I2C_WaitOnBTFFlagUntilTimeout>
 8005728:	2800      	cmp	r0, #0
 800572a:	d1cf      	bne.n	80056cc <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800572c:	6822      	ldr	r2, [r4, #0]
 800572e:	6813      	ldr	r3, [r2, #0]
 8005730:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005734:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005736:	2320      	movs	r3, #32
 8005738:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800573c:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005740:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 8005744:	e783      	b.n	800564e <HAL_I2C_Mem_Write+0x1e>
 8005746:	bf00      	nop
 8005748:	00100002 	.word	0x00100002
 800574c:	ffff0000 	.word	0xffff0000

08005750 <HAL_I2C_Mem_Read>:
{
 8005750:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005754:	4604      	mov	r4, r0
 8005756:	b087      	sub	sp, #28
 8005758:	4699      	mov	r9, r3
 800575a:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 800575c:	460d      	mov	r5, r1
 800575e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005760:	f7ff f82e 	bl	80047c0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005764:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8005768:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800576a:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800576c:	d004      	beq.n	8005778 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 800576e:	2502      	movs	r5, #2
}
 8005770:	4628      	mov	r0, r5
 8005772:	b007      	add	sp, #28
 8005774:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005778:	9000      	str	r0, [sp, #0]
 800577a:	497a      	ldr	r1, [pc, #488]	@ (8005964 <HAL_I2C_Mem_Read+0x214>)
 800577c:	2319      	movs	r3, #25
 800577e:	2201      	movs	r2, #1
 8005780:	4620      	mov	r0, r4
 8005782:	f7ff fcc7 	bl	8005114 <I2C_WaitOnFlagUntilTimeout>
 8005786:	2800      	cmp	r0, #0
 8005788:	d1f1      	bne.n	800576e <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800578a:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800578e:	2b01      	cmp	r3, #1
 8005790:	d0ed      	beq.n	800576e <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005792:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005794:	2301      	movs	r3, #1
 8005796:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800579a:	6803      	ldr	r3, [r0, #0]
 800579c:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800579e:	bf5e      	ittt	pl
 80057a0:	6803      	ldrpl	r3, [r0, #0]
 80057a2:	f043 0301 	orrpl.w	r3, r3, #1
 80057a6:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80057a8:	6803      	ldr	r3, [r0, #0]
 80057aa:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80057ae:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80057b0:	2322      	movs	r3, #34	@ 0x22
 80057b2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80057b6:	2340      	movs	r3, #64	@ 0x40
 80057b8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80057bc:	2300      	movs	r3, #0
 80057be:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 80057c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80057c2:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80057c4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 80057c8:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80057ca:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80057cc:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80057ce:	4b66      	ldr	r3, [pc, #408]	@ (8005968 <HAL_I2C_Mem_Read+0x218>)
 80057d0:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80057d2:	4629      	mov	r1, r5
 80057d4:	e9cd 7600 	strd	r7, r6, [sp]
 80057d8:	464b      	mov	r3, r9
 80057da:	4642      	mov	r2, r8
 80057dc:	4620      	mov	r0, r4
 80057de:	f7ff fd9f 	bl	8005320 <I2C_RequestMemoryRead>
 80057e2:	4605      	mov	r5, r0
 80057e4:	b108      	cbz	r0, 80057ea <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80057e6:	2501      	movs	r5, #1
 80057e8:	e7c2      	b.n	8005770 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80057ea:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80057ec:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 80057ee:	b9b2      	cbnz	r2, 800581e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80057f0:	9002      	str	r0, [sp, #8]
 80057f2:	695a      	ldr	r2, [r3, #20]
 80057f4:	9202      	str	r2, [sp, #8]
 80057f6:	699a      	ldr	r2, [r3, #24]
 80057f8:	9202      	str	r2, [sp, #8]
 80057fa:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80057fc:	681a      	ldr	r2, [r3, #0]
 80057fe:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005802:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005804:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 800596c <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 8005808:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800580a:	2b00      	cmp	r3, #0
 800580c:	d12c      	bne.n	8005868 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800580e:	2220      	movs	r2, #32
 8005810:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8005814:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005818:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 800581c:	e7a8      	b.n	8005770 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800581e:	2a01      	cmp	r2, #1
 8005820:	d10a      	bne.n	8005838 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005822:	681a      	ldr	r2, [r3, #0]
 8005824:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005828:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800582a:	9003      	str	r0, [sp, #12]
 800582c:	695a      	ldr	r2, [r3, #20]
 800582e:	9203      	str	r2, [sp, #12]
 8005830:	699a      	ldr	r2, [r3, #24]
 8005832:	9203      	str	r2, [sp, #12]
 8005834:	9a03      	ldr	r2, [sp, #12]
 8005836:	e7e1      	b.n	80057fc <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005838:	2a02      	cmp	r2, #2
 800583a:	d10e      	bne.n	800585a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800583c:	681a      	ldr	r2, [r3, #0]
 800583e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8005842:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005844:	681a      	ldr	r2, [r3, #0]
 8005846:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800584a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800584c:	9004      	str	r0, [sp, #16]
 800584e:	695a      	ldr	r2, [r3, #20]
 8005850:	9204      	str	r2, [sp, #16]
 8005852:	699b      	ldr	r3, [r3, #24]
 8005854:	9304      	str	r3, [sp, #16]
 8005856:	9b04      	ldr	r3, [sp, #16]
 8005858:	e7d4      	b.n	8005804 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800585a:	9005      	str	r0, [sp, #20]
 800585c:	695a      	ldr	r2, [r3, #20]
 800585e:	9205      	str	r2, [sp, #20]
 8005860:	699b      	ldr	r3, [r3, #24]
 8005862:	9305      	str	r3, [sp, #20]
 8005864:	9b05      	ldr	r3, [sp, #20]
 8005866:	e7cd      	b.n	8005804 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005868:	2b03      	cmp	r3, #3
 800586a:	d856      	bhi.n	800591a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800586c:	2b01      	cmp	r3, #1
 800586e:	d115      	bne.n	800589c <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005870:	4632      	mov	r2, r6
 8005872:	4639      	mov	r1, r7
 8005874:	4620      	mov	r0, r4
 8005876:	f7ff fdff 	bl	8005478 <I2C_WaitOnRXNEFlagUntilTimeout>
 800587a:	2800      	cmp	r0, #0
 800587c:	d1b3      	bne.n	80057e6 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800587e:	6823      	ldr	r3, [r4, #0]
 8005880:	691a      	ldr	r2, [r3, #16]
 8005882:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005884:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005886:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005888:	3301      	adds	r3, #1
 800588a:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800588c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800588e:	3b01      	subs	r3, #1
 8005890:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8005892:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005894:	3b01      	subs	r3, #1
 8005896:	b29b      	uxth	r3, r3
 8005898:	8563      	strh	r3, [r4, #42]	@ 0x2a
 800589a:	e7b5      	b.n	8005808 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800589c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800589e:	9600      	str	r6, [sp, #0]
 80058a0:	463b      	mov	r3, r7
 80058a2:	f04f 0200 	mov.w	r2, #0
 80058a6:	4641      	mov	r1, r8
 80058a8:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80058aa:	d119      	bne.n	80058e0 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80058ac:	f7ff fc32 	bl	8005114 <I2C_WaitOnFlagUntilTimeout>
 80058b0:	2800      	cmp	r0, #0
 80058b2:	d198      	bne.n	80057e6 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80058b4:	6823      	ldr	r3, [r4, #0]
 80058b6:	681a      	ldr	r2, [r3, #0]
 80058b8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80058bc:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80058be:	691a      	ldr	r2, [r3, #16]
 80058c0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80058c2:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80058c4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80058c6:	1c53      	adds	r3, r2, #1
 80058c8:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80058ca:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80058cc:	3b01      	subs	r3, #1
 80058ce:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80058d0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80058d2:	3b01      	subs	r3, #1
 80058d4:	b29b      	uxth	r3, r3
 80058d6:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80058d8:	6823      	ldr	r3, [r4, #0]
 80058da:	691b      	ldr	r3, [r3, #16]
 80058dc:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 80058de:	e7d2      	b.n	8005886 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80058e0:	f7ff fc18 	bl	8005114 <I2C_WaitOnFlagUntilTimeout>
 80058e4:	4602      	mov	r2, r0
 80058e6:	2800      	cmp	r0, #0
 80058e8:	f47f af7d 	bne.w	80057e6 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80058ec:	6823      	ldr	r3, [r4, #0]
 80058ee:	6819      	ldr	r1, [r3, #0]
 80058f0:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 80058f4:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80058f6:	6919      	ldr	r1, [r3, #16]
 80058f8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80058fa:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 80058fc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80058fe:	3301      	adds	r3, #1
 8005900:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8005902:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8005904:	3b01      	subs	r3, #1
 8005906:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8005908:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800590a:	3b01      	subs	r3, #1
 800590c:	b29b      	uxth	r3, r3
 800590e:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005910:	4641      	mov	r1, r8
 8005912:	9600      	str	r6, [sp, #0]
 8005914:	463b      	mov	r3, r7
 8005916:	4620      	mov	r0, r4
 8005918:	e7c8      	b.n	80058ac <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800591a:	4632      	mov	r2, r6
 800591c:	4639      	mov	r1, r7
 800591e:	4620      	mov	r0, r4
 8005920:	f7ff fdaa 	bl	8005478 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005924:	2800      	cmp	r0, #0
 8005926:	f47f af5e 	bne.w	80057e6 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800592a:	6823      	ldr	r3, [r4, #0]
 800592c:	691a      	ldr	r2, [r3, #16]
 800592e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005930:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 8005932:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 8005934:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8005936:	3a01      	subs	r2, #1
 8005938:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800593a:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 800593c:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800593e:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 8005940:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 8005942:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005944:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 8005946:	3b01      	subs	r3, #1
 8005948:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800594a:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 800594c:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800594e:	f57f af5b 	bpl.w	8005808 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 8005952:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005954:	bf02      	ittt	eq
 8005956:	6813      	ldreq	r3, [r2, #0]
 8005958:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 800595c:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800595e:	6913      	ldr	r3, [r2, #16]
 8005960:	704b      	strb	r3, [r1, #1]
 8005962:	e790      	b.n	8005886 <HAL_I2C_Mem_Read+0x136>
 8005964:	00100002 	.word	0x00100002
 8005968:	ffff0000 	.word	0xffff0000
 800596c:	00010004 	.word	0x00010004

08005970 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005970:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005972:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8005976:	2b20      	cmp	r3, #32
 8005978:	b2dc      	uxtb	r4, r3
 800597a:	d116      	bne.n	80059aa <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 800597c:	2324      	movs	r3, #36	@ 0x24
 800597e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005982:	6803      	ldr	r3, [r0, #0]
 8005984:	681a      	ldr	r2, [r3, #0]
 8005986:	f022 0201 	bic.w	r2, r2, #1
 800598a:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800598c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800598e:	f022 0210 	bic.w	r2, r2, #16
 8005992:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8005994:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005996:	4311      	orrs	r1, r2
 8005998:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 800599a:	681a      	ldr	r2, [r3, #0]
 800599c:	f042 0201 	orr.w	r2, r2, #1
 80059a0:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80059a2:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 80059a6:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80059a8:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80059aa:	2002      	movs	r0, #2
 80059ac:	e7fc      	b.n	80059a8 <HAL_I2CEx_ConfigAnalogFilter+0x38>

080059ae <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80059ae:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80059b0:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80059b4:	2b20      	cmp	r3, #32
 80059b6:	b2dc      	uxtb	r4, r3
 80059b8:	d116      	bne.n	80059e8 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80059ba:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 80059bc:	2324      	movs	r3, #36	@ 0x24
 80059be:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80059c2:	6813      	ldr	r3, [r2, #0]
 80059c4:	f023 0301 	bic.w	r3, r3, #1
 80059c8:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80059ca:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80059cc:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 80059d0:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80059d2:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80059d4:	b29b      	uxth	r3, r3
 80059d6:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 80059d8:	6813      	ldr	r3, [r2, #0]
 80059da:	f043 0301 	orr.w	r3, r3, #1
 80059de:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80059e0:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 80059e4:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80059e6:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 80059e8:	2002      	movs	r0, #2
 80059ea:	e7fc      	b.n	80059e6 <HAL_I2CEx_ConfigDigitalFilter+0x38>

080059ec <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80059ec:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80059ee:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80059f2:	01d2      	lsls	r2, r2, #7
 80059f4:	3284      	adds	r2, #132	@ 0x84
 80059f6:	1883      	adds	r3, r0, r2
{
 80059f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80059fc:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80059fe:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005a00:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005a02:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005a06:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8005a0a:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005a0c:	68c5      	ldr	r5, [r0, #12]
 8005a0e:	f10c 0701 	add.w	r7, ip, #1
 8005a12:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005a16:	f3c6 460b 	ubfx	r6, r6, #16, #12
 8005a1a:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005a1c:	443d      	add	r5, r7
 8005a1e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005a22:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005a24:	68c6      	ldr	r6, [r0, #12]
 8005a26:	68cd      	ldr	r5, [r1, #12]
 8005a28:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005a2c:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005a2e:	689d      	ldr	r5, [r3, #8]
 8005a30:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8005a34:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005a36:	68c7      	ldr	r7, [r0, #12]
 8005a38:	688d      	ldr	r5, [r1, #8]
 8005a3a:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005a3e:	3501      	adds	r5, #1
 8005a40:	443d      	add	r5, r7
 8005a42:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005a46:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005a48:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005a4a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005a4c:	f025 0507 	bic.w	r5, r5, #7
 8005a50:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005a52:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005a56:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005a58:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005a5c:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005a5e:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005a62:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005a66:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8005a6a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005a6e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005a72:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005a76:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005a78:	695d      	ldr	r5, [r3, #20]
 8005a7a:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8005a7e:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005a80:	694d      	ldr	r5, [r1, #20]
 8005a82:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005a84:	69dd      	ldr	r5, [r3, #28]
 8005a86:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8005a8a:	f025 0507 	bic.w	r5, r5, #7
 8005a8e:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005a90:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005a94:	433d      	orrs	r5, r7
 8005a96:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005a98:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005a9a:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005a9c:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005aa0:	2e07      	cmp	r6, #7
 8005aa2:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005aa4:	bf9c      	itt	ls
 8005aa6:	4d0e      	ldrls	r5, [pc, #56]	@ (8005ae0 <LTDC_SetConfig+0xf4>)
 8005aa8:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005aaa:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8005aac:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 8005ab0:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005ab2:	bf88      	it	hi
 8005ab4:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005ab6:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005ab8:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005aba:	eba4 040c 	sub.w	r4, r4, ip
 8005abe:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005ac0:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005ac2:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005ac4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8005ac8:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005aca:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8005acc:	f36f 040a 	bfc	r4, #0, #11
 8005ad0:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005ad2:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005ad4:	5883      	ldr	r3, [r0, r2]
 8005ad6:	f043 0301 	orr.w	r3, r3, #1
 8005ada:	5083      	str	r3, [r0, r2]
}
 8005adc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005ae0:	08027218 	.word	0x08027218

08005ae4 <HAL_LTDC_Init>:
{
 8005ae4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005ae6:	4604      	mov	r4, r0
 8005ae8:	2800      	cmp	r0, #0
 8005aea:	d063      	beq.n	8005bb4 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005aec:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8005af0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005af4:	b91b      	cbnz	r3, 8005afe <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005af6:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005afa:	f7fc fc1f 	bl	800233c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005afe:	2302      	movs	r3, #2
 8005b00:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005b04:	6823      	ldr	r3, [r4, #0]
 8005b06:	699a      	ldr	r2, [r3, #24]
 8005b08:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8005b0c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005b0e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005b12:	4302      	orrs	r2, r0
 8005b14:	68e0      	ldr	r0, [r4, #12]
 8005b16:	6999      	ldr	r1, [r3, #24]
 8005b18:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005b1a:	6920      	ldr	r0, [r4, #16]
 8005b1c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005b1e:	430a      	orrs	r2, r1
 8005b20:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005b22:	689a      	ldr	r2, [r3, #8]
 8005b24:	4924      	ldr	r1, [pc, #144]	@ (8005bb8 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005b26:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005b28:	400a      	ands	r2, r1
 8005b2a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005b2c:	689a      	ldr	r2, [r3, #8]
 8005b2e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005b32:	69a0      	ldr	r0, [r4, #24]
 8005b34:	4302      	orrs	r2, r0
 8005b36:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005b38:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005b3a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005b3c:	400a      	ands	r2, r1
 8005b3e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005b40:	68da      	ldr	r2, [r3, #12]
 8005b42:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005b46:	6a20      	ldr	r0, [r4, #32]
 8005b48:	4302      	orrs	r2, r0
 8005b4a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005b4c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005b4e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005b50:	400a      	ands	r2, r1
 8005b52:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005b54:	691a      	ldr	r2, [r3, #16]
 8005b56:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005b5a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005b5c:	4302      	orrs	r2, r0
 8005b5e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005b60:	695a      	ldr	r2, [r3, #20]
 8005b62:	400a      	ands	r2, r1
 8005b64:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005b66:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005b68:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005b6a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005b6e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8005b70:	430a      	orrs	r2, r1
 8005b72:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005b74:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005b76:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005b7a:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005b7e:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8005b82:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005b84:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8005b86:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8005b8a:	432a      	orrs	r2, r5
 8005b8c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8005b90:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005b94:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005b96:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005b98:	f042 0206 	orr.w	r2, r2, #6
 8005b9c:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005b9e:	699a      	ldr	r2, [r3, #24]
 8005ba0:	f042 0201 	orr.w	r2, r2, #1
 8005ba4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005ba6:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005ba8:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005baa:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005bae:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8005bb2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005bb4:	2001      	movs	r0, #1
 8005bb6:	e7fc      	b.n	8005bb2 <HAL_LTDC_Init+0xce>
 8005bb8:	f000f800 	.word	0xf000f800

08005bbc <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8005bbc:	4770      	bx	lr

08005bbe <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8005bbe:	4770      	bx	lr

08005bc0 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005bc0:	6803      	ldr	r3, [r0, #0]
{
 8005bc2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005bc4:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005bc6:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005bc8:	0772      	lsls	r2, r6, #29
{
 8005bca:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005bcc:	d514      	bpl.n	8005bf8 <HAL_LTDC_IRQHandler+0x38>
 8005bce:	0769      	lsls	r1, r5, #29
 8005bd0:	d512      	bpl.n	8005bf8 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005bd2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005bd4:	f022 0204 	bic.w	r2, r2, #4
 8005bd8:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005bda:	2204      	movs	r2, #4
 8005bdc:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005bde:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8005be2:	f043 0301 	orr.w	r3, r3, #1
 8005be6:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8005bea:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005bec:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005bf0:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005bf4:	f7ff ffe2 	bl	8005bbc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005bf8:	07b2      	lsls	r2, r6, #30
 8005bfa:	d516      	bpl.n	8005c2a <HAL_LTDC_IRQHandler+0x6a>
 8005bfc:	07ab      	lsls	r3, r5, #30
 8005bfe:	d514      	bpl.n	8005c2a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005c00:	6823      	ldr	r3, [r4, #0]
 8005c02:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005c04:	f022 0202 	bic.w	r2, r2, #2
 8005c08:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005c0a:	2202      	movs	r2, #2
 8005c0c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005c0e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8005c12:	4313      	orrs	r3, r2
 8005c14:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005c18:	2304      	movs	r3, #4
 8005c1a:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005c1e:	2300      	movs	r3, #0
 8005c20:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005c24:	4620      	mov	r0, r4
 8005c26:	f7ff ffc9 	bl	8005bbc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005c2a:	07f0      	lsls	r0, r6, #31
 8005c2c:	d510      	bpl.n	8005c50 <HAL_LTDC_IRQHandler+0x90>
 8005c2e:	07e9      	lsls	r1, r5, #31
 8005c30:	d50e      	bpl.n	8005c50 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005c32:	6823      	ldr	r3, [r4, #0]
 8005c34:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005c36:	f022 0201 	bic.w	r2, r2, #1
 8005c3a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005c3c:	2201      	movs	r2, #1
 8005c3e:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8005c40:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005c42:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005c46:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005c4a:	4620      	mov	r0, r4
 8005c4c:	f7fb fcec 	bl	8001628 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005c50:	0732      	lsls	r2, r6, #28
 8005c52:	d511      	bpl.n	8005c78 <HAL_LTDC_IRQHandler+0xb8>
 8005c54:	072b      	lsls	r3, r5, #28
 8005c56:	d50f      	bpl.n	8005c78 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005c58:	6823      	ldr	r3, [r4, #0]
 8005c5a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005c5c:	f022 0208 	bic.w	r2, r2, #8
 8005c60:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005c62:	2208      	movs	r2, #8
 8005c64:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005c66:	2301      	movs	r3, #1
 8005c68:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8005c6c:	2300      	movs	r3, #0
 8005c6e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005c72:	4620      	mov	r0, r4
 8005c74:	f7ff ffa3 	bl	8005bbe <HAL_LTDC_ReloadEventCallback>
}
 8005c78:	bd70      	pop	{r4, r5, r6, pc}

08005c7a <HAL_LTDC_ConfigLayer>:
{
 8005c7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005c7e:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 8005c82:	2b01      	cmp	r3, #1
{
 8005c84:	4606      	mov	r6, r0
 8005c86:	460f      	mov	r7, r1
 8005c88:	4694      	mov	ip, r2
 8005c8a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005c8e:	d01f      	beq.n	8005cd0 <HAL_LTDC_ConfigLayer+0x56>
 8005c90:	f04f 0801 	mov.w	r8, #1
 8005c94:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005c98:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005c9c:	2434      	movs	r4, #52	@ 0x34
 8005c9e:	460d      	mov	r5, r1
 8005ca0:	fb04 6402 	mla	r4, r4, r2, r6
 8005ca4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005ca6:	3438      	adds	r4, #56	@ 0x38
 8005ca8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005caa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005cac:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005cae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005cb0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005cb2:	682b      	ldr	r3, [r5, #0]
 8005cb4:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005cb6:	4630      	mov	r0, r6
 8005cb8:	4662      	mov	r2, ip
 8005cba:	4639      	mov	r1, r7
 8005cbc:	f7ff fe96 	bl	80059ec <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005cc0:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005cc2:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005cc4:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005cc8:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8005ccc:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8005cd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005cd4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005cd4:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8005cd8:	2a01      	cmp	r2, #1
{
 8005cda:	4603      	mov	r3, r0
 8005cdc:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005ce0:	d012      	beq.n	8005d08 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005ce2:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005ce4:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005ce8:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8005cea:	f020 0001 	bic.w	r0, r0, #1
 8005cee:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005cf0:	4806      	ldr	r0, [pc, #24]	@ (8005d0c <HAL_LTDC_ProgramLineEvent+0x38>)
 8005cf2:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005cf4:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8005cf6:	f041 0101 	orr.w	r1, r1, #1
 8005cfa:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8005cfc:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005cfe:	2201      	movs	r2, #1
 8005d00:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8005d04:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8005d08:	4770      	bx	lr
 8005d0a:	bf00      	nop
 8005d0c:	40016800 	.word	0x40016800

08005d10 <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
 8005d10:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  const USB_OTG_GlobalTypeDef *USBx;
#endif /* defined (USB_OTG_FS) */
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
 8005d12:	4604      	mov	r4, r0
 8005d14:	b310      	cbz	r0, 8005d5c <HAL_PCD_Init+0x4c>

#if defined (USB_OTG_FS)
  USBx = hpcd->Instance;
#endif /* defined (USB_OTG_FS) */

  if (hpcd->State == HAL_PCD_STATE_RESET)
 8005d16:	f890 3495 	ldrb.w	r3, [r0, #1173]	@ 0x495
  USBx = hpcd->Instance;
 8005d1a:	6805      	ldr	r5, [r0, #0]
  if (hpcd->State == HAL_PCD_STATE_RESET)
 8005d1c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005d20:	b91b      	cbnz	r3, 8005d2a <HAL_PCD_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
 8005d22:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
 8005d26:	f7fb fd51 	bl	80017cc <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
 8005d2a:	2303      	movs	r3, #3

#if defined (USB_OTG_FS)
  /* Disable DMA mode for FS instance */
  if (USBx == USB_OTG_FS)
 8005d2c:	f1b5 4fa0 	cmp.w	r5, #1342177280	@ 0x50000000
  hpcd->State = HAL_PCD_STATE_BUSY;
 8005d30:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  {
    hpcd->Init.dma_enable = 0U;
 8005d34:	bf04      	itt	eq
 8005d36:	2300      	moveq	r3, #0
 8005d38:	71a3      	strbeq	r3, [r4, #6]
  }
#endif /* defined (USB_OTG_FS) */

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
 8005d3a:	6820      	ldr	r0, [r4, #0]
 8005d3c:	f002 f8ca 	bl	8007ed4 <USB_DisableGlobalInt>

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8005d40:	7c23      	ldrb	r3, [r4, #16]
 8005d42:	f88d 3000 	strb.w	r3, [sp]
 8005d46:	1d25      	adds	r5, r4, #4
 8005d48:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8005d4c:	6820      	ldr	r0, [r4, #0]
 8005d4e:	f002 f807 	bl	8007d60 <USB_CoreInit>
 8005d52:	4601      	mov	r1, r0
 8005d54:	b130      	cbz	r0, 8005d64 <HAL_PCD_Init+0x54>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 8005d56:	2302      	movs	r3, #2
 8005d58:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
    return HAL_ERROR;
 8005d5c:	2501      	movs	r5, #1
          defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
          defined(STM32F423xx) */
  (void)USB_DevDisconnect(hpcd->Instance);

  return HAL_OK;
}
 8005d5e:	4628      	mov	r0, r5
 8005d60:	b003      	add	sp, #12
 8005d62:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
 8005d64:	6820      	ldr	r0, [r4, #0]
 8005d66:	f002 f8bb 	bl	8007ee0 <USB_SetCurrentMode>
 8005d6a:	2800      	cmp	r0, #0
 8005d6c:	d1f3      	bne.n	8005d56 <HAL_PCD_Init+0x46>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005d6e:	7926      	ldrb	r6, [r4, #4]
 8005d70:	f104 0314 	add.w	r3, r4, #20
    hpcd->IN_ep[i].is_in = 1U;
 8005d74:	2701      	movs	r7, #1
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 8005d76:	4602      	mov	r2, r0
 8005d78:	b2c1      	uxtb	r1, r0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005d7a:	428e      	cmp	r6, r1
 8005d7c:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 8005d80:	d81b      	bhi.n	8005dba <HAL_PCD_Init+0xaa>
 8005d82:	2100      	movs	r1, #0
 8005d84:	f504 7315 	add.w	r3, r4, #596	@ 0x254
    hpcd->OUT_ep[i].is_in = 0U;
 8005d88:	460a      	mov	r2, r1
 8005d8a:	b2c8      	uxtb	r0, r1
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005d8c:	4286      	cmp	r6, r0
 8005d8e:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 8005d92:	d820      	bhi.n	8005dd6 <HAL_PCD_Init+0xc6>
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8005d94:	7c23      	ldrb	r3, [r4, #16]
 8005d96:	f88d 3000 	strb.w	r3, [sp]
 8005d9a:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8005d9e:	6820      	ldr	r0, [r4, #0]
 8005da0:	f002 f91a 	bl	8007fd8 <USB_DevInit>
 8005da4:	4605      	mov	r5, r0
 8005da6:	2800      	cmp	r0, #0
 8005da8:	d1d5      	bne.n	8005d56 <HAL_PCD_Init+0x46>
  hpcd->State = HAL_PCD_STATE_READY;
 8005daa:	2301      	movs	r3, #1
  hpcd->USB_Address = 0U;
 8005dac:	7460      	strb	r0, [r4, #17]
  (void)USB_DevDisconnect(hpcd->Instance);
 8005dae:	6820      	ldr	r0, [r4, #0]
  hpcd->State = HAL_PCD_STATE_READY;
 8005db0:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  (void)USB_DevDisconnect(hpcd->Instance);
 8005db4:	f002 fc54 	bl	8008660 <USB_DevDisconnect>
  return HAL_OK;
 8005db8:	e7d1      	b.n	8005d5e <HAL_PCD_Init+0x4e>
    hpcd->IN_ep[i].tx_fifo_num = i;
 8005dba:	f823 0c0a 	strh.w	r0, [r3, #-10]
    hpcd->IN_ep[i].xfer_buff = 0U;
 8005dbe:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->IN_ep[i].is_in = 1U;
 8005dc2:	f803 7c23 	strb.w	r7, [r3, #-35]
    hpcd->IN_ep[i].num = i;
 8005dc6:	f803 1c24 	strb.w	r1, [r3, #-36]
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 8005dca:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->IN_ep[i].xfer_len = 0U;
 8005dce:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005dd2:	3001      	adds	r0, #1
 8005dd4:	e7d0      	b.n	8005d78 <HAL_PCD_Init+0x68>
    hpcd->OUT_ep[i].xfer_buff = 0U;
 8005dd6:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->OUT_ep[i].is_in = 0U;
 8005dda:	f803 2c23 	strb.w	r2, [r3, #-35]
    hpcd->OUT_ep[i].num = i;
 8005dde:	f803 0c24 	strb.w	r0, [r3, #-36]
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 8005de2:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->OUT_ep[i].xfer_len = 0U;
 8005de6:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005dea:	3101      	adds	r1, #1
 8005dec:	e7cd      	b.n	8005d8a <HAL_PCD_Init+0x7a>

08005dee <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
 8005dee:	b510      	push	{r4, lr}
 8005df0:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005df2:	6800      	ldr	r0, [r0, #0]

  __HAL_LOCK(hpcd);
 8005df4:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8005df8:	2b01      	cmp	r3, #1
 8005dfa:	d015      	beq.n	8005e28 <HAL_PCD_Start+0x3a>
 8005dfc:	2301      	movs	r3, #1
 8005dfe:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
 8005e02:	68c3      	ldr	r3, [r0, #12]
 8005e04:	065b      	lsls	r3, r3, #25
 8005e06:	d506      	bpl.n	8005e16 <HAL_PCD_Start+0x28>
 8005e08:	7b63      	ldrb	r3, [r4, #13]
 8005e0a:	2b01      	cmp	r3, #1
      (hpcd->Init.battery_charging_enable == 1U))
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8005e0c:	bf02      	ittt	eq
 8005e0e:	6b83      	ldreq	r3, [r0, #56]	@ 0x38
 8005e10:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
 8005e14:	6383      	streq	r3, [r0, #56]	@ 0x38
  }

  __HAL_PCD_ENABLE(hpcd);
 8005e16:	f002 f857 	bl	8007ec8 <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
 8005e1a:	6820      	ldr	r0, [r4, #0]
 8005e1c:	f002 fc12 	bl	8008644 <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
 8005e20:	2000      	movs	r0, #0
 8005e22:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8005e26:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8005e28:	2002      	movs	r0, #2
 8005e2a:	e7fc      	b.n	8005e26 <HAL_PCD_Start+0x38>

08005e2c <HAL_PCD_SetAddress>:
  * @param  hpcd PCD handle
  * @param  address new device address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_SetAddress(PCD_HandleTypeDef *hpcd, uint8_t address)
{
 8005e2c:	b510      	push	{r4, lr}
  __HAL_LOCK(hpcd);
 8005e2e:	f890 2494 	ldrb.w	r2, [r0, #1172]	@ 0x494
 8005e32:	2a01      	cmp	r2, #1
{
 8005e34:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
 8005e36:	d00a      	beq.n	8005e4e <HAL_PCD_SetAddress+0x22>
 8005e38:	2201      	movs	r2, #1
 8005e3a:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494
  hpcd->USB_Address = address;
 8005e3e:	7441      	strb	r1, [r0, #17]
  (void)USB_SetDevAddress(hpcd->Instance, address);
 8005e40:	6800      	ldr	r0, [r0, #0]
 8005e42:	f002 fbef 	bl	8008624 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
 8005e46:	2000      	movs	r0, #0
 8005e48:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8005e4c:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8005e4e:	2002      	movs	r0, #2
 8005e50:	e7fc      	b.n	8005e4c <HAL_PCD_SetAddress+0x20>

08005e52 <HAL_PCD_EP_Open>:
  * @param  ep_type endpoint type
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr,
                                  uint16_t ep_mps, uint8_t ep_type)
{
 8005e52:	b570      	push	{r4, r5, r6, lr}
 8005e54:	f001 060f 	and.w	r6, r1, #15
 8005e58:	eb06 04c6 	add.w	r4, r6, r6, lsl #3
  HAL_StatusTypeDef ret = HAL_OK;
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8005e5c:	f011 0f80 	tst.w	r1, #128	@ 0x80
{
 8005e60:	4605      	mov	r5, r0
 8005e62:	ea4f 0484 	mov.w	r4, r4, lsl #2
 8005e66:	f04f 0024 	mov.w	r0, #36	@ 0x24
  if ((ep_addr & 0x80U) == 0x80U)
 8005e6a:	d020      	beq.n	8005eae <HAL_PCD_EP_Open+0x5c>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8005e6c:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005e70:	f104 0114 	add.w	r1, r4, #20
    ep->is_in = 1U;
 8005e74:	2401      	movs	r4, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005e76:	4429      	add	r1, r5
    ep->is_in = 1U;
 8005e78:	7544      	strb	r4, [r0, #21]
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->num = ep_addr & EP_ADDR_MSK;
  ep->maxpacket = (uint32_t)ep_mps & 0x7FFU;
 8005e7a:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8005e7e:	608a      	str	r2, [r1, #8]
  ep->type = ep_type;

  if (ep->is_in != 0U)
 8005e80:	784a      	ldrb	r2, [r1, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
 8005e82:	700e      	strb	r6, [r1, #0]
  ep->type = ep_type;
 8005e84:	710b      	strb	r3, [r1, #4]
  if (ep->is_in != 0U)
 8005e86:	b102      	cbz	r2, 8005e8a <HAL_PCD_EP_Open+0x38>
  {
    /* Assign a Tx FIFO */
    ep->tx_fifo_num = ep->num;
 8005e88:	834e      	strh	r6, [r1, #26]
  }

  /* Set initial data PID. */
  if (ep_type == EP_TYPE_BULK)
 8005e8a:	2b02      	cmp	r3, #2
  {
    ep->data_pid_start = 0U;
 8005e8c:	bf04      	itt	eq
 8005e8e:	2300      	moveq	r3, #0
 8005e90:	714b      	strbeq	r3, [r1, #5]
  }

  __HAL_LOCK(hpcd);
 8005e92:	f895 3494 	ldrb.w	r3, [r5, #1172]	@ 0x494
 8005e96:	2b01      	cmp	r3, #1
 8005e98:	d012      	beq.n	8005ec0 <HAL_PCD_EP_Open+0x6e>
 8005e9a:	2301      	movs	r3, #1
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8005e9c:	6828      	ldr	r0, [r5, #0]
  __HAL_LOCK(hpcd);
 8005e9e:	f885 3494 	strb.w	r3, [r5, #1172]	@ 0x494
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8005ea2:	f002 f95e 	bl	8008162 <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8005ea6:	2000      	movs	r0, #0
 8005ea8:	f885 0494 	strb.w	r0, [r5, #1172]	@ 0x494

  return ret;
}
 8005eac:	bd70      	pop	{r4, r5, r6, pc}
    ep->is_in = 0U;
 8005eae:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005eb2:	f504 7115 	add.w	r1, r4, #596	@ 0x254
    ep->is_in = 0U;
 8005eb6:	2400      	movs	r4, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005eb8:	4429      	add	r1, r5
    ep->is_in = 0U;
 8005eba:	f880 4255 	strb.w	r4, [r0, #597]	@ 0x255
 8005ebe:	e7dc      	b.n	8005e7a <HAL_PCD_EP_Open+0x28>
  __HAL_LOCK(hpcd);
 8005ec0:	2002      	movs	r0, #2
 8005ec2:	e7f3      	b.n	8005eac <HAL_PCD_EP_Open+0x5a>

08005ec4 <HAL_PCD_EP_Close>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8005ec4:	b510      	push	{r4, lr}
 8005ec6:	4604      	mov	r4, r0
 8005ec8:	f001 000f 	and.w	r0, r1, #15
 8005ecc:	eb00 03c0 	add.w	r3, r0, r0, lsl #3
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8005ed0:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8005ed4:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8005ed8:	f04f 0224 	mov.w	r2, #36	@ 0x24
 8005edc:	d015      	beq.n	8005f0a <HAL_PCD_EP_Close+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8005ede:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005ee2:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 8005ee6:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005ee8:	4421      	add	r1, r4
    ep->is_in = 1U;
 8005eea:	7553      	strb	r3, [r2, #21]
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }
  ep->num = ep_addr & EP_ADDR_MSK;
 8005eec:	7008      	strb	r0, [r1, #0]

  __HAL_LOCK(hpcd);
 8005eee:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8005ef2:	2b01      	cmp	r3, #1
 8005ef4:	d012      	beq.n	8005f1c <HAL_PCD_EP_Close+0x58>
 8005ef6:	2301      	movs	r3, #1
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8005ef8:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8005efa:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8005efe:	f002 f96f 	bl	80081e0 <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8005f02:	2000      	movs	r0, #0
 8005f04:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494
  return HAL_OK;
}
 8005f08:	bd10      	pop	{r4, pc}
    ep->is_in = 0U;
 8005f0a:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005f0e:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8005f12:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005f14:	4421      	add	r1, r4
    ep->is_in = 0U;
 8005f16:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8005f1a:	e7e7      	b.n	8005eec <HAL_PCD_EP_Close+0x28>
  __HAL_LOCK(hpcd);
 8005f1c:	2002      	movs	r0, #2
 8005f1e:	e7f3      	b.n	8005f08 <HAL_PCD_EP_Close+0x44>

08005f20 <HAL_PCD_EP_Receive>:
  * @param  pBuf pointer to the reception buffer
  * @param  len amount of data to be received
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8005f20:	b570      	push	{r4, r5, r6, lr}
 8005f22:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005f26:	2424      	movs	r4, #36	@ 0x24
 8005f28:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8005f2c:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 8005f30:	e9c4 2398 	strd	r2, r3, [r4, #608]	@ 0x260
  ep->xfer_count = 0U;
 8005f34:	2300      	movs	r3, #0
 8005f36:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
  ep->is_in = 0U;
 8005f3a:	f884 3255 	strb.w	r3, [r4, #597]	@ 0x255
  ep->num = ep_addr & EP_ADDR_MSK;
 8005f3e:	f884 5254 	strb.w	r5, [r4, #596]	@ 0x254
{
 8005f42:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 8005f44:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8005f46:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 8005f48:	2a01      	cmp	r2, #1
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8005f4a:	f501 7115 	add.w	r1, r1, #596	@ 0x254
    ep->dma_addr = (uint32_t)pBuf;
 8005f4e:	bf08      	it	eq
 8005f50:	f8c4 6270 	streq.w	r6, [r4, #624]	@ 0x270
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8005f54:	f002 f9f0 	bl	8008338 <USB_EPStartXfer>

  return HAL_OK;
}
 8005f58:	2000      	movs	r0, #0
 8005f5a:	bd70      	pop	{r4, r5, r6, pc}

08005f5c <HAL_PCD_EP_Transmit>:
  * @param  pBuf pointer to the transmission buffer
  * @param  len amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8005f5c:	b570      	push	{r4, r5, r6, lr}
 8005f5e:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005f62:	2424      	movs	r4, #36	@ 0x24
 8005f64:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8005f68:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 8005f6c:	e9c4 2308 	strd	r2, r3, [r4, #32]
  ep->xfer_count = 0U;
 8005f70:	2300      	movs	r3, #0
 8005f72:	62a3      	str	r3, [r4, #40]	@ 0x28
  ep->is_in = 1U;
 8005f74:	2301      	movs	r3, #1
 8005f76:	7563      	strb	r3, [r4, #21]
  ep->num = ep_addr & EP_ADDR_MSK;
 8005f78:	7525      	strb	r5, [r4, #20]
{
 8005f7a:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 8005f7c:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8005f7e:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 8005f80:	429a      	cmp	r2, r3
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005f82:	f101 0114 	add.w	r1, r1, #20
    ep->dma_addr = (uint32_t)pBuf;
 8005f86:	bf08      	it	eq
 8005f88:	6326      	streq	r6, [r4, #48]	@ 0x30
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8005f8a:	f002 f9d5 	bl	8008338 <USB_EPStartXfer>

  return HAL_OK;
}
 8005f8e:	2000      	movs	r0, #0
 8005f90:	bd70      	pop	{r4, r5, r6, pc}

08005f92 <HAL_PCD_EP_SetStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8005f92:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8005f94:	7903      	ldrb	r3, [r0, #4]
 8005f96:	f001 050f 	and.w	r5, r1, #15
 8005f9a:	42ab      	cmp	r3, r5
{
 8005f9c:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8005f9e:	d32b      	bcc.n	8005ff8 <HAL_PCD_EP_SetStall+0x66>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8005fa0:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8005fa4:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8005fa8:	d01d      	beq.n	8005fe6 <HAL_PCD_EP_SetStall+0x54>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005faa:	fb00 4105 	mla	r1, r0, r5, r4
    ep->is_in = 1U;
 8005fae:	fb00 4005 	mla	r0, r0, r5, r4
 8005fb2:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8005fb4:	3114      	adds	r1, #20
    ep->is_in = 1U;
 8005fb6:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr];
    ep->is_in = 0U;
  }

  ep->is_stall = 1U;
 8005fb8:	2301      	movs	r3, #1
 8005fba:	708b      	strb	r3, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8005fbc:	700d      	strb	r5, [r1, #0]

  __HAL_LOCK(hpcd);
 8005fbe:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
 8005fc2:	429a      	cmp	r2, r3
 8005fc4:	d01a      	beq.n	8005ffc <HAL_PCD_EP_SetStall+0x6a>

  (void)USB_EPSetStall(hpcd->Instance, ep);
 8005fc6:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8005fc8:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPSetStall(hpcd->Instance, ep);
 8005fcc:	f002 fad6 	bl	800857c <USB_EPSetStall>

  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8005fd0:	b92d      	cbnz	r5, 8005fde <HAL_PCD_EP_SetStall+0x4c>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 8005fd2:	79a1      	ldrb	r1, [r4, #6]
 8005fd4:	6820      	ldr	r0, [r4, #0]
 8005fd6:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005fda:	f002 fb8f 	bl	80086fc <USB_EP0_OutStart>
  }

  __HAL_UNLOCK(hpcd);
 8005fde:	2000      	movs	r0, #0
 8005fe0:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8005fe4:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->OUT_ep[ep_addr];
 8005fe6:	fb00 4301 	mla	r3, r0, r1, r4
    ep->is_in = 0U;
 8005fea:	461a      	mov	r2, r3
    ep = &hpcd->OUT_ep[ep_addr];
 8005fec:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8005ff0:	2300      	movs	r3, #0
 8005ff2:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8005ff6:	e7df      	b.n	8005fb8 <HAL_PCD_EP_SetStall+0x26>
    return HAL_ERROR;
 8005ff8:	2001      	movs	r0, #1
 8005ffa:	e7f3      	b.n	8005fe4 <HAL_PCD_EP_SetStall+0x52>
  __HAL_LOCK(hpcd);
 8005ffc:	2002      	movs	r0, #2
 8005ffe:	e7f1      	b.n	8005fe4 <HAL_PCD_EP_SetStall+0x52>

08006000 <HAL_PCD_EP_ClrStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_ClrStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8006000:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8006002:	7903      	ldrb	r3, [r0, #4]
 8006004:	f001 020f 	and.w	r2, r1, #15
 8006008:	4293      	cmp	r3, r2
{
 800600a:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 800600c:	d329      	bcc.n	8006062 <HAL_PCD_EP_ClrStall+0x62>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 800600e:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
 8006012:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8006016:	ea4f 0383 	mov.w	r3, r3, lsl #2
 800601a:	f04f 0024 	mov.w	r0, #36	@ 0x24
 800601e:	d017      	beq.n	8006050 <HAL_PCD_EP_ClrStall+0x50>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8006020:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8006024:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 8006028:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800602a:	4421      	add	r1, r4
    ep->is_in = 1U;
 800602c:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->is_stall = 0U;
 800602e:	2500      	movs	r5, #0
 8006030:	708d      	strb	r5, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8006032:	700a      	strb	r2, [r1, #0]

  __HAL_LOCK(hpcd);
 8006034:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8006038:	2b01      	cmp	r3, #1
 800603a:	d014      	beq.n	8006066 <HAL_PCD_EP_ClrStall+0x66>
 800603c:	2301      	movs	r3, #1
  (void)USB_EPClearStall(hpcd->Instance, ep);
 800603e:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8006040:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPClearStall(hpcd->Instance, ep);
 8006044:	f002 fac5 	bl	80085d2 <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);
 8006048:	f884 5494 	strb.w	r5, [r4, #1172]	@ 0x494

  return HAL_OK;
 800604c:	4628      	mov	r0, r5
}
 800604e:	bd38      	pop	{r3, r4, r5, pc}
    ep->is_in = 0U;
 8006050:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8006054:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8006058:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800605a:	4421      	add	r1, r4
    ep->is_in = 0U;
 800605c:	f880 3255 	strb.w	r3, [r0, #597]	@ 0x255
 8006060:	e7e5      	b.n	800602e <HAL_PCD_EP_ClrStall+0x2e>
    return HAL_ERROR;
 8006062:	2001      	movs	r0, #1
 8006064:	e7f3      	b.n	800604e <HAL_PCD_EP_ClrStall+0x4e>
  __HAL_LOCK(hpcd);
 8006066:	2002      	movs	r0, #2
 8006068:	e7f1      	b.n	800604e <HAL_PCD_EP_ClrStall+0x4e>

0800606a <HAL_PCD_EP_Abort>:
HAL_StatusTypeDef HAL_PCD_EP_Abort(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
  HAL_StatusTypeDef ret;
  PCD_EPTypeDef *ep;

  if ((0x80U & ep_addr) == 0x80U)
 800606a:	f001 030f 	and.w	r3, r1, #15
 800606e:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 8006072:	060a      	lsls	r2, r1, #24
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8006074:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8006078:	bf4c      	ite	mi
 800607a:	f103 0114 	addmi.w	r1, r3, #20
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800607e:	f503 7115 	addpl.w	r1, r3, #596	@ 0x254
 8006082:	4401      	add	r1, r0
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
 8006084:	6800      	ldr	r0, [r0, #0]
 8006086:	f002 b901 	b.w	800828c <USB_EPStopXfer>
	...

0800608c <HAL_PCD_IRQHandler>:
{
 800608c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8006090:	6806      	ldr	r6, [r0, #0]
{
 8006092:	b089      	sub	sp, #36	@ 0x24
 8006094:	4604      	mov	r4, r0
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 8006096:	4630      	mov	r0, r6
 8006098:	f002 fb1e 	bl	80086d8 <USB_GetMode>
 800609c:	9003      	str	r0, [sp, #12]
 800609e:	2800      	cmp	r0, #0
 80060a0:	f040 8158 	bne.w	8006354 <HAL_PCD_IRQHandler+0x2c8>
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 80060a4:	6820      	ldr	r0, [r4, #0]
 80060a6:	f002 fae9 	bl	800867c <USB_ReadInterrupts>
 80060aa:	2800      	cmp	r0, #0
 80060ac:	f000 8152 	beq.w	8006354 <HAL_PCD_IRQHandler+0x2c8>
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 80060b0:	f8d6 3808 	ldr.w	r3, [r6, #2056]	@ 0x808
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 80060b4:	6820      	ldr	r0, [r4, #0]
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 80060b6:	f3c3 230d 	ubfx	r3, r3, #8, #14
 80060ba:	f8c4 34d4 	str.w	r3, [r4, #1236]	@ 0x4d4
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 80060be:	f002 fadd 	bl	800867c <USB_ReadInterrupts>
 80060c2:	0787      	lsls	r7, r0, #30
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 80060c4:	bf48      	it	mi
 80060c6:	6822      	ldrmi	r2, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 80060c8:	6820      	ldr	r0, [r4, #0]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 80060ca:	bf42      	ittt	mi
 80060cc:	6953      	ldrmi	r3, [r2, #20]
 80060ce:	f003 0302 	andmi.w	r3, r3, #2
 80060d2:	6153      	strmi	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 80060d4:	f002 fad2 	bl	800867c <USB_ReadInterrupts>
 80060d8:	06c0      	lsls	r0, r0, #27
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 80060da:	f506 6500 	add.w	r5, r6, #2048	@ 0x800
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 80060de:	d52d      	bpl.n	800613c <HAL_PCD_IRQHandler+0xb0>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 80060e0:	6822      	ldr	r2, [r4, #0]
 80060e2:	6993      	ldr	r3, [r2, #24]
 80060e4:	f023 0310 	bic.w	r3, r3, #16
 80060e8:	6193      	str	r3, [r2, #24]
      RegVal = USBx->GRXSTSP;
 80060ea:	f8d6 8020 	ldr.w	r8, [r6, #32]
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 80060ee:	f408 13f0 	and.w	r3, r8, #1966080	@ 0x1e0000
 80060f2:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
 80060f6:	f008 070f 	and.w	r7, r8, #15
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 80060fa:	f040 812e 	bne.w	800635a <HAL_PCD_IRQHandler+0x2ce>
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
 80060fe:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 8006102:	ea18 0f03 	tst.w	r8, r3
 8006106:	d014      	beq.n	8006132 <HAL_PCD_IRQHandler+0xa6>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 8006108:	2324      	movs	r3, #36	@ 0x24
 800610a:	fb03 4707 	mla	r7, r3, r7, r4
 800610e:	f3c8 190a 	ubfx	r9, r8, #4, #11
 8006112:	f8d7 1260 	ldr.w	r1, [r7, #608]	@ 0x260
 8006116:	464a      	mov	r2, r9
 8006118:	4630      	mov	r0, r6
 800611a:	f002 fa0f 	bl	800853c <USB_ReadPacket>
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800611e:	f8d7 3260 	ldr.w	r3, [r7, #608]	@ 0x260
 8006122:	444b      	add	r3, r9
 8006124:	f8c7 3260 	str.w	r3, [r7, #608]	@ 0x260
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8006128:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 800612c:	444b      	add	r3, r9
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800612e:	f8c7 3268 	str.w	r3, [r7, #616]	@ 0x268
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8006132:	6822      	ldr	r2, [r4, #0]
 8006134:	6993      	ldr	r3, [r2, #24]
 8006136:	f043 0310 	orr.w	r3, r3, #16
 800613a:	6193      	str	r3, [r2, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 800613c:	6820      	ldr	r0, [r4, #0]
 800613e:	f002 fa9d 	bl	800867c <USB_ReadInterrupts>
 8006142:	0301      	lsls	r1, r0, #12
 8006144:	f100 811c 	bmi.w	8006380 <HAL_PCD_IRQHandler+0x2f4>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 8006148:	6820      	ldr	r0, [r4, #0]
 800614a:	f002 fa97 	bl	800867c <USB_ReadInterrupts>
 800614e:	0342      	lsls	r2, r0, #13
 8006150:	d50d      	bpl.n	800616e <HAL_PCD_IRQHandler+0xe2>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 8006152:	6820      	ldr	r0, [r4, #0]
 8006154:	f002 fa9e 	bl	8008694 <USB_ReadDevAllInEpInterrupt>
 8006158:	4627      	mov	r7, r4
 800615a:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 800615c:	f506 6b10 	add.w	fp, r6, #2304	@ 0x900
      epnum = 0U;
 8006160:	f04f 0a00 	mov.w	sl, #0
      while (ep_intr != 0U)
 8006164:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8006166:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8006168:	2b00      	cmp	r3, #0
 800616a:	f040 81d3 	bne.w	8006514 <HAL_PCD_IRQHandler+0x488>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 800616e:	6820      	ldr	r0, [r4, #0]
 8006170:	f002 fa84 	bl	800867c <USB_ReadInterrupts>
 8006174:	2800      	cmp	r0, #0
 8006176:	da13      	bge.n	80061a0 <HAL_PCD_IRQHandler+0x114>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8006178:	686b      	ldr	r3, [r5, #4]
 800617a:	f023 0301 	bic.w	r3, r3, #1
 800617e:	606b      	str	r3, [r5, #4]
      if (hpcd->LPM_State == LPM_L1)
 8006180:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
 8006184:	2b01      	cmp	r3, #1
 8006186:	f040 826b 	bne.w	8006660 <HAL_PCD_IRQHandler+0x5d4>
        hpcd->LPM_State = LPM_L0;
 800618a:	2100      	movs	r1, #0
 800618c:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 8006190:	4620      	mov	r0, r4
 8006192:	f000 fae6 	bl	8006762 <HAL_PCDEx_LPM_Callback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 8006196:	6822      	ldr	r2, [r4, #0]
 8006198:	6953      	ldr	r3, [r2, #20]
 800619a:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800619e:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 80061a0:	6820      	ldr	r0, [r4, #0]
 80061a2:	f002 fa6b 	bl	800867c <USB_ReadInterrupts>
 80061a6:	0501      	lsls	r1, r0, #20
 80061a8:	d50a      	bpl.n	80061c0 <HAL_PCD_IRQHandler+0x134>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 80061aa:	68ab      	ldr	r3, [r5, #8]
 80061ac:	07da      	lsls	r2, r3, #31
 80061ae:	d502      	bpl.n	80061b6 <HAL_PCD_IRQHandler+0x12a>
        HAL_PCD_SuspendCallback(hpcd);
 80061b0:	4620      	mov	r0, r4
 80061b2:	f7fb fb79 	bl	80018a8 <HAL_PCD_SuspendCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 80061b6:	6822      	ldr	r2, [r4, #0]
 80061b8:	6953      	ldr	r3, [r2, #20]
 80061ba:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80061be:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 80061c0:	6820      	ldr	r0, [r4, #0]
 80061c2:	f002 fa5b 	bl	800867c <USB_ReadInterrupts>
 80061c6:	04c3      	lsls	r3, r0, #19
 80061c8:	d533      	bpl.n	8006232 <HAL_PCD_IRQHandler+0x1a6>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 80061ca:	686b      	ldr	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 80061cc:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 80061ce:	f023 0301 	bic.w	r3, r3, #1
 80061d2:	606b      	str	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 80061d4:	2110      	movs	r1, #16
 80061d6:	f001 feb3 	bl	8007f40 <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80061da:	7920      	ldrb	r0, [r4, #4]
 80061dc:	f506 6310 	add.w	r3, r6, #2304	@ 0x900
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 80061e0:	f64f 317f 	movw	r1, #64383	@ 0xfb7f
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80061e4:	9a03      	ldr	r2, [sp, #12]
 80061e6:	4290      	cmp	r0, r2
 80061e8:	f200 823e 	bhi.w	8006668 <HAL_PCD_IRQHandler+0x5dc>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 80061ec:	69eb      	ldr	r3, [r5, #28]
 80061ee:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 80061f2:	61eb      	str	r3, [r5, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
 80061f4:	7be3      	ldrb	r3, [r4, #15]
 80061f6:	2b00      	cmp	r3, #0
 80061f8:	f000 8252 	beq.w	80066a0 <HAL_PCD_IRQHandler+0x614>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
 80061fc:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 8006200:	f043 030b 	orr.w	r3, r3, #11
 8006204:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
 8006208:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 800620a:	f043 030b 	orr.w	r3, r3, #11
 800620e:	646b      	str	r3, [r5, #68]	@ 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 8006210:	f8d6 3800 	ldr.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8006214:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 8006216:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 800621a:	f8c6 3800 	str.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 800621e:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8006222:	79a1      	ldrb	r1, [r4, #6]
 8006224:	f002 fa6a 	bl	80086fc <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 8006228:	6822      	ldr	r2, [r4, #0]
 800622a:	6953      	ldr	r3, [r2, #20]
 800622c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8006230:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 8006232:	6820      	ldr	r0, [r4, #0]
 8006234:	f002 fa22 	bl	800867c <USB_ReadInterrupts>
 8006238:	0487      	lsls	r7, r0, #18
 800623a:	d516      	bpl.n	800626a <HAL_PCD_IRQHandler+0x1de>
      (void)USB_ActivateSetup(hpcd->Instance);
 800623c:	6820      	ldr	r0, [r4, #0]
 800623e:	f002 fa4f 	bl	80086e0 <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
 8006242:	6820      	ldr	r0, [r4, #0]
 8006244:	f001 ff82 	bl	800814c <USB_GetDevSpeed>
 8006248:	71e0      	strb	r0, [r4, #7]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 800624a:	6827      	ldr	r7, [r4, #0]
 800624c:	f000 fd00 	bl	8006c50 <HAL_RCC_GetHCLKFreq>
 8006250:	79e2      	ldrb	r2, [r4, #7]
 8006252:	4601      	mov	r1, r0
 8006254:	4638      	mov	r0, r7
 8006256:	f001 fdc7 	bl	8007de8 <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
 800625a:	4620      	mov	r0, r4
 800625c:	f7fb fb11 	bl	8001882 <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 8006260:	6822      	ldr	r2, [r4, #0]
 8006262:	6953      	ldr	r3, [r2, #20]
 8006264:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8006268:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 800626a:	6820      	ldr	r0, [r4, #0]
 800626c:	f002 fa06 	bl	800867c <USB_ReadInterrupts>
 8006270:	0700      	lsls	r0, r0, #28
 8006272:	d507      	bpl.n	8006284 <HAL_PCD_IRQHandler+0x1f8>
      HAL_PCD_SOFCallback(hpcd);
 8006274:	4620      	mov	r0, r4
 8006276:	f7fb fb00 	bl	800187a <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 800627a:	6822      	ldr	r2, [r4, #0]
 800627c:	6953      	ldr	r3, [r2, #20]
 800627e:	f003 0308 	and.w	r3, r3, #8
 8006282:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
 8006284:	6820      	ldr	r0, [r4, #0]
 8006286:	f002 f9f9 	bl	800867c <USB_ReadInterrupts>
 800628a:	0601      	lsls	r1, r0, #24
 800628c:	f100 8213 	bmi.w	80066b6 <HAL_PCD_IRQHandler+0x62a>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 8006290:	6820      	ldr	r0, [r4, #0]
 8006292:	f002 f9f3 	bl	800867c <USB_ReadInterrupts>
 8006296:	02c2      	lsls	r2, r0, #11
 8006298:	d50c      	bpl.n	80062b4 <HAL_PCD_IRQHandler+0x228>
 800629a:	46a0      	mov	r8, r4
 800629c:	f506 6912 	add.w	r9, r6, #2336	@ 0x920
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80062a0:	2701      	movs	r7, #1
 80062a2:	7923      	ldrb	r3, [r4, #4]
 80062a4:	42bb      	cmp	r3, r7
 80062a6:	f200 821f 	bhi.w	80066e8 <HAL_PCD_IRQHandler+0x65c>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 80062aa:	6822      	ldr	r2, [r4, #0]
 80062ac:	6953      	ldr	r3, [r2, #20]
 80062ae:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80062b2:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 80062b4:	6820      	ldr	r0, [r4, #0]
 80062b6:	f002 f9e1 	bl	800867c <USB_ReadInterrupts>
 80062ba:	0283      	lsls	r3, r0, #10
 80062bc:	d52d      	bpl.n	800631a <HAL_PCD_IRQHandler+0x28e>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80062be:	f894 e004 	ldrb.w	lr, [r4, #4]
 80062c2:	4623      	mov	r3, r4
 80062c4:	f506 6032 	add.w	r0, r6, #2848	@ 0xb20
 80062c8:	2101      	movs	r1, #1
 80062ca:	458e      	cmp	lr, r1
 80062cc:	d920      	bls.n	8006310 <HAL_PCD_IRQHandler+0x284>
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 80062ce:	f893 c27c 	ldrb.w	ip, [r3, #636]	@ 0x27c
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
 80062d2:	6802      	ldr	r2, [r0, #0]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 80062d4:	f1bc 0f01 	cmp.w	ip, #1
 80062d8:	f040 821c 	bne.w	8006714 <HAL_PCD_IRQHandler+0x688>
 80062dc:	2a00      	cmp	r2, #0
 80062de:	f280 8219 	bge.w	8006714 <HAL_PCD_IRQHandler+0x688>
            ((RegVal & (0x1U << 16)) == (hpcd->FrameNumber & 0x1U)))
 80062e2:	f8d4 74d4 	ldr.w	r7, [r4, #1236]	@ 0x4d4
 80062e6:	f402 3280 	and.w	r2, r2, #65536	@ 0x10000
 80062ea:	f007 0701 	and.w	r7, r7, #1
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
 80062ee:	42ba      	cmp	r2, r7
 80062f0:	f040 8210 	bne.w	8006714 <HAL_PCD_IRQHandler+0x688>
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
 80062f4:	f883 c27b 	strb.w	ip, [r3, #635]	@ 0x27b
          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
 80062f8:	69b2      	ldr	r2, [r6, #24]
 80062fa:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80062fe:	61b2      	str	r2, [r6, #24]
          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
 8006300:	6972      	ldr	r2, [r6, #20]
 8006302:	0617      	lsls	r7, r2, #24
 8006304:	f100 8206 	bmi.w	8006714 <HAL_PCD_IRQHandler+0x688>
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
 8006308:	686b      	ldr	r3, [r5, #4]
 800630a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800630e:	606b      	str	r3, [r5, #4]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 8006310:	6822      	ldr	r2, [r4, #0]
 8006312:	6953      	ldr	r3, [r2, #20]
 8006314:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8006318:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 800631a:	6820      	ldr	r0, [r4, #0]
 800631c:	f002 f9ae 	bl	800867c <USB_ReadInterrupts>
 8006320:	0041      	lsls	r1, r0, #1
 8006322:	d507      	bpl.n	8006334 <HAL_PCD_IRQHandler+0x2a8>
      HAL_PCD_ConnectCallback(hpcd);
 8006324:	4620      	mov	r0, r4
 8006326:	f7fb fae3 	bl	80018f0 <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 800632a:	6822      	ldr	r2, [r4, #0]
 800632c:	6953      	ldr	r3, [r2, #20]
 800632e:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8006332:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 8006334:	6820      	ldr	r0, [r4, #0]
 8006336:	f002 f9a1 	bl	800867c <USB_ReadInterrupts>
 800633a:	0742      	lsls	r2, r0, #29
 800633c:	d50a      	bpl.n	8006354 <HAL_PCD_IRQHandler+0x2c8>
      RegVal = hpcd->Instance->GOTGINT;
 800633e:	6823      	ldr	r3, [r4, #0]
 8006340:	685d      	ldr	r5, [r3, #4]
      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 8006342:	076b      	lsls	r3, r5, #29
 8006344:	d502      	bpl.n	800634c <HAL_PCD_IRQHandler+0x2c0>
        HAL_PCD_DisconnectCallback(hpcd);
 8006346:	4620      	mov	r0, r4
 8006348:	f7fb fad6 	bl	80018f8 <HAL_PCD_DisconnectCallback>
      hpcd->Instance->GOTGINT |= RegVal;
 800634c:	6822      	ldr	r2, [r4, #0]
 800634e:	6853      	ldr	r3, [r2, #4]
 8006350:	432b      	orrs	r3, r5
 8006352:	6053      	str	r3, [r2, #4]
}
 8006354:	b009      	add	sp, #36	@ 0x24
 8006356:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
 800635a:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 800635e:	f47f aee8 	bne.w	8006132 <HAL_PCD_IRQHandler+0xa6>
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 8006362:	2208      	movs	r2, #8
 8006364:	f204 419c 	addw	r1, r4, #1180	@ 0x49c
 8006368:	4630      	mov	r0, r6
 800636a:	f002 f8e7 	bl	800853c <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800636e:	2324      	movs	r3, #36	@ 0x24
 8006370:	fb03 4707 	mla	r7, r3, r7, r4
 8006374:	f3c8 180a 	ubfx	r8, r8, #4, #11
 8006378:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 800637c:	4443      	add	r3, r8
 800637e:	e6d6      	b.n	800612e <HAL_PCD_IRQHandler+0xa2>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 8006380:	6820      	ldr	r0, [r4, #0]
 8006382:	f002 f97f 	bl	8008684 <USB_ReadDevAllOutEpInterrupt>
 8006386:	f506 6830 	add.w	r8, r6, #2816	@ 0xb00
 800638a:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 800638c:	46a2      	mov	sl, r4
      epnum = 0U;
 800638e:	2700      	movs	r7, #0
      while (ep_intr != 0U)
 8006390:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8006392:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8006394:	2b00      	cmp	r3, #0
 8006396:	f43f aed7 	beq.w	8006148 <HAL_PCD_IRQHandler+0xbc>
        if ((ep_intr & 0x1U) != 0U)
 800639a:	9b04      	ldr	r3, [sp, #16]
 800639c:	07db      	lsls	r3, r3, #31
 800639e:	d578      	bpl.n	8006492 <HAL_PCD_IRQHandler+0x406>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 80063a0:	fa5f fb87 	uxtb.w	fp, r7
 80063a4:	4659      	mov	r1, fp
 80063a6:	f002 f97d 	bl	80086a4 <USB_ReadDevOutEPInterrupt>
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 80063aa:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 80063ae:	4681      	mov	r9, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 80063b0:	d01f      	beq.n	80063f2 <HAL_PCD_IRQHandler+0x366>
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_EPTypeDef *ep;
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80063b2:	6820      	ldr	r0, [r4, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 80063b4:	2301      	movs	r3, #1
 80063b6:	f8c8 3008 	str.w	r3, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if (hpcd->Init.dma_enable == 1U)
 80063ba:	f894 c006 	ldrb.w	ip, [r4, #6]
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 80063be:	6c01      	ldr	r1, [r0, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 80063c0:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
 80063c4:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if (hpcd->Init.dma_enable == 1U)
 80063c8:	f1bc 0f01 	cmp.w	ip, #1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 80063cc:	689a      	ldr	r2, [r3, #8]
  if (hpcd->Init.dma_enable == 1U)
 80063ce:	f040 808b 	bne.w	80064e8 <HAL_PCD_IRQHandler+0x45c>
  {
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
 80063d2:	f012 0f08 	tst.w	r2, #8
 80063d6:	d007      	beq.n	80063e8 <HAL_PCD_IRQHandler+0x35c>
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80063d8:	48af      	ldr	r0, [pc, #700]	@ (8006698 <HAL_PCD_IRQHandler+0x60c>)
 80063da:	4281      	cmp	r1, r0
 80063dc:	d909      	bls.n	80063f2 <HAL_PCD_IRQHandler+0x366>
 80063de:	0412      	lsls	r2, r2, #16
 80063e0:	d507      	bpl.n	80063f2 <HAL_PCD_IRQHandler+0x366>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
      {
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 80063e2:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 80063e6:	e003      	b.n	80063f0 <HAL_PCD_IRQHandler+0x364>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
 80063e8:	f012 0f20 	tst.w	r2, #32
 80063ec:	d05a      	beq.n	80064a4 <HAL_PCD_IRQHandler+0x418>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 80063ee:	2220      	movs	r2, #32
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 80063f0:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 80063f2:	f019 0f08 	tst.w	r9, #8
 80063f6:	d021      	beq.n	800643c <HAL_PCD_IRQHandler+0x3b0>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 80063f8:	2308      	movs	r3, #8
 80063fa:	f8c8 3008 	str.w	r3, [r8, #8]
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80063fe:	6823      	ldr	r3, [r4, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8006400:	49a5      	ldr	r1, [pc, #660]	@ (8006698 <HAL_PCD_IRQHandler+0x60c>)
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8006402:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8006404:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8006408:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 800640c:	428a      	cmp	r2, r1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 800640e:	6898      	ldr	r0, [r3, #8]
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8006410:	d904      	bls.n	800641c <HAL_PCD_IRQHandler+0x390>
 8006412:	0401      	lsls	r1, r0, #16
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8006414:	bf44      	itt	mi
 8006416:	f44f 4000 	movmi.w	r0, #32768	@ 0x8000
 800641a:	6098      	strmi	r0, [r3, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
 800641c:	4620      	mov	r0, r4
 800641e:	9205      	str	r2, [sp, #20]
 8006420:	f7fb fa14 	bl	800184c <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 8006424:	9a05      	ldr	r2, [sp, #20]
 8006426:	499c      	ldr	r1, [pc, #624]	@ (8006698 <HAL_PCD_IRQHandler+0x60c>)
 8006428:	428a      	cmp	r2, r1
 800642a:	d907      	bls.n	800643c <HAL_PCD_IRQHandler+0x3b0>
 800642c:	79a1      	ldrb	r1, [r4, #6]
 800642e:	2901      	cmp	r1, #1
 8006430:	d104      	bne.n	800643c <HAL_PCD_IRQHandler+0x3b0>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8006432:	6820      	ldr	r0, [r4, #0]
 8006434:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8006438:	f002 f960 	bl	80086fc <USB_EP0_OutStart>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 800643c:	f019 0f10 	tst.w	r9, #16
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 8006440:	bf1c      	itt	ne
 8006442:	2310      	movne	r3, #16
 8006444:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
 8006448:	f019 0f02 	tst.w	r9, #2
 800644c:	d014      	beq.n	8006478 <HAL_PCD_IRQHandler+0x3ec>
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
 800644e:	6973      	ldr	r3, [r6, #20]
 8006450:	061a      	lsls	r2, r3, #24
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
 8006452:	bf42      	ittt	mi
 8006454:	686b      	ldrmi	r3, [r5, #4]
 8006456:	f443 6380 	orrmi.w	r3, r3, #1024	@ 0x400
 800645a:	606b      	strmi	r3, [r5, #4]
            if (ep->is_iso_incomplete == 1U)
 800645c:	f89a 3257 	ldrb.w	r3, [sl, #599]	@ 0x257
 8006460:	2b01      	cmp	r3, #1
 8006462:	d106      	bne.n	8006472 <HAL_PCD_IRQHandler+0x3e6>
              ep->is_iso_incomplete = 0U;
 8006464:	2300      	movs	r3, #0
 8006466:	f88a 3257 	strb.w	r3, [sl, #599]	@ 0x257
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 800646a:	4659      	mov	r1, fp
 800646c:	4620      	mov	r0, r4
 800646e:	f7fb fa37 	bl	80018e0 <HAL_PCD_ISOOUTIncompleteCallback>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
 8006472:	2302      	movs	r3, #2
 8006474:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 8006478:	f019 0f20 	tst.w	r9, #32
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 800647c:	bf1c      	itt	ne
 800647e:	2320      	movne	r3, #32
 8006480:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 8006484:	f419 5f00 	tst.w	r9, #8192	@ 0x2000
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 8006488:	bf1c      	itt	ne
 800648a:	f44f 5300 	movne.w	r3, #8192	@ 0x2000
 800648e:	f8c8 3008 	strne.w	r3, [r8, #8]
        ep_intr >>= 1U;
 8006492:	9b04      	ldr	r3, [sp, #16]
 8006494:	085b      	lsrs	r3, r3, #1
        epnum++;
 8006496:	3701      	adds	r7, #1
        ep_intr >>= 1U;
 8006498:	9304      	str	r3, [sp, #16]
 800649a:	f108 0820 	add.w	r8, r8, #32
 800649e:	f10a 0a24 	add.w	sl, sl, #36	@ 0x24
 80064a2:	e775      	b.n	8006390 <HAL_PCD_IRQHandler+0x304>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80064a4:	f8df c1f0 	ldr.w	ip, [pc, #496]	@ 8006698 <HAL_PCD_IRQHandler+0x60c>
 80064a8:	4561      	cmp	r1, ip
 80064aa:	d901      	bls.n	80064b0 <HAL_PCD_IRQHandler+0x424>
 80064ac:	0412      	lsls	r2, r2, #16
 80064ae:	d498      	bmi.n	80063e2 <HAL_PCD_IRQHandler+0x356>
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
 80064b0:	691a      	ldr	r2, [r3, #16]
 80064b2:	f8da 3274 	ldr.w	r3, [sl, #628]	@ 0x274
 80064b6:	f3c2 0212 	ubfx	r2, r2, #0, #19
 80064ba:	1a9b      	subs	r3, r3, r2
 80064bc:	f8ca 3268 	str.w	r3, [sl, #616]	@ 0x268
        if (epnum == 0U)
 80064c0:	b96f      	cbnz	r7, 80064de <HAL_PCD_IRQHandler+0x452>
          if (ep->xfer_len == 0U)
 80064c2:	f8d4 2264 	ldr.w	r2, [r4, #612]	@ 0x264
 80064c6:	b92a      	cbnz	r2, 80064d4 <HAL_PCD_IRQHandler+0x448>
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 80064c8:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 80064cc:	2101      	movs	r1, #1
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 80064ce:	f002 f915 	bl	80086fc <USB_EP0_OutStart>
 80064d2:	e004      	b.n	80064de <HAL_PCD_IRQHandler+0x452>
            ep->xfer_buff += ep->xfer_count;
 80064d4:	f8d4 2260 	ldr.w	r2, [r4, #608]	@ 0x260
 80064d8:	441a      	add	r2, r3
 80064da:	f8c4 2260 	str.w	r2, [r4, #608]	@ 0x260
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 80064de:	4659      	mov	r1, fp
 80064e0:	4620      	mov	r0, r4
 80064e2:	f7fb f9b9 	bl	8001858 <HAL_PCD_DataOutStageCallback>
 80064e6:	e784      	b.n	80063f2 <HAL_PCD_IRQHandler+0x366>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
 80064e8:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 800669c <HAL_PCD_IRQHandler+0x610>
 80064ec:	4561      	cmp	r1, ip
 80064ee:	d107      	bne.n	8006500 <HAL_PCD_IRQHandler+0x474>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
 80064f0:	0411      	lsls	r1, r2, #16
 80064f2:	f53f af76 	bmi.w	80063e2 <HAL_PCD_IRQHandler+0x356>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 80064f6:	0690      	lsls	r0, r2, #26
 80064f8:	d5f1      	bpl.n	80064de <HAL_PCD_IRQHandler+0x452>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 80064fa:	2220      	movs	r2, #32
 80064fc:	609a      	str	r2, [r3, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 80064fe:	e7ee      	b.n	80064de <HAL_PCD_IRQHandler+0x452>
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 8006500:	2f00      	cmp	r7, #0
 8006502:	d1ec      	bne.n	80064de <HAL_PCD_IRQHandler+0x452>
 8006504:	f8d4 3264 	ldr.w	r3, [r4, #612]	@ 0x264
 8006508:	2b00      	cmp	r3, #0
 800650a:	d1e8      	bne.n	80064de <HAL_PCD_IRQHandler+0x452>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 800650c:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8006510:	4639      	mov	r1, r7
 8006512:	e7dc      	b.n	80064ce <HAL_PCD_IRQHandler+0x442>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
 8006514:	9b04      	ldr	r3, [sp, #16]
 8006516:	07db      	lsls	r3, r3, #31
 8006518:	f140 8099 	bpl.w	800664e <HAL_PCD_IRQHandler+0x5c2>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 800651c:	fa5f f38a 	uxtb.w	r3, sl
 8006520:	4619      	mov	r1, r3
 8006522:	9305      	str	r3, [sp, #20]
 8006524:	f002 f8c7 	bl	80086b6 <USB_ReadDevInEPInterrupt>
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 8006528:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 800652c:	4680      	mov	r8, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 800652e:	d01f      	beq.n	8006570 <HAL_PCD_IRQHandler+0x4e4>
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8006530:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8006532:	2101      	movs	r1, #1
 8006534:	f00a 020f 	and.w	r2, sl, #15
 8006538:	fa01 f202 	lsl.w	r2, r1, r2
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 800653c:	ea23 0302 	bic.w	r3, r3, r2
 8006540:	636b      	str	r3, [r5, #52]	@ 0x34
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 8006542:	f8cb 1008 	str.w	r1, [fp, #8]
            if (hpcd->Init.dma_enable == 1U)
 8006546:	79a1      	ldrb	r1, [r4, #6]
 8006548:	2901      	cmp	r1, #1
 800654a:	d10d      	bne.n	8006568 <HAL_PCD_IRQHandler+0x4dc>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 800654c:	e9d7 2307 	ldrd	r2, r3, [r7, #28]
 8006550:	4413      	add	r3, r2
 8006552:	623b      	str	r3, [r7, #32]
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
 8006554:	f1ba 0f00 	cmp.w	sl, #0
 8006558:	d106      	bne.n	8006568 <HAL_PCD_IRQHandler+0x4dc>
 800655a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800655c:	b923      	cbnz	r3, 8006568 <HAL_PCD_IRQHandler+0x4dc>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 800655e:	6820      	ldr	r0, [r4, #0]
 8006560:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8006564:	f002 f8ca 	bl	80086fc <USB_EP0_OutStart>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 8006568:	9905      	ldr	r1, [sp, #20]
 800656a:	4620      	mov	r0, r4
 800656c:	f7fb f97d 	bl	800186a <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 8006570:	f018 0f08 	tst.w	r8, #8
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 8006574:	bf1c      	itt	ne
 8006576:	2308      	movne	r3, #8
 8006578:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 800657c:	f018 0f10 	tst.w	r8, #16
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 8006580:	bf1c      	itt	ne
 8006582:	2310      	movne	r3, #16
 8006584:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 8006588:	f018 0f40 	tst.w	r8, #64	@ 0x40
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 800658c:	bf1c      	itt	ne
 800658e:	2340      	movne	r3, #64	@ 0x40
 8006590:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 8006594:	f018 0f02 	tst.w	r8, #2
 8006598:	d00f      	beq.n	80065ba <HAL_PCD_IRQHandler+0x52e>
            (void)USB_FlushTxFifo(USBx, epnum);
 800659a:	4651      	mov	r1, sl
 800659c:	4630      	mov	r0, r6
 800659e:	f001 fccf 	bl	8007f40 <USB_FlushTxFifo>
            if (ep->is_iso_incomplete == 1U)
 80065a2:	7dfb      	ldrb	r3, [r7, #23]
 80065a4:	2b01      	cmp	r3, #1
 80065a6:	d105      	bne.n	80065b4 <HAL_PCD_IRQHandler+0x528>
              ep->is_iso_incomplete = 0U;
 80065a8:	2300      	movs	r3, #0
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 80065aa:	9905      	ldr	r1, [sp, #20]
              ep->is_iso_incomplete = 0U;
 80065ac:	75fb      	strb	r3, [r7, #23]
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 80065ae:	4620      	mov	r0, r4
 80065b0:	f7fb f99a 	bl	80018e8 <HAL_PCD_ISOINIncompleteCallback>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 80065b4:	2302      	movs	r3, #2
 80065b6:	f8cb 3008 	str.w	r3, [fp, #8]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80065ba:	6823      	ldr	r3, [r4, #0]
 80065bc:	9306      	str	r3, [sp, #24]
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 80065be:	f018 0f80 	tst.w	r8, #128	@ 0x80
 80065c2:	d044      	beq.n	800664e <HAL_PCD_IRQHandler+0x5c2>
  if (ep->xfer_count > ep->xfer_len)
 80065c4:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 80065c8:	429a      	cmp	r2, r3
 80065ca:	d840      	bhi.n	800664e <HAL_PCD_IRQHandler+0x5c2>
  len = ep->xfer_len - ep->xfer_count;
 80065cc:	eba3 0802 	sub.w	r8, r3, r2
  if (len > ep->maxpacket)
 80065d0:	69fb      	ldr	r3, [r7, #28]
 80065d2:	4598      	cmp	r8, r3
 80065d4:	bf28      	it	cs
 80065d6:	4698      	movcs	r8, r3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80065d8:	9b06      	ldr	r3, [sp, #24]
 80065da:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
  len32b = (len + 3U) / 4U;
 80065de:	f108 0803 	add.w	r8, r8, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80065e2:	eb03 134a 	add.w	r3, r3, sl, lsl #5
  len32b = (len + 3U) / 4U;
 80065e6:	ea4f 0898 	mov.w	r8, r8, lsr #2
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80065ea:	9307      	str	r3, [sp, #28]
 80065ec:	9b07      	ldr	r3, [sp, #28]
 80065ee:	6999      	ldr	r1, [r3, #24]
 80065f0:	b289      	uxth	r1, r1
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 80065f2:	4541      	cmp	r1, r8
 80065f4:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 80065f8:	d327      	bcc.n	800664a <HAL_PCD_IRQHandler+0x5be>
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80065fa:	4293      	cmp	r3, r2
 80065fc:	d80b      	bhi.n	8006616 <HAL_PCD_IRQHandler+0x58a>
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80065fe:	9b06      	ldr	r3, [sp, #24]
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8006600:	f00a 000f 	and.w	r0, sl, #15
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8006604:	f8d3 2834 	ldr.w	r2, [r3, #2100]	@ 0x834
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8006608:	2101      	movs	r1, #1
 800660a:	4081      	lsls	r1, r0
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 800660c:	ea22 0201 	bic.w	r2, r2, r1
 8006610:	f8c3 2834 	str.w	r2, [r3, #2100]	@ 0x834
 8006614:	e01b      	b.n	800664e <HAL_PCD_IRQHandler+0x5c2>
    len = ep->xfer_len - ep->xfer_count;
 8006616:	eba3 0902 	sub.w	r9, r3, r2
    if (len > ep->maxpacket)
 800661a:	69fb      	ldr	r3, [r7, #28]
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 800661c:	9a05      	ldr	r2, [sp, #20]
 800661e:	9806      	ldr	r0, [sp, #24]
    if (len > ep->maxpacket)
 8006620:	4599      	cmp	r9, r3
 8006622:	bf28      	it	cs
 8006624:	4699      	movcs	r9, r3
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8006626:	79a3      	ldrb	r3, [r4, #6]
 8006628:	9300      	str	r3, [sp, #0]
 800662a:	6a39      	ldr	r1, [r7, #32]
 800662c:	fa1f f389 	uxth.w	r3, r9
 8006630:	f001 fe6e 	bl	8008310 <USB_WritePacket>
    ep->xfer_buff  += len;
 8006634:	6a3b      	ldr	r3, [r7, #32]
 8006636:	444b      	add	r3, r9
 8006638:	623b      	str	r3, [r7, #32]
    ep->xfer_count += len;
 800663a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    len32b = (len + 3U) / 4U;
 800663c:	f109 0803 	add.w	r8, r9, #3
    ep->xfer_count += len;
 8006640:	444b      	add	r3, r9
    len32b = (len + 3U) / 4U;
 8006642:	ea4f 0898 	mov.w	r8, r8, lsr #2
    ep->xfer_count += len;
 8006646:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006648:	e7d0      	b.n	80065ec <HAL_PCD_IRQHandler+0x560>
  if (ep->xfer_len <= ep->xfer_count)
 800664a:	4293      	cmp	r3, r2
 800664c:	d9d7      	bls.n	80065fe <HAL_PCD_IRQHandler+0x572>
        ep_intr >>= 1U;
 800664e:	9b04      	ldr	r3, [sp, #16]
 8006650:	085b      	lsrs	r3, r3, #1
        epnum++;
 8006652:	f10a 0a01 	add.w	sl, sl, #1
        ep_intr >>= 1U;
 8006656:	9304      	str	r3, [sp, #16]
 8006658:	3724      	adds	r7, #36	@ 0x24
 800665a:	f10b 0b20 	add.w	fp, fp, #32
 800665e:	e581      	b.n	8006164 <HAL_PCD_IRQHandler+0xd8>
        HAL_PCD_ResumeCallback(hpcd);
 8006660:	4620      	mov	r0, r4
 8006662:	f7fb f939 	bl	80018d8 <HAL_PCD_ResumeCallback>
 8006666:	e596      	b.n	8006196 <HAL_PCD_IRQHandler+0x10a>
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8006668:	6099      	str	r1, [r3, #8]
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 800666a:	681a      	ldr	r2, [r3, #0]
 800666c:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8006670:	601a      	str	r2, [r3, #0]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
 8006672:	f8c3 1208 	str.w	r1, [r3, #520]	@ 0x208
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8006676:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 800667a:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 800667e:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8006682:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 8006686:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 800668a:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800668e:	9a03      	ldr	r2, [sp, #12]
 8006690:	3201      	adds	r2, #1
 8006692:	9203      	str	r2, [sp, #12]
 8006694:	3320      	adds	r3, #32
 8006696:	e5a5      	b.n	80061e4 <HAL_PCD_IRQHandler+0x158>
 8006698:	4f54300a 	.word	0x4f54300a
 800669c:	4f54310a 	.word	0x4f54310a
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
 80066a0:	696b      	ldr	r3, [r5, #20]
 80066a2:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80066a6:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 80066aa:	616b      	str	r3, [r5, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
 80066ac:	692b      	ldr	r3, [r5, #16]
 80066ae:	f043 030b 	orr.w	r3, r3, #11
 80066b2:	612b      	str	r3, [r5, #16]
 80066b4:	e5ac      	b.n	8006210 <HAL_PCD_IRQHandler+0x184>
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
 80066b6:	69b3      	ldr	r3, [r6, #24]
 80066b8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80066bc:	61b3      	str	r3, [r6, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80066be:	2701      	movs	r7, #1
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 80066c0:	f204 2857 	addw	r8, r4, #599	@ 0x257
 80066c4:	f04f 0924 	mov.w	r9, #36	@ 0x24
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80066c8:	7923      	ldrb	r3, [r4, #4]
 80066ca:	42bb      	cmp	r3, r7
 80066cc:	f67f ade0 	bls.w	8006290 <HAL_PCD_IRQHandler+0x204>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 80066d0:	fb09 f307 	mul.w	r3, r9, r7
 80066d4:	f818 3003 	ldrb.w	r3, [r8, r3]
 80066d8:	2b01      	cmp	r3, #1
 80066da:	d103      	bne.n	80066e4 <HAL_PCD_IRQHandler+0x658>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)epnum);
 80066dc:	b2f9      	uxtb	r1, r7
 80066de:	4620      	mov	r0, r4
 80066e0:	f7ff fcc3 	bl	800606a <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80066e4:	3701      	adds	r7, #1
 80066e6:	e7ef      	b.n	80066c8 <HAL_PCD_IRQHandler+0x63c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 80066e8:	f898 303c 	ldrb.w	r3, [r8, #60]	@ 0x3c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
 80066ec:	f8d9 2000 	ldr.w	r2, [r9]
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 80066f0:	2b01      	cmp	r3, #1
 80066f2:	d109      	bne.n	8006708 <HAL_PCD_IRQHandler+0x67c>
 80066f4:	2a00      	cmp	r2, #0
 80066f6:	da07      	bge.n	8006708 <HAL_PCD_IRQHandler+0x67c>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 80066f8:	f067 017f 	orn	r1, r7, #127	@ 0x7f
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
 80066fc:	f888 303b 	strb.w	r3, [r8, #59]	@ 0x3b
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 8006700:	b2c9      	uxtb	r1, r1
 8006702:	4620      	mov	r0, r4
 8006704:	f7ff fcb1 	bl	800606a <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8006708:	3701      	adds	r7, #1
 800670a:	f108 0824 	add.w	r8, r8, #36	@ 0x24
 800670e:	f109 0920 	add.w	r9, r9, #32
 8006712:	e5c6      	b.n	80062a2 <HAL_PCD_IRQHandler+0x216>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8006714:	3101      	adds	r1, #1
 8006716:	3324      	adds	r3, #36	@ 0x24
 8006718:	3020      	adds	r0, #32
 800671a:	e5d6      	b.n	80062ca <HAL_PCD_IRQHandler+0x23e>

0800671c <HAL_PCDEx_SetTxFiFo>:
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
 800671c:	6800      	ldr	r0, [r0, #0]
{
 800671e:	b570      	push	{r4, r5, r6, lr}
  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8006720:	6a43      	ldr	r3, [r0, #36]	@ 0x24

  if (fifo == 0U)
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 8006722:	0412      	lsls	r2, r2, #16
  if (fifo == 0U)
 8006724:	b919      	cbnz	r1, 800672e <HAL_PCDEx_SetTxFiFo+0x12>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 8006726:	4313      	orrs	r3, r2
 8006728:	6283      	str	r3, [r0, #40]	@ 0x28
    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
  }

  return HAL_OK;
}
 800672a:	2000      	movs	r0, #0
 800672c:	bd70      	pop	{r4, r5, r6, pc}
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 800672e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
    for (i = 0U; i < (fifo - 1U); i++)
 8006730:	1e4e      	subs	r6, r1, #1
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 8006732:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8006736:	2400      	movs	r4, #0
 8006738:	42b4      	cmp	r4, r6
 800673a:	d305      	bcc.n	8006748 <HAL_PCDEx_SetTxFiFo+0x2c>
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
 800673c:	313f      	adds	r1, #63	@ 0x3f
 800673e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8006742:	4313      	orrs	r3, r2
 8006744:	6043      	str	r3, [r0, #4]
 8006746:	e7f0      	b.n	800672a <HAL_PCDEx_SetTxFiFo+0xe>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 8006748:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 800674c:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8006750:	3401      	adds	r4, #1
 8006752:	686d      	ldr	r5, [r5, #4]
 8006754:	eb03 4315 	add.w	r3, r3, r5, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8006758:	e7ee      	b.n	8006738 <HAL_PCDEx_SetTxFiFo+0x1c>

0800675a <HAL_PCDEx_SetRxFiFo>:
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
  hpcd->Instance->GRXFSIZ = size;
 800675a:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 800675c:	2000      	movs	r0, #0
  hpcd->Instance->GRXFSIZ = size;
 800675e:	6259      	str	r1, [r3, #36]	@ 0x24
}
 8006760:	4770      	bx	lr

08006762 <HAL_PCDEx_LPM_Callback>:
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
 8006762:	4770      	bx	lr

08006764 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006764:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8006768:	4604      	mov	r4, r0
 800676a:	b340      	cbz	r0, 80067be <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800676c:	6803      	ldr	r3, [r0, #0]
 800676e:	07de      	lsls	r6, r3, #31
 8006770:	d410      	bmi.n	8006794 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006772:	6823      	ldr	r3, [r4, #0]
 8006774:	079d      	lsls	r5, r3, #30
 8006776:	d45b      	bmi.n	8006830 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006778:	6823      	ldr	r3, [r4, #0]
 800677a:	0719      	lsls	r1, r3, #28
 800677c:	f100 809d 	bmi.w	80068ba <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006780:	6823      	ldr	r3, [r4, #0]
 8006782:	075a      	lsls	r2, r3, #29
 8006784:	f100 80bd 	bmi.w	8006902 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006788:	69a3      	ldr	r3, [r4, #24]
 800678a:	2b00      	cmp	r3, #0
 800678c:	f040 8124 	bne.w	80069d8 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8006790:	2000      	movs	r0, #0
 8006792:	e02c      	b.n	80067ee <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8006794:	4b8d      	ldr	r3, [pc, #564]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
 8006796:	689a      	ldr	r2, [r3, #8]
 8006798:	f002 020c 	and.w	r2, r2, #12
 800679c:	2a04      	cmp	r2, #4
 800679e:	d007      	beq.n	80067b0 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80067a0:	689a      	ldr	r2, [r3, #8]
 80067a2:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 80067a6:	2a08      	cmp	r2, #8
 80067a8:	d10b      	bne.n	80067c2 <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80067aa:	685b      	ldr	r3, [r3, #4]
 80067ac:	0259      	lsls	r1, r3, #9
 80067ae:	d508      	bpl.n	80067c2 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80067b0:	4b86      	ldr	r3, [pc, #536]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
 80067b2:	681b      	ldr	r3, [r3, #0]
 80067b4:	039a      	lsls	r2, r3, #14
 80067b6:	d5dc      	bpl.n	8006772 <HAL_RCC_OscConfig+0xe>
 80067b8:	6863      	ldr	r3, [r4, #4]
 80067ba:	2b00      	cmp	r3, #0
 80067bc:	d1d9      	bne.n	8006772 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 80067be:	2001      	movs	r0, #1
 80067c0:	e015      	b.n	80067ee <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80067c2:	6863      	ldr	r3, [r4, #4]
 80067c4:	4d81      	ldr	r5, [pc, #516]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
 80067c6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80067ca:	d113      	bne.n	80067f4 <HAL_RCC_OscConfig+0x90>
 80067cc:	682b      	ldr	r3, [r5, #0]
 80067ce:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80067d2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80067d4:	f7fd fff4 	bl	80047c0 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80067d8:	4e7c      	ldr	r6, [pc, #496]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80067da:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80067dc:	6833      	ldr	r3, [r6, #0]
 80067de:	039b      	lsls	r3, r3, #14
 80067e0:	d4c7      	bmi.n	8006772 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80067e2:	f7fd ffed 	bl	80047c0 <HAL_GetTick>
 80067e6:	1b40      	subs	r0, r0, r5
 80067e8:	2864      	cmp	r0, #100	@ 0x64
 80067ea:	d9f7      	bls.n	80067dc <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 80067ec:	2003      	movs	r0, #3
}
 80067ee:	b002      	add	sp, #8
 80067f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80067f4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80067f8:	d104      	bne.n	8006804 <HAL_RCC_OscConfig+0xa0>
 80067fa:	682b      	ldr	r3, [r5, #0]
 80067fc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006800:	602b      	str	r3, [r5, #0]
 8006802:	e7e3      	b.n	80067cc <HAL_RCC_OscConfig+0x68>
 8006804:	682a      	ldr	r2, [r5, #0]
 8006806:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800680a:	602a      	str	r2, [r5, #0]
 800680c:	682a      	ldr	r2, [r5, #0]
 800680e:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8006812:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006814:	2b00      	cmp	r3, #0
 8006816:	d1dd      	bne.n	80067d4 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8006818:	f7fd ffd2 	bl	80047c0 <HAL_GetTick>
 800681c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800681e:	682b      	ldr	r3, [r5, #0]
 8006820:	039f      	lsls	r7, r3, #14
 8006822:	d5a6      	bpl.n	8006772 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006824:	f7fd ffcc 	bl	80047c0 <HAL_GetTick>
 8006828:	1b80      	subs	r0, r0, r6
 800682a:	2864      	cmp	r0, #100	@ 0x64
 800682c:	d9f7      	bls.n	800681e <HAL_RCC_OscConfig+0xba>
 800682e:	e7dd      	b.n	80067ec <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8006830:	4b66      	ldr	r3, [pc, #408]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
 8006832:	689a      	ldr	r2, [r3, #8]
 8006834:	f012 0f0c 	tst.w	r2, #12
 8006838:	d007      	beq.n	800684a <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800683a:	689a      	ldr	r2, [r3, #8]
 800683c:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8006840:	2a08      	cmp	r2, #8
 8006842:	d111      	bne.n	8006868 <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006844:	685b      	ldr	r3, [r3, #4]
 8006846:	025d      	lsls	r5, r3, #9
 8006848:	d40e      	bmi.n	8006868 <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800684a:	4a60      	ldr	r2, [pc, #384]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
 800684c:	6813      	ldr	r3, [r2, #0]
 800684e:	0799      	lsls	r1, r3, #30
 8006850:	d502      	bpl.n	8006858 <HAL_RCC_OscConfig+0xf4>
 8006852:	68e3      	ldr	r3, [r4, #12]
 8006854:	2b01      	cmp	r3, #1
 8006856:	d1b2      	bne.n	80067be <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006858:	6813      	ldr	r3, [r2, #0]
 800685a:	6921      	ldr	r1, [r4, #16]
 800685c:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8006860:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006864:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006866:	e787      	b.n	8006778 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8006868:	68e2      	ldr	r2, [r4, #12]
 800686a:	4b59      	ldr	r3, [pc, #356]	@ (80069d0 <HAL_RCC_OscConfig+0x26c>)
 800686c:	b1b2      	cbz	r2, 800689c <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 800686e:	2201      	movs	r2, #1
 8006870:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006872:	f7fd ffa5 	bl	80047c0 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006876:	4d55      	ldr	r5, [pc, #340]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8006878:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800687a:	682b      	ldr	r3, [r5, #0]
 800687c:	079b      	lsls	r3, r3, #30
 800687e:	d507      	bpl.n	8006890 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006880:	682b      	ldr	r3, [r5, #0]
 8006882:	6922      	ldr	r2, [r4, #16]
 8006884:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8006888:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800688c:	602b      	str	r3, [r5, #0]
 800688e:	e773      	b.n	8006778 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006890:	f7fd ff96 	bl	80047c0 <HAL_GetTick>
 8006894:	1b80      	subs	r0, r0, r6
 8006896:	2802      	cmp	r0, #2
 8006898:	d9ef      	bls.n	800687a <HAL_RCC_OscConfig+0x116>
 800689a:	e7a7      	b.n	80067ec <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 800689c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800689e:	f7fd ff8f 	bl	80047c0 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80068a2:	4e4a      	ldr	r6, [pc, #296]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80068a4:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80068a6:	6833      	ldr	r3, [r6, #0]
 80068a8:	079f      	lsls	r7, r3, #30
 80068aa:	f57f af65 	bpl.w	8006778 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80068ae:	f7fd ff87 	bl	80047c0 <HAL_GetTick>
 80068b2:	1b40      	subs	r0, r0, r5
 80068b4:	2802      	cmp	r0, #2
 80068b6:	d9f6      	bls.n	80068a6 <HAL_RCC_OscConfig+0x142>
 80068b8:	e798      	b.n	80067ec <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80068ba:	6962      	ldr	r2, [r4, #20]
 80068bc:	4b44      	ldr	r3, [pc, #272]	@ (80069d0 <HAL_RCC_OscConfig+0x26c>)
 80068be:	b182      	cbz	r2, 80068e2 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 80068c0:	2201      	movs	r2, #1
 80068c2:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 80068c6:	f7fd ff7b 	bl	80047c0 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80068ca:	4e40      	ldr	r6, [pc, #256]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80068cc:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80068ce:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80068d0:	079b      	lsls	r3, r3, #30
 80068d2:	f53f af55 	bmi.w	8006780 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80068d6:	f7fd ff73 	bl	80047c0 <HAL_GetTick>
 80068da:	1b40      	subs	r0, r0, r5
 80068dc:	2802      	cmp	r0, #2
 80068de:	d9f6      	bls.n	80068ce <HAL_RCC_OscConfig+0x16a>
 80068e0:	e784      	b.n	80067ec <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 80068e2:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 80068e6:	f7fd ff6b 	bl	80047c0 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80068ea:	4e38      	ldr	r6, [pc, #224]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80068ec:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80068ee:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80068f0:	079f      	lsls	r7, r3, #30
 80068f2:	f57f af45 	bpl.w	8006780 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80068f6:	f7fd ff63 	bl	80047c0 <HAL_GetTick>
 80068fa:	1b40      	subs	r0, r0, r5
 80068fc:	2802      	cmp	r0, #2
 80068fe:	d9f6      	bls.n	80068ee <HAL_RCC_OscConfig+0x18a>
 8006900:	e774      	b.n	80067ec <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006902:	4b32      	ldr	r3, [pc, #200]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
 8006904:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006906:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 800690a:	d128      	bne.n	800695e <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 800690c:	9201      	str	r2, [sp, #4]
 800690e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006910:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006914:	641a      	str	r2, [r3, #64]	@ 0x40
 8006916:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006918:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800691c:	9301      	str	r3, [sp, #4]
 800691e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8006920:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006922:	4d2c      	ldr	r5, [pc, #176]	@ (80069d4 <HAL_RCC_OscConfig+0x270>)
 8006924:	682b      	ldr	r3, [r5, #0]
 8006926:	05d8      	lsls	r0, r3, #23
 8006928:	d51b      	bpl.n	8006962 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800692a:	68a3      	ldr	r3, [r4, #8]
 800692c:	4d27      	ldr	r5, [pc, #156]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
 800692e:	2b01      	cmp	r3, #1
 8006930:	d127      	bne.n	8006982 <HAL_RCC_OscConfig+0x21e>
 8006932:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006934:	f043 0301 	orr.w	r3, r3, #1
 8006938:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 800693a:	f7fd ff41 	bl	80047c0 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800693e:	4e23      	ldr	r6, [pc, #140]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8006940:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006942:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006946:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 8006948:	079a      	lsls	r2, r3, #30
 800694a:	d539      	bpl.n	80069c0 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 800694c:	2f00      	cmp	r7, #0
 800694e:	f43f af1b 	beq.w	8006788 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006952:	4a1e      	ldr	r2, [pc, #120]	@ (80069cc <HAL_RCC_OscConfig+0x268>)
 8006954:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8006956:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800695a:	6413      	str	r3, [r2, #64]	@ 0x40
 800695c:	e714      	b.n	8006788 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800695e:	2700      	movs	r7, #0
 8006960:	e7df      	b.n	8006922 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006962:	682b      	ldr	r3, [r5, #0]
 8006964:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006968:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800696a:	f7fd ff29 	bl	80047c0 <HAL_GetTick>
 800696e:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006970:	682b      	ldr	r3, [r5, #0]
 8006972:	05d9      	lsls	r1, r3, #23
 8006974:	d4d9      	bmi.n	800692a <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006976:	f7fd ff23 	bl	80047c0 <HAL_GetTick>
 800697a:	1b80      	subs	r0, r0, r6
 800697c:	2802      	cmp	r0, #2
 800697e:	d9f7      	bls.n	8006970 <HAL_RCC_OscConfig+0x20c>
 8006980:	e734      	b.n	80067ec <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006982:	2b05      	cmp	r3, #5
 8006984:	d104      	bne.n	8006990 <HAL_RCC_OscConfig+0x22c>
 8006986:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006988:	f043 0304 	orr.w	r3, r3, #4
 800698c:	672b      	str	r3, [r5, #112]	@ 0x70
 800698e:	e7d0      	b.n	8006932 <HAL_RCC_OscConfig+0x1ce>
 8006990:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8006992:	f022 0201 	bic.w	r2, r2, #1
 8006996:	672a      	str	r2, [r5, #112]	@ 0x70
 8006998:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800699a:	f022 0204 	bic.w	r2, r2, #4
 800699e:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80069a0:	2b00      	cmp	r3, #0
 80069a2:	d1ca      	bne.n	800693a <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 80069a4:	f7fd ff0c 	bl	80047c0 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80069a8:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 80069ac:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80069ae:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80069b0:	079b      	lsls	r3, r3, #30
 80069b2:	d5cb      	bpl.n	800694c <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80069b4:	f7fd ff04 	bl	80047c0 <HAL_GetTick>
 80069b8:	1b80      	subs	r0, r0, r6
 80069ba:	4540      	cmp	r0, r8
 80069bc:	d9f7      	bls.n	80069ae <HAL_RCC_OscConfig+0x24a>
 80069be:	e715      	b.n	80067ec <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80069c0:	f7fd fefe 	bl	80047c0 <HAL_GetTick>
 80069c4:	1b40      	subs	r0, r0, r5
 80069c6:	4540      	cmp	r0, r8
 80069c8:	d9bd      	bls.n	8006946 <HAL_RCC_OscConfig+0x1e2>
 80069ca:	e70f      	b.n	80067ec <HAL_RCC_OscConfig+0x88>
 80069cc:	40023800 	.word	0x40023800
 80069d0:	42470000 	.word	0x42470000
 80069d4:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80069d8:	4d37      	ldr	r5, [pc, #220]	@ (8006ab8 <HAL_RCC_OscConfig+0x354>)
 80069da:	68aa      	ldr	r2, [r5, #8]
 80069dc:	f002 020c 	and.w	r2, r2, #12
 80069e0:	2a08      	cmp	r2, #8
 80069e2:	d03e      	beq.n	8006a62 <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80069e4:	2b02      	cmp	r3, #2
 80069e6:	4b35      	ldr	r3, [pc, #212]	@ (8006abc <HAL_RCC_OscConfig+0x358>)
 80069e8:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 80069ec:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80069ee:	d12b      	bne.n	8006a48 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 80069f0:	f7fd fee6 	bl	80047c0 <HAL_GetTick>
 80069f4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80069f6:	682b      	ldr	r3, [r5, #0]
 80069f8:	0199      	lsls	r1, r3, #6
 80069fa:	d41f      	bmi.n	8006a3c <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80069fc:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8006a00:	4313      	orrs	r3, r2
 8006a02:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8006a04:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006a08:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8006a0a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006a0e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8006a10:	0852      	lsrs	r2, r2, #1
 8006a12:	3a01      	subs	r2, #1
 8006a14:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006a18:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006a1a:	4b28      	ldr	r3, [pc, #160]	@ (8006abc <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006a1c:	4d26      	ldr	r5, [pc, #152]	@ (8006ab8 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 8006a1e:	2201      	movs	r2, #1
 8006a20:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 8006a22:	f7fd fecd 	bl	80047c0 <HAL_GetTick>
 8006a26:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006a28:	682b      	ldr	r3, [r5, #0]
 8006a2a:	019a      	lsls	r2, r3, #6
 8006a2c:	f53f aeb0 	bmi.w	8006790 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006a30:	f7fd fec6 	bl	80047c0 <HAL_GetTick>
 8006a34:	1b00      	subs	r0, r0, r4
 8006a36:	2802      	cmp	r0, #2
 8006a38:	d9f6      	bls.n	8006a28 <HAL_RCC_OscConfig+0x2c4>
 8006a3a:	e6d7      	b.n	80067ec <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006a3c:	f7fd fec0 	bl	80047c0 <HAL_GetTick>
 8006a40:	1b80      	subs	r0, r0, r6
 8006a42:	2802      	cmp	r0, #2
 8006a44:	d9d7      	bls.n	80069f6 <HAL_RCC_OscConfig+0x292>
 8006a46:	e6d1      	b.n	80067ec <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8006a48:	f7fd feba 	bl	80047c0 <HAL_GetTick>
 8006a4c:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006a4e:	682b      	ldr	r3, [r5, #0]
 8006a50:	019b      	lsls	r3, r3, #6
 8006a52:	f57f ae9d 	bpl.w	8006790 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006a56:	f7fd feb3 	bl	80047c0 <HAL_GetTick>
 8006a5a:	1b00      	subs	r0, r0, r4
 8006a5c:	2802      	cmp	r0, #2
 8006a5e:	d9f6      	bls.n	8006a4e <HAL_RCC_OscConfig+0x2ea>
 8006a60:	e6c4      	b.n	80067ec <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006a62:	2b01      	cmp	r3, #1
 8006a64:	f43f aeab 	beq.w	80067be <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8006a68:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006a6a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006a6c:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006a70:	4291      	cmp	r1, r2
 8006a72:	f47f aea4 	bne.w	80067be <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006a76:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006a78:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006a7c:	428a      	cmp	r2, r1
 8006a7e:	f47f ae9e 	bne.w	80067be <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006a82:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006a84:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 8006a88:	401a      	ands	r2, r3
 8006a8a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8006a8e:	f47f ae96 	bne.w	80067be <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006a92:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8006a94:	0852      	lsrs	r2, r2, #1
 8006a96:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 8006a9a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006a9c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8006aa0:	f47f ae8d 	bne.w	80067be <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8006aa4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8006aa6:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006aaa:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8006aae:	bf14      	ite	ne
 8006ab0:	2001      	movne	r0, #1
 8006ab2:	2000      	moveq	r0, #0
 8006ab4:	e69b      	b.n	80067ee <HAL_RCC_OscConfig+0x8a>
 8006ab6:	bf00      	nop
 8006ab8:	40023800 	.word	0x40023800
 8006abc:	42470000 	.word	0x42470000

08006ac0 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006ac0:	4913      	ldr	r1, [pc, #76]	@ (8006b10 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8006ac2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006ac4:	688b      	ldr	r3, [r1, #8]
 8006ac6:	f003 030c 	and.w	r3, r3, #12
 8006aca:	2b04      	cmp	r3, #4
 8006acc:	d01c      	beq.n	8006b08 <HAL_RCC_GetSysClockFreq+0x48>
 8006ace:	2b08      	cmp	r3, #8
 8006ad0:	d11c      	bne.n	8006b0c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006ad2:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006ad4:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006ad6:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006ad8:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006adc:	bf14      	ite	ne
 8006ade:	480d      	ldrne	r0, [pc, #52]	@ (8006b14 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006ae0:	480d      	ldreq	r0, [pc, #52]	@ (8006b18 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006ae2:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006ae6:	bf18      	it	ne
 8006ae8:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006aea:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006aee:	fba1 0100 	umull	r0, r1, r1, r0
 8006af2:	f7f9 fc25 	bl	8000340 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8006af6:	4b06      	ldr	r3, [pc, #24]	@ (8006b10 <HAL_RCC_GetSysClockFreq+0x50>)
 8006af8:	685b      	ldr	r3, [r3, #4]
 8006afa:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8006afe:	3301      	adds	r3, #1
 8006b00:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8006b02:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006b06:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006b08:	4802      	ldr	r0, [pc, #8]	@ (8006b14 <HAL_RCC_GetSysClockFreq+0x54>)
 8006b0a:	e7fc      	b.n	8006b06 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8006b0c:	4802      	ldr	r0, [pc, #8]	@ (8006b18 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8006b0e:	e7fa      	b.n	8006b06 <HAL_RCC_GetSysClockFreq+0x46>
 8006b10:	40023800 	.word	0x40023800
 8006b14:	007a1200 	.word	0x007a1200
 8006b18:	00f42400 	.word	0x00f42400

08006b1c <HAL_RCC_ClockConfig>:
{
 8006b1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006b20:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8006b22:	4604      	mov	r4, r0
 8006b24:	b910      	cbnz	r0, 8006b2c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006b26:	2001      	movs	r0, #1
}
 8006b28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8006b2c:	4b43      	ldr	r3, [pc, #268]	@ (8006c3c <HAL_RCC_ClockConfig+0x120>)
 8006b2e:	681a      	ldr	r2, [r3, #0]
 8006b30:	f002 020f 	and.w	r2, r2, #15
 8006b34:	428a      	cmp	r2, r1
 8006b36:	d328      	bcc.n	8006b8a <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006b38:	6821      	ldr	r1, [r4, #0]
 8006b3a:	078f      	lsls	r7, r1, #30
 8006b3c:	d42d      	bmi.n	8006b9a <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006b3e:	07c8      	lsls	r0, r1, #31
 8006b40:	d440      	bmi.n	8006bc4 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8006b42:	4b3e      	ldr	r3, [pc, #248]	@ (8006c3c <HAL_RCC_ClockConfig+0x120>)
 8006b44:	681a      	ldr	r2, [r3, #0]
 8006b46:	f002 020f 	and.w	r2, r2, #15
 8006b4a:	42aa      	cmp	r2, r5
 8006b4c:	d865      	bhi.n	8006c1a <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006b4e:	6822      	ldr	r2, [r4, #0]
 8006b50:	0751      	lsls	r1, r2, #29
 8006b52:	d46b      	bmi.n	8006c2c <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006b54:	0713      	lsls	r3, r2, #28
 8006b56:	d507      	bpl.n	8006b68 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006b58:	4a39      	ldr	r2, [pc, #228]	@ (8006c40 <HAL_RCC_ClockConfig+0x124>)
 8006b5a:	6921      	ldr	r1, [r4, #16]
 8006b5c:	6893      	ldr	r3, [r2, #8]
 8006b5e:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8006b62:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006b66:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8006b68:	f7ff ffaa 	bl	8006ac0 <HAL_RCC_GetSysClockFreq>
 8006b6c:	4b34      	ldr	r3, [pc, #208]	@ (8006c40 <HAL_RCC_ClockConfig+0x124>)
 8006b6e:	4a35      	ldr	r2, [pc, #212]	@ (8006c44 <HAL_RCC_ClockConfig+0x128>)
 8006b70:	689b      	ldr	r3, [r3, #8]
 8006b72:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8006b76:	5cd3      	ldrb	r3, [r2, r3]
 8006b78:	40d8      	lsrs	r0, r3
 8006b7a:	4b33      	ldr	r3, [pc, #204]	@ (8006c48 <HAL_RCC_ClockConfig+0x12c>)
 8006b7c:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8006b7e:	4b33      	ldr	r3, [pc, #204]	@ (8006c4c <HAL_RCC_ClockConfig+0x130>)
 8006b80:	6818      	ldr	r0, [r3, #0]
 8006b82:	f7fb fd8f 	bl	80026a4 <HAL_InitTick>
  return HAL_OK;
 8006b86:	2000      	movs	r0, #0
 8006b88:	e7ce      	b.n	8006b28 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006b8a:	b2ca      	uxtb	r2, r1
 8006b8c:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006b8e:	681b      	ldr	r3, [r3, #0]
 8006b90:	f003 030f 	and.w	r3, r3, #15
 8006b94:	428b      	cmp	r3, r1
 8006b96:	d1c6      	bne.n	8006b26 <HAL_RCC_ClockConfig+0xa>
 8006b98:	e7ce      	b.n	8006b38 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006b9a:	4b29      	ldr	r3, [pc, #164]	@ (8006c40 <HAL_RCC_ClockConfig+0x124>)
 8006b9c:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006ba0:	bf1e      	ittt	ne
 8006ba2:	689a      	ldrne	r2, [r3, #8]
 8006ba4:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 8006ba8:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006baa:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006bac:	bf42      	ittt	mi
 8006bae:	689a      	ldrmi	r2, [r3, #8]
 8006bb0:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 8006bb4:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006bb6:	689a      	ldr	r2, [r3, #8]
 8006bb8:	68a0      	ldr	r0, [r4, #8]
 8006bba:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8006bbe:	4302      	orrs	r2, r0
 8006bc0:	609a      	str	r2, [r3, #8]
 8006bc2:	e7bc      	b.n	8006b3e <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006bc4:	6862      	ldr	r2, [r4, #4]
 8006bc6:	4b1e      	ldr	r3, [pc, #120]	@ (8006c40 <HAL_RCC_ClockConfig+0x124>)
 8006bc8:	2a01      	cmp	r2, #1
 8006bca:	d11c      	bne.n	8006c06 <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006bcc:	681b      	ldr	r3, [r3, #0]
 8006bce:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006bd2:	d0a8      	beq.n	8006b26 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006bd4:	4e1a      	ldr	r6, [pc, #104]	@ (8006c40 <HAL_RCC_ClockConfig+0x124>)
 8006bd6:	68b3      	ldr	r3, [r6, #8]
 8006bd8:	f023 0303 	bic.w	r3, r3, #3
 8006bdc:	4313      	orrs	r3, r2
 8006bde:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8006be0:	f7fd fdee 	bl	80047c0 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006be4:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 8006be8:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006bea:	68b3      	ldr	r3, [r6, #8]
 8006bec:	6862      	ldr	r2, [r4, #4]
 8006bee:	f003 030c 	and.w	r3, r3, #12
 8006bf2:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006bf6:	d0a4      	beq.n	8006b42 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006bf8:	f7fd fde2 	bl	80047c0 <HAL_GetTick>
 8006bfc:	1bc0      	subs	r0, r0, r7
 8006bfe:	4540      	cmp	r0, r8
 8006c00:	d9f3      	bls.n	8006bea <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8006c02:	2003      	movs	r0, #3
 8006c04:	e790      	b.n	8006b28 <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006c06:	1e91      	subs	r1, r2, #2
 8006c08:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006c0a:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006c0c:	d802      	bhi.n	8006c14 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006c0e:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8006c12:	e7de      	b.n	8006bd2 <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006c14:	f013 0f02 	tst.w	r3, #2
 8006c18:	e7db      	b.n	8006bd2 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006c1a:	b2ea      	uxtb	r2, r5
 8006c1c:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8006c1e:	681b      	ldr	r3, [r3, #0]
 8006c20:	f003 030f 	and.w	r3, r3, #15
 8006c24:	42ab      	cmp	r3, r5
 8006c26:	f47f af7e 	bne.w	8006b26 <HAL_RCC_ClockConfig+0xa>
 8006c2a:	e790      	b.n	8006b4e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006c2c:	4904      	ldr	r1, [pc, #16]	@ (8006c40 <HAL_RCC_ClockConfig+0x124>)
 8006c2e:	68e0      	ldr	r0, [r4, #12]
 8006c30:	688b      	ldr	r3, [r1, #8]
 8006c32:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8006c36:	4303      	orrs	r3, r0
 8006c38:	608b      	str	r3, [r1, #8]
 8006c3a:	e78b      	b.n	8006b54 <HAL_RCC_ClockConfig+0x38>
 8006c3c:	40023c00 	.word	0x40023c00
 8006c40:	40023800 	.word	0x40023800
 8006c44:	08027208 	.word	0x08027208
 8006c48:	200000cc 	.word	0x200000cc
 8006c4c:	200000d4 	.word	0x200000d4

08006c50 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 8006c50:	4b01      	ldr	r3, [pc, #4]	@ (8006c58 <HAL_RCC_GetHCLKFreq+0x8>)
 8006c52:	6818      	ldr	r0, [r3, #0]
 8006c54:	4770      	bx	lr
 8006c56:	bf00      	nop
 8006c58:	200000cc 	.word	0x200000cc

08006c5c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8006c5c:	4b04      	ldr	r3, [pc, #16]	@ (8006c70 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006c5e:	4a05      	ldr	r2, [pc, #20]	@ (8006c74 <HAL_RCC_GetPCLK1Freq+0x18>)
 8006c60:	689b      	ldr	r3, [r3, #8]
 8006c62:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006c66:	5cd3      	ldrb	r3, [r2, r3]
 8006c68:	4a03      	ldr	r2, [pc, #12]	@ (8006c78 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006c6a:	6810      	ldr	r0, [r2, #0]
}
 8006c6c:	40d8      	lsrs	r0, r3
 8006c6e:	4770      	bx	lr
 8006c70:	40023800 	.word	0x40023800
 8006c74:	08027200 	.word	0x08027200
 8006c78:	200000cc 	.word	0x200000cc

08006c7c <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8006c7c:	4b04      	ldr	r3, [pc, #16]	@ (8006c90 <HAL_RCC_GetPCLK2Freq+0x14>)
 8006c7e:	4a05      	ldr	r2, [pc, #20]	@ (8006c94 <HAL_RCC_GetPCLK2Freq+0x18>)
 8006c80:	689b      	ldr	r3, [r3, #8]
 8006c82:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8006c86:	5cd3      	ldrb	r3, [r2, r3]
 8006c88:	4a03      	ldr	r2, [pc, #12]	@ (8006c98 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8006c8a:	6810      	ldr	r0, [r2, #0]
}
 8006c8c:	40d8      	lsrs	r0, r3
 8006c8e:	4770      	bx	lr
 8006c90:	40023800 	.word	0x40023800
 8006c94:	08027200 	.word	0x08027200
 8006c98:	200000cc 	.word	0x200000cc

08006c9c <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006c9c:	230f      	movs	r3, #15
 8006c9e:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006ca0:	4b0b      	ldr	r3, [pc, #44]	@ (8006cd0 <HAL_RCC_GetClockConfig+0x34>)
 8006ca2:	689a      	ldr	r2, [r3, #8]
 8006ca4:	f002 0203 	and.w	r2, r2, #3
 8006ca8:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006caa:	689a      	ldr	r2, [r3, #8]
 8006cac:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8006cb0:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8006cb2:	689a      	ldr	r2, [r3, #8]
 8006cb4:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8006cb8:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006cba:	689b      	ldr	r3, [r3, #8]
 8006cbc:	08db      	lsrs	r3, r3, #3
 8006cbe:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8006cc2:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006cc4:	4b03      	ldr	r3, [pc, #12]	@ (8006cd4 <HAL_RCC_GetClockConfig+0x38>)
 8006cc6:	681b      	ldr	r3, [r3, #0]
 8006cc8:	f003 030f 	and.w	r3, r3, #15
 8006ccc:	600b      	str	r3, [r1, #0]
}
 8006cce:	4770      	bx	lr
 8006cd0:	40023800 	.word	0x40023800
 8006cd4:	40023c00 	.word	0x40023c00

08006cd8 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8006cd8:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006cda:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 8006cde:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006ce0:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006ce2:	f040 8088 	bne.w	8006df6 <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006ce6:	6823      	ldr	r3, [r4, #0]
 8006ce8:	f013 0f0c 	tst.w	r3, #12
 8006cec:	d045      	beq.n	8006d7a <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006cee:	4b8c      	ldr	r3, [pc, #560]	@ (8006f20 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006cf0:	4d8c      	ldr	r5, [pc, #560]	@ (8006f24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 8006cf2:	2200      	movs	r2, #0
 8006cf4:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8006cf6:	f7fd fd63 	bl	80047c0 <HAL_GetTick>
 8006cfa:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006cfc:	682b      	ldr	r3, [r5, #0]
 8006cfe:	0099      	lsls	r1, r3, #2
 8006d00:	f100 80cb 	bmi.w	8006e9a <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006d04:	6821      	ldr	r1, [r4, #0]
 8006d06:	074a      	lsls	r2, r1, #29
 8006d08:	d515      	bpl.n	8006d36 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006d0a:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006d0e:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006d12:	061b      	lsls	r3, r3, #24
 8006d14:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8006d18:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006d1c:	4313      	orrs	r3, r2
 8006d1e:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006d22:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 8006d26:	6a22      	ldr	r2, [r4, #32]
 8006d28:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8006d2c:	3a01      	subs	r2, #1
 8006d2e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006d32:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006d36:	070b      	lsls	r3, r1, #28
 8006d38:	d514      	bpl.n	8006d64 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006d3a:	4a7a      	ldr	r2, [pc, #488]	@ (8006f24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006d3c:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006d3e:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006d42:	6920      	ldr	r0, [r4, #16]
 8006d44:	071b      	lsls	r3, r3, #28
 8006d46:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8006d4a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006d4e:	430b      	orrs	r3, r1
 8006d50:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006d54:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8006d58:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8006d5a:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8006d5e:	430b      	orrs	r3, r1
 8006d60:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006d64:	4b6e      	ldr	r3, [pc, #440]	@ (8006f20 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006d66:	4e6f      	ldr	r6, [pc, #444]	@ (8006f24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 8006d68:	2201      	movs	r2, #1
 8006d6a:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8006d6c:	f7fd fd28 	bl	80047c0 <HAL_GetTick>
 8006d70:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006d72:	6833      	ldr	r3, [r6, #0]
 8006d74:	009f      	lsls	r7, r3, #2
 8006d76:	f140 8097 	bpl.w	8006ea8 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006d7a:	6823      	ldr	r3, [r4, #0]
 8006d7c:	0698      	lsls	r0, r3, #26
 8006d7e:	d534      	bpl.n	8006dea <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006d80:	2300      	movs	r3, #0
 8006d82:	9301      	str	r3, [sp, #4]
 8006d84:	4b67      	ldr	r3, [pc, #412]	@ (8006f24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8006d86:	4d68      	ldr	r5, [pc, #416]	@ (8006f28 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006d88:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8006d8a:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8006d8e:	641a      	str	r2, [r3, #64]	@ 0x40
 8006d90:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006d92:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006d96:	9301      	str	r3, [sp, #4]
 8006d98:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8006d9a:	682b      	ldr	r3, [r5, #0]
 8006d9c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006da0:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8006da2:	f7fd fd0d 	bl	80047c0 <HAL_GetTick>
 8006da6:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 8006da8:	682b      	ldr	r3, [r5, #0]
 8006daa:	05d8      	lsls	r0, r3, #23
 8006dac:	f140 8083 	bpl.w	8006eb6 <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006db0:	4d5c      	ldr	r5, [pc, #368]	@ (8006f24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006db2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006db4:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006db6:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8006dba:	f040 8083 	bne.w	8006ec4 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006dbe:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8006dc0:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8006dc4:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8006dc8:	4a56      	ldr	r2, [pc, #344]	@ (8006f24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8006dca:	f040 809e 	bne.w	8006f0a <HAL_RCCEx_PeriphCLKConfig+0x232>
 8006dce:	6891      	ldr	r1, [r2, #8]
 8006dd0:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8006dd4:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8006dd8:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8006ddc:	4301      	orrs	r1, r0
 8006dde:	6091      	str	r1, [r2, #8]
 8006de0:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8006de2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006de6:	430b      	orrs	r3, r1
 8006de8:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006dea:	6823      	ldr	r3, [r4, #0]
 8006dec:	06db      	lsls	r3, r3, #27
 8006dee:	f100 8090 	bmi.w	8006f12 <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 8006df2:	2000      	movs	r0, #0
 8006df4:	e04f      	b.n	8006e96 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8006df6:	4b4a      	ldr	r3, [pc, #296]	@ (8006f20 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006df8:	4e4a      	ldr	r6, [pc, #296]	@ (8006f24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 8006dfa:	2200      	movs	r2, #0
 8006dfc:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8006dfe:	f7fd fcdf 	bl	80047c0 <HAL_GetTick>
 8006e02:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006e04:	6833      	ldr	r3, [r6, #0]
 8006e06:	011f      	lsls	r7, r3, #4
 8006e08:	d43f      	bmi.n	8006e8a <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006e0a:	6821      	ldr	r1, [r4, #0]
 8006e0c:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8006e0e:	bf41      	itttt	mi
 8006e10:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8006e14:	071b      	lslmi	r3, r3, #28
 8006e16:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8006e1a:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006e1e:	078a      	lsls	r2, r1, #30
 8006e20:	d515      	bpl.n	8006e4e <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006e22:	4a40      	ldr	r2, [pc, #256]	@ (8006f24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8006e24:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006e26:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8006e2a:	6865      	ldr	r5, [r4, #4]
 8006e2c:	061b      	lsls	r3, r3, #24
 8006e2e:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8006e32:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8006e36:	4303      	orrs	r3, r0
 8006e38:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006e3c:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8006e40:	69e3      	ldr	r3, [r4, #28]
 8006e42:	f020 001f 	bic.w	r0, r0, #31
 8006e46:	3b01      	subs	r3, #1
 8006e48:	4303      	orrs	r3, r0
 8006e4a:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006e4e:	064b      	lsls	r3, r1, #25
 8006e50:	d50a      	bpl.n	8006e68 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 8006e52:	68e3      	ldr	r3, [r4, #12]
 8006e54:	6862      	ldr	r2, [r4, #4]
 8006e56:	061b      	lsls	r3, r3, #24
 8006e58:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006e5c:	68a2      	ldr	r2, [r4, #8]
 8006e5e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006e62:	4a30      	ldr	r2, [pc, #192]	@ (8006f24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8006e64:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006e68:	4b2d      	ldr	r3, [pc, #180]	@ (8006f20 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006e6a:	4e2e      	ldr	r6, [pc, #184]	@ (8006f24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 8006e6c:	2201      	movs	r2, #1
 8006e6e:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8006e70:	f7fd fca6 	bl	80047c0 <HAL_GetTick>
 8006e74:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006e76:	6833      	ldr	r3, [r6, #0]
 8006e78:	011f      	lsls	r7, r3, #4
 8006e7a:	f53f af34 	bmi.w	8006ce6 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8006e7e:	f7fd fc9f 	bl	80047c0 <HAL_GetTick>
 8006e82:	1b40      	subs	r0, r0, r5
 8006e84:	2802      	cmp	r0, #2
 8006e86:	d9f6      	bls.n	8006e76 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8006e88:	e004      	b.n	8006e94 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8006e8a:	f7fd fc99 	bl	80047c0 <HAL_GetTick>
 8006e8e:	1b40      	subs	r0, r0, r5
 8006e90:	2802      	cmp	r0, #2
 8006e92:	d9b7      	bls.n	8006e04 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8006e94:	2003      	movs	r0, #3
}
 8006e96:	b003      	add	sp, #12
 8006e98:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8006e9a:	f7fd fc91 	bl	80047c0 <HAL_GetTick>
 8006e9e:	1b80      	subs	r0, r0, r6
 8006ea0:	2802      	cmp	r0, #2
 8006ea2:	f67f af2b 	bls.w	8006cfc <HAL_RCCEx_PeriphCLKConfig+0x24>
 8006ea6:	e7f5      	b.n	8006e94 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8006ea8:	f7fd fc8a 	bl	80047c0 <HAL_GetTick>
 8006eac:	1b40      	subs	r0, r0, r5
 8006eae:	2802      	cmp	r0, #2
 8006eb0:	f67f af5f 	bls.w	8006d72 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8006eb4:	e7ee      	b.n	8006e94 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006eb6:	f7fd fc83 	bl	80047c0 <HAL_GetTick>
 8006eba:	1b80      	subs	r0, r0, r6
 8006ebc:	2802      	cmp	r0, #2
 8006ebe:	f67f af73 	bls.w	8006da8 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8006ec2:	e7e7      	b.n	8006e94 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006ec4:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8006ec8:	4293      	cmp	r3, r2
 8006eca:	f43f af78 	beq.w	8006dbe <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006ece:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006ed0:	4a13      	ldr	r2, [pc, #76]	@ (8006f20 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8006ed2:	2101      	movs	r1, #1
 8006ed4:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006ed8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006edc:	2100      	movs	r1, #0
 8006ede:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 8006ee2:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006ee4:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006ee6:	07d9      	lsls	r1, r3, #31
 8006ee8:	f57f af69 	bpl.w	8006dbe <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8006eec:	f7fd fc68 	bl	80047c0 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006ef0:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8006ef4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006ef6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8006ef8:	079a      	lsls	r2, r3, #30
 8006efa:	f53f af60 	bmi.w	8006dbe <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006efe:	f7fd fc5f 	bl	80047c0 <HAL_GetTick>
 8006f02:	1b80      	subs	r0, r0, r6
 8006f04:	42b8      	cmp	r0, r7
 8006f06:	d9f6      	bls.n	8006ef6 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8006f08:	e7c4      	b.n	8006e94 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006f0a:	6891      	ldr	r1, [r2, #8]
 8006f0c:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8006f10:	e765      	b.n	8006dde <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006f12:	4b06      	ldr	r3, [pc, #24]	@ (8006f2c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8006f14:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8006f18:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8006f1c:	e769      	b.n	8006df2 <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8006f1e:	bf00      	nop
 8006f20:	42470000 	.word	0x42470000
 8006f24:	40023800 	.word	0x40023800
 8006f28:	40007000 	.word	0x40007000
 8006f2c:	42471000 	.word	0x42471000

08006f30 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8006f30:	b538      	push	{r3, r4, r5, lr}
 8006f32:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8006f34:	4604      	mov	r4, r0
 8006f36:	b1c8      	cbz	r0, 8006f6c <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006f38:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8006f3c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006f40:	b91b      	cbnz	r3, 8006f4a <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006f42:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006f46:	f7fb fb41 	bl	80025cc <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006f4a:	2302      	movs	r3, #2
 8006f4c:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006f50:	1d21      	adds	r1, r4, #4
 8006f52:	6820      	ldr	r0, [r4, #0]
 8006f54:	f000 fe49 	bl	8007bea <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006f58:	6862      	ldr	r2, [r4, #4]
 8006f5a:	6820      	ldr	r0, [r4, #0]
 8006f5c:	4629      	mov	r1, r5
 8006f5e:	f000 fe7a 	bl	8007c56 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006f62:	2301      	movs	r3, #1
 8006f64:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 8006f68:	2000      	movs	r0, #0
}
 8006f6a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006f6c:	2001      	movs	r0, #1
 8006f6e:	e7fc      	b.n	8006f6a <HAL_SDRAM_Init+0x3a>

08006f70 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8006f70:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006f72:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8006f76:	2b02      	cmp	r3, #2
{
 8006f78:	4605      	mov	r5, r0
 8006f7a:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006f7c:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8006f7e:	d012      	beq.n	8006fa6 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8006f80:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8006f84:	2c01      	cmp	r4, #1
 8006f86:	d10f      	bne.n	8006fa8 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006f88:	2302      	movs	r3, #2
 8006f8a:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006f8e:	6828      	ldr	r0, [r5, #0]
 8006f90:	f000 fe97 	bl	8007cc2 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006f94:	6833      	ldr	r3, [r6, #0]
 8006f96:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006f98:	bf06      	itte	eq
 8006f9a:	2305      	moveq	r3, #5
 8006f9c:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006fa0:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006fa4:	2000      	movs	r0, #0
}
 8006fa6:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8006fa8:	2001      	movs	r0, #1
 8006faa:	e7fc      	b.n	8006fa6 <HAL_SDRAM_SendCommand+0x36>

08006fac <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006fac:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006fae:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8006fb2:	2b02      	cmp	r3, #2
{
 8006fb4:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006fb6:	b2d8      	uxtb	r0, r3
 8006fb8:	d00d      	beq.n	8006fd6 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8006fba:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8006fbe:	2b01      	cmp	r3, #1
 8006fc0:	b2dd      	uxtb	r5, r3
 8006fc2:	d109      	bne.n	8006fd8 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006fc4:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006fc6:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006fc8:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006fcc:	f000 fe9d 	bl	8007d0a <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006fd0:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006fd4:	2000      	movs	r0, #0
}
 8006fd6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006fd8:	2001      	movs	r0, #1
 8006fda:	e7fc      	b.n	8006fd6 <HAL_SDRAM_ProgramRefreshRate+0x2a>

08006fdc <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006fdc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8006fe0:	461f      	mov	r7, r3
 8006fe2:	4689      	mov	r9, r1
 8006fe4:	4690      	mov	r8, r2
 8006fe6:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8006fe8:	f7fd fbea 	bl	80047c0 <HAL_GetTick>
 8006fec:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8006fee:	443d      	add	r5, r7
 8006ff0:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 8006ff2:	f7fd fbe5 	bl	80047c0 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006ff6:	4b26      	ldr	r3, [pc, #152]	@ (8007090 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 8006ff8:	681e      	ldr	r6, [r3, #0]
 8006ffa:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 8006ffe:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 8007000:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8007002:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007004:	6822      	ldr	r2, [r4, #0]
 8007006:	6893      	ldr	r3, [r2, #8]
 8007008:	ea39 0303 	bics.w	r3, r9, r3
 800700c:	bf0c      	ite	eq
 800700e:	2301      	moveq	r3, #1
 8007010:	2300      	movne	r3, #0
 8007012:	4543      	cmp	r3, r8
 8007014:	d101      	bne.n	800701a <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 8007016:	2000      	movs	r0, #0
 8007018:	e02e      	b.n	8007078 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 800701a:	1c7b      	adds	r3, r7, #1
 800701c:	d0f3      	beq.n	8007006 <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800701e:	f7fd fbcf 	bl	80047c0 <HAL_GetTick>
 8007022:	eba0 000a 	sub.w	r0, r0, sl
 8007026:	42a8      	cmp	r0, r5
 8007028:	d329      	bcc.n	800707e <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800702a:	6823      	ldr	r3, [r4, #0]
 800702c:	685a      	ldr	r2, [r3, #4]
 800702e:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8007032:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007034:	6862      	ldr	r2, [r4, #4]
 8007036:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800703a:	d10a      	bne.n	8007052 <SPI_WaitFlagStateUntilTimeout+0x76>
 800703c:	68a2      	ldr	r2, [r4, #8]
 800703e:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8007042:	d002      	beq.n	800704a <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007044:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8007048:	d103      	bne.n	8007052 <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 800704a:	681a      	ldr	r2, [r3, #0]
 800704c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007050:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007052:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8007054:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8007058:	d107      	bne.n	800706a <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 800705a:	681a      	ldr	r2, [r3, #0]
 800705c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8007060:	601a      	str	r2, [r3, #0]
 8007062:	681a      	ldr	r2, [r3, #0]
 8007064:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8007068:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800706a:	2301      	movs	r3, #1
 800706c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8007070:	2300      	movs	r3, #0
 8007072:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8007076:	2003      	movs	r0, #3
}
 8007078:	b002      	add	sp, #8
 800707a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 800707e:	9a01      	ldr	r2, [sp, #4]
      count--;
 8007080:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 8007082:	2a00      	cmp	r2, #0
      count--;
 8007084:	f103 33ff 	add.w	r3, r3, #4294967295
 8007088:	9301      	str	r3, [sp, #4]
 800708a:	bf08      	it	eq
 800708c:	4615      	moveq	r5, r2
 800708e:	e7b9      	b.n	8007004 <SPI_WaitFlagStateUntilTimeout+0x28>
 8007090:	200000cc 	.word	0x200000cc

08007094 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007094:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007096:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8007098:	460b      	mov	r3, r1
 800709a:	9200      	str	r2, [sp, #0]
{
 800709c:	460e      	mov	r6, r1
 800709e:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 80070a0:	2102      	movs	r1, #2
 80070a2:	2201      	movs	r2, #1
{
 80070a4:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 80070a6:	f7ff ff99 	bl	8006fdc <SPI_WaitFlagStateUntilTimeout>
 80070aa:	4605      	mov	r5, r0
 80070ac:	b128      	cbz	r0, 80070ba <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80070ae:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80070b0:	f043 0320 	orr.w	r3, r3, #32
 80070b4:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 80070b6:	2503      	movs	r5, #3
 80070b8:	e015      	b.n	80070e6 <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80070ba:	4b12      	ldr	r3, [pc, #72]	@ (8007104 <SPI_EndRxTxTransaction+0x70>)
 80070bc:	6818      	ldr	r0, [r3, #0]
 80070be:	4b12      	ldr	r3, [pc, #72]	@ (8007108 <SPI_EndRxTxTransaction+0x74>)
 80070c0:	fbb0 f0f3 	udiv	r0, r0, r3
 80070c4:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80070c8:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80070ca:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80070cc:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80070ce:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80070d2:	d10b      	bne.n	80070ec <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80070d4:	9700      	str	r7, [sp, #0]
 80070d6:	4633      	mov	r3, r6
 80070d8:	462a      	mov	r2, r5
 80070da:	2180      	movs	r1, #128	@ 0x80
 80070dc:	4620      	mov	r0, r4
 80070de:	f7ff ff7d 	bl	8006fdc <SPI_WaitFlagStateUntilTimeout>
 80070e2:	2800      	cmp	r0, #0
 80070e4:	d1e3      	bne.n	80070ae <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 80070e6:	4628      	mov	r0, r5
 80070e8:	b005      	add	sp, #20
 80070ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 80070ec:	9b03      	ldr	r3, [sp, #12]
 80070ee:	2b00      	cmp	r3, #0
 80070f0:	d0f9      	beq.n	80070e6 <SPI_EndRxTxTransaction+0x52>
      count--;
 80070f2:	9b03      	ldr	r3, [sp, #12]
 80070f4:	3b01      	subs	r3, #1
 80070f6:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 80070f8:	6823      	ldr	r3, [r4, #0]
 80070fa:	689b      	ldr	r3, [r3, #8]
 80070fc:	061b      	lsls	r3, r3, #24
 80070fe:	d4f5      	bmi.n	80070ec <SPI_EndRxTxTransaction+0x58>
 8007100:	e7f1      	b.n	80070e6 <SPI_EndRxTxTransaction+0x52>
 8007102:	bf00      	nop
 8007104:	200000cc 	.word	0x200000cc
 8007108:	016e3600 	.word	0x016e3600

0800710c <SPI_EndRxTransaction>:
{
 800710c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800710e:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007110:	6841      	ldr	r1, [r0, #4]
 8007112:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 8007116:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007118:	d008      	beq.n	800712c <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800711a:	9200      	str	r2, [sp, #0]
 800711c:	2101      	movs	r1, #1
 800711e:	2200      	movs	r2, #0
 8007120:	f7ff ff5c 	bl	8006fdc <SPI_WaitFlagStateUntilTimeout>
 8007124:	b9d0      	cbnz	r0, 800715c <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 8007126:	2000      	movs	r0, #0
}
 8007128:	b003      	add	sp, #12
 800712a:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800712c:	6881      	ldr	r1, [r0, #8]
 800712e:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 8007132:	d002      	beq.n	800713a <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007134:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8007138:	d107      	bne.n	800714a <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 800713a:	6825      	ldr	r5, [r4, #0]
 800713c:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800713e:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 8007142:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 8007146:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007148:	d004      	beq.n	8007154 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800714a:	9200      	str	r2, [sp, #0]
 800714c:	2180      	movs	r1, #128	@ 0x80
 800714e:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007150:	4620      	mov	r0, r4
 8007152:	e7e5      	b.n	8007120 <SPI_EndRxTransaction+0x14>
 8007154:	9200      	str	r2, [sp, #0]
 8007156:	2101      	movs	r1, #1
 8007158:	2200      	movs	r2, #0
 800715a:	e7f9      	b.n	8007150 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800715c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800715e:	f043 0320 	orr.w	r3, r3, #32
 8007162:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 8007164:	2003      	movs	r0, #3
 8007166:	e7df      	b.n	8007128 <SPI_EndRxTransaction+0x1c>

08007168 <HAL_SPI_Init>:
{
 8007168:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800716a:	4604      	mov	r4, r0
 800716c:	2800      	cmp	r0, #0
 800716e:	d055      	beq.n	800721c <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8007170:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8007172:	2b00      	cmp	r3, #0
 8007174:	d14e      	bne.n	8007214 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007176:	6842      	ldr	r2, [r0, #4]
 8007178:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800717c:	d000      	beq.n	8007180 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800717e:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007180:	2300      	movs	r3, #0
 8007182:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8007184:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8007188:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800718c:	b923      	cbnz	r3, 8007198 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 800718e:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 8007192:	4620      	mov	r0, r4
 8007194:	f7fb f9ae 	bl	80024f4 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8007198:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800719a:	68a0      	ldr	r0, [r4, #8]
 800719c:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800719e:	2302      	movs	r3, #2
 80071a0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 80071a4:	680b      	ldr	r3, [r1, #0]
 80071a6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80071aa:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80071ac:	6863      	ldr	r3, [r4, #4]
 80071ae:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 80071b2:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 80071b6:	4303      	orrs	r3, r0
 80071b8:	68e0      	ldr	r0, [r4, #12]
 80071ba:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 80071be:	4303      	orrs	r3, r0
 80071c0:	6920      	ldr	r0, [r4, #16]
 80071c2:	f000 0002 	and.w	r0, r0, #2
 80071c6:	4303      	orrs	r3, r0
 80071c8:	6960      	ldr	r0, [r4, #20]
 80071ca:	f000 0001 	and.w	r0, r0, #1
 80071ce:	4303      	orrs	r3, r0
 80071d0:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 80071d4:	4303      	orrs	r3, r0
 80071d6:	69e0      	ldr	r0, [r4, #28]
 80071d8:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 80071dc:	4303      	orrs	r3, r0
 80071de:	6a20      	ldr	r0, [r4, #32]
 80071e0:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 80071e4:	4303      	orrs	r3, r0
 80071e6:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80071e8:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 80071ec:	4303      	orrs	r3, r0
 80071ee:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 80071f0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80071f2:	0c12      	lsrs	r2, r2, #16
 80071f4:	f003 0310 	and.w	r3, r3, #16
 80071f8:	f002 0204 	and.w	r2, r2, #4
 80071fc:	431a      	orrs	r2, r3
 80071fe:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007200:	69cb      	ldr	r3, [r1, #28]
 8007202:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007206:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007208:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800720a:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800720c:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800720e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 8007212:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8007214:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8007216:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800721a:	e7b1      	b.n	8007180 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 800721c:	2001      	movs	r0, #1
 800721e:	e7f8      	b.n	8007212 <HAL_SPI_Init+0xaa>

08007220 <HAL_SPI_Transmit>:
{
 8007220:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007224:	4604      	mov	r4, r0
 8007226:	461f      	mov	r7, r3
 8007228:	460d      	mov	r5, r1
 800722a:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 800722c:	f7fd fac8 	bl	80047c0 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007230:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8007234:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007236:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007238:	b2d8      	uxtb	r0, r3
 800723a:	f040 809f 	bne.w	800737c <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 800723e:	2d00      	cmp	r5, #0
 8007240:	d074      	beq.n	800732c <HAL_SPI_Transmit+0x10c>
 8007242:	f1b8 0f00 	cmp.w	r8, #0
 8007246:	d071      	beq.n	800732c <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 8007248:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800724c:	2b01      	cmp	r3, #1
 800724e:	f000 8095 	beq.w	800737c <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007252:	2303      	movs	r3, #3
 8007254:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007258:	2300      	movs	r3, #0
 800725a:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 800725c:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 8007260:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007264:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 8007266:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8007268:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800726a:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800726c:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 800726e:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007272:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8007276:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8007278:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800727c:	d107      	bne.n	800728e <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 800727e:	6833      	ldr	r3, [r6, #0]
 8007280:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007284:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 8007286:	6833      	ldr	r3, [r6, #0]
 8007288:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800728c:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800728e:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007290:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007292:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8007294:	bf5e      	ittt	pl
 8007296:	6833      	ldrpl	r3, [r6, #0]
 8007298:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 800729c:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800729e:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80072a2:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80072a4:	d145      	bne.n	8007332 <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80072a6:	b113      	cbz	r3, 80072ae <HAL_SPI_Transmit+0x8e>
 80072a8:	f1b8 0f01 	cmp.w	r8, #1
 80072ac:	d107      	bne.n	80072be <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80072ae:	f835 3b02 	ldrh.w	r3, [r5], #2
 80072b2:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80072b4:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80072b6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80072b8:	3b01      	subs	r3, #1
 80072ba:	b29b      	uxth	r3, r3
 80072bc:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 80072be:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80072c0:	b29b      	uxth	r3, r3
 80072c2:	b9d3      	cbnz	r3, 80072fa <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80072c4:	464a      	mov	r2, r9
 80072c6:	4639      	mov	r1, r7
 80072c8:	4620      	mov	r0, r4
 80072ca:	f7ff fee3 	bl	8007094 <SPI_EndRxTxTransaction>
 80072ce:	2800      	cmp	r0, #0
 80072d0:	d151      	bne.n	8007376 <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80072d2:	68a3      	ldr	r3, [r4, #8]
 80072d4:	b933      	cbnz	r3, 80072e4 <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80072d6:	9301      	str	r3, [sp, #4]
 80072d8:	6823      	ldr	r3, [r4, #0]
 80072da:	68da      	ldr	r2, [r3, #12]
 80072dc:	9201      	str	r2, [sp, #4]
 80072de:	689b      	ldr	r3, [r3, #8]
 80072e0:	9301      	str	r3, [sp, #4]
 80072e2:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 80072e4:	2301      	movs	r3, #1
 80072e6:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80072ea:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 80072ec:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80072ee:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 80072f0:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80072f4:	bf18      	it	ne
 80072f6:	2001      	movne	r0, #1
 80072f8:	e018      	b.n	800732c <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80072fa:	6822      	ldr	r2, [r4, #0]
 80072fc:	6893      	ldr	r3, [r2, #8]
 80072fe:	0798      	lsls	r0, r3, #30
 8007300:	d505      	bpl.n	800730e <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8007302:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007304:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007308:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800730a:	6323      	str	r3, [r4, #48]	@ 0x30
 800730c:	e7d3      	b.n	80072b6 <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800730e:	f7fd fa57 	bl	80047c0 <HAL_GetTick>
 8007312:	eba0 0009 	sub.w	r0, r0, r9
 8007316:	42b8      	cmp	r0, r7
 8007318:	d3d1      	bcc.n	80072be <HAL_SPI_Transmit+0x9e>
 800731a:	1c79      	adds	r1, r7, #1
 800731c:	d0cf      	beq.n	80072be <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 800731e:	2301      	movs	r3, #1
 8007320:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8007324:	2300      	movs	r3, #0
 8007326:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800732a:	2003      	movs	r0, #3
}
 800732c:	b003      	add	sp, #12
 800732e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007332:	b113      	cbz	r3, 800733a <HAL_SPI_Transmit+0x11a>
 8007334:	f1b8 0f01 	cmp.w	r8, #1
 8007338:	d108      	bne.n	800734c <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800733a:	782b      	ldrb	r3, [r5, #0]
 800733c:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800733e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007340:	3301      	adds	r3, #1
 8007342:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8007344:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007346:	3b01      	subs	r3, #1
 8007348:	b29b      	uxth	r3, r3
 800734a:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800734c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800734e:	b29b      	uxth	r3, r3
 8007350:	2b00      	cmp	r3, #0
 8007352:	d0b7      	beq.n	80072c4 <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007354:	6823      	ldr	r3, [r4, #0]
 8007356:	689a      	ldr	r2, [r3, #8]
 8007358:	0792      	lsls	r2, r2, #30
 800735a:	d503      	bpl.n	8007364 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800735c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800735e:	7812      	ldrb	r2, [r2, #0]
 8007360:	731a      	strb	r2, [r3, #12]
 8007362:	e7ec      	b.n	800733e <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007364:	f7fd fa2c 	bl	80047c0 <HAL_GetTick>
 8007368:	eba0 0009 	sub.w	r0, r0, r9
 800736c:	42b8      	cmp	r0, r7
 800736e:	d3ed      	bcc.n	800734c <HAL_SPI_Transmit+0x12c>
 8007370:	1c7b      	adds	r3, r7, #1
 8007372:	d0eb      	beq.n	800734c <HAL_SPI_Transmit+0x12c>
 8007374:	e7d3      	b.n	800731e <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007376:	2320      	movs	r3, #32
 8007378:	6563      	str	r3, [r4, #84]	@ 0x54
 800737a:	e7aa      	b.n	80072d2 <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 800737c:	2002      	movs	r0, #2
 800737e:	e7d5      	b.n	800732c <HAL_SPI_Transmit+0x10c>

08007380 <HAL_SPI_TransmitReceive>:
{
 8007380:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007384:	4604      	mov	r4, r0
 8007386:	460d      	mov	r5, r1
 8007388:	4691      	mov	r9, r2
 800738a:	461e      	mov	r6, r3
 800738c:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 8007390:	f7fd fa16 	bl	80047c0 <HAL_GetTick>
  tmp_state           = hspi->State;
 8007394:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 8007398:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800739a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800739c:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 800739e:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80073a0:	d00a      	beq.n	80073b8 <HAL_SPI_TransmitReceive+0x38>
 80073a2:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80073a6:	f040 80e5 	bne.w	8007574 <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80073aa:	68a3      	ldr	r3, [r4, #8]
 80073ac:	2b00      	cmp	r3, #0
 80073ae:	f040 80e1 	bne.w	8007574 <HAL_SPI_TransmitReceive+0x1f4>
 80073b2:	2904      	cmp	r1, #4
 80073b4:	f040 80de 	bne.w	8007574 <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80073b8:	2d00      	cmp	r5, #0
 80073ba:	d04b      	beq.n	8007454 <HAL_SPI_TransmitReceive+0xd4>
 80073bc:	f1b9 0f00 	cmp.w	r9, #0
 80073c0:	d048      	beq.n	8007454 <HAL_SPI_TransmitReceive+0xd4>
 80073c2:	2e00      	cmp	r6, #0
 80073c4:	d046      	beq.n	8007454 <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 80073c6:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80073ca:	2b01      	cmp	r3, #1
 80073cc:	f000 80d2 	beq.w	8007574 <HAL_SPI_TransmitReceive+0x1f4>
 80073d0:	2301      	movs	r3, #1
 80073d2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80073d6:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80073da:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80073de:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 80073e0:	bf1c      	itt	ne
 80073e2:	2305      	movne	r3, #5
 80073e4:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80073e8:	2300      	movs	r3, #0
 80073ea:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 80073ec:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80073f0:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80073f2:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 80073f4:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80073f6:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 80073f8:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80073fa:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 80073fc:	bf58      	it	pl
 80073fe:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8007400:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 8007402:	bf58      	it	pl
 8007404:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8007408:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 800740a:	bf58      	it	pl
 800740c:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800740e:	68e1      	ldr	r1, [r4, #12]
 8007410:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 8007414:	d155      	bne.n	80074c2 <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007416:	b10a      	cbz	r2, 800741c <HAL_SPI_TransmitReceive+0x9c>
 8007418:	2e01      	cmp	r6, #1
 800741a:	d107      	bne.n	800742c <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800741c:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007420:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007422:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007424:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8007426:	3b01      	subs	r3, #1
 8007428:	b29b      	uxth	r3, r3
 800742a:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800742c:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800742e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007430:	b29b      	uxth	r3, r3
 8007432:	b98b      	cbnz	r3, 8007458 <HAL_SPI_TransmitReceive+0xd8>
 8007434:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007436:	b29b      	uxth	r3, r3
 8007438:	b973      	cbnz	r3, 8007458 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800743a:	463a      	mov	r2, r7
 800743c:	4641      	mov	r1, r8
 800743e:	4620      	mov	r0, r4
 8007440:	f7ff fe28 	bl	8007094 <SPI_EndRxTxTransaction>
 8007444:	2800      	cmp	r0, #0
 8007446:	f000 8081 	beq.w	800754c <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800744a:	2320      	movs	r3, #32
 800744c:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800744e:	2300      	movs	r3, #0
 8007450:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 8007454:	2001      	movs	r0, #1
 8007456:	e031      	b.n	80074bc <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007458:	6821      	ldr	r1, [r4, #0]
 800745a:	688b      	ldr	r3, [r1, #8]
 800745c:	079a      	lsls	r2, r3, #30
 800745e:	d50d      	bpl.n	800747c <HAL_SPI_TransmitReceive+0xfc>
 8007460:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007462:	b29b      	uxth	r3, r3
 8007464:	b153      	cbz	r3, 800747c <HAL_SPI_TransmitReceive+0xfc>
 8007466:	b145      	cbz	r5, 800747a <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8007468:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800746a:	f833 2b02 	ldrh.w	r2, [r3], #2
 800746e:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007470:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8007472:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8007474:	3b01      	subs	r3, #1
 8007476:	b29b      	uxth	r3, r3
 8007478:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 800747a:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800747c:	688a      	ldr	r2, [r1, #8]
 800747e:	f012 0201 	ands.w	r2, r2, #1
 8007482:	d00c      	beq.n	800749e <HAL_SPI_TransmitReceive+0x11e>
 8007484:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007486:	b29b      	uxth	r3, r3
 8007488:	b14b      	cbz	r3, 800749e <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800748a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800748c:	68c9      	ldr	r1, [r1, #12]
 800748e:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007492:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8007494:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007496:	3b01      	subs	r3, #1
 8007498:	b29b      	uxth	r3, r3
 800749a:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 800749c:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800749e:	f7fd f98f 	bl	80047c0 <HAL_GetTick>
 80074a2:	1bc0      	subs	r0, r0, r7
 80074a4:	4540      	cmp	r0, r8
 80074a6:	d3c2      	bcc.n	800742e <HAL_SPI_TransmitReceive+0xae>
 80074a8:	f1b8 3fff 	cmp.w	r8, #4294967295
 80074ac:	d0bf      	beq.n	800742e <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 80074ae:	2301      	movs	r3, #1
 80074b0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80074b4:	2300      	movs	r3, #0
 80074b6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 80074ba:	2003      	movs	r0, #3
}
 80074bc:	b003      	add	sp, #12
 80074be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80074c2:	b10a      	cbz	r2, 80074c8 <HAL_SPI_TransmitReceive+0x148>
 80074c4:	2e01      	cmp	r6, #1
 80074c6:	d108      	bne.n	80074da <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80074c8:	782a      	ldrb	r2, [r5, #0]
 80074ca:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80074cc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80074ce:	3301      	adds	r3, #1
 80074d0:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 80074d2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80074d4:	3b01      	subs	r3, #1
 80074d6:	b29b      	uxth	r3, r3
 80074d8:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 80074da:	2501      	movs	r5, #1
 80074dc:	e02d      	b.n	800753a <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80074de:	6822      	ldr	r2, [r4, #0]
 80074e0:	6893      	ldr	r3, [r2, #8]
 80074e2:	079b      	lsls	r3, r3, #30
 80074e4:	d50e      	bpl.n	8007504 <HAL_SPI_TransmitReceive+0x184>
 80074e6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80074e8:	b29b      	uxth	r3, r3
 80074ea:	b15b      	cbz	r3, 8007504 <HAL_SPI_TransmitReceive+0x184>
 80074ec:	b14d      	cbz	r5, 8007502 <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 80074ee:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80074f0:	781b      	ldrb	r3, [r3, #0]
 80074f2:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 80074f4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80074f6:	3301      	adds	r3, #1
 80074f8:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80074fa:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80074fc:	3b01      	subs	r3, #1
 80074fe:	b29b      	uxth	r3, r3
 8007500:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8007502:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007504:	6822      	ldr	r2, [r4, #0]
 8007506:	6891      	ldr	r1, [r2, #8]
 8007508:	f011 0101 	ands.w	r1, r1, #1
 800750c:	d00d      	beq.n	800752a <HAL_SPI_TransmitReceive+0x1aa>
 800750e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007510:	b29b      	uxth	r3, r3
 8007512:	b153      	cbz	r3, 800752a <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8007514:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007516:	68d2      	ldr	r2, [r2, #12]
 8007518:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800751a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800751c:	3301      	adds	r3, #1
 800751e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8007520:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007522:	3b01      	subs	r3, #1
 8007524:	b29b      	uxth	r3, r3
 8007526:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8007528:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800752a:	f7fd f949 	bl	80047c0 <HAL_GetTick>
 800752e:	1bc0      	subs	r0, r0, r7
 8007530:	4540      	cmp	r0, r8
 8007532:	d302      	bcc.n	800753a <HAL_SPI_TransmitReceive+0x1ba>
 8007534:	f1b8 3fff 	cmp.w	r8, #4294967295
 8007538:	d1b9      	bne.n	80074ae <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800753a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800753c:	b29b      	uxth	r3, r3
 800753e:	2b00      	cmp	r3, #0
 8007540:	d1cd      	bne.n	80074de <HAL_SPI_TransmitReceive+0x15e>
 8007542:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007544:	b29b      	uxth	r3, r3
 8007546:	2b00      	cmp	r3, #0
 8007548:	d1c9      	bne.n	80074de <HAL_SPI_TransmitReceive+0x15e>
 800754a:	e776      	b.n	800743a <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800754c:	68a3      	ldr	r3, [r4, #8]
 800754e:	b933      	cbnz	r3, 800755e <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007550:	9301      	str	r3, [sp, #4]
 8007552:	6823      	ldr	r3, [r4, #0]
 8007554:	68da      	ldr	r2, [r3, #12]
 8007556:	9201      	str	r2, [sp, #4]
 8007558:	689b      	ldr	r3, [r3, #8]
 800755a:	9301      	str	r3, [sp, #4]
 800755c:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800755e:	2301      	movs	r3, #1
 8007560:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007564:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8007566:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007568:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 800756a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800756e:	bf18      	it	ne
 8007570:	2001      	movne	r0, #1
 8007572:	e7a3      	b.n	80074bc <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 8007574:	2002      	movs	r0, #2
 8007576:	e7a1      	b.n	80074bc <HAL_SPI_TransmitReceive+0x13c>

08007578 <HAL_SPI_Receive>:
{
 8007578:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800757c:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 800757e:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 8007582:	2b01      	cmp	r3, #1
{
 8007584:	4604      	mov	r4, r0
 8007586:	4689      	mov	r9, r1
 8007588:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 800758a:	b2dd      	uxtb	r5, r3
 800758c:	d004      	beq.n	8007598 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 800758e:	2502      	movs	r5, #2
}
 8007590:	4628      	mov	r0, r5
 8007592:	b003      	add	sp, #12
 8007594:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007598:	6843      	ldr	r3, [r0, #4]
 800759a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800759e:	d10b      	bne.n	80075b8 <HAL_SPI_Receive+0x40>
 80075a0:	6883      	ldr	r3, [r0, #8]
 80075a2:	b94b      	cbnz	r3, 80075b8 <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80075a4:	2304      	movs	r3, #4
 80075a6:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80075aa:	4613      	mov	r3, r2
 80075ac:	9600      	str	r6, [sp, #0]
 80075ae:	460a      	mov	r2, r1
 80075b0:	f7ff fee6 	bl	8007380 <HAL_SPI_TransmitReceive>
 80075b4:	4605      	mov	r5, r0
 80075b6:	e7eb      	b.n	8007590 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 80075b8:	f7fd f902 	bl	80047c0 <HAL_GetTick>
 80075bc:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 80075be:	f1b9 0f00 	cmp.w	r9, #0
 80075c2:	d0e5      	beq.n	8007590 <HAL_SPI_Receive+0x18>
 80075c4:	2f00      	cmp	r7, #0
 80075c6:	d0e3      	beq.n	8007590 <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 80075c8:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80075cc:	2b01      	cmp	r3, #1
 80075ce:	d0de      	beq.n	800758e <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80075d0:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80075d2:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 80075d6:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80075d8:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 80075da:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80075de:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80075e2:	f04f 0304 	mov.w	r3, #4
 80075e6:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 80075ea:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80075ee:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 80075f0:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80075f2:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 80075f4:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80075f6:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 80075f8:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 80075fa:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80075fc:	d107      	bne.n	800760e <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 80075fe:	681a      	ldr	r2, [r3, #0]
 8007600:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007604:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8007606:	681a      	ldr	r2, [r3, #0]
 8007608:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800760c:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800760e:	681a      	ldr	r2, [r3, #0]
 8007610:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007612:	bf5e      	ittt	pl
 8007614:	681a      	ldrpl	r2, [r3, #0]
 8007616:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 800761a:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800761c:	68e3      	ldr	r3, [r4, #12]
 800761e:	b1f3      	cbz	r3, 800765e <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 8007620:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007622:	b29b      	uxth	r3, r3
 8007624:	b1fb      	cbz	r3, 8007666 <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007626:	6823      	ldr	r3, [r4, #0]
 8007628:	689a      	ldr	r2, [r3, #8]
 800762a:	07d2      	lsls	r2, r2, #31
 800762c:	d53c      	bpl.n	80076a8 <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800762e:	68da      	ldr	r2, [r3, #12]
 8007630:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007632:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007636:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8007638:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800763a:	3b01      	subs	r3, #1
 800763c:	b29b      	uxth	r3, r3
 800763e:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8007640:	e7ee      	b.n	8007620 <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007642:	6823      	ldr	r3, [r4, #0]
 8007644:	689a      	ldr	r2, [r3, #8]
 8007646:	07d0      	lsls	r0, r2, #31
 8007648:	d51e      	bpl.n	8007688 <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800764a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800764c:	7b1b      	ldrb	r3, [r3, #12]
 800764e:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8007650:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007652:	3301      	adds	r3, #1
 8007654:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8007656:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007658:	3b01      	subs	r3, #1
 800765a:	b29b      	uxth	r3, r3
 800765c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 800765e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8007660:	b29b      	uxth	r3, r3
 8007662:	2b00      	cmp	r3, #0
 8007664:	d1ed      	bne.n	8007642 <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007666:	4642      	mov	r2, r8
 8007668:	4631      	mov	r1, r6
 800766a:	4620      	mov	r0, r4
 800766c:	f7ff fd4e 	bl	800710c <SPI_EndRxTransaction>
 8007670:	bb18      	cbnz	r0, 80076ba <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 8007672:	2301      	movs	r3, #1
 8007674:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007678:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800767a:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800767c:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 800767e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007682:	bf18      	it	ne
 8007684:	2501      	movne	r5, #1
 8007686:	e783      	b.n	8007590 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007688:	f7fd f89a 	bl	80047c0 <HAL_GetTick>
 800768c:	eba0 0008 	sub.w	r0, r0, r8
 8007690:	42b0      	cmp	r0, r6
 8007692:	d3e4      	bcc.n	800765e <HAL_SPI_Receive+0xe6>
 8007694:	1c71      	adds	r1, r6, #1
 8007696:	d0e2      	beq.n	800765e <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 8007698:	2301      	movs	r3, #1
 800769a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800769e:	2300      	movs	r3, #0
 80076a0:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 80076a4:	2503      	movs	r5, #3
 80076a6:	e773      	b.n	8007590 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80076a8:	f7fd f88a 	bl	80047c0 <HAL_GetTick>
 80076ac:	eba0 0008 	sub.w	r0, r0, r8
 80076b0:	42b0      	cmp	r0, r6
 80076b2:	d3b5      	bcc.n	8007620 <HAL_SPI_Receive+0xa8>
 80076b4:	1c73      	adds	r3, r6, #1
 80076b6:	d0b3      	beq.n	8007620 <HAL_SPI_Receive+0xa8>
 80076b8:	e7ee      	b.n	8007698 <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80076ba:	2320      	movs	r3, #32
 80076bc:	6563      	str	r3, [r4, #84]	@ 0x54
 80076be:	e7d8      	b.n	8007672 <HAL_SPI_Receive+0xfa>

080076c0 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80076c0:	4770      	bx	lr
	...

080076c4 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80076c4:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80076c8:	2b01      	cmp	r3, #1
 80076ca:	d130      	bne.n	800772e <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80076cc:	2302      	movs	r3, #2
 80076ce:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80076d2:	6803      	ldr	r3, [r0, #0]
 80076d4:	68da      	ldr	r2, [r3, #12]
 80076d6:	f042 0201 	orr.w	r2, r2, #1
 80076da:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80076dc:	4a15      	ldr	r2, [pc, #84]	@ (8007734 <HAL_TIM_Base_Start_IT+0x70>)
 80076de:	4293      	cmp	r3, r2
 80076e0:	d01a      	beq.n	8007718 <HAL_TIM_Base_Start_IT+0x54>
 80076e2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80076e6:	d017      	beq.n	8007718 <HAL_TIM_Base_Start_IT+0x54>
 80076e8:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80076ec:	4293      	cmp	r3, r2
 80076ee:	d013      	beq.n	8007718 <HAL_TIM_Base_Start_IT+0x54>
 80076f0:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80076f4:	4293      	cmp	r3, r2
 80076f6:	d00f      	beq.n	8007718 <HAL_TIM_Base_Start_IT+0x54>
 80076f8:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80076fc:	4293      	cmp	r3, r2
 80076fe:	d00b      	beq.n	8007718 <HAL_TIM_Base_Start_IT+0x54>
 8007700:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8007704:	4293      	cmp	r3, r2
 8007706:	d007      	beq.n	8007718 <HAL_TIM_Base_Start_IT+0x54>
 8007708:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 800770c:	4293      	cmp	r3, r2
 800770e:	d003      	beq.n	8007718 <HAL_TIM_Base_Start_IT+0x54>
 8007710:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8007714:	4293      	cmp	r3, r2
 8007716:	d104      	bne.n	8007722 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007718:	689a      	ldr	r2, [r3, #8]
 800771a:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800771e:	2a06      	cmp	r2, #6
 8007720:	d003      	beq.n	800772a <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 8007722:	681a      	ldr	r2, [r3, #0]
 8007724:	f042 0201 	orr.w	r2, r2, #1
 8007728:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 800772a:	2000      	movs	r0, #0
 800772c:	4770      	bx	lr
    return HAL_ERROR;
 800772e:	2001      	movs	r0, #1
}
 8007730:	4770      	bx	lr
 8007732:	bf00      	nop
 8007734:	40010000 	.word	0x40010000

08007738 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8007738:	4770      	bx	lr

0800773a <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 800773a:	4770      	bx	lr

0800773c <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 800773c:	4770      	bx	lr

0800773e <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 800773e:	4770      	bx	lr

08007740 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8007740:	6803      	ldr	r3, [r0, #0]
{
 8007742:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8007744:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8007746:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007748:	07b1      	lsls	r1, r6, #30
{
 800774a:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800774c:	d50d      	bpl.n	800776a <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800774e:	07aa      	lsls	r2, r5, #30
 8007750:	d50b      	bpl.n	800776a <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8007752:	f06f 0202 	mvn.w	r2, #2
 8007756:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007758:	2201      	movs	r2, #1
 800775a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800775c:	699b      	ldr	r3, [r3, #24]
 800775e:	079b      	lsls	r3, r3, #30
 8007760:	d069      	beq.n	8007836 <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 8007762:	f7ff ffea 	bl	800773a <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007766:	2300      	movs	r3, #0
 8007768:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 800776a:	0771      	lsls	r1, r6, #29
 800776c:	d510      	bpl.n	8007790 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 800776e:	076a      	lsls	r2, r5, #29
 8007770:	d50e      	bpl.n	8007790 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007772:	6823      	ldr	r3, [r4, #0]
 8007774:	f06f 0204 	mvn.w	r2, #4
 8007778:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800777a:	2202      	movs	r2, #2
 800777c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800777e:	699b      	ldr	r3, [r3, #24]
 8007780:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8007784:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007786:	d05c      	beq.n	8007842 <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 8007788:	f7ff ffd7 	bl	800773a <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800778c:	2300      	movs	r3, #0
 800778e:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8007790:	0733      	lsls	r3, r6, #28
 8007792:	d50f      	bpl.n	80077b4 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8007794:	0728      	lsls	r0, r5, #28
 8007796:	d50d      	bpl.n	80077b4 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007798:	6823      	ldr	r3, [r4, #0]
 800779a:	f06f 0208 	mvn.w	r2, #8
 800779e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80077a0:	2204      	movs	r2, #4
 80077a2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80077a4:	69db      	ldr	r3, [r3, #28]
 80077a6:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 80077a8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80077aa:	d050      	beq.n	800784e <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 80077ac:	f7ff ffc5 	bl	800773a <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80077b0:	2300      	movs	r3, #0
 80077b2:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 80077b4:	06f2      	lsls	r2, r6, #27
 80077b6:	d510      	bpl.n	80077da <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 80077b8:	06eb      	lsls	r3, r5, #27
 80077ba:	d50e      	bpl.n	80077da <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80077bc:	6823      	ldr	r3, [r4, #0]
 80077be:	f06f 0210 	mvn.w	r2, #16
 80077c2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80077c4:	2208      	movs	r2, #8
 80077c6:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80077c8:	69db      	ldr	r3, [r3, #28]
 80077ca:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80077ce:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80077d0:	d043      	beq.n	800785a <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 80077d2:	f7ff ffb2 	bl	800773a <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80077d6:	2300      	movs	r3, #0
 80077d8:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80077da:	07f0      	lsls	r0, r6, #31
 80077dc:	d508      	bpl.n	80077f0 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 80077de:	07e9      	lsls	r1, r5, #31
 80077e0:	d506      	bpl.n	80077f0 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 80077e2:	6823      	ldr	r3, [r4, #0]
 80077e4:	f06f 0201 	mvn.w	r2, #1
 80077e8:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 80077ea:	4620      	mov	r0, r4
 80077ec:	f7fa fcb2 	bl	8002154 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 80077f0:	0632      	lsls	r2, r6, #24
 80077f2:	d508      	bpl.n	8007806 <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 80077f4:	062b      	lsls	r3, r5, #24
 80077f6:	d506      	bpl.n	8007806 <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 80077f8:	6823      	ldr	r3, [r4, #0]
 80077fa:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80077fe:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8007800:	4620      	mov	r0, r4
 8007802:	f000 f8b6 	bl	8007972 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8007806:	0670      	lsls	r0, r6, #25
 8007808:	d508      	bpl.n	800781c <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800780a:	0669      	lsls	r1, r5, #25
 800780c:	d506      	bpl.n	800781c <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800780e:	6823      	ldr	r3, [r4, #0]
 8007810:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8007814:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8007816:	4620      	mov	r0, r4
 8007818:	f7ff ff91 	bl	800773e <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 800781c:	06b2      	lsls	r2, r6, #26
 800781e:	d522      	bpl.n	8007866 <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8007820:	06ab      	lsls	r3, r5, #26
 8007822:	d520      	bpl.n	8007866 <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007824:	6823      	ldr	r3, [r4, #0]
 8007826:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800782a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800782c:	611a      	str	r2, [r3, #16]
}
 800782e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 8007832:	f000 b89d 	b.w	8007970 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007836:	f7ff ff7f 	bl	8007738 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800783a:	4620      	mov	r0, r4
 800783c:	f7ff ff7e 	bl	800773c <HAL_TIM_PWM_PulseFinishedCallback>
 8007840:	e791      	b.n	8007766 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007842:	f7ff ff79 	bl	8007738 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007846:	4620      	mov	r0, r4
 8007848:	f7ff ff78 	bl	800773c <HAL_TIM_PWM_PulseFinishedCallback>
 800784c:	e79e      	b.n	800778c <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800784e:	f7ff ff73 	bl	8007738 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007852:	4620      	mov	r0, r4
 8007854:	f7ff ff72 	bl	800773c <HAL_TIM_PWM_PulseFinishedCallback>
 8007858:	e7aa      	b.n	80077b0 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800785a:	f7ff ff6d 	bl	8007738 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800785e:	4620      	mov	r0, r4
 8007860:	f7ff ff6c 	bl	800773c <HAL_TIM_PWM_PulseFinishedCallback>
 8007864:	e7b7      	b.n	80077d6 <HAL_TIM_IRQHandler+0x96>
}
 8007866:	bd70      	pop	{r4, r5, r6, pc}

08007868 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007868:	4a29      	ldr	r2, [pc, #164]	@ (8007910 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 800786a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800786c:	4290      	cmp	r0, r2
 800786e:	d012      	beq.n	8007896 <TIM_Base_SetConfig+0x2e>
 8007870:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8007874:	d00f      	beq.n	8007896 <TIM_Base_SetConfig+0x2e>
 8007876:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800787a:	4290      	cmp	r0, r2
 800787c:	d00b      	beq.n	8007896 <TIM_Base_SetConfig+0x2e>
 800787e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8007882:	4290      	cmp	r0, r2
 8007884:	d007      	beq.n	8007896 <TIM_Base_SetConfig+0x2e>
 8007886:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800788a:	4290      	cmp	r0, r2
 800788c:	d003      	beq.n	8007896 <TIM_Base_SetConfig+0x2e>
 800788e:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8007892:	4290      	cmp	r0, r2
 8007894:	d108      	bne.n	80078a8 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007896:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007898:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 800789c:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800789e:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80078a0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80078a4:	4313      	orrs	r3, r2
 80078a6:	e016      	b.n	80078d6 <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80078a8:	4a1a      	ldr	r2, [pc, #104]	@ (8007914 <TIM_Base_SetConfig+0xac>)
 80078aa:	4290      	cmp	r0, r2
 80078ac:	d0f7      	beq.n	800789e <TIM_Base_SetConfig+0x36>
 80078ae:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80078b2:	4290      	cmp	r0, r2
 80078b4:	d0f3      	beq.n	800789e <TIM_Base_SetConfig+0x36>
 80078b6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80078ba:	4290      	cmp	r0, r2
 80078bc:	d0ef      	beq.n	800789e <TIM_Base_SetConfig+0x36>
 80078be:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 80078c2:	4290      	cmp	r0, r2
 80078c4:	d0eb      	beq.n	800789e <TIM_Base_SetConfig+0x36>
 80078c6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80078ca:	4290      	cmp	r0, r2
 80078cc:	d0e7      	beq.n	800789e <TIM_Base_SetConfig+0x36>
 80078ce:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80078d2:	4290      	cmp	r0, r2
 80078d4:	d0e3      	beq.n	800789e <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80078d6:	694a      	ldr	r2, [r1, #20]
 80078d8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80078dc:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80078de:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80078e0:	688b      	ldr	r3, [r1, #8]
 80078e2:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80078e4:	680b      	ldr	r3, [r1, #0]
 80078e6:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80078e8:	4b09      	ldr	r3, [pc, #36]	@ (8007910 <TIM_Base_SetConfig+0xa8>)
 80078ea:	4298      	cmp	r0, r3
 80078ec:	d003      	beq.n	80078f6 <TIM_Base_SetConfig+0x8e>
 80078ee:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80078f2:	4298      	cmp	r0, r3
 80078f4:	d101      	bne.n	80078fa <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80078f6:	690b      	ldr	r3, [r1, #16]
 80078f8:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80078fa:	2301      	movs	r3, #1
 80078fc:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 80078fe:	6903      	ldr	r3, [r0, #16]
 8007900:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8007902:	bf42      	ittt	mi
 8007904:	6903      	ldrmi	r3, [r0, #16]
 8007906:	f023 0301 	bicmi.w	r3, r3, #1
 800790a:	6103      	strmi	r3, [r0, #16]
  }
}
 800790c:	4770      	bx	lr
 800790e:	bf00      	nop
 8007910:	40010000 	.word	0x40010000
 8007914:	40014000 	.word	0x40014000

08007918 <HAL_TIM_Base_Init>:
{
 8007918:	b510      	push	{r4, lr}
  if (htim == NULL)
 800791a:	4604      	mov	r4, r0
 800791c:	b330      	cbz	r0, 800796c <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800791e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8007922:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8007926:	b91b      	cbnz	r3, 8007930 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007928:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 800792c:	f7ff fec8 	bl	80076c0 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007930:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007932:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8007934:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007938:	1d21      	adds	r1, r4, #4
 800793a:	f7ff ff95 	bl	8007868 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800793e:	2301      	movs	r3, #1
 8007940:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8007944:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007946:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800794a:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800794e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8007952:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007956:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800795a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800795e:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 8007962:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 8007966:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800796a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800796c:	2001      	movs	r0, #1
 800796e:	e7fc      	b.n	800796a <HAL_TIM_Base_Init+0x52>

08007970 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8007970:	4770      	bx	lr

08007972 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8007972:	4770      	bx	lr

08007974 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8007974:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007976:	f102 030c 	add.w	r3, r2, #12
 800797a:	e853 3f00 	ldrex	r3, [r3]
 800797e:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007982:	320c      	adds	r2, #12
 8007984:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8007988:	6802      	ldr	r2, [r0, #0]
 800798a:	2900      	cmp	r1, #0
 800798c:	d1f2      	bne.n	8007974 <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800798e:	f102 0314 	add.w	r3, r2, #20
 8007992:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007996:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800799a:	f102 0c14 	add.w	ip, r2, #20
 800799e:	e84c 3100 	strex	r1, r3, [ip]
 80079a2:	2900      	cmp	r1, #0
 80079a4:	d1f3      	bne.n	800798e <UART_EndRxTransfer+0x1a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80079a6:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80079a8:	2b01      	cmp	r3, #1
 80079aa:	d10b      	bne.n	80079c4 <UART_EndRxTransfer+0x50>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80079ac:	f102 030c 	add.w	r3, r2, #12
 80079b0:	e853 3f00 	ldrex	r3, [r3]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80079b4:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80079b8:	f102 0c0c 	add.w	ip, r2, #12
 80079bc:	e84c 3100 	strex	r1, r3, [ip]
 80079c0:	2900      	cmp	r1, #0
 80079c2:	d1f3      	bne.n	80079ac <UART_EndRxTransfer+0x38>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80079c4:	2320      	movs	r3, #32
 80079c6:	f880 3042 	strb.w	r3, [r0, #66]	@ 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80079ca:	2300      	movs	r3, #0
 80079cc:	6303      	str	r3, [r0, #48]	@ 0x30
}
 80079ce:	4770      	bx	lr

080079d0 <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80079d0:	6802      	ldr	r2, [r0, #0]
 80079d2:	68c1      	ldr	r1, [r0, #12]
{
 80079d4:	b538      	push	{r3, r4, r5, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80079d6:	6913      	ldr	r3, [r2, #16]
 80079d8:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80079dc:	430b      	orrs	r3, r1
 80079de:	6113      	str	r3, [r2, #16]
{
 80079e0:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80079e2:	6883      	ldr	r3, [r0, #8]
 80079e4:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 80079e6:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80079e8:	4303      	orrs	r3, r0
 80079ea:	6968      	ldr	r0, [r5, #20]
 80079ec:	4303      	orrs	r3, r0
 80079ee:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 80079f0:	f421 4116 	bic.w	r1, r1, #38400	@ 0x9600
 80079f4:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80079f8:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 80079fa:	430b      	orrs	r3, r1
 80079fc:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 80079fe:	6953      	ldr	r3, [r2, #20]
 8007a00:	69a9      	ldr	r1, [r5, #24]
 8007a02:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007a06:	430b      	orrs	r3, r1
 8007a08:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8007a0a:	4b1f      	ldr	r3, [pc, #124]	@ (8007a88 <UART_SetConfig+0xb8>)
 8007a0c:	429a      	cmp	r2, r3
 8007a0e:	d003      	beq.n	8007a18 <UART_SetConfig+0x48>
 8007a10:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8007a14:	429a      	cmp	r2, r3
 8007a16:	d124      	bne.n	8007a62 <UART_SetConfig+0x92>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8007a18:	f7ff f930 	bl	8006c7c <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007a1c:	69ea      	ldr	r2, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8007a1e:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007a20:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8007a24:	e9d5 4300 	ldrd	r4, r3, [r5]
 8007a28:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007a2c:	d11c      	bne.n	8007a68 <UART_SetConfig+0x98>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8007a2e:	18da      	adds	r2, r3, r3
 8007a30:	f04f 0500 	mov.w	r5, #0
 8007a34:	eb45 0305 	adc.w	r3, r5, r5
 8007a38:	f7f8 fc82 	bl	8000340 <__aeabi_uldivmod>
 8007a3c:	2264      	movs	r2, #100	@ 0x64
 8007a3e:	fbb0 f1f2 	udiv	r1, r0, r2
 8007a42:	fb02 0311 	mls	r3, r2, r1, r0
 8007a46:	00db      	lsls	r3, r3, #3
 8007a48:	3332      	adds	r3, #50	@ 0x32
 8007a4a:	fbb3 f3f2 	udiv	r3, r3, r2
 8007a4e:	f003 0207 	and.w	r2, r3, #7
 8007a52:	005b      	lsls	r3, r3, #1
 8007a54:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8007a58:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8007a5c:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8007a5e:	60a3      	str	r3, [r4, #8]
  }
}
 8007a60:	bd38      	pop	{r3, r4, r5, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8007a62:	f7ff f8fb 	bl	8006c5c <HAL_RCC_GetPCLK1Freq>
 8007a66:	e7d9      	b.n	8007a1c <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8007a68:	009a      	lsls	r2, r3, #2
 8007a6a:	0f9b      	lsrs	r3, r3, #30
 8007a6c:	f7f8 fc68 	bl	8000340 <__aeabi_uldivmod>
 8007a70:	2264      	movs	r2, #100	@ 0x64
 8007a72:	fbb0 f1f2 	udiv	r1, r0, r2
 8007a76:	fb02 0311 	mls	r3, r2, r1, r0
 8007a7a:	011b      	lsls	r3, r3, #4
 8007a7c:	3332      	adds	r3, #50	@ 0x32
 8007a7e:	fbb3 f3f2 	udiv	r3, r3, r2
 8007a82:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8007a86:	e7ea      	b.n	8007a5e <UART_SetConfig+0x8e>
 8007a88:	40011000 	.word	0x40011000

08007a8c <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
 8007a8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007a8e:	4605      	mov	r5, r0
 8007a90:	460c      	mov	r4, r1
 8007a92:	4617      	mov	r7, r2
 8007a94:	461e      	mov	r6, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8007a96:	682a      	ldr	r2, [r5, #0]
 8007a98:	6813      	ldr	r3, [r2, #0]
 8007a9a:	ea34 0303 	bics.w	r3, r4, r3
 8007a9e:	d101      	bne.n	8007aa4 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 8007aa0:	2000      	movs	r0, #0
 8007aa2:	e021      	b.n	8007ae8 <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>
    if (Timeout != HAL_MAX_DELAY)
 8007aa4:	1c70      	adds	r0, r6, #1
 8007aa6:	d0f7      	beq.n	8007a98 <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007aa8:	f7fc fe8a 	bl	80047c0 <HAL_GetTick>
 8007aac:	1bc0      	subs	r0, r0, r7
 8007aae:	4286      	cmp	r6, r0
 8007ab0:	d31c      	bcc.n	8007aec <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
 8007ab2:	b1de      	cbz	r6, 8007aec <UART_WaitOnFlagUntilTimeout.constprop.0+0x60>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8007ab4:	682b      	ldr	r3, [r5, #0]
 8007ab6:	68da      	ldr	r2, [r3, #12]
 8007ab8:	0751      	lsls	r1, r2, #29
 8007aba:	d5ec      	bpl.n	8007a96 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 8007abc:	2c80      	cmp	r4, #128	@ 0x80
 8007abe:	d0ea      	beq.n	8007a96 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 8007ac0:	2c40      	cmp	r4, #64	@ 0x40
 8007ac2:	d0e8      	beq.n	8007a96 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8007ac4:	681a      	ldr	r2, [r3, #0]
 8007ac6:	0712      	lsls	r2, r2, #28
 8007ac8:	d5e5      	bpl.n	8007a96 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
          __HAL_UART_CLEAR_OREFLAG(huart);
 8007aca:	2400      	movs	r4, #0
 8007acc:	9401      	str	r4, [sp, #4]
 8007ace:	681a      	ldr	r2, [r3, #0]
 8007ad0:	9201      	str	r2, [sp, #4]
 8007ad2:	685b      	ldr	r3, [r3, #4]
 8007ad4:	9301      	str	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 8007ad6:	4628      	mov	r0, r5
          __HAL_UART_CLEAR_OREFLAG(huart);
 8007ad8:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 8007ada:	f7ff ff4b 	bl	8007974 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 8007ade:	2308      	movs	r3, #8
 8007ae0:	646b      	str	r3, [r5, #68]	@ 0x44
          __HAL_UNLOCK(huart);
 8007ae2:	f885 4040 	strb.w	r4, [r5, #64]	@ 0x40
          return HAL_ERROR;
 8007ae6:	2001      	movs	r0, #1
}
 8007ae8:	b003      	add	sp, #12
 8007aea:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
 8007aec:	2003      	movs	r0, #3
 8007aee:	e7fb      	b.n	8007ae8 <UART_WaitOnFlagUntilTimeout.constprop.0+0x5c>

08007af0 <HAL_UART_Init>:
{
 8007af0:	b510      	push	{r4, lr}
  if (huart == NULL)
 8007af2:	4604      	mov	r4, r0
 8007af4:	b348      	cbz	r0, 8007b4a <HAL_UART_Init+0x5a>
  if (huart->gState == HAL_UART_STATE_RESET)
 8007af6:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8007afa:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8007afe:	b91b      	cbnz	r3, 8007b08 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8007b00:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_UART_MspInit(huart);
 8007b04:	f7fa fd2c 	bl	8002560 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8007b08:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8007b0a:	2324      	movs	r3, #36	@ 0x24
 8007b0c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UART_DISABLE(huart);
 8007b10:	68d3      	ldr	r3, [r2, #12]
 8007b12:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007b16:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8007b18:	4620      	mov	r0, r4
 8007b1a:	f7ff ff59 	bl	80079d0 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8007b1e:	6823      	ldr	r3, [r4, #0]
 8007b20:	691a      	ldr	r2, [r3, #16]
 8007b22:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8007b26:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8007b28:	695a      	ldr	r2, [r3, #20]
 8007b2a:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8007b2e:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8007b30:	68da      	ldr	r2, [r3, #12]
 8007b32:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8007b36:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007b38:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8007b3a:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007b3c:	6460      	str	r0, [r4, #68]	@ 0x44
  huart->gState = HAL_UART_STATE_READY;
 8007b3e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8007b42:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8007b46:	6360      	str	r0, [r4, #52]	@ 0x34
}
 8007b48:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007b4a:	2001      	movs	r0, #1
 8007b4c:	e7fc      	b.n	8007b48 <HAL_UART_Init+0x58>

08007b4e <HAL_UART_Transmit>:
{
 8007b4e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007b52:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8007b54:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
 8007b58:	2b20      	cmp	r3, #32
{
 8007b5a:	4604      	mov	r4, r0
 8007b5c:	460e      	mov	r6, r1
 8007b5e:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8007b60:	d13f      	bne.n	8007be2 <HAL_UART_Transmit+0x94>
    if ((pData == NULL) || (Size == 0U))
 8007b62:	2900      	cmp	r1, #0
 8007b64:	d03f      	beq.n	8007be6 <HAL_UART_Transmit+0x98>
 8007b66:	2a00      	cmp	r2, #0
 8007b68:	d03d      	beq.n	8007be6 <HAL_UART_Transmit+0x98>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007b6a:	2321      	movs	r3, #33	@ 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007b6c:	2500      	movs	r5, #0
 8007b6e:	6445      	str	r5, [r0, #68]	@ 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007b70:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
    tickstart = HAL_GetTick();
 8007b74:	f7fc fe24 	bl	80047c0 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007b78:	68a3      	ldr	r3, [r4, #8]
    huart->TxXferSize = Size;
 8007b7a:	84a7      	strh	r7, [r4, #36]	@ 0x24
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007b7c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
    tickstart = HAL_GetTick();
 8007b80:	4681      	mov	r9, r0
    huart->TxXferCount = Size;
 8007b82:	84e7      	strh	r7, [r4, #38]	@ 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007b84:	d103      	bne.n	8007b8e <HAL_UART_Transmit+0x40>
 8007b86:	6923      	ldr	r3, [r4, #16]
 8007b88:	b90b      	cbnz	r3, 8007b8e <HAL_UART_Transmit+0x40>
      pdata16bits = (const uint16_t *) pData;
 8007b8a:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 8007b8c:	461e      	mov	r6, r3
    while (huart->TxXferCount > 0U)
 8007b8e:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 8007b90:	b29b      	uxth	r3, r3
 8007b92:	b953      	cbnz	r3, 8007baa <HAL_UART_Transmit+0x5c>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8007b94:	4643      	mov	r3, r8
 8007b96:	464a      	mov	r2, r9
 8007b98:	2140      	movs	r1, #64	@ 0x40
 8007b9a:	4620      	mov	r0, r4
 8007b9c:	f7ff ff76 	bl	8007a8c <UART_WaitOnFlagUntilTimeout.constprop.0>
 8007ba0:	2320      	movs	r3, #32
 8007ba2:	b950      	cbnz	r0, 8007bba <HAL_UART_Transmit+0x6c>
    huart->gState = HAL_UART_STATE_READY;
 8007ba4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    return HAL_OK;
 8007ba8:	e00a      	b.n	8007bc0 <HAL_UART_Transmit+0x72>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8007baa:	4643      	mov	r3, r8
 8007bac:	464a      	mov	r2, r9
 8007bae:	2180      	movs	r1, #128	@ 0x80
 8007bb0:	4620      	mov	r0, r4
 8007bb2:	f7ff ff6b 	bl	8007a8c <UART_WaitOnFlagUntilTimeout.constprop.0>
 8007bb6:	b128      	cbz	r0, 8007bc4 <HAL_UART_Transmit+0x76>
        huart->gState = HAL_UART_STATE_READY;
 8007bb8:	2320      	movs	r3, #32
 8007bba:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
        return HAL_TIMEOUT;
 8007bbe:	2003      	movs	r0, #3
}
 8007bc0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8007bc4:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 8007bc6:	b94e      	cbnz	r6, 8007bdc <HAL_UART_Transmit+0x8e>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8007bc8:	f835 3b02 	ldrh.w	r3, [r5], #2
 8007bcc:	f3c3 0308 	ubfx	r3, r3, #0, #9
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8007bd0:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 8007bd2:	8ce1      	ldrh	r1, [r4, #38]	@ 0x26
 8007bd4:	3901      	subs	r1, #1
 8007bd6:	b289      	uxth	r1, r1
 8007bd8:	84e1      	strh	r1, [r4, #38]	@ 0x26
 8007bda:	e7d8      	b.n	8007b8e <HAL_UART_Transmit+0x40>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8007bdc:	f816 3b01 	ldrb.w	r3, [r6], #1
 8007be0:	e7f6      	b.n	8007bd0 <HAL_UART_Transmit+0x82>
    return HAL_BUSY;
 8007be2:	2002      	movs	r0, #2
 8007be4:	e7ec      	b.n	8007bc0 <HAL_UART_Transmit+0x72>
      return  HAL_ERROR;
 8007be6:	2001      	movs	r0, #1
 8007be8:	e7ea      	b.n	8007bc0 <HAL_UART_Transmit+0x72>

08007bea <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007bea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007bee:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8007bf2:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8007bf6:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8007bfa:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 8007bfe:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8007c02:	6809      	ldr	r1, [r1, #0]
 8007c04:	ea43 0308 	orr.w	r3, r3, r8
 8007c08:	b981      	cbnz	r1, 8007c2c <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007c0a:	ea43 030e 	orr.w	r3, r3, lr
 8007c0e:	4313      	orrs	r3, r2
 8007c10:	ea43 030c 	orr.w	r3, r3, ip
 8007c14:	433b      	orrs	r3, r7
 8007c16:	6801      	ldr	r1, [r0, #0]
 8007c18:	4333      	orrs	r3, r6
 8007c1a:	432b      	orrs	r3, r5
 8007c1c:	4323      	orrs	r3, r4
 8007c1e:	f36f 010e 	bfc	r1, #0, #15
 8007c22:	430b      	orrs	r3, r1
 8007c24:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8007c26:	2000      	movs	r0, #0
 8007c28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007c2c:	6801      	ldr	r1, [r0, #0]
 8007c2e:	ea43 030e 	orr.w	r3, r3, lr
 8007c32:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8007c36:	430b      	orrs	r3, r1
 8007c38:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8007c3a:	ea42 030c 	orr.w	r3, r2, ip
 8007c3e:	6841      	ldr	r1, [r0, #4]
 8007c40:	433b      	orrs	r3, r7
 8007c42:	4333      	orrs	r3, r6
 8007c44:	432b      	orrs	r3, r5
 8007c46:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8007c4a:	4323      	orrs	r3, r4
 8007c4c:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8007c50:	4313      	orrs	r3, r2
 8007c52:	6043      	str	r3, [r0, #4]
 8007c54:	e7e7      	b.n	8007c26 <FMC_SDRAM_Init+0x3c>

08007c56 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007c56:	68cb      	ldr	r3, [r1, #12]
 8007c58:	f103 3cff 	add.w	ip, r3, #4294967295
 8007c5c:	694b      	ldr	r3, [r1, #20]
{
 8007c5e:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007c60:	684c      	ldr	r4, [r1, #4]
 8007c62:	688f      	ldr	r7, [r1, #8]
 8007c64:	690e      	ldr	r6, [r1, #16]
 8007c66:	698d      	ldr	r5, [r1, #24]
 8007c68:	6809      	ldr	r1, [r1, #0]
 8007c6a:	3b01      	subs	r3, #1
 8007c6c:	051b      	lsls	r3, r3, #20
 8007c6e:	3c01      	subs	r4, #1
 8007c70:	3f01      	subs	r7, #1
 8007c72:	3e01      	subs	r6, #1
 8007c74:	3d01      	subs	r5, #1
 8007c76:	0124      	lsls	r4, r4, #4
 8007c78:	023f      	lsls	r7, r7, #8
 8007c7a:	0436      	lsls	r6, r6, #16
 8007c7c:	062d      	lsls	r5, r5, #24
 8007c7e:	3901      	subs	r1, #1
 8007c80:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8007c84:	b95a      	cbnz	r2, 8007c9e <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007c86:	430b      	orrs	r3, r1
 8007c88:	4323      	orrs	r3, r4
 8007c8a:	6882      	ldr	r2, [r0, #8]
 8007c8c:	433b      	orrs	r3, r7
 8007c8e:	4333      	orrs	r3, r6
 8007c90:	432b      	orrs	r3, r5
 8007c92:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007c96:	4313      	orrs	r3, r2
 8007c98:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8007c9a:	2000      	movs	r0, #0
 8007c9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007c9e:	6882      	ldr	r2, [r0, #8]
 8007ca0:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8007ca4:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8007ca8:	4313      	orrs	r3, r2
 8007caa:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007cac:	ea44 0307 	orr.w	r3, r4, r7
 8007cb0:	68c2      	ldr	r2, [r0, #12]
 8007cb2:	430b      	orrs	r3, r1
 8007cb4:	4333      	orrs	r3, r6
 8007cb6:	432b      	orrs	r3, r5
 8007cb8:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8007cbc:	4313      	orrs	r3, r2
 8007cbe:	60c3      	str	r3, [r0, #12]
 8007cc0:	e7eb      	b.n	8007c9a <FMC_SDRAM_Timing_Init+0x44>

08007cc2 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007cc2:	b570      	push	{r4, r5, r6, lr}
 8007cc4:	4604      	mov	r4, r0
 8007cc6:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8007cc8:	6902      	ldr	r2, [r0, #16]
 8007cca:	e9d1 3000 	ldrd	r3, r0, [r1]
 8007cce:	4303      	orrs	r3, r0
 8007cd0:	68c8      	ldr	r0, [r1, #12]
 8007cd2:	f36f 0215 	bfc	r2, #0, #22
 8007cd6:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8007cda:	4313      	orrs	r3, r2
 8007cdc:	688a      	ldr	r2, [r1, #8]
 8007cde:	3a01      	subs	r2, #1
 8007ce0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007ce4:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8007ce6:	f7fc fd6b 	bl	80047c0 <HAL_GetTick>
 8007cea:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007cec:	69a0      	ldr	r0, [r4, #24]
 8007cee:	f010 0020 	ands.w	r0, r0, #32
 8007cf2:	d003      	beq.n	8007cfc <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8007cf4:	1c6b      	adds	r3, r5, #1
 8007cf6:	d0f9      	beq.n	8007cec <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8007cf8:	b90d      	cbnz	r5, 8007cfe <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 8007cfa:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 8007cfc:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8007cfe:	f7fc fd5f 	bl	80047c0 <HAL_GetTick>
 8007d02:	1b80      	subs	r0, r0, r6
 8007d04:	42a8      	cmp	r0, r5
 8007d06:	d9f1      	bls.n	8007cec <FMC_SDRAM_SendCommand+0x2a>
 8007d08:	e7f7      	b.n	8007cfa <FMC_SDRAM_SendCommand+0x38>

08007d0a <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8007d0a:	6943      	ldr	r3, [r0, #20]
 8007d0c:	f36f 034d 	bfc	r3, #1, #13
 8007d10:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8007d14:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8007d16:	2000      	movs	r0, #0
 8007d18:	4770      	bx	lr

08007d1a <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 8007d1a:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8007d1c:	2300      	movs	r3, #0
{
 8007d1e:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8007d20:	9301      	str	r3, [sp, #4]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 8007d22:	9b01      	ldr	r3, [sp, #4]
 8007d24:	3301      	adds	r3, #1
 8007d26:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 8007d28:	9b01      	ldr	r3, [sp, #4]
 8007d2a:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8007d2e:	d815      	bhi.n	8007d5c <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8007d30:	6913      	ldr	r3, [r2, #16]
 8007d32:	2b00      	cmp	r3, #0
 8007d34:	daf5      	bge.n	8007d22 <USB_CoreReset+0x8>

  /* Core Soft Reset */
  count = 0U;
 8007d36:	2300      	movs	r3, #0
 8007d38:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 8007d3a:	6913      	ldr	r3, [r2, #16]
 8007d3c:	f043 0301 	orr.w	r3, r3, #1
 8007d40:	6113      	str	r3, [r2, #16]

  do
  {
    count++;
 8007d42:	9b01      	ldr	r3, [sp, #4]
 8007d44:	3301      	adds	r3, #1
 8007d46:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 8007d48:	9b01      	ldr	r3, [sp, #4]
 8007d4a:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8007d4e:	d805      	bhi.n	8007d5c <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 8007d50:	6910      	ldr	r0, [r2, #16]
 8007d52:	f010 0001 	ands.w	r0, r0, #1
 8007d56:	d1f4      	bne.n	8007d42 <USB_CoreReset+0x28>

  return HAL_OK;
}
 8007d58:	b002      	add	sp, #8
 8007d5a:	4770      	bx	lr
      return HAL_TIMEOUT;
 8007d5c:	2003      	movs	r0, #3
 8007d5e:	e7fb      	b.n	8007d58 <USB_CoreReset+0x3e>

08007d60 <USB_CoreInit>:
{
 8007d60:	b084      	sub	sp, #16
 8007d62:	b538      	push	{r3, r4, r5, lr}
 8007d64:	ad05      	add	r5, sp, #20
 8007d66:	e885 000e 	stmia.w	r5, {r1, r2, r3}
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8007d6a:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8007d6e:	2b01      	cmp	r3, #1
{
 8007d70:	4604      	mov	r4, r0
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8007d72:	d127      	bne.n	8007dc4 <USB_CoreInit+0x64>
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 8007d74:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8007d76:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007d7a:	6383      	str	r3, [r0, #56]	@ 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
 8007d7c:	68c3      	ldr	r3, [r0, #12]
 8007d7e:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 8007d82:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007d86:	60c3      	str	r3, [r0, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 8007d88:	68c3      	ldr	r3, [r0, #12]
 8007d8a:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8007d8e:	60c3      	str	r3, [r0, #12]
    if (cfg.use_external_vbus == 1U)
 8007d90:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8007d94:	2b01      	cmp	r3, #1
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
 8007d96:	bf02      	ittt	eq
 8007d98:	68c3      	ldreq	r3, [r0, #12]
 8007d9a:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
 8007d9e:	60c3      	streq	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 8007da0:	f7ff ffbb 	bl	8007d1a <USB_CoreReset>
  if (cfg.dma_enable == 1U)
 8007da4:	f89d 3016 	ldrb.w	r3, [sp, #22]
 8007da8:	2b01      	cmp	r3, #1
 8007daa:	d107      	bne.n	8007dbc <USB_CoreInit+0x5c>
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 8007dac:	68a3      	ldr	r3, [r4, #8]
 8007dae:	f043 0306 	orr.w	r3, r3, #6
 8007db2:	60a3      	str	r3, [r4, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 8007db4:	68a3      	ldr	r3, [r4, #8]
 8007db6:	f043 0320 	orr.w	r3, r3, #32
 8007dba:	60a3      	str	r3, [r4, #8]
}
 8007dbc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007dc0:	b004      	add	sp, #16
 8007dc2:	4770      	bx	lr
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 8007dc4:	68c3      	ldr	r3, [r0, #12]
 8007dc6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8007dca:	60c3      	str	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 8007dcc:	f7ff ffa5 	bl	8007d1a <USB_CoreReset>
    if (cfg.battery_charging_enable == 0U)
 8007dd0:	f89d 301d 	ldrb.w	r3, [sp, #29]
 8007dd4:	b923      	cbnz	r3, 8007de0 <USB_CoreInit+0x80>
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8007dd6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007dd8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 8007ddc:	63a3      	str	r3, [r4, #56]	@ 0x38
 8007dde:	e7e1      	b.n	8007da4 <USB_CoreInit+0x44>
 8007de0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8007de2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007de6:	e7f9      	b.n	8007ddc <USB_CoreInit+0x7c>

08007de8 <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
 8007de8:	2a02      	cmp	r2, #2
 8007dea:	d14a      	bne.n	8007e82 <USB_SetTurnaroundTime+0x9a>
    if ((hclk >= 14200000U) && (hclk < 15000000U))
 8007dec:	4b27      	ldr	r3, [pc, #156]	@ (8007e8c <USB_SetTurnaroundTime+0xa4>)
 8007dee:	4a28      	ldr	r2, [pc, #160]	@ (8007e90 <USB_SetTurnaroundTime+0xa8>)
 8007df0:	440b      	add	r3, r1
 8007df2:	4293      	cmp	r3, r2
 8007df4:	d939      	bls.n	8007e6a <USB_SetTurnaroundTime+0x82>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
 8007df6:	4b27      	ldr	r3, [pc, #156]	@ (8007e94 <USB_SetTurnaroundTime+0xac>)
 8007df8:	4a27      	ldr	r2, [pc, #156]	@ (8007e98 <USB_SetTurnaroundTime+0xb0>)
 8007dfa:	440b      	add	r3, r1
 8007dfc:	4293      	cmp	r3, r2
 8007dfe:	d936      	bls.n	8007e6e <USB_SetTurnaroundTime+0x86>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
 8007e00:	4a26      	ldr	r2, [pc, #152]	@ (8007e9c <USB_SetTurnaroundTime+0xb4>)
 8007e02:	f5a1 0374 	sub.w	r3, r1, #15990784	@ 0xf40000
 8007e06:	f5a3 5310 	sub.w	r3, r3, #9216	@ 0x2400
 8007e0a:	4293      	cmp	r3, r2
 8007e0c:	d931      	bls.n	8007e72 <USB_SetTurnaroundTime+0x8a>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
 8007e0e:	4a24      	ldr	r2, [pc, #144]	@ (8007ea0 <USB_SetTurnaroundTime+0xb8>)
 8007e10:	f1a1 7383 	sub.w	r3, r1, #17170432	@ 0x1060000
 8007e14:	f5a3 43e7 	sub.w	r3, r3, #29568	@ 0x7380
 8007e18:	4293      	cmp	r3, r2
 8007e1a:	d32c      	bcc.n	8007e76 <USB_SetTurnaroundTime+0x8e>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
 8007e1c:	4b21      	ldr	r3, [pc, #132]	@ (8007ea4 <USB_SetTurnaroundTime+0xbc>)
 8007e1e:	4a22      	ldr	r2, [pc, #136]	@ (8007ea8 <USB_SetTurnaroundTime+0xc0>)
 8007e20:	440b      	add	r3, r1
 8007e22:	4293      	cmp	r3, r2
 8007e24:	d929      	bls.n	8007e7a <USB_SetTurnaroundTime+0x92>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
 8007e26:	4b21      	ldr	r3, [pc, #132]	@ (8007eac <USB_SetTurnaroundTime+0xc4>)
 8007e28:	4a21      	ldr	r2, [pc, #132]	@ (8007eb0 <USB_SetTurnaroundTime+0xc8>)
 8007e2a:	440b      	add	r3, r1
 8007e2c:	4293      	cmp	r3, r2
 8007e2e:	d326      	bcc.n	8007e7e <USB_SetTurnaroundTime+0x96>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
 8007e30:	4b20      	ldr	r3, [pc, #128]	@ (8007eb4 <USB_SetTurnaroundTime+0xcc>)
 8007e32:	4a21      	ldr	r2, [pc, #132]	@ (8007eb8 <USB_SetTurnaroundTime+0xd0>)
 8007e34:	440b      	add	r3, r1
 8007e36:	4293      	cmp	r3, r2
 8007e38:	d323      	bcc.n	8007e82 <USB_SetTurnaroundTime+0x9a>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
 8007e3a:	4a20      	ldr	r2, [pc, #128]	@ (8007ebc <USB_SetTurnaroundTime+0xd4>)
 8007e3c:	f1a1 73b7 	sub.w	r3, r1, #23986176	@ 0x16e0000
 8007e40:	f5a3 5358 	sub.w	r3, r3, #13824	@ 0x3600
 8007e44:	4293      	cmp	r3, r2
 8007e46:	d31e      	bcc.n	8007e86 <USB_SetTurnaroundTime+0x9e>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8007e48:	4b1d      	ldr	r3, [pc, #116]	@ (8007ec0 <USB_SetTurnaroundTime+0xd8>)
      UsbTrd = 0x7U;
 8007e4a:	4a1e      	ldr	r2, [pc, #120]	@ (8007ec4 <USB_SetTurnaroundTime+0xdc>)
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8007e4c:	440b      	add	r3, r1
      UsbTrd = 0x7U;
 8007e4e:	4293      	cmp	r3, r2
 8007e50:	bf2c      	ite	cs
 8007e52:	2306      	movcs	r3, #6
 8007e54:	2307      	movcc	r3, #7
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 8007e56:	68c2      	ldr	r2, [r0, #12]
 8007e58:	f422 5270 	bic.w	r2, r2, #15360	@ 0x3c00
 8007e5c:	60c2      	str	r2, [r0, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
 8007e5e:	68c2      	ldr	r2, [r0, #12]
 8007e60:	ea42 2383 	orr.w	r3, r2, r3, lsl #10
 8007e64:	60c3      	str	r3, [r0, #12]
}
 8007e66:	2000      	movs	r0, #0
 8007e68:	4770      	bx	lr
      UsbTrd = 0xFU;
 8007e6a:	230f      	movs	r3, #15
 8007e6c:	e7f3      	b.n	8007e56 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xEU;
 8007e6e:	230e      	movs	r3, #14
 8007e70:	e7f1      	b.n	8007e56 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xDU;
 8007e72:	230d      	movs	r3, #13
 8007e74:	e7ef      	b.n	8007e56 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xCU;
 8007e76:	230c      	movs	r3, #12
 8007e78:	e7ed      	b.n	8007e56 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xBU;
 8007e7a:	230b      	movs	r3, #11
 8007e7c:	e7eb      	b.n	8007e56 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xAU;
 8007e7e:	230a      	movs	r3, #10
 8007e80:	e7e9      	b.n	8007e56 <USB_SetTurnaroundTime+0x6e>
    UsbTrd = USBD_HS_TRDT_VALUE;
 8007e82:	2309      	movs	r3, #9
 8007e84:	e7e7      	b.n	8007e56 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0x8U;
 8007e86:	2308      	movs	r3, #8
 8007e88:	e7e5      	b.n	8007e56 <USB_SetTurnaroundTime+0x6e>
 8007e8a:	bf00      	nop
 8007e8c:	ff275340 	.word	0xff275340
 8007e90:	000c34ff 	.word	0x000c34ff
 8007e94:	ff1b1e40 	.word	0xff1b1e40
 8007e98:	000f423f 	.word	0x000f423f
 8007e9c:	00124f7f 	.word	0x00124f7f
 8007ea0:	0013d620 	.word	0x0013d620
 8007ea4:	fee5b660 	.word	0xfee5b660
 8007ea8:	0016e35f 	.word	0x0016e35f
 8007eac:	feced300 	.word	0xfeced300
 8007eb0:	001b7740 	.word	0x001b7740
 8007eb4:	feb35bc0 	.word	0xfeb35bc0
 8007eb8:	002191c0 	.word	0x002191c0
 8007ebc:	00387520 	.word	0x00387520
 8007ec0:	fe5954e0 	.word	0xfe5954e0
 8007ec4:	00419ce0 	.word	0x00419ce0

08007ec8 <USB_EnableGlobalInt>:
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
 8007ec8:	6883      	ldr	r3, [r0, #8]
 8007eca:	f043 0301 	orr.w	r3, r3, #1
 8007ece:	6083      	str	r3, [r0, #8]
}
 8007ed0:	2000      	movs	r0, #0
 8007ed2:	4770      	bx	lr

08007ed4 <USB_DisableGlobalInt>:
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 8007ed4:	6883      	ldr	r3, [r0, #8]
 8007ed6:	f023 0301 	bic.w	r3, r3, #1
 8007eda:	6083      	str	r3, [r0, #8]
}
 8007edc:	2000      	movs	r0, #0
 8007ede:	4770      	bx	lr

08007ee0 <USB_SetCurrentMode>:
{
 8007ee0:	b538      	push	{r3, r4, r5, lr}
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8007ee2:	68c3      	ldr	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8007ee4:	2901      	cmp	r1, #1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8007ee6:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
{
 8007eea:	4605      	mov	r5, r0
 8007eec:	460c      	mov	r4, r1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8007eee:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8007ef0:	d114      	bne.n	8007f1c <USB_SetCurrentMode+0x3c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 8007ef2:	68c3      	ldr	r3, [r0, #12]
 8007ef4:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8007ef8:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 8007efa:	2400      	movs	r4, #0
      HAL_Delay(10U);
 8007efc:	200a      	movs	r0, #10
 8007efe:	f7fc fc65 	bl	80047cc <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 8007f02:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8007f04:	07d9      	lsls	r1, r3, #31
      ms += 10U;
 8007f06:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8007f0a:	d402      	bmi.n	8007f12 <USB_SetCurrentMode+0x32>
 8007f0c:	2cc8      	cmp	r4, #200	@ 0xc8
 8007f0e:	d1f5      	bne.n	8007efc <USB_SetCurrentMode+0x1c>
      ms += 10U;
 8007f10:	24c8      	movs	r4, #200	@ 0xc8
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
 8007f12:	f1a4 03c8 	sub.w	r3, r4, #200	@ 0xc8
 8007f16:	4258      	negs	r0, r3
 8007f18:	4158      	adcs	r0, r3
}
 8007f1a:	bd38      	pop	{r3, r4, r5, pc}
  else if (mode == USB_DEVICE_MODE)
 8007f1c:	b971      	cbnz	r1, 8007f3c <USB_SetCurrentMode+0x5c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 8007f1e:	68c3      	ldr	r3, [r0, #12]
 8007f20:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8007f24:	60c3      	str	r3, [r0, #12]
      HAL_Delay(10U);
 8007f26:	200a      	movs	r0, #10
 8007f28:	f7fc fc50 	bl	80047cc <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 8007f2c:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8007f2e:	07da      	lsls	r2, r3, #31
      ms += 10U;
 8007f30:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8007f34:	d5ed      	bpl.n	8007f12 <USB_SetCurrentMode+0x32>
 8007f36:	2cc8      	cmp	r4, #200	@ 0xc8
 8007f38:	d1f5      	bne.n	8007f26 <USB_SetCurrentMode+0x46>
 8007f3a:	e7e9      	b.n	8007f10 <USB_SetCurrentMode+0x30>
    return HAL_ERROR;
 8007f3c:	2001      	movs	r0, #1
 8007f3e:	e7ec      	b.n	8007f1a <USB_SetCurrentMode+0x3a>

08007f40 <USB_FlushTxFifo>:
{
 8007f40:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8007f42:	2300      	movs	r3, #0
{
 8007f44:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8007f46:	9301      	str	r3, [sp, #4]
    count++;
 8007f48:	9b01      	ldr	r3, [sp, #4]
 8007f4a:	3301      	adds	r3, #1
 8007f4c:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8007f4e:	9b01      	ldr	r3, [sp, #4]
 8007f50:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8007f54:	d815      	bhi.n	8007f82 <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8007f56:	6913      	ldr	r3, [r2, #16]
 8007f58:	2b00      	cmp	r3, #0
 8007f5a:	daf5      	bge.n	8007f48 <USB_FlushTxFifo+0x8>
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8007f5c:	0189      	lsls	r1, r1, #6
  count = 0U;
 8007f5e:	2300      	movs	r3, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8007f60:	f041 0120 	orr.w	r1, r1, #32
  count = 0U;
 8007f64:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8007f66:	6111      	str	r1, [r2, #16]
    count++;
 8007f68:	9b01      	ldr	r3, [sp, #4]
 8007f6a:	3301      	adds	r3, #1
 8007f6c:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8007f6e:	9b01      	ldr	r3, [sp, #4]
 8007f70:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8007f74:	d805      	bhi.n	8007f82 <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 8007f76:	6910      	ldr	r0, [r2, #16]
 8007f78:	f010 0020 	ands.w	r0, r0, #32
 8007f7c:	d1f4      	bne.n	8007f68 <USB_FlushTxFifo+0x28>
}
 8007f7e:	b002      	add	sp, #8
 8007f80:	4770      	bx	lr
      return HAL_TIMEOUT;
 8007f82:	2003      	movs	r0, #3
 8007f84:	e7fb      	b.n	8007f7e <USB_FlushTxFifo+0x3e>

08007f86 <USB_FlushRxFifo>:
{
 8007f86:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8007f88:	2300      	movs	r3, #0
{
 8007f8a:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8007f8c:	9301      	str	r3, [sp, #4]
    count++;
 8007f8e:	9b01      	ldr	r3, [sp, #4]
 8007f90:	3301      	adds	r3, #1
 8007f92:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8007f94:	9b01      	ldr	r3, [sp, #4]
 8007f96:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8007f9a:	d813      	bhi.n	8007fc4 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8007f9c:	6913      	ldr	r3, [r2, #16]
 8007f9e:	2b00      	cmp	r3, #0
 8007fa0:	daf5      	bge.n	8007f8e <USB_FlushRxFifo+0x8>
  count = 0U;
 8007fa2:	2300      	movs	r3, #0
 8007fa4:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 8007fa6:	2310      	movs	r3, #16
 8007fa8:	6113      	str	r3, [r2, #16]
    count++;
 8007faa:	9b01      	ldr	r3, [sp, #4]
 8007fac:	3301      	adds	r3, #1
 8007fae:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8007fb0:	9b01      	ldr	r3, [sp, #4]
 8007fb2:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8007fb6:	d805      	bhi.n	8007fc4 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 8007fb8:	6910      	ldr	r0, [r2, #16]
 8007fba:	f010 0010 	ands.w	r0, r0, #16
 8007fbe:	d1f4      	bne.n	8007faa <USB_FlushRxFifo+0x24>
}
 8007fc0:	b002      	add	sp, #8
 8007fc2:	4770      	bx	lr
      return HAL_TIMEOUT;
 8007fc4:	2003      	movs	r0, #3
 8007fc6:	e7fb      	b.n	8007fc0 <USB_FlushRxFifo+0x3a>

08007fc8 <USB_SetDevSpeed>:
  USBx_DEVICE->DCFG |= speed;
 8007fc8:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007fcc:	4319      	orrs	r1, r3
 8007fce:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 8007fd2:	2000      	movs	r0, #0
 8007fd4:	4770      	bx	lr
	...

08007fd8 <USB_DevInit>:
{
 8007fd8:	b084      	sub	sp, #16
 8007fda:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007fde:	4604      	mov	r4, r0
 8007fe0:	a809      	add	r0, sp, #36	@ 0x24
 8007fe2:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  for (i = 0U; i < 15U; i++)
 8007fe6:	2300      	movs	r3, #0
 8007fe8:	f89d 6024 	ldrb.w	r6, [sp, #36]	@ 0x24
 8007fec:	f89d 502e 	ldrb.w	r5, [sp, #46]	@ 0x2e
    USBx->DIEPTXF[i] = 0U;
 8007ff0:	4619      	mov	r1, r3
 8007ff2:	f103 0240 	add.w	r2, r3, #64	@ 0x40
 8007ff6:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  for (i = 0U; i < 15U; i++)
 8007ffa:	3301      	adds	r3, #1
 8007ffc:	2b0f      	cmp	r3, #15
    USBx->DIEPTXF[i] = 0U;
 8007ffe:	6051      	str	r1, [r2, #4]
  for (i = 0U; i < 15U; i++)
 8008000:	d1f7      	bne.n	8007ff2 <USB_DevInit+0x1a>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8008002:	f504 6700 	add.w	r7, r4, #2048	@ 0x800
  if (cfg.vbus_sensing_enable == 0U)
 8008006:	2d00      	cmp	r5, #0
 8008008:	d16c      	bne.n	80080e4 <USB_DevInit+0x10c>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 800800a:	687b      	ldr	r3, [r7, #4]
 800800c:	f043 0302 	orr.w	r3, r3, #2
 8008010:	607b      	str	r3, [r7, #4]
    USBx->GCCFG |= USB_OTG_GCCFG_NOVBUSSENS;
 8008012:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8008014:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8008018:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSBSEN;
 800801a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800801c:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 8008020:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSASEN;
 8008022:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8008024:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 8008028:	63a3      	str	r3, [r4, #56]	@ 0x38
  USBx_PCGCCTL = 0U;
 800802a:	2300      	movs	r3, #0
 800802c:	f8c4 3e00 	str.w	r3, [r4, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8008030:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
 8008034:	2b01      	cmp	r3, #1
 8008036:	d15f      	bne.n	80080f8 <USB_DevInit+0x120>
    if (cfg.speed == USBD_HS_SPEED)
 8008038:	f89d 1027 	ldrb.w	r1, [sp, #39]	@ 0x27
 800803c:	2900      	cmp	r1, #0
 800803e:	d159      	bne.n	80080f4 <USB_DevInit+0x11c>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 8008040:	4620      	mov	r0, r4
 8008042:	f7ff ffc1 	bl	8007fc8 <USB_SetDevSpeed>
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 8008046:	2110      	movs	r1, #16
 8008048:	4620      	mov	r0, r4
 800804a:	f7ff ff79 	bl	8007f40 <USB_FlushTxFifo>
 800804e:	4601      	mov	r1, r0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8008050:	4620      	mov	r0, r4
 8008052:	f7ff ff98 	bl	8007f86 <USB_FlushRxFifo>
 8008056:	4308      	orrs	r0, r1
 8008058:	b2c0      	uxtb	r0, r0
  USBx_DEVICE->DIEPMSK = 0U;
 800805a:	2300      	movs	r3, #0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 800805c:	3800      	subs	r0, #0
  USBx_DEVICE->DIEPMSK = 0U;
 800805e:	613b      	str	r3, [r7, #16]
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8008060:	bf18      	it	ne
 8008062:	2001      	movne	r0, #1
  USBx_DEVICE->DOEPMSK = 0U;
 8008064:	617b      	str	r3, [r7, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 8008066:	f504 6210 	add.w	r2, r4, #2304	@ 0x900
 800806a:	61fb      	str	r3, [r7, #28]
      USBx_INEP(i)->DIEPCTL = 0U;
 800806c:	4619      	mov	r1, r3
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 800806e:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8008072:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8008076:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800807a:	429e      	cmp	r6, r3
 800807c:	d83e      	bhi.n	80080fc <USB_DevInit+0x124>
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800807e:	2200      	movs	r2, #0
 8008080:	f504 6330 	add.w	r3, r4, #2816	@ 0xb00
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8008084:	4611      	mov	r1, r2
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 8008086:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 800808a:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 800808e:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8008092:	4296      	cmp	r6, r2
 8008094:	d845      	bhi.n	8008122 <USB_DevInit+0x14a>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 8008096:	693b      	ldr	r3, [r7, #16]
 8008098:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800809c:	613b      	str	r3, [r7, #16]
  USBx->GINTMSK = 0U;
 800809e:	2300      	movs	r3, #0
 80080a0:	61a3      	str	r3, [r4, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
 80080a2:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
 80080a6:	6163      	str	r3, [r4, #20]
  if (cfg.dma_enable == 0U)
 80080a8:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
 80080ac:	b91b      	cbnz	r3, 80080b6 <USB_DevInit+0xde>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 80080ae:	69a3      	ldr	r3, [r4, #24]
 80080b0:	f043 0310 	orr.w	r3, r3, #16
 80080b4:	61a3      	str	r3, [r4, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 80080b6:	69a2      	ldr	r2, [r4, #24]
 80080b8:	4b23      	ldr	r3, [pc, #140]	@ (8008148 <USB_DevInit+0x170>)
 80080ba:	4313      	orrs	r3, r2
 80080bc:	61a3      	str	r3, [r4, #24]
  if (cfg.Sof_enable != 0U)
 80080be:	f89d 302a 	ldrb.w	r3, [sp, #42]	@ 0x2a
 80080c2:	b11b      	cbz	r3, 80080cc <USB_DevInit+0xf4>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 80080c4:	69a3      	ldr	r3, [r4, #24]
 80080c6:	f043 0308 	orr.w	r3, r3, #8
 80080ca:	61a3      	str	r3, [r4, #24]
  if (cfg.vbus_sensing_enable == 1U)
 80080cc:	2d01      	cmp	r5, #1
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 80080ce:	bf01      	itttt	eq
 80080d0:	69a3      	ldreq	r3, [r4, #24]
 80080d2:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
 80080d6:	f043 0304 	orreq.w	r3, r3, #4
 80080da:	61a3      	streq	r3, [r4, #24]
}
 80080dc:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80080e0:	b004      	add	sp, #16
 80080e2:	4770      	bx	lr
    USBx->GCCFG &= ~USB_OTG_GCCFG_NOVBUSSENS;
 80080e4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80080e6:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 80080ea:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 80080ec:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80080ee:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80080f2:	e799      	b.n	8008028 <USB_DevInit+0x50>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
 80080f4:	4619      	mov	r1, r3
 80080f6:	e7a3      	b.n	8008040 <USB_DevInit+0x68>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 80080f8:	2103      	movs	r1, #3
 80080fa:	e7a1      	b.n	8008040 <USB_DevInit+0x68>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 80080fc:	f8d2 9000 	ldr.w	r9, [r2]
 8008100:	f1b9 0f00 	cmp.w	r9, #0
 8008104:	da0b      	bge.n	800811e <USB_DevInit+0x146>
      if (i == 0U)
 8008106:	b93b      	cbnz	r3, 8008118 <USB_DevInit+0x140>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8008108:	f8c2 e000 	str.w	lr, [r2]
    USBx_INEP(i)->DIEPTSIZ = 0U;
 800810c:	6111      	str	r1, [r2, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800810e:	3301      	adds	r3, #1
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8008110:	f8c2 8008 	str.w	r8, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8008114:	3220      	adds	r2, #32
 8008116:	e7b0      	b.n	800807a <USB_DevInit+0xa2>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8008118:	f8c2 c000 	str.w	ip, [r2]
 800811c:	e7f6      	b.n	800810c <USB_DevInit+0x134>
      USBx_INEP(i)->DIEPCTL = 0U;
 800811e:	6011      	str	r1, [r2, #0]
 8008120:	e7f4      	b.n	800810c <USB_DevInit+0x134>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8008122:	f8d3 9000 	ldr.w	r9, [r3]
 8008126:	f1b9 0f00 	cmp.w	r9, #0
 800812a:	da0b      	bge.n	8008144 <USB_DevInit+0x16c>
      if (i == 0U)
 800812c:	b93a      	cbnz	r2, 800813e <USB_DevInit+0x166>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 800812e:	f8c3 e000 	str.w	lr, [r3]
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 8008132:	6119      	str	r1, [r3, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8008134:	3201      	adds	r2, #1
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8008136:	f8c3 8008 	str.w	r8, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800813a:	3320      	adds	r3, #32
 800813c:	e7a9      	b.n	8008092 <USB_DevInit+0xba>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 800813e:	f8c3 c000 	str.w	ip, [r3]
 8008142:	e7f6      	b.n	8008132 <USB_DevInit+0x15a>
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8008144:	6019      	str	r1, [r3, #0]
 8008146:	e7f4      	b.n	8008132 <USB_DevInit+0x15a>
 8008148:	803c3800 	.word	0x803c3800

0800814c <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
 800814c:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
 8008150:	f013 0006 	ands.w	r0, r3, #6
 8008154:	d004      	beq.n	8008160 <USB_GetDevSpeed+0x14>
    speed = 0xFU;
 8008156:	f013 0f02 	tst.w	r3, #2
 800815a:	bf14      	ite	ne
 800815c:	2002      	movne	r0, #2
 800815e:	200f      	moveq	r0, #15
}
 8008160:	4770      	bx	lr

08008162 <USB_ActivateEndpoint>:
{
 8008162:	b530      	push	{r4, r5, lr}
  uint32_t epnum = (uint32_t)ep->num;
 8008164:	780c      	ldrb	r4, [r1, #0]
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8008166:	2201      	movs	r2, #1
 8008168:	f004 050f 	and.w	r5, r4, #15
 800816c:	40aa      	lsls	r2, r5
  if (ep->is_in == 1U)
 800816e:	784d      	ldrb	r5, [r1, #1]
 8008170:	2d01      	cmp	r5, #1
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8008172:	f500 6300 	add.w	r3, r0, #2048	@ 0x800
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8008176:	eb00 1044 	add.w	r0, r0, r4, lsl #5
  if (ep->is_in == 1U)
 800817a:	d119      	bne.n	80081b0 <USB_ActivateEndpoint+0x4e>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 800817c:	69dd      	ldr	r5, [r3, #28]
 800817e:	432a      	orrs	r2, r5
 8008180:	61da      	str	r2, [r3, #28]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8008182:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8008186:	041a      	lsls	r2, r3, #16
 8008188:	d410      	bmi.n	80081ac <USB_ActivateEndpoint+0x4a>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 800818a:	688a      	ldr	r2, [r1, #8]
 800818c:	f8d0 5900 	ldr.w	r5, [r0, #2304]	@ 0x900
 8008190:	f3c2 030a 	ubfx	r3, r2, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 8008194:	790a      	ldrb	r2, [r1, #4]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8008196:	432b      	orrs	r3, r5
 8008198:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 800819c:	ea43 5384 	orr.w	r3, r3, r4, lsl #22
 80081a0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80081a4:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80081a8:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 80081ac:	2000      	movs	r0, #0
 80081ae:	bd30      	pop	{r4, r5, pc}
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 80081b0:	69dc      	ldr	r4, [r3, #28]
 80081b2:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
 80081b6:	61da      	str	r2, [r3, #28]
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 80081b8:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 80081bc:	041b      	lsls	r3, r3, #16
 80081be:	d4f5      	bmi.n	80081ac <USB_ActivateEndpoint+0x4a>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 80081c0:	688b      	ldr	r3, [r1, #8]
 80081c2:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 80081c6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80081ca:	4313      	orrs	r3, r2
                                    ((uint32_t)ep->type << 18) |
 80081cc:	790a      	ldrb	r2, [r1, #4]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 80081ce:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 80081d2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80081d6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80081da:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 80081de:	e7e5      	b.n	80081ac <USB_ActivateEndpoint+0x4a>

080081e0 <USB_DeactivateEndpoint>:
{
 80081e0:	b510      	push	{r4, lr}
  uint32_t epnum = (uint32_t)ep->num;
 80081e2:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 80081e4:	7849      	ldrb	r1, [r1, #1]
 80081e6:	2901      	cmp	r1, #1
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 80081e8:	eb00 1342 	add.w	r3, r0, r2, lsl #5
 80081ec:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
 80081f0:	f002 020f 	and.w	r2, r2, #15
  if (ep->is_in == 1U)
 80081f4:	d122      	bne.n	800823c <USB_DeactivateEndpoint+0x5c>
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 80081f6:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 80081fa:	2900      	cmp	r1, #0
 80081fc:	da0b      	bge.n	8008216 <USB_DeactivateEndpoint+0x36>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
 80081fe:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8008202:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8008206:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
 800820a:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 800820e:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8008212:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8008216:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8008218:	2101      	movs	r1, #1
 800821a:	fa01 f202 	lsl.w	r2, r1, r2
 800821e:	ea24 0402 	bic.w	r4, r4, r2
 8008222:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8008224:	69c1      	ldr	r1, [r0, #28]
 8008226:	ea21 0202 	bic.w	r2, r1, r2
 800822a:	61c2      	str	r2, [r0, #28]
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 800822c:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8008230:	4a14      	ldr	r2, [pc, #80]	@ (8008284 <USB_DeactivateEndpoint+0xa4>)
 8008232:	400a      	ands	r2, r1
 8008234:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
}
 8008238:	2000      	movs	r0, #0
 800823a:	bd10      	pop	{r4, pc}
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 800823c:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8008240:	2900      	cmp	r1, #0
 8008242:	da0b      	bge.n	800825c <USB_DeactivateEndpoint+0x7c>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8008244:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8008248:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 800824c:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
 8008250:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8008254:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8008258:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 800825c:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 800825e:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 8008262:	fa01 f202 	lsl.w	r2, r1, r2
 8008266:	ea24 0402 	bic.w	r4, r4, r2
 800826a:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 800826c:	69c1      	ldr	r1, [r0, #28]
 800826e:	ea21 0202 	bic.w	r2, r1, r2
 8008272:	61c2      	str	r2, [r0, #28]
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 8008274:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8008278:	4a03      	ldr	r2, [pc, #12]	@ (8008288 <USB_DeactivateEndpoint+0xa8>)
 800827a:	400a      	ands	r2, r1
 800827c:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
 8008280:	e7da      	b.n	8008238 <USB_DeactivateEndpoint+0x58>
 8008282:	bf00      	nop
 8008284:	ec337800 	.word	0xec337800
 8008288:	eff37800 	.word	0xeff37800

0800828c <USB_EPStopXfer>:
{
 800828c:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 800828e:	2300      	movs	r3, #0
  if (ep->is_in == 1U)
 8008290:	784a      	ldrb	r2, [r1, #1]
  __IO uint32_t count = 0U;
 8008292:	9301      	str	r3, [sp, #4]
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8008294:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8008296:	2a01      	cmp	r2, #1
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8008298:	ea4f 1343 	mov.w	r3, r3, lsl #5
  if (ep->is_in == 1U)
 800829c:	d11e      	bne.n	80082dc <USB_EPStopXfer+0x50>
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800829e:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
 80082a2:	18c1      	adds	r1, r0, r3
 80082a4:	58c2      	ldr	r2, [r0, r3]
 80082a6:	2a00      	cmp	r2, #0
 80082a8:	db02      	blt.n	80082b0 <USB_EPStopXfer+0x24>
  HAL_StatusTypeDef ret = HAL_OK;
 80082aa:	2000      	movs	r0, #0
}
 80082ac:	b002      	add	sp, #8
 80082ae:	4770      	bx	lr
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
 80082b0:	58c2      	ldr	r2, [r0, r3]
 80082b2:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 80082b6:	50c2      	str	r2, [r0, r3]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
 80082b8:	58c2      	ldr	r2, [r0, r3]
 80082ba:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80082be:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 80082c0:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 80082c4:	9b01      	ldr	r3, [sp, #4]
 80082c6:	3301      	adds	r3, #1
 80082c8:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 80082ca:	9b01      	ldr	r3, [sp, #4]
 80082cc:	4293      	cmp	r3, r2
 80082ce:	d901      	bls.n	80082d4 <USB_EPStopXfer+0x48>
          ret = HAL_ERROR;
 80082d0:	2001      	movs	r0, #1
 80082d2:	e7eb      	b.n	80082ac <USB_EPStopXfer+0x20>
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
 80082d4:	680b      	ldr	r3, [r1, #0]
 80082d6:	2b00      	cmp	r3, #0
 80082d8:	dbf4      	blt.n	80082c4 <USB_EPStopXfer+0x38>
 80082da:	e7e6      	b.n	80082aa <USB_EPStopXfer+0x1e>
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 80082dc:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
 80082e0:	18c1      	adds	r1, r0, r3
 80082e2:	58c2      	ldr	r2, [r0, r3]
 80082e4:	2a00      	cmp	r2, #0
 80082e6:	dae0      	bge.n	80082aa <USB_EPStopXfer+0x1e>
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
 80082e8:	58c2      	ldr	r2, [r0, r3]
 80082ea:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 80082ee:	50c2      	str	r2, [r0, r3]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
 80082f0:	58c2      	ldr	r2, [r0, r3]
 80082f2:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80082f6:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 80082f8:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 80082fc:	9b01      	ldr	r3, [sp, #4]
 80082fe:	3301      	adds	r3, #1
 8008300:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 8008302:	9b01      	ldr	r3, [sp, #4]
 8008304:	4293      	cmp	r3, r2
 8008306:	d8e3      	bhi.n	80082d0 <USB_EPStopXfer+0x44>
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
 8008308:	680b      	ldr	r3, [r1, #0]
 800830a:	2b00      	cmp	r3, #0
 800830c:	dbf6      	blt.n	80082fc <USB_EPStopXfer+0x70>
 800830e:	e7cc      	b.n	80082aa <USB_EPStopXfer+0x1e>

08008310 <USB_WritePacket>:
{
 8008310:	b510      	push	{r4, lr}
 8008312:	f89d 4008 	ldrb.w	r4, [sp, #8]
  if (dma == 0U)
 8008316:	b944      	cbnz	r4, 800832a <USB_WritePacket+0x1a>
    count32b = ((uint32_t)len + 3U) / 4U;
 8008318:	3303      	adds	r3, #3
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 800831a:	3201      	adds	r2, #1
    count32b = ((uint32_t)len + 3U) / 4U;
 800831c:	089b      	lsrs	r3, r3, #2
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 800831e:	eb00 3002 	add.w	r0, r0, r2, lsl #12
 8008322:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    for (i = 0U; i < count32b; i++)
 8008326:	4299      	cmp	r1, r3
 8008328:	d101      	bne.n	800832e <USB_WritePacket+0x1e>
}
 800832a:	2000      	movs	r0, #0
 800832c:	bd10      	pop	{r4, pc}
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 800832e:	f851 2b04 	ldr.w	r2, [r1], #4
 8008332:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
 8008334:	e7f7      	b.n	8008326 <USB_WritePacket+0x16>
	...

08008338 <USB_EPStartXfer>:
{
 8008338:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if (ep->is_in == 1U)
 800833c:	784b      	ldrb	r3, [r1, #1]
    if (ep->xfer_len == 0U)
 800833e:	690c      	ldr	r4, [r1, #16]
        if (ep->type == EP_TYPE_ISOC)
 8008340:	790f      	ldrb	r7, [r1, #4]
 8008342:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 8008534 <USB_EPStartXfer+0x1fc>
 8008346:	f8df 81f0 	ldr.w	r8, [pc, #496]	@ 8008538 <USB_EPStartXfer+0x200>
{
 800834a:	4616      	mov	r6, r2
  uint32_t epnum = (uint32_t)ep->num;
 800834c:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 800834e:	2b01      	cmp	r3, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8008350:	eb00 1542 	add.w	r5, r0, r2, lsl #5
  if (ep->is_in == 1U)
 8008354:	f040 8097 	bne.w	8008486 <USB_EPStartXfer+0x14e>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8008358:	f505 6c10 	add.w	ip, r5, #2304	@ 0x900
 800835c:	f8dc 3010 	ldr.w	r3, [ip, #16]
    if (ep->xfer_len == 0U)
 8008360:	bb74      	cbnz	r4, 80083c0 <USB_EPStartXfer+0x88>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8008362:	ea03 030e 	and.w	r3, r3, lr
 8008366:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 800836a:	f8dc 3010 	ldr.w	r3, [ip, #16]
 800836e:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8008372:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8008376:	f8dc 3010 	ldr.w	r3, [ip, #16]
 800837a:	ea03 0308 	and.w	r3, r3, r8
    if (dma == 1U)
 800837e:	2e01      	cmp	r6, #1
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8008380:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 8008384:	d157      	bne.n	8008436 <USB_EPStartXfer+0xfe>
      if ((uint32_t)ep->dma_addr != 0U)
 8008386:	69cb      	ldr	r3, [r1, #28]
 8008388:	b10b      	cbz	r3, 800838e <USB_EPStartXfer+0x56>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 800838a:	f8cc 3014 	str.w	r3, [ip, #20]
      if (ep->type == EP_TYPE_ISOC)
 800838e:	2f01      	cmp	r7, #1
 8008390:	d10c      	bne.n	80083ac <USB_EPStartXfer+0x74>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8008392:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 8008396:	f413 7f80 	tst.w	r3, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 800839a:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 800839e:	bf0c      	ite	eq
 80083a0:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 80083a4:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 80083a8:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 80083ac:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 80083b0:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80083b4:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
}
 80083b8:	2000      	movs	r0, #0
 80083ba:	b002      	add	sp, #8
 80083bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 80083c0:	ea03 0308 	and.w	r3, r3, r8
 80083c4:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 80083c8:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80083cc:	ea03 030e 	and.w	r3, r3, lr
 80083d0:	f8cc 3010 	str.w	r3, [ip, #16]
        if (ep->xfer_len > ep->maxpacket)
 80083d4:	688b      	ldr	r3, [r1, #8]
      if (epnum == 0U)
 80083d6:	b97a      	cbnz	r2, 80083f8 <USB_EPStartXfer+0xc0>
        if (ep->xfer_len > ep->maxpacket)
 80083d8:	42a3      	cmp	r3, r4
          ep->xfer_len = ep->maxpacket;
 80083da:	bf38      	it	cc
 80083dc:	610b      	strcc	r3, [r1, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 80083de:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80083e2:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (pktcnt << 29));
 80083e6:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 80083ea:	690b      	ldr	r3, [r1, #16]
 80083ec:	f8dc 4010 	ldr.w	r4, [ip, #16]
 80083f0:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80083f4:	4323      	orrs	r3, r4
 80083f6:	e7c2      	b.n	800837e <USB_EPStartXfer+0x46>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 80083f8:	441c      	add	r4, r3
 80083fa:	3c01      	subs	r4, #1
 80083fc:	fbb4 f4f3 	udiv	r4, r4, r3
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (pktcnt << 19));
 8008400:	4b4b      	ldr	r3, [pc, #300]	@ (8008530 <USB_EPStartXfer+0x1f8>)
 8008402:	f8dc e010 	ldr.w	lr, [ip, #16]
 8008406:	fa1f f884 	uxth.w	r8, r4
 800840a:	ea03 44c4 	and.w	r4, r3, r4, lsl #19
 800840e:	ea44 040e 	orr.w	r4, r4, lr
        if (ep->type == EP_TYPE_ISOC)
 8008412:	2f01      	cmp	r7, #1
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (pktcnt << 19));
 8008414:	f8cc 4010 	str.w	r4, [ip, #16]
        if (ep->type == EP_TYPE_ISOC)
 8008418:	d1e7      	bne.n	80083ea <USB_EPStartXfer+0xb2>
          USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
 800841a:	f8dc 3010 	ldr.w	r3, [ip, #16]
 800841e:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 8008422:	f8cc 3010 	str.w	r3, [ip, #16]
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (pktcnt << 29));
 8008426:	f8dc 4010 	ldr.w	r4, [ip, #16]
 800842a:	ea4f 7348 	mov.w	r3, r8, lsl #29
 800842e:	f003 43c0 	and.w	r3, r3, #1610612736	@ 0x60000000
 8008432:	4323      	orrs	r3, r4
 8008434:	e7d7      	b.n	80083e6 <USB_EPStartXfer+0xae>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8008436:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
 800843a:	2f01      	cmp	r7, #1
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 800843c:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8008440:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
        if (ep->xfer_len > 0U)
 8008444:	690b      	ldr	r3, [r1, #16]
      if (ep->type != EP_TYPE_ISOC)
 8008446:	d00b      	beq.n	8008460 <USB_EPStartXfer+0x128>
        if (ep->xfer_len > 0U)
 8008448:	2b00      	cmp	r3, #0
 800844a:	d0b5      	beq.n	80083b8 <USB_EPStartXfer+0x80>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 800844c:	f8d0 1834 	ldr.w	r1, [r0, #2100]	@ 0x834
 8008450:	f002 020f 	and.w	r2, r2, #15
 8008454:	2301      	movs	r3, #1
 8008456:	4093      	lsls	r3, r2
 8008458:	430b      	orrs	r3, r1
 800845a:	f8c0 3834 	str.w	r3, [r0, #2100]	@ 0x834
 800845e:	e7ab      	b.n	80083b8 <USB_EPStartXfer+0x80>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8008460:	f8d0 4808 	ldr.w	r4, [r0, #2056]	@ 0x808
 8008464:	f414 7f80 	tst.w	r4, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8008468:	f8d5 4900 	ldr.w	r4, [r5, #2304]	@ 0x900
 800846c:	bf0c      	ite	eq
 800846e:	f044 5400 	orreq.w	r4, r4, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 8008472:	f044 5480 	orrne.w	r4, r4, #268435456	@ 0x10000000
 8008476:	f8c5 4900 	str.w	r4, [r5, #2304]	@ 0x900
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
 800847a:	9600      	str	r6, [sp, #0]
 800847c:	68c9      	ldr	r1, [r1, #12]
 800847e:	b29b      	uxth	r3, r3
 8008480:	f7ff ff46 	bl	8008310 <USB_WritePacket>
 8008484:	e798      	b.n	80083b8 <USB_EPStartXfer+0x80>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 8008486:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 800848a:	ea03 0308 	and.w	r3, r3, r8
 800848e:	f8c5 3b10 	str.w	r3, [r5, #2832]	@ 0xb10
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 8008492:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 8008496:	ea03 030e 	and.w	r3, r3, lr
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 800849a:	f505 6c30 	add.w	ip, r5, #2816	@ 0xb00
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 800849e:	f8cc 3010 	str.w	r3, [ip, #16]
        ep->xfer_len = ep->maxpacket;
 80084a2:	688b      	ldr	r3, [r1, #8]
    if (epnum == 0U)
 80084a4:	bb5a      	cbnz	r2, 80084fe <USB_EPStartXfer+0x1c6>
      if (ep->xfer_len > 0U)
 80084a6:	b104      	cbz	r4, 80084aa <USB_EPStartXfer+0x172>
        ep->xfer_len = ep->maxpacket;
 80084a8:	610b      	str	r3, [r1, #16]
      ep->xfer_size = ep->maxpacket;
 80084aa:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
 80084ac:	f8dc 2010 	ldr.w	r2, [ip, #16]
 80084b0:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80084b4:	4313      	orrs	r3, r2
 80084b6:	f8cc 3010 	str.w	r3, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 80084ba:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80084be:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
    if (dma == 1U)
 80084c2:	2e01      	cmp	r6, #1
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 80084c4:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 80084c8:	d103      	bne.n	80084d2 <USB_EPStartXfer+0x19a>
      if ((uint32_t)ep->xfer_buff != 0U)
 80084ca:	68cb      	ldr	r3, [r1, #12]
 80084cc:	b10b      	cbz	r3, 80084d2 <USB_EPStartXfer+0x19a>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 80084ce:	f8cc 3014 	str.w	r3, [ip, #20]
    if (ep->type == EP_TYPE_ISOC)
 80084d2:	2f01      	cmp	r7, #1
 80084d4:	d10c      	bne.n	80084f0 <USB_EPStartXfer+0x1b8>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 80084d6:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 80084da:	f413 7f80 	tst.w	r3, #256	@ 0x100
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
 80084de:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 80084e2:	bf0c      	ite	eq
 80084e4:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
 80084e8:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 80084ec:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 80084f0:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 80084f4:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80084f8:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
 80084fc:	e75c      	b.n	80083b8 <USB_EPStartXfer+0x80>
      if (ep->xfer_len == 0U)
 80084fe:	2c00      	cmp	r4, #0
 8008500:	d0d4      	beq.n	80084ac <USB_EPStartXfer+0x174>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8008502:	441c      	add	r4, r3
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8008504:	4a0a      	ldr	r2, [pc, #40]	@ (8008530 <USB_EPStartXfer+0x1f8>)
 8008506:	f8dc e010 	ldr.w	lr, [ip, #16]
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 800850a:	3c01      	subs	r4, #1
 800850c:	fbb4 f4f3 	udiv	r4, r4, r3
 8008510:	b2a4      	uxth	r4, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8008512:	ea02 42c4 	and.w	r2, r2, r4, lsl #19
        ep->xfer_size = ep->maxpacket * pktcnt;
 8008516:	4363      	muls	r3, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8008518:	ea42 020e 	orr.w	r2, r2, lr
        ep->xfer_size = ep->maxpacket * pktcnt;
 800851c:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800851e:	f8cc 2010 	str.w	r2, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 8008522:	f8dc 2010 	ldr.w	r2, [ip, #16]
 8008526:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800852a:	4313      	orrs	r3, r2
 800852c:	e7c9      	b.n	80084c2 <USB_EPStartXfer+0x18a>
 800852e:	bf00      	nop
 8008530:	1ff80000 	.word	0x1ff80000
 8008534:	e007ffff 	.word	0xe007ffff
 8008538:	fff80000 	.word	0xfff80000

0800853c <USB_ReadPacket>:
{
 800853c:	4603      	mov	r3, r0
 800853e:	b570      	push	{r4, r5, r6, lr}
  for (i = 0U; i < count32b; i++)
 8008540:	2000      	movs	r0, #0
  uint32_t count32b = (uint32_t)len >> 2U;
 8008542:	0894      	lsrs	r4, r2, #2
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 8008544:	f503 5580 	add.w	r5, r3, #4096	@ 0x1000
  uint16_t remaining_bytes = len % 4U;
 8008548:	f002 0203 	and.w	r2, r2, #3
  for (i = 0U; i < count32b; i++)
 800854c:	42a0      	cmp	r0, r4
 800854e:	d310      	bcc.n	8008572 <USB_ReadPacket+0x36>
 8008550:	eb01 0084 	add.w	r0, r1, r4, lsl #2
  if (remaining_bytes != 0U)
 8008554:	b162      	cbz	r2, 8008570 <USB_ReadPacket+0x34>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
 8008556:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800855a:	681c      	ldr	r4, [r3, #0]
    i = 0U;
 800855c:	2300      	movs	r3, #0
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
 800855e:	00d9      	lsls	r1, r3, #3
 8008560:	fa24 f101 	lsr.w	r1, r4, r1
 8008564:	54c1      	strb	r1, [r0, r3]
      i++;
 8008566:	3301      	adds	r3, #1
    } while (remaining_bytes != 0U);
 8008568:	b299      	uxth	r1, r3
 800856a:	428a      	cmp	r2, r1
 800856c:	d1f7      	bne.n	800855e <USB_ReadPacket+0x22>
 800856e:	4410      	add	r0, r2
}
 8008570:	bd70      	pop	{r4, r5, r6, pc}
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 8008572:	682e      	ldr	r6, [r5, #0]
 8008574:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
  for (i = 0U; i < count32b; i++)
 8008578:	3001      	adds	r0, #1
 800857a:	e7e7      	b.n	800854c <USB_ReadPacket+0x10>

0800857c <USB_EPSetStall>:
  if (ep->is_in == 1U)
 800857c:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 800857e:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8008580:	2a01      	cmp	r2, #1
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 8008582:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  if (ep->is_in == 1U)
 8008586:	d112      	bne.n	80085ae <USB_EPSetStall+0x32>
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 8008588:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
 800858c:	2a00      	cmp	r2, #0
 800858e:	db06      	blt.n	800859e <USB_EPSetStall+0x22>
 8008590:	b12b      	cbz	r3, 800859e <USB_EPSetStall+0x22>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
 8008592:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8008596:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 800859a:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
 800859e:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 80085a2:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80085a6:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 80085aa:	2000      	movs	r0, #0
 80085ac:	4770      	bx	lr
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
 80085ae:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 80085b2:	2a00      	cmp	r2, #0
 80085b4:	db06      	blt.n	80085c4 <USB_EPSetStall+0x48>
 80085b6:	b12b      	cbz	r3, 80085c4 <USB_EPSetStall+0x48>
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
 80085b8:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 80085bc:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 80085c0:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
 80085c4:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 80085c8:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80085cc:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 80085d0:	e7eb      	b.n	80085aa <USB_EPSetStall+0x2e>

080085d2 <USB_EPClearStall>:
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80085d2:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 80085d4:	784a      	ldrb	r2, [r1, #1]
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80085d6:	eb00 1043 	add.w	r0, r0, r3, lsl #5
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80085da:	790b      	ldrb	r3, [r1, #4]
  if (ep->is_in == 1U)
 80085dc:	2a01      	cmp	r2, #1
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80085de:	f1a3 0302 	sub.w	r3, r3, #2
 80085e2:	b2db      	uxtb	r3, r3
  if (ep->is_in == 1U)
 80085e4:	d10f      	bne.n	8008606 <USB_EPClearStall+0x34>
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80085e6:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80085ea:	2b01      	cmp	r3, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80085ec:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 80085f0:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80085f4:	d805      	bhi.n	8008602 <USB_EPClearStall+0x30>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 80085f6:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 80085fa:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80085fe:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8008602:	2000      	movs	r0, #0
 8008604:	4770      	bx	lr
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8008606:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 800860a:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 800860e:	2b01      	cmp	r3, #1
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8008610:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8008614:	bf9e      	ittt	ls
 8008616:	f8d0 3b00 	ldrls.w	r3, [r0, #2816]	@ 0xb00
 800861a:	f043 5380 	orrls.w	r3, r3, #268435456	@ 0x10000000
 800861e:	f8c0 3b00 	strls.w	r3, [r0, #2816]	@ 0xb00
 8008622:	e7ee      	b.n	8008602 <USB_EPClearStall+0x30>

08008624 <USB_SetDevAddress>:
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
 8008624:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8008628:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 800862c:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
 8008630:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8008634:	0109      	lsls	r1, r1, #4
 8008636:	f401 61fe 	and.w	r1, r1, #2032	@ 0x7f0
 800863a:	4319      	orrs	r1, r3
 800863c:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 8008640:	2000      	movs	r0, #0
 8008642:	4770      	bx	lr

08008644 <USB_DevConnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8008644:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8008648:	f023 0303 	bic.w	r3, r3, #3
 800864c:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
 8008650:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8008654:	f023 0302 	bic.w	r3, r3, #2
 8008658:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 800865c:	2000      	movs	r0, #0
 800865e:	4770      	bx	lr

08008660 <USB_DevDisconnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8008660:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8008664:	f023 0303 	bic.w	r3, r3, #3
 8008668:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 800866c:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8008670:	f043 0302 	orr.w	r3, r3, #2
 8008674:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8008678:	2000      	movs	r0, #0
 800867a:	4770      	bx	lr

0800867c <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
 800867c:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
 800867e:	6980      	ldr	r0, [r0, #24]
}
 8008680:	4010      	ands	r0, r2
 8008682:	4770      	bx	lr

08008684 <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8008684:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8008688:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 800868c:	69c0      	ldr	r0, [r0, #28]
 800868e:	4018      	ands	r0, r3
}
 8008690:	0c00      	lsrs	r0, r0, #16
 8008692:	4770      	bx	lr

08008694 <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8008694:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8008698:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 800869c:	69c0      	ldr	r0, [r0, #28]
 800869e:	4018      	ands	r0, r3
}
 80086a0:	b280      	uxth	r0, r0
 80086a2:	4770      	bx	lr

080086a4 <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 80086a4:	eb00 1141 	add.w	r1, r0, r1, lsl #5
  tmpreg &= USBx_DEVICE->DOEPMSK;
 80086a8:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 80086ac:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	@ 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
 80086b0:	6940      	ldr	r0, [r0, #20]
}
 80086b2:	4010      	ands	r0, r2
 80086b4:	4770      	bx	lr

080086b6 <USB_ReadDevInEPInterrupt>:
  msk = USBx_DEVICE->DIEPMSK;
 80086b6:	f8d0 2810 	ldr.w	r2, [r0, #2064]	@ 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
 80086ba:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80086be:	eb00 1041 	add.w	r0, r0, r1, lsl #5
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80086c2:	f001 010f 	and.w	r1, r1, #15
 80086c6:	40cb      	lsrs	r3, r1
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80086c8:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80086cc:	01db      	lsls	r3, r3, #7
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80086ce:	6880      	ldr	r0, [r0, #8]
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80086d0:	b2db      	uxtb	r3, r3
 80086d2:	4313      	orrs	r3, r2
}
 80086d4:	4018      	ands	r0, r3
 80086d6:	4770      	bx	lr

080086d8 <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
 80086d8:	6940      	ldr	r0, [r0, #20]
}
 80086da:	f000 0001 	and.w	r0, r0, #1
 80086de:	4770      	bx	lr

080086e0 <USB_ActivateSetup>:
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
 80086e0:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 80086e4:	f36f 030a 	bfc	r3, #0, #11
 80086e8:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
 80086ec:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 80086f0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80086f4:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 80086f8:	2000      	movs	r0, #0
 80086fa:	4770      	bx	lr

080086fc <USB_EP0_OutStart>:
{
 80086fc:	b530      	push	{r4, r5, lr}
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 80086fe:	6c05      	ldr	r5, [r0, #64]	@ 0x40
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8008700:	4c10      	ldr	r4, [pc, #64]	@ (8008744 <USB_EP0_OutStart+0x48>)
 8008702:	42a5      	cmp	r5, r4
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8008704:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8008708:	d903      	bls.n	8008712 <USB_EP0_OutStart+0x16>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 800870a:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
 800870e:	2c00      	cmp	r4, #0
 8008710:	db16      	blt.n	8008740 <USB_EP0_OutStart+0x44>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
 8008712:	2400      	movs	r4, #0
 8008714:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8008716:	691c      	ldr	r4, [r3, #16]
 8008718:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
 800871c:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
 800871e:	691c      	ldr	r4, [r3, #16]
 8008720:	f044 0418 	orr.w	r4, r4, #24
 8008724:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8008726:	691c      	ldr	r4, [r3, #16]
  if (dma == 1U)
 8008728:	2901      	cmp	r1, #1
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 800872a:	f044 44c0 	orr.w	r4, r4, #1610612736	@ 0x60000000
 800872e:	611c      	str	r4, [r3, #16]
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
 8008730:	bf01      	itttt	eq
 8008732:	615a      	streq	r2, [r3, #20]
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
 8008734:	f8d0 3b00 	ldreq.w	r3, [r0, #2816]	@ 0xb00
 8008738:	f043 2380 	orreq.w	r3, r3, #2147516416	@ 0x80008000
 800873c:	f8c0 3b00 	streq.w	r3, [r0, #2816]	@ 0xb00
}
 8008740:	2000      	movs	r0, #0
 8008742:	bd30      	pop	{r4, r5, pc}
 8008744:	4f54300a 	.word	0x4f54300a

08008748 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8008748:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800874a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800874e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8008750:	f001 fdf4 	bl	800a33c <xTaskGetSchedulerState>
 8008754:	2801      	cmp	r0, #1
 8008756:	d003      	beq.n	8008760 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8008758:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800875c:	f000 bbe2 	b.w	8008f24 <xPortSysTickHandler>
}
 8008760:	bd08      	pop	{r3, pc}
	...

08008764 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008764:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008768:	b92b      	cbnz	r3, 8008776 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800876a:	4b06      	ldr	r3, [pc, #24]	@ (8008784 <osKernelInitialize+0x20>)
 800876c:	6818      	ldr	r0, [r3, #0]
 800876e:	b928      	cbnz	r0, 800877c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008770:	2201      	movs	r2, #1
 8008772:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8008774:	4770      	bx	lr
    stat = osErrorISR;
 8008776:	f06f 0005 	mvn.w	r0, #5
 800877a:	4770      	bx	lr
    } else {
      stat = osError;
 800877c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8008780:	4770      	bx	lr
 8008782:	bf00      	nop
 8008784:	200034c8 	.word	0x200034c8

08008788 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8008788:	b510      	push	{r4, lr}
 800878a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800878e:	b95c      	cbnz	r4, 80087a8 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8008790:	4b08      	ldr	r3, [pc, #32]	@ (80087b4 <osKernelStart+0x2c>)
 8008792:	681a      	ldr	r2, [r3, #0]
 8008794:	2a01      	cmp	r2, #1
 8008796:	d10a      	bne.n	80087ae <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008798:	4a07      	ldr	r2, [pc, #28]	@ (80087b8 <osKernelStart+0x30>)
 800879a:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800879c:	2202      	movs	r2, #2
 800879e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 80087a0:	f001 fb4a 	bl	8009e38 <vTaskStartScheduler>
      stat = osOK;
 80087a4:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 80087a6:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80087a8:	f06f 0005 	mvn.w	r0, #5
 80087ac:	e7fb      	b.n	80087a6 <osKernelStart+0x1e>
      stat = osError;
 80087ae:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80087b2:	e7f8      	b.n	80087a6 <osKernelStart+0x1e>
 80087b4:	200034c8 	.word	0x200034c8
 80087b8:	e000ed00 	.word	0xe000ed00

080087bc <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80087bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80087be:	b087      	sub	sp, #28
 80087c0:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80087c2:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80087c4:	460b      	mov	r3, r1
  hTask = NULL;
 80087c6:	9205      	str	r2, [sp, #20]
 80087c8:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80087cc:	b9fa      	cbnz	r2, 800880e <osThreadNew+0x52>
 80087ce:	b1f0      	cbz	r0, 800880e <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80087d0:	b354      	cbz	r4, 8008828 <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80087d2:	69a5      	ldr	r5, [r4, #24]
 80087d4:	b125      	cbz	r5, 80087e0 <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80087d6:	1e69      	subs	r1, r5, #1
 80087d8:	2937      	cmp	r1, #55	@ 0x37
 80087da:	d902      	bls.n	80087e2 <osThreadNew+0x26>
        return (NULL);
 80087dc:	2000      	movs	r0, #0
 80087de:	e017      	b.n	8008810 <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 80087e0:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80087e2:	6862      	ldr	r2, [r4, #4]
 80087e4:	07d2      	lsls	r2, r2, #31
 80087e6:	d4f9      	bmi.n	80087dc <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 80087e8:	6966      	ldr	r6, [r4, #20]
 80087ea:	b19e      	cbz	r6, 8008814 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80087ec:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80087ee:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 80087f2:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80087f4:	b187      	cbz	r7, 8008818 <osThreadNew+0x5c>
 80087f6:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 80087fa:	d908      	bls.n	800880e <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80087fc:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80087fe:	b134      	cbz	r4, 800880e <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008800:	b12e      	cbz	r6, 800880e <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008802:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008806:	9500      	str	r5, [sp, #0]
 8008808:	f001 faaf 	bl	8009d6a <xTaskCreateStatic>
 800880c:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800880e:	9805      	ldr	r0, [sp, #20]
}
 8008810:	b007      	add	sp, #28
 8008812:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008814:	2280      	movs	r2, #128	@ 0x80
 8008816:	e7ea      	b.n	80087ee <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008818:	f1bc 0f00 	cmp.w	ip, #0
 800881c:	d1f7      	bne.n	800880e <osThreadNew+0x52>
 800881e:	6924      	ldr	r4, [r4, #16]
 8008820:	2c00      	cmp	r4, #0
 8008822:	d1f4      	bne.n	800880e <osThreadNew+0x52>
 8008824:	460c      	mov	r4, r1
 8008826:	e001      	b.n	800882c <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 8008828:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 800882a:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800882c:	a905      	add	r1, sp, #20
 800882e:	e9cd 5100 	strd	r5, r1, [sp]
 8008832:	b292      	uxth	r2, r2
 8008834:	4621      	mov	r1, r4
 8008836:	f001 fad0 	bl	8009dda <xTaskCreate>
 800883a:	2801      	cmp	r0, #1
            hTask = NULL;
 800883c:	bf1c      	itt	ne
 800883e:	2300      	movne	r3, #0
 8008840:	9305      	strne	r3, [sp, #20]
 8008842:	e7e4      	b.n	800880e <osThreadNew+0x52>

08008844 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8008844:	b508      	push	{r3, lr}
 8008846:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800884a:	b922      	cbnz	r2, 8008856 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800884c:	b108      	cbz	r0, 8008852 <osDelay+0xe>
      vTaskDelay(ticks);
 800884e:	f001 fc51 	bl	800a0f4 <vTaskDelay>
    stat = osOK;
 8008852:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8008854:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8008856:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 800885a:	e7fb      	b.n	8008854 <osDelay+0x10>

0800885c <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800885c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800885e:	4604      	mov	r4, r0
 8008860:	460e      	mov	r6, r1
 8008862:	4615      	mov	r5, r2
 8008864:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008868:	b942      	cbnz	r2, 800887c <osSemaphoreNew+0x20>
 800886a:	b138      	cbz	r0, 800887c <osSemaphoreNew+0x20>
 800886c:	4288      	cmp	r0, r1
 800886e:	d305      	bcc.n	800887c <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8008870:	b155      	cbz	r5, 8008888 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008872:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8008876:	b12b      	cbz	r3, 8008884 <osSemaphoreNew+0x28>
 8008878:	2f4f      	cmp	r7, #79	@ 0x4f
 800887a:	d822      	bhi.n	80088c2 <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 800887c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800887e:	4620      	mov	r0, r4
 8008880:	b003      	add	sp, #12
 8008882:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008884:	2f00      	cmp	r7, #0
 8008886:	d1f9      	bne.n	800887c <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8008888:	2c01      	cmp	r4, #1
 800888a:	d00c      	beq.n	80088a6 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800888c:	4620      	mov	r0, r4
 800888e:	4631      	mov	r1, r6
 8008890:	f000 fd80 	bl	8009394 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008894:	4604      	mov	r4, r0
 8008896:	2800      	cmp	r0, #0
 8008898:	d0f0      	beq.n	800887c <osSemaphoreNew+0x20>
        if (attr != NULL) {
 800889a:	b985      	cbnz	r5, 80088be <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 800889c:	4629      	mov	r1, r5
 800889e:	4620      	mov	r0, r4
 80088a0:	f001 f89e 	bl	80099e0 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80088a4:	e7eb      	b.n	800887e <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 80088a6:	2203      	movs	r2, #3
 80088a8:	2100      	movs	r1, #0
 80088aa:	2001      	movs	r0, #1
 80088ac:	f000 fd29 	bl	8009302 <xQueueGenericCreate>
 80088b0:	e00e      	b.n	80088d0 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80088b2:	461a      	mov	r2, r3
 80088b4:	f000 fd4c 	bl	8009350 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80088b8:	4604      	mov	r4, r0
 80088ba:	2800      	cmp	r0, #0
 80088bc:	d0de      	beq.n	800887c <osSemaphoreNew+0x20>
          name = attr->name;
 80088be:	682d      	ldr	r5, [r5, #0]
 80088c0:	e7ec      	b.n	800889c <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 80088c2:	2801      	cmp	r0, #1
 80088c4:	d1f5      	bne.n	80088b2 <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80088c6:	2103      	movs	r1, #3
 80088c8:	9100      	str	r1, [sp, #0]
 80088ca:	4611      	mov	r1, r2
 80088cc:	f000 fccb 	bl	8009266 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 80088d0:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80088d2:	2800      	cmp	r0, #0
 80088d4:	d0d2      	beq.n	800887c <osSemaphoreNew+0x20>
 80088d6:	2e00      	cmp	r6, #0
 80088d8:	d0df      	beq.n	800889a <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80088da:	2300      	movs	r3, #0
 80088dc:	461a      	mov	r2, r3
 80088de:	4619      	mov	r1, r3
 80088e0:	f000 fd76 	bl	80093d0 <xQueueGenericSend>
 80088e4:	2801      	cmp	r0, #1
 80088e6:	d0d8      	beq.n	800889a <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 80088e8:	4620      	mov	r0, r4
 80088ea:	f001 f8a3 	bl	8009a34 <vQueueDelete>
      if (hSemaphore != NULL) {
 80088ee:	e7c5      	b.n	800887c <osSemaphoreNew+0x20>

080088f0 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80088f0:	b513      	push	{r0, r1, r4, lr}
 80088f2:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80088f4:	b328      	cbz	r0, 8008942 <osSemaphoreAcquire+0x52>
 80088f6:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80088fa:	b1cb      	cbz	r3, 8008930 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 80088fc:	bb09      	cbnz	r1, 8008942 <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80088fe:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008900:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008902:	f001 f820 	bl	8009946 <xQueueReceiveFromISR>
 8008906:	2801      	cmp	r0, #1
 8008908:	d003      	beq.n	8008912 <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 800890a:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800890e:	b002      	add	sp, #8
 8008910:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8008912:	9b01      	ldr	r3, [sp, #4]
 8008914:	b90b      	cbnz	r3, 800891a <osSemaphoreAcquire+0x2a>
  stat = osOK;
 8008916:	2000      	movs	r0, #0
 8008918:	e7f9      	b.n	800890e <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 800891a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800891e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008922:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008926:	f3bf 8f4f 	dsb	sy
 800892a:	f3bf 8f6f 	isb	sy
 800892e:	e7f2      	b.n	8008916 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008930:	f000 ff4c 	bl	80097cc <xQueueSemaphoreTake>
 8008934:	2801      	cmp	r0, #1
 8008936:	d0ee      	beq.n	8008916 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 8008938:	2c00      	cmp	r4, #0
 800893a:	d0e6      	beq.n	800890a <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 800893c:	f06f 0001 	mvn.w	r0, #1
 8008940:	e7e5      	b.n	800890e <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 8008942:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008946:	e7e2      	b.n	800890e <osSemaphoreAcquire+0x1e>

08008948 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008948:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800894a:	b318      	cbz	r0, 8008994 <osSemaphoreRelease+0x4c>
 800894c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008950:	b1cb      	cbz	r3, 8008986 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 8008952:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008954:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008956:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008958:	f000 fe49 	bl	80095ee <xQueueGiveFromISR>
 800895c:	2801      	cmp	r0, #1
 800895e:	d004      	beq.n	800896a <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008960:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8008964:	b003      	add	sp, #12
 8008966:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 800896a:	9b01      	ldr	r3, [sp, #4]
 800896c:	b14b      	cbz	r3, 8008982 <osSemaphoreRelease+0x3a>
 800896e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008972:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008976:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800897a:	f3bf 8f4f 	dsb	sy
 800897e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 8008982:	2000      	movs	r0, #0
 8008984:	e7ee      	b.n	8008964 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008986:	461a      	mov	r2, r3
 8008988:	4619      	mov	r1, r3
 800898a:	f000 fd21 	bl	80093d0 <xQueueGenericSend>
 800898e:	2801      	cmp	r0, #1
 8008990:	d0f7      	beq.n	8008982 <osSemaphoreRelease+0x3a>
 8008992:	e7e5      	b.n	8008960 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 8008994:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008998:	e7e4      	b.n	8008964 <osSemaphoreRelease+0x1c>

0800899a <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800899a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800899c:	4605      	mov	r5, r0
 800899e:	460e      	mov	r6, r1
 80089a0:	4614      	mov	r4, r2
 80089a2:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80089a6:	b11f      	cbz	r7, 80089b0 <osMessageQueueNew+0x16>
  hQueue = NULL;
 80089a8:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80089aa:	4628      	mov	r0, r5
 80089ac:	b003      	add	sp, #12
 80089ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80089b0:	2800      	cmp	r0, #0
 80089b2:	d0f9      	beq.n	80089a8 <osMessageQueueNew+0xe>
 80089b4:	2900      	cmp	r1, #0
 80089b6:	d0f7      	beq.n	80089a8 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 80089b8:	b1da      	cbz	r2, 80089f2 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80089ba:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 80089be:	b183      	cbz	r3, 80089e2 <osMessageQueueNew+0x48>
 80089c0:	2a4f      	cmp	r2, #79	@ 0x4f
 80089c2:	d9f1      	bls.n	80089a8 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80089c4:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80089c6:	2a00      	cmp	r2, #0
 80089c8:	d0ee      	beq.n	80089a8 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80089ca:	6966      	ldr	r6, [r4, #20]
 80089cc:	434d      	muls	r5, r1
 80089ce:	42ae      	cmp	r6, r5
 80089d0:	d3ea      	bcc.n	80089a8 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80089d2:	9700      	str	r7, [sp, #0]
 80089d4:	f000 fc47 	bl	8009266 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80089d8:	4605      	mov	r5, r0
 80089da:	2800      	cmp	r0, #0
 80089dc:	d0e4      	beq.n	80089a8 <osMessageQueueNew+0xe>
        name = attr->name;
 80089de:	6824      	ldr	r4, [r4, #0]
 80089e0:	e011      	b.n	8008a06 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80089e2:	2a00      	cmp	r2, #0
 80089e4:	d1e0      	bne.n	80089a8 <osMessageQueueNew+0xe>
 80089e6:	6923      	ldr	r3, [r4, #16]
 80089e8:	2b00      	cmp	r3, #0
 80089ea:	d1dd      	bne.n	80089a8 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80089ec:	6963      	ldr	r3, [r4, #20]
 80089ee:	2b00      	cmp	r3, #0
 80089f0:	d1da      	bne.n	80089a8 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80089f2:	4628      	mov	r0, r5
 80089f4:	2200      	movs	r2, #0
 80089f6:	4631      	mov	r1, r6
 80089f8:	f000 fc83 	bl	8009302 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80089fc:	4605      	mov	r5, r0
 80089fe:	2800      	cmp	r0, #0
 8008a00:	d0d2      	beq.n	80089a8 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8008a02:	2c00      	cmp	r4, #0
 8008a04:	d1eb      	bne.n	80089de <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8008a06:	4621      	mov	r1, r4
 8008a08:	4628      	mov	r0, r5
 8008a0a:	f000 ffe9 	bl	80099e0 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008a0e:	e7cc      	b.n	80089aa <osMessageQueueNew+0x10>

08008a10 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008a10:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008a12:	461c      	mov	r4, r3
 8008a14:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008a18:	b1de      	cbz	r6, 8008a52 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008a1a:	b338      	cbz	r0, 8008a6c <osMessageQueuePut+0x5c>
 8008a1c:	b331      	cbz	r1, 8008a6c <osMessageQueuePut+0x5c>
 8008a1e:	bb2b      	cbnz	r3, 8008a6c <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008a20:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008a22:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008a24:	f000 fd86 	bl	8009534 <xQueueGenericSendFromISR>
 8008a28:	2801      	cmp	r0, #1
 8008a2a:	d003      	beq.n	8008a34 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 8008a2c:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8008a30:	b002      	add	sp, #8
 8008a32:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008a34:	9b01      	ldr	r3, [sp, #4]
 8008a36:	b90b      	cbnz	r3, 8008a3c <osMessageQueuePut+0x2c>
  stat = osOK;
 8008a38:	2000      	movs	r0, #0
 8008a3a:	e7f9      	b.n	8008a30 <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 8008a3c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008a40:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008a44:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008a48:	f3bf 8f4f 	dsb	sy
 8008a4c:	f3bf 8f6f 	isb	sy
 8008a50:	e7f2      	b.n	8008a38 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008a52:	b158      	cbz	r0, 8008a6c <osMessageQueuePut+0x5c>
 8008a54:	b151      	cbz	r1, 8008a6c <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008a56:	4633      	mov	r3, r6
 8008a58:	4622      	mov	r2, r4
 8008a5a:	f000 fcb9 	bl	80093d0 <xQueueGenericSend>
 8008a5e:	2801      	cmp	r0, #1
 8008a60:	d0ea      	beq.n	8008a38 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 8008a62:	2c00      	cmp	r4, #0
 8008a64:	d0e2      	beq.n	8008a2c <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 8008a66:	f06f 0001 	mvn.w	r0, #1
 8008a6a:	e7e1      	b.n	8008a30 <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 8008a6c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008a70:	e7de      	b.n	8008a30 <osMessageQueuePut+0x20>

08008a72 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008a72:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008a74:	461c      	mov	r4, r3
 8008a76:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008a7a:	b1db      	cbz	r3, 8008ab4 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008a7c:	b330      	cbz	r0, 8008acc <osMessageQueueGet+0x5a>
 8008a7e:	b329      	cbz	r1, 8008acc <osMessageQueueGet+0x5a>
 8008a80:	bb24      	cbnz	r4, 8008acc <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008a82:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008a84:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008a86:	f000 ff5e 	bl	8009946 <xQueueReceiveFromISR>
 8008a8a:	2801      	cmp	r0, #1
 8008a8c:	d003      	beq.n	8008a96 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 8008a8e:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8008a92:	b003      	add	sp, #12
 8008a94:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8008a96:	9b01      	ldr	r3, [sp, #4]
 8008a98:	b90b      	cbnz	r3, 8008a9e <osMessageQueueGet+0x2c>
  stat = osOK;
 8008a9a:	2000      	movs	r0, #0
 8008a9c:	e7f9      	b.n	8008a92 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 8008a9e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008aa2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008aa6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008aaa:	f3bf 8f4f 	dsb	sy
 8008aae:	f3bf 8f6f 	isb	sy
 8008ab2:	e7f2      	b.n	8008a9a <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008ab4:	b150      	cbz	r0, 8008acc <osMessageQueueGet+0x5a>
 8008ab6:	b149      	cbz	r1, 8008acc <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008ab8:	4622      	mov	r2, r4
 8008aba:	f000 fde9 	bl	8009690 <xQueueReceive>
 8008abe:	2801      	cmp	r0, #1
 8008ac0:	d0eb      	beq.n	8008a9a <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 8008ac2:	2c00      	cmp	r4, #0
 8008ac4:	d0e3      	beq.n	8008a8e <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 8008ac6:	f06f 0001 	mvn.w	r0, #1
 8008aca:	e7e2      	b.n	8008a92 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 8008acc:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008ad0:	e7df      	b.n	8008a92 <osMessageQueueGet+0x20>
	...

08008ad4 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008ad4:	4b03      	ldr	r3, [pc, #12]	@ (8008ae4 <vApplicationGetIdleTaskMemory+0x10>)
 8008ad6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008ad8:	4b03      	ldr	r3, [pc, #12]	@ (8008ae8 <vApplicationGetIdleTaskMemory+0x14>)
 8008ada:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008adc:	2380      	movs	r3, #128	@ 0x80
 8008ade:	6013      	str	r3, [r2, #0]
}
 8008ae0:	4770      	bx	lr
 8008ae2:	bf00      	nop
 8008ae4:	20003468 	.word	0x20003468
 8008ae8:	20003268 	.word	0x20003268

08008aec <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008aec:	4b03      	ldr	r3, [pc, #12]	@ (8008afc <vApplicationGetTimerTaskMemory+0x10>)
 8008aee:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008af0:	4b03      	ldr	r3, [pc, #12]	@ (8008b00 <vApplicationGetTimerTaskMemory+0x14>)
 8008af2:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008af4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8008af8:	6013      	str	r3, [r2, #0]
}
 8008afa:	4770      	bx	lr
 8008afc:	20003208 	.word	0x20003208
 8008b00:	20002e08 	.word	0x20002e08

08008b04 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008b04:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008b06:	4b10      	ldr	r3, [pc, #64]	@ (8008b48 <prvInsertBlockIntoFreeList+0x44>)
 8008b08:	461a      	mov	r2, r3
 8008b0a:	681b      	ldr	r3, [r3, #0]
 8008b0c:	4283      	cmp	r3, r0
 8008b0e:	d3fb      	bcc.n	8008b08 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008b10:	6854      	ldr	r4, [r2, #4]
 8008b12:	1911      	adds	r1, r2, r4
 8008b14:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008b16:	bf01      	itttt	eq
 8008b18:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 8008b1a:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008b1c:	1909      	addeq	r1, r1, r4
 8008b1e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008b20:	6844      	ldr	r4, [r0, #4]
 8008b22:	1901      	adds	r1, r0, r4
 8008b24:	428b      	cmp	r3, r1
 8008b26:	d10c      	bne.n	8008b42 <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008b28:	4908      	ldr	r1, [pc, #32]	@ (8008b4c <prvInsertBlockIntoFreeList+0x48>)
 8008b2a:	6809      	ldr	r1, [r1, #0]
 8008b2c:	428b      	cmp	r3, r1
 8008b2e:	d003      	beq.n	8008b38 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008b30:	6859      	ldr	r1, [r3, #4]
 8008b32:	4421      	add	r1, r4
 8008b34:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008b36:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8008b38:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008b3a:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008b3c:	bf18      	it	ne
 8008b3e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008b40:	bd10      	pop	{r4, pc}
 8008b42:	4619      	mov	r1, r3
 8008b44:	e7f8      	b.n	8008b38 <prvInsertBlockIntoFreeList+0x34>
 8008b46:	bf00      	nop
 8008b48:	200034e4 	.word	0x200034e4
 8008b4c:	200034e0 	.word	0x200034e0

08008b50 <pvPortMalloc>:
{
 8008b50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008b54:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008b56:	f001 f9b5 	bl	8009ec4 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008b5a:	4942      	ldr	r1, [pc, #264]	@ (8008c64 <pvPortMalloc+0x114>)
 8008b5c:	4d42      	ldr	r5, [pc, #264]	@ (8008c68 <pvPortMalloc+0x118>)
 8008b5e:	680b      	ldr	r3, [r1, #0]
 8008b60:	bb0b      	cbnz	r3, 8008ba6 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8008b62:	4a42      	ldr	r2, [pc, #264]	@ (8008c6c <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008b64:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008b66:	bf1f      	itttt	ne
 8008b68:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008b6a:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008b6e:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 8008b72:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008b74:	bf0c      	ite	eq
 8008b76:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008b7a:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008b7c:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008b7e:	4e3c      	ldr	r6, [pc, #240]	@ (8008c70 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8008b80:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008b82:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008b86:	2000      	movs	r0, #0
 8008b88:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008b8a:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8008b8c:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008b90:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008b92:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 8008b96:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008b98:	4b36      	ldr	r3, [pc, #216]	@ (8008c74 <pvPortMalloc+0x124>)
 8008b9a:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008b9c:	4b36      	ldr	r3, [pc, #216]	@ (8008c78 <pvPortMalloc+0x128>)
 8008b9e:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008ba0:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8008ba4:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008ba6:	682e      	ldr	r6, [r5, #0]
 8008ba8:	4226      	tst	r6, r4
 8008baa:	d155      	bne.n	8008c58 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8008bac:	2c00      	cmp	r4, #0
 8008bae:	d046      	beq.n	8008c3e <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8008bb0:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008bb4:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008bb6:	bf1c      	itt	ne
 8008bb8:	f023 0307 	bicne.w	r3, r3, #7
 8008bbc:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008bbe:	2b00      	cmp	r3, #0
 8008bc0:	d04a      	beq.n	8008c58 <pvPortMalloc+0x108>
 8008bc2:	4f2d      	ldr	r7, [pc, #180]	@ (8008c78 <pvPortMalloc+0x128>)
 8008bc4:	683c      	ldr	r4, [r7, #0]
 8008bc6:	429c      	cmp	r4, r3
 8008bc8:	d346      	bcc.n	8008c58 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8008bca:	4a29      	ldr	r2, [pc, #164]	@ (8008c70 <pvPortMalloc+0x120>)
 8008bcc:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008bce:	6868      	ldr	r0, [r5, #4]
 8008bd0:	4298      	cmp	r0, r3
 8008bd2:	d204      	bcs.n	8008bde <pvPortMalloc+0x8e>
 8008bd4:	f8d5 c000 	ldr.w	ip, [r5]
 8008bd8:	f1bc 0f00 	cmp.w	ip, #0
 8008bdc:	d115      	bne.n	8008c0a <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008bde:	6809      	ldr	r1, [r1, #0]
 8008be0:	42a9      	cmp	r1, r5
 8008be2:	d039      	beq.n	8008c58 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008be4:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008be6:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008bea:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008bec:	1ac2      	subs	r2, r0, r3
 8008bee:	2a10      	cmp	r2, #16
 8008bf0:	d912      	bls.n	8008c18 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008bf2:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008bf4:	0741      	lsls	r1, r0, #29
 8008bf6:	d00b      	beq.n	8008c10 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008bf8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008bfc:	f383 8811 	msr	BASEPRI, r3
 8008c00:	f3bf 8f6f 	isb	sy
 8008c04:	f3bf 8f4f 	dsb	sy
 8008c08:	e7fe      	b.n	8008c08 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 8008c0a:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 8008c0c:	4665      	mov	r5, ip
 8008c0e:	e7de      	b.n	8008bce <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008c10:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008c12:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008c14:	f7ff ff76 	bl	8008b04 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008c18:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008c1a:	4916      	ldr	r1, [pc, #88]	@ (8008c74 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008c1c:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008c1e:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 8008c20:	4a16      	ldr	r2, [pc, #88]	@ (8008c7c <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008c22:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008c24:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 8008c26:	2300      	movs	r3, #0
 8008c28:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8008c2a:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008c2c:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008c2e:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 8008c30:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008c34:	bf38      	it	cc
 8008c36:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8008c38:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008c3a:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 8008c3e:	f001 f9e5 	bl	800a00c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008c42:	0763      	lsls	r3, r4, #29
 8008c44:	d00a      	beq.n	8008c5c <pvPortMalloc+0x10c>
 8008c46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c4a:	f383 8811 	msr	BASEPRI, r3
 8008c4e:	f3bf 8f6f 	isb	sy
 8008c52:	f3bf 8f4f 	dsb	sy
 8008c56:	e7fe      	b.n	8008c56 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8008c58:	2400      	movs	r4, #0
 8008c5a:	e7f0      	b.n	8008c3e <pvPortMalloc+0xee>
}
 8008c5c:	4620      	mov	r0, r4
 8008c5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008c62:	bf00      	nop
 8008c64:	200034e0 	.word	0x200034e0
 8008c68:	200034cc 	.word	0x200034cc
 8008c6c:	200034ec 	.word	0x200034ec
 8008c70:	200034e4 	.word	0x200034e4
 8008c74:	200034d8 	.word	0x200034d8
 8008c78:	200034dc 	.word	0x200034dc
 8008c7c:	200034d4 	.word	0x200034d4

08008c80 <vPortFree>:
{
 8008c80:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008c82:	4604      	mov	r4, r0
 8008c84:	b390      	cbz	r0, 8008cec <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008c86:	4a1a      	ldr	r2, [pc, #104]	@ (8008cf0 <vPortFree+0x70>)
 8008c88:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008c8c:	6812      	ldr	r2, [r2, #0]
 8008c8e:	4213      	tst	r3, r2
 8008c90:	d108      	bne.n	8008ca4 <vPortFree+0x24>
 8008c92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c96:	f383 8811 	msr	BASEPRI, r3
 8008c9a:	f3bf 8f6f 	isb	sy
 8008c9e:	f3bf 8f4f 	dsb	sy
 8008ca2:	e7fe      	b.n	8008ca2 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008ca4:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008ca8:	b141      	cbz	r1, 8008cbc <vPortFree+0x3c>
 8008caa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008cae:	f383 8811 	msr	BASEPRI, r3
 8008cb2:	f3bf 8f6f 	isb	sy
 8008cb6:	f3bf 8f4f 	dsb	sy
 8008cba:	e7fe      	b.n	8008cba <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008cbc:	ea23 0302 	bic.w	r3, r3, r2
 8008cc0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008cc4:	f001 f8fe 	bl	8009ec4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008cc8:	4a0a      	ldr	r2, [pc, #40]	@ (8008cf4 <vPortFree+0x74>)
 8008cca:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008cce:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008cd0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008cd4:	440b      	add	r3, r1
 8008cd6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008cd8:	f7ff ff14 	bl	8008b04 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8008cdc:	4a06      	ldr	r2, [pc, #24]	@ (8008cf8 <vPortFree+0x78>)
 8008cde:	6813      	ldr	r3, [r2, #0]
}
 8008ce0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8008ce4:	3301      	adds	r3, #1
 8008ce6:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8008ce8:	f001 b990 	b.w	800a00c <xTaskResumeAll>
}
 8008cec:	bd10      	pop	{r4, pc}
 8008cee:	bf00      	nop
 8008cf0:	200034cc 	.word	0x200034cc
 8008cf4:	200034dc 	.word	0x200034dc
 8008cf8:	200034d0 	.word	0x200034d0

08008cfc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008cfc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008d00:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d04:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d08:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008d0a:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008d0c:	2300      	movs	r3, #0
 8008d0e:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008d10:	4770      	bx	lr

08008d12 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008d12:	2300      	movs	r3, #0
 8008d14:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008d16:	4770      	bx	lr

08008d18 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008d18:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008d1a:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008d1c:	689a      	ldr	r2, [r3, #8]
 8008d1e:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008d20:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008d22:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008d24:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008d26:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008d28:	3301      	adds	r3, #1
 8008d2a:	6003      	str	r3, [r0, #0]
}
 8008d2c:	4770      	bx	lr

08008d2e <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008d2e:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008d30:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008d32:	1c63      	adds	r3, r4, #1
 8008d34:	d10a      	bne.n	8008d4c <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008d36:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008d38:	685a      	ldr	r2, [r3, #4]
 8008d3a:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008d3c:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008d3e:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008d40:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008d42:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008d44:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008d46:	3301      	adds	r3, #1
 8008d48:	6003      	str	r3, [r0, #0]
}
 8008d4a:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008d4c:	f100 0208 	add.w	r2, r0, #8
 8008d50:	4613      	mov	r3, r2
 8008d52:	6852      	ldr	r2, [r2, #4]
 8008d54:	6815      	ldr	r5, [r2, #0]
 8008d56:	42a5      	cmp	r5, r4
 8008d58:	d9fa      	bls.n	8008d50 <vListInsert+0x22>
 8008d5a:	e7ed      	b.n	8008d38 <vListInsert+0xa>

08008d5c <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008d5c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008d60:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008d62:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008d64:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008d66:	6859      	ldr	r1, [r3, #4]
 8008d68:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008d6a:	bf08      	it	eq
 8008d6c:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008d6e:	2200      	movs	r2, #0
 8008d70:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008d72:	681a      	ldr	r2, [r3, #0]
 8008d74:	3a01      	subs	r2, #1
 8008d76:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008d78:	6818      	ldr	r0, [r3, #0]
}
 8008d7a:	4770      	bx	lr

08008d7c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008d7c:	4808      	ldr	r0, [pc, #32]	@ (8008da0 <prvPortStartFirstTask+0x24>)
 8008d7e:	6800      	ldr	r0, [r0, #0]
 8008d80:	6800      	ldr	r0, [r0, #0]
 8008d82:	f380 8808 	msr	MSP, r0
 8008d86:	f04f 0000 	mov.w	r0, #0
 8008d8a:	f380 8814 	msr	CONTROL, r0
 8008d8e:	b662      	cpsie	i
 8008d90:	b661      	cpsie	f
 8008d92:	f3bf 8f4f 	dsb	sy
 8008d96:	f3bf 8f6f 	isb	sy
 8008d9a:	df00      	svc	0
 8008d9c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008d9e:	0000      	.short	0x0000
 8008da0:	e000ed08 	.word	0xe000ed08

08008da4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008da4:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8008db4 <vPortEnableVFP+0x10>
 8008da8:	6801      	ldr	r1, [r0, #0]
 8008daa:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8008dae:	6001      	str	r1, [r0, #0]
 8008db0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008db2:	0000      	.short	0x0000
 8008db4:	e000ed88 	.word	0xe000ed88

08008db8 <prvTaskExitError>:
{
 8008db8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008dba:	2300      	movs	r3, #0
 8008dbc:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008dbe:	4b0d      	ldr	r3, [pc, #52]	@ (8008df4 <prvTaskExitError+0x3c>)
 8008dc0:	681b      	ldr	r3, [r3, #0]
 8008dc2:	3301      	adds	r3, #1
 8008dc4:	d008      	beq.n	8008dd8 <prvTaskExitError+0x20>
 8008dc6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dca:	f383 8811 	msr	BASEPRI, r3
 8008dce:	f3bf 8f6f 	isb	sy
 8008dd2:	f3bf 8f4f 	dsb	sy
 8008dd6:	e7fe      	b.n	8008dd6 <prvTaskExitError+0x1e>
 8008dd8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ddc:	f383 8811 	msr	BASEPRI, r3
 8008de0:	f3bf 8f6f 	isb	sy
 8008de4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008de8:	9b01      	ldr	r3, [sp, #4]
 8008dea:	2b00      	cmp	r3, #0
 8008dec:	d0fc      	beq.n	8008de8 <prvTaskExitError+0x30>
}
 8008dee:	b002      	add	sp, #8
 8008df0:	4770      	bx	lr
 8008df2:	bf00      	nop
 8008df4:	200000d8 	.word	0x200000d8

08008df8 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008df8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8008dfc:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008e00:	4b07      	ldr	r3, [pc, #28]	@ (8008e20 <pxPortInitialiseStack+0x28>)
 8008e02:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008e06:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008e0a:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008e0e:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008e12:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008e16:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8008e1a:	3844      	subs	r0, #68	@ 0x44
 8008e1c:	4770      	bx	lr
 8008e1e:	bf00      	nop
 8008e20:	08008db9 	.word	0x08008db9
	...

08008e30 <SVC_Handler>:
	__asm volatile (
 8008e30:	4b07      	ldr	r3, [pc, #28]	@ (8008e50 <pxCurrentTCBConst2>)
 8008e32:	6819      	ldr	r1, [r3, #0]
 8008e34:	6808      	ldr	r0, [r1, #0]
 8008e36:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e3a:	f380 8809 	msr	PSP, r0
 8008e3e:	f3bf 8f6f 	isb	sy
 8008e42:	f04f 0000 	mov.w	r0, #0
 8008e46:	f380 8811 	msr	BASEPRI, r0
 8008e4a:	4770      	bx	lr
 8008e4c:	f3af 8000 	nop.w

08008e50 <pxCurrentTCBConst2>:
 8008e50:	20013a2c 	.word	0x20013a2c

08008e54 <vPortEnterCritical>:
 8008e54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e58:	f383 8811 	msr	BASEPRI, r3
 8008e5c:	f3bf 8f6f 	isb	sy
 8008e60:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008e64:	4a0a      	ldr	r2, [pc, #40]	@ (8008e90 <vPortEnterCritical+0x3c>)
 8008e66:	6813      	ldr	r3, [r2, #0]
 8008e68:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008e6a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008e6c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008e6e:	d10e      	bne.n	8008e8e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008e70:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008e74:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8008e78:	b2db      	uxtb	r3, r3
 8008e7a:	b143      	cbz	r3, 8008e8e <vPortEnterCritical+0x3a>
 8008e7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e80:	f383 8811 	msr	BASEPRI, r3
 8008e84:	f3bf 8f6f 	isb	sy
 8008e88:	f3bf 8f4f 	dsb	sy
 8008e8c:	e7fe      	b.n	8008e8c <vPortEnterCritical+0x38>
}
 8008e8e:	4770      	bx	lr
 8008e90:	200000d8 	.word	0x200000d8

08008e94 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008e94:	4a08      	ldr	r2, [pc, #32]	@ (8008eb8 <vPortExitCritical+0x24>)
 8008e96:	6813      	ldr	r3, [r2, #0]
 8008e98:	b943      	cbnz	r3, 8008eac <vPortExitCritical+0x18>
 8008e9a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e9e:	f383 8811 	msr	BASEPRI, r3
 8008ea2:	f3bf 8f6f 	isb	sy
 8008ea6:	f3bf 8f4f 	dsb	sy
 8008eaa:	e7fe      	b.n	8008eaa <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008eac:	3b01      	subs	r3, #1
 8008eae:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008eb0:	b90b      	cbnz	r3, 8008eb6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008eb2:	f383 8811 	msr	BASEPRI, r3
}
 8008eb6:	4770      	bx	lr
 8008eb8:	200000d8 	.word	0x200000d8
 8008ebc:	00000000 	.word	0x00000000

08008ec0 <PendSV_Handler>:
	__asm volatile
 8008ec0:	f3ef 8009 	mrs	r0, PSP
 8008ec4:	f3bf 8f6f 	isb	sy
 8008ec8:	4b15      	ldr	r3, [pc, #84]	@ (8008f20 <pxCurrentTCBConst>)
 8008eca:	681a      	ldr	r2, [r3, #0]
 8008ecc:	f01e 0f10 	tst.w	lr, #16
 8008ed0:	bf08      	it	eq
 8008ed2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008ed6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008eda:	6010      	str	r0, [r2, #0]
 8008edc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008ee0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8008ee4:	f380 8811 	msr	BASEPRI, r0
 8008ee8:	f3bf 8f4f 	dsb	sy
 8008eec:	f3bf 8f6f 	isb	sy
 8008ef0:	f001 f924 	bl	800a13c <vTaskSwitchContext>
 8008ef4:	f04f 0000 	mov.w	r0, #0
 8008ef8:	f380 8811 	msr	BASEPRI, r0
 8008efc:	bc09      	pop	{r0, r3}
 8008efe:	6819      	ldr	r1, [r3, #0]
 8008f00:	6808      	ldr	r0, [r1, #0]
 8008f02:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f06:	f01e 0f10 	tst.w	lr, #16
 8008f0a:	bf08      	it	eq
 8008f0c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008f10:	f380 8809 	msr	PSP, r0
 8008f14:	f3bf 8f6f 	isb	sy
 8008f18:	4770      	bx	lr
 8008f1a:	bf00      	nop
 8008f1c:	f3af 8000 	nop.w

08008f20 <pxCurrentTCBConst>:
 8008f20:	20013a2c 	.word	0x20013a2c

08008f24 <xPortSysTickHandler>:
{
 8008f24:	b508      	push	{r3, lr}
	__asm volatile
 8008f26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f2a:	f383 8811 	msr	BASEPRI, r3
 8008f2e:	f3bf 8f6f 	isb	sy
 8008f32:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008f36:	f000 ffd3 	bl	8009ee0 <xTaskIncrementTick>
 8008f3a:	b128      	cbz	r0, 8008f48 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008f3c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008f40:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008f44:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8008f48:	2300      	movs	r3, #0
 8008f4a:	f383 8811 	msr	BASEPRI, r3
}
 8008f4e:	bd08      	pop	{r3, pc}

08008f50 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008f50:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8008f54:	2300      	movs	r3, #0
 8008f56:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008f58:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008f5a:	4b05      	ldr	r3, [pc, #20]	@ (8008f70 <vPortSetupTimerInterrupt+0x20>)
 8008f5c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8008f60:	681b      	ldr	r3, [r3, #0]
 8008f62:	fbb3 f3f1 	udiv	r3, r3, r1
 8008f66:	3b01      	subs	r3, #1
 8008f68:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008f6a:	2307      	movs	r3, #7
 8008f6c:	6113      	str	r3, [r2, #16]
}
 8008f6e:	4770      	bx	lr
 8008f70:	200000cc 	.word	0x200000cc

08008f74 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008f74:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8008f78:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008f7a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 8008f7e:	4a38      	ldr	r2, [pc, #224]	@ (8009060 <xPortStartScheduler+0xec>)
 8008f80:	4291      	cmp	r1, r2
 8008f82:	d108      	bne.n	8008f96 <xPortStartScheduler+0x22>
	__asm volatile
 8008f84:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008f88:	f383 8811 	msr	BASEPRI, r3
 8008f8c:	f3bf 8f6f 	isb	sy
 8008f90:	f3bf 8f4f 	dsb	sy
 8008f94:	e7fe      	b.n	8008f94 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008f96:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 8008f9a:	4b32      	ldr	r3, [pc, #200]	@ (8009064 <xPortStartScheduler+0xf0>)
 8008f9c:	429a      	cmp	r2, r3
 8008f9e:	d108      	bne.n	8008fb2 <xPortStartScheduler+0x3e>
 8008fa0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008fa4:	f383 8811 	msr	BASEPRI, r3
 8008fa8:	f3bf 8f6f 	isb	sy
 8008fac:	f3bf 8f4f 	dsb	sy
 8008fb0:	e7fe      	b.n	8008fb0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008fb2:	4b2d      	ldr	r3, [pc, #180]	@ (8009068 <xPortStartScheduler+0xf4>)
 8008fb4:	781a      	ldrb	r2, [r3, #0]
 8008fb6:	b2d2      	uxtb	r2, r2
 8008fb8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008fba:	22ff      	movs	r2, #255	@ 0xff
 8008fbc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008fbe:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008fc0:	4a2a      	ldr	r2, [pc, #168]	@ (800906c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008fc2:	b2db      	uxtb	r3, r3
 8008fc4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008fc8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008fcc:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8008fd0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008fd2:	4a27      	ldr	r2, [pc, #156]	@ (8009070 <xPortStartScheduler+0xfc>)
 8008fd4:	2307      	movs	r3, #7
 8008fd6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008fd8:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 8008fdc:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008fde:	0609      	lsls	r1, r1, #24
 8008fe0:	d40a      	bmi.n	8008ff8 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008fe2:	2b03      	cmp	r3, #3
 8008fe4:	d011      	beq.n	800900a <xPortStartScheduler+0x96>
 8008fe6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008fea:	f383 8811 	msr	BASEPRI, r3
 8008fee:	f3bf 8f6f 	isb	sy
 8008ff2:	f3bf 8f4f 	dsb	sy
 8008ff6:	e7fe      	b.n	8008ff6 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 8008ff8:	3b01      	subs	r3, #1
 8008ffa:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008ffc:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009000:	005b      	lsls	r3, r3, #1
 8009002:	b2db      	uxtb	r3, r3
 8009004:	f88d 3003 	strb.w	r3, [sp, #3]
 8009008:	e7e6      	b.n	8008fd8 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800900a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800900e:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8009010:	9b01      	ldr	r3, [sp, #4]
 8009012:	4a15      	ldr	r2, [pc, #84]	@ (8009068 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8009014:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8009018:	b2db      	uxtb	r3, r3
 800901a:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800901c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8009020:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8009024:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8009028:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800902c:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8009030:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8009034:	f7ff ff8c 	bl	8008f50 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8009038:	4b0e      	ldr	r3, [pc, #56]	@ (8009074 <xPortStartScheduler+0x100>)
 800903a:	2500      	movs	r5, #0
 800903c:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800903e:	f7ff feb1 	bl	8008da4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8009042:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8009046:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800904a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 800904e:	f7ff fe95 	bl	8008d7c <prvPortStartFirstTask>
	vTaskSwitchContext();
 8009052:	f001 f873 	bl	800a13c <vTaskSwitchContext>
	prvTaskExitError();
 8009056:	f7ff feaf 	bl	8008db8 <prvTaskExitError>
}
 800905a:	4628      	mov	r0, r5
 800905c:	b003      	add	sp, #12
 800905e:	bd30      	pop	{r4, r5, pc}
 8009060:	410fc271 	.word	0x410fc271
 8009064:	410fc270 	.word	0x410fc270
 8009068:	e000e400 	.word	0xe000e400
 800906c:	200134f0 	.word	0x200134f0
 8009070:	200134ec 	.word	0x200134ec
 8009074:	200000d8 	.word	0x200000d8

08009078 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8009078:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800907c:	2b0f      	cmp	r3, #15
 800907e:	d90e      	bls.n	800909e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8009080:	4a11      	ldr	r2, [pc, #68]	@ (80090c8 <vPortValidateInterruptPriority+0x50>)
 8009082:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8009084:	4a11      	ldr	r2, [pc, #68]	@ (80090cc <vPortValidateInterruptPriority+0x54>)
 8009086:	7812      	ldrb	r2, [r2, #0]
 8009088:	429a      	cmp	r2, r3
 800908a:	d908      	bls.n	800909e <vPortValidateInterruptPriority+0x26>
 800908c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009090:	f383 8811 	msr	BASEPRI, r3
 8009094:	f3bf 8f6f 	isb	sy
 8009098:	f3bf 8f4f 	dsb	sy
 800909c:	e7fe      	b.n	800909c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800909e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80090a2:	4a0b      	ldr	r2, [pc, #44]	@ (80090d0 <vPortValidateInterruptPriority+0x58>)
 80090a4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 80090a8:	6812      	ldr	r2, [r2, #0]
 80090aa:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 80090ae:	4293      	cmp	r3, r2
 80090b0:	d908      	bls.n	80090c4 <vPortValidateInterruptPriority+0x4c>
 80090b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090b6:	f383 8811 	msr	BASEPRI, r3
 80090ba:	f3bf 8f6f 	isb	sy
 80090be:	f3bf 8f4f 	dsb	sy
 80090c2:	e7fe      	b.n	80090c2 <vPortValidateInterruptPriority+0x4a>
	}
 80090c4:	4770      	bx	lr
 80090c6:	bf00      	nop
 80090c8:	e000e3f0 	.word	0xe000e3f0
 80090cc:	200134f0 	.word	0x200134f0
 80090d0:	200134ec 	.word	0x200134ec

080090d4 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80090d4:	b510      	push	{r4, lr}
 80090d6:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80090d8:	f7ff febc 	bl	8008e54 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80090dc:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80090de:	f7ff fed9 	bl	8008e94 <vPortExitCritical>

	return xReturn;
}
 80090e2:	fab4 f084 	clz	r0, r4
 80090e6:	0940      	lsrs	r0, r0, #5
 80090e8:	bd10      	pop	{r4, pc}

080090ea <prvCopyDataToQueue>:
{
 80090ea:	b570      	push	{r4, r5, r6, lr}
 80090ec:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80090ee:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80090f0:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 80090f2:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80090f4:	b942      	cbnz	r2, 8009108 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80090f6:	6806      	ldr	r6, [r0, #0]
 80090f8:	b99e      	cbnz	r6, 8009122 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80090fa:	6880      	ldr	r0, [r0, #8]
 80090fc:	f001 f96c 	bl	800a3d8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8009100:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009102:	3501      	adds	r5, #1
 8009104:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8009106:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8009108:	b96e      	cbnz	r6, 8009126 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800910a:	6840      	ldr	r0, [r0, #4]
 800910c:	f01b fcf5 	bl	8024afa <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009110:	6863      	ldr	r3, [r4, #4]
 8009112:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8009114:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009116:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009118:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800911a:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800911c:	bf24      	itt	cs
 800911e:	6823      	ldrcs	r3, [r4, #0]
 8009120:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8009122:	2000      	movs	r0, #0
 8009124:	e7ed      	b.n	8009102 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8009126:	68c0      	ldr	r0, [r0, #12]
 8009128:	f01b fce7 	bl	8024afa <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800912c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800912e:	68e3      	ldr	r3, [r4, #12]
 8009130:	4251      	negs	r1, r2
 8009132:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009134:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009136:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009138:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800913a:	bf3e      	ittt	cc
 800913c:	68a3      	ldrcc	r3, [r4, #8]
 800913e:	185b      	addcc	r3, r3, r1
 8009140:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8009142:	2e02      	cmp	r6, #2
 8009144:	d1ed      	bne.n	8009122 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009146:	b10d      	cbz	r5, 800914c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8009148:	3d01      	subs	r5, #1
 800914a:	e7ea      	b.n	8009122 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 800914c:	4628      	mov	r0, r5
 800914e:	e7d8      	b.n	8009102 <prvCopyDataToQueue+0x18>

08009150 <prvCopyDataFromQueue>:
{
 8009150:	4603      	mov	r3, r0
 8009152:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009154:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8009156:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009158:	b16a      	cbz	r2, 8009176 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800915a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800915c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800915e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009160:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009162:	bf28      	it	cs
 8009164:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009166:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009168:	bf28      	it	cs
 800916a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800916c:	68d9      	ldr	r1, [r3, #12]
}
 800916e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009172:	f01b bcc2 	b.w	8024afa <memcpy>
}
 8009176:	f85d 4b04 	ldr.w	r4, [sp], #4
 800917a:	4770      	bx	lr

0800917c <prvUnlockQueue>:
{
 800917c:	b570      	push	{r4, r5, r6, lr}
 800917e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8009180:	f7ff fe68 	bl	8008e54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8009184:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009188:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800918c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800918e:	2d00      	cmp	r5, #0
 8009190:	dd01      	ble.n	8009196 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009192:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009194:	b9b3      	cbnz	r3, 80091c4 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 8009196:	23ff      	movs	r3, #255	@ 0xff
 8009198:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 800919c:	f7ff fe7a 	bl	8008e94 <vPortExitCritical>
	taskENTER_CRITICAL();
 80091a0:	f7ff fe58 	bl	8008e54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80091a4:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80091a8:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80091ac:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80091ae:	2d00      	cmp	r5, #0
 80091b0:	dd01      	ble.n	80091b6 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80091b2:	6923      	ldr	r3, [r4, #16]
 80091b4:	b97b      	cbnz	r3, 80091d6 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 80091b6:	23ff      	movs	r3, #255	@ 0xff
 80091b8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 80091bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80091c0:	f7ff be68 	b.w	8008e94 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80091c4:	4630      	mov	r0, r6
 80091c6:	f001 f82b 	bl	800a220 <xTaskRemoveFromEventList>
 80091ca:	b108      	cbz	r0, 80091d0 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 80091cc:	f001 f8b0 	bl	800a330 <vTaskMissedYield>
			--cTxLock;
 80091d0:	3d01      	subs	r5, #1
 80091d2:	b26d      	sxtb	r5, r5
 80091d4:	e7db      	b.n	800918e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80091d6:	4630      	mov	r0, r6
 80091d8:	f001 f822 	bl	800a220 <xTaskRemoveFromEventList>
 80091dc:	b108      	cbz	r0, 80091e2 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 80091de:	f001 f8a7 	bl	800a330 <vTaskMissedYield>
				--cRxLock;
 80091e2:	3d01      	subs	r5, #1
 80091e4:	b26d      	sxtb	r5, r5
 80091e6:	e7e2      	b.n	80091ae <prvUnlockQueue+0x32>

080091e8 <xQueueGenericReset>:
{
 80091e8:	b538      	push	{r3, r4, r5, lr}
 80091ea:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80091ec:	4604      	mov	r4, r0
 80091ee:	b940      	cbnz	r0, 8009202 <xQueueGenericReset+0x1a>
 80091f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80091f4:	f383 8811 	msr	BASEPRI, r3
 80091f8:	f3bf 8f6f 	isb	sy
 80091fc:	f3bf 8f4f 	dsb	sy
 8009200:	e7fe      	b.n	8009200 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009202:	f7ff fe27 	bl	8008e54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009206:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 800920a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800920c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800920e:	434b      	muls	r3, r1
 8009210:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009212:	1a5b      	subs	r3, r3, r1
 8009214:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009216:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 8009218:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800921a:	2000      	movs	r0, #0
 800921c:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800921e:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8009220:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009224:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 8009228:	b9a5      	cbnz	r5, 8009254 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800922a:	6923      	ldr	r3, [r4, #16]
 800922c:	b173      	cbz	r3, 800924c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800922e:	f104 0010 	add.w	r0, r4, #16
 8009232:	f000 fff5 	bl	800a220 <xTaskRemoveFromEventList>
 8009236:	b148      	cbz	r0, 800924c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009238:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800923c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009240:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009244:	f3bf 8f4f 	dsb	sy
 8009248:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800924c:	f7ff fe22 	bl	8008e94 <vPortExitCritical>
}
 8009250:	2001      	movs	r0, #1
 8009252:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009254:	f104 0010 	add.w	r0, r4, #16
 8009258:	f7ff fd50 	bl	8008cfc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800925c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009260:	f7ff fd4c 	bl	8008cfc <vListInitialise>
 8009264:	e7f2      	b.n	800924c <xQueueGenericReset+0x64>

08009266 <xQueueGenericCreateStatic>:
	{
 8009266:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009268:	460d      	mov	r5, r1
 800926a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800926c:	b940      	cbnz	r0, 8009280 <xQueueGenericCreateStatic+0x1a>
 800926e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009272:	f383 8811 	msr	BASEPRI, r3
 8009276:	f3bf 8f6f 	isb	sy
 800927a:	f3bf 8f4f 	dsb	sy
 800927e:	e7fe      	b.n	800927e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8009280:	b943      	cbnz	r3, 8009294 <xQueueGenericCreateStatic+0x2e>
 8009282:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009286:	f383 8811 	msr	BASEPRI, r3
 800928a:	f3bf 8f6f 	isb	sy
 800928e:	f3bf 8f4f 	dsb	sy
 8009292:	e7fe      	b.n	8009292 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8009294:	b14a      	cbz	r2, 80092aa <xQueueGenericCreateStatic+0x44>
 8009296:	b991      	cbnz	r1, 80092be <xQueueGenericCreateStatic+0x58>
 8009298:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800929c:	f383 8811 	msr	BASEPRI, r3
 80092a0:	f3bf 8f6f 	isb	sy
 80092a4:	f3bf 8f4f 	dsb	sy
 80092a8:	e7fe      	b.n	80092a8 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80092aa:	b141      	cbz	r1, 80092be <xQueueGenericCreateStatic+0x58>
 80092ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092b0:	f383 8811 	msr	BASEPRI, r3
 80092b4:	f3bf 8f6f 	isb	sy
 80092b8:	f3bf 8f4f 	dsb	sy
 80092bc:	e7fe      	b.n	80092bc <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80092be:	2350      	movs	r3, #80	@ 0x50
 80092c0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80092c2:	9b01      	ldr	r3, [sp, #4]
 80092c4:	2b50      	cmp	r3, #80	@ 0x50
 80092c6:	d008      	beq.n	80092da <xQueueGenericCreateStatic+0x74>
 80092c8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092cc:	f383 8811 	msr	BASEPRI, r3
 80092d0:	f3bf 8f6f 	isb	sy
 80092d4:	f3bf 8f4f 	dsb	sy
 80092d8:	e7fe      	b.n	80092d8 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80092da:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80092dc:	2d00      	cmp	r5, #0
 80092de:	bf08      	it	eq
 80092e0:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 80092e2:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80092e6:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 80092ea:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80092ec:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80092ee:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80092f0:	f7ff ff7a 	bl	80091e8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80092f4:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80092f8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 80092fc:	4620      	mov	r0, r4
 80092fe:	b003      	add	sp, #12
 8009300:	bd30      	pop	{r4, r5, pc}

08009302 <xQueueGenericCreate>:
	{
 8009302:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009304:	460d      	mov	r5, r1
 8009306:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009308:	4606      	mov	r6, r0
 800930a:	b940      	cbnz	r0, 800931e <xQueueGenericCreate+0x1c>
 800930c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009310:	f383 8811 	msr	BASEPRI, r3
 8009314:	f3bf 8f6f 	isb	sy
 8009318:	f3bf 8f4f 	dsb	sy
 800931c:	e7fe      	b.n	800931c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800931e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009320:	3050      	adds	r0, #80	@ 0x50
 8009322:	f7ff fc15 	bl	8008b50 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009326:	4604      	mov	r4, r0
 8009328:	b170      	cbz	r0, 8009348 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800932a:	2300      	movs	r3, #0
 800932c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009330:	b165      	cbz	r5, 800934c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009332:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009336:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800933a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800933c:	2101      	movs	r1, #1
 800933e:	4620      	mov	r0, r4
 8009340:	f7ff ff52 	bl	80091e8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009344:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8009348:	4620      	mov	r0, r4
 800934a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800934c:	4603      	mov	r3, r0
 800934e:	e7f2      	b.n	8009336 <xQueueGenericCreate+0x34>

08009350 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009350:	b513      	push	{r0, r1, r4, lr}
 8009352:	4613      	mov	r3, r2
 8009354:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009356:	b940      	cbnz	r0, 800936a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009358:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800935c:	f383 8811 	msr	BASEPRI, r3
 8009360:	f3bf 8f6f 	isb	sy
 8009364:	f3bf 8f4f 	dsb	sy
 8009368:	e7fe      	b.n	8009368 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800936a:	4288      	cmp	r0, r1
 800936c:	d208      	bcs.n	8009380 <xQueueCreateCountingSemaphoreStatic+0x30>
 800936e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009372:	f383 8811 	msr	BASEPRI, r3
 8009376:	f3bf 8f6f 	isb	sy
 800937a:	f3bf 8f4f 	dsb	sy
 800937e:	e7fe      	b.n	800937e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009380:	2202      	movs	r2, #2
 8009382:	9200      	str	r2, [sp, #0]
 8009384:	2200      	movs	r2, #0
 8009386:	4611      	mov	r1, r2
 8009388:	f7ff ff6d 	bl	8009266 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800938c:	b100      	cbz	r0, 8009390 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800938e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8009390:	b002      	add	sp, #8
 8009392:	bd10      	pop	{r4, pc}

08009394 <xQueueCreateCountingSemaphore>:
	{
 8009394:	b510      	push	{r4, lr}
 8009396:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009398:	b940      	cbnz	r0, 80093ac <xQueueCreateCountingSemaphore+0x18>
 800939a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800939e:	f383 8811 	msr	BASEPRI, r3
 80093a2:	f3bf 8f6f 	isb	sy
 80093a6:	f3bf 8f4f 	dsb	sy
 80093aa:	e7fe      	b.n	80093aa <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80093ac:	4288      	cmp	r0, r1
 80093ae:	d208      	bcs.n	80093c2 <xQueueCreateCountingSemaphore+0x2e>
 80093b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093b4:	f383 8811 	msr	BASEPRI, r3
 80093b8:	f3bf 8f6f 	isb	sy
 80093bc:	f3bf 8f4f 	dsb	sy
 80093c0:	e7fe      	b.n	80093c0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80093c2:	2202      	movs	r2, #2
 80093c4:	2100      	movs	r1, #0
 80093c6:	f7ff ff9c 	bl	8009302 <xQueueGenericCreate>
		if( xHandle != NULL )
 80093ca:	b100      	cbz	r0, 80093ce <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80093cc:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 80093ce:	bd10      	pop	{r4, pc}

080093d0 <xQueueGenericSend>:
{
 80093d0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80093d4:	460f      	mov	r7, r1
 80093d6:	9201      	str	r2, [sp, #4]
 80093d8:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 80093da:	4604      	mov	r4, r0
 80093dc:	b940      	cbnz	r0, 80093f0 <xQueueGenericSend+0x20>
 80093de:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093e2:	f383 8811 	msr	BASEPRI, r3
 80093e6:	f3bf 8f6f 	isb	sy
 80093ea:	f3bf 8f4f 	dsb	sy
 80093ee:	e7fe      	b.n	80093ee <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80093f0:	b951      	cbnz	r1, 8009408 <xQueueGenericSend+0x38>
 80093f2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80093f4:	b143      	cbz	r3, 8009408 <xQueueGenericSend+0x38>
 80093f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80093fa:	f383 8811 	msr	BASEPRI, r3
 80093fe:	f3bf 8f6f 	isb	sy
 8009402:	f3bf 8f4f 	dsb	sy
 8009406:	e7fe      	b.n	8009406 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8009408:	2e02      	cmp	r6, #2
 800940a:	d10b      	bne.n	8009424 <xQueueGenericSend+0x54>
 800940c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800940e:	2b01      	cmp	r3, #1
 8009410:	d008      	beq.n	8009424 <xQueueGenericSend+0x54>
 8009412:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009416:	f383 8811 	msr	BASEPRI, r3
 800941a:	f3bf 8f6f 	isb	sy
 800941e:	f3bf 8f4f 	dsb	sy
 8009422:	e7fe      	b.n	8009422 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009424:	f000 ff8a 	bl	800a33c <xTaskGetSchedulerState>
 8009428:	4605      	mov	r5, r0
 800942a:	b320      	cbz	r0, 8009476 <xQueueGenericSend+0xa6>
 800942c:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800942e:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8009432:	f7ff fd0f 	bl	8008e54 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009436:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8009438:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800943a:	429a      	cmp	r2, r3
 800943c:	d227      	bcs.n	800948e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800943e:	4632      	mov	r2, r6
 8009440:	4639      	mov	r1, r7
 8009442:	4620      	mov	r0, r4
 8009444:	f7ff fe51 	bl	80090ea <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009448:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800944a:	b11b      	cbz	r3, 8009454 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800944c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009450:	f000 fee6 	bl	800a220 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009454:	b148      	cbz	r0, 800946a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 8009456:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800945a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800945e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009462:	f3bf 8f4f 	dsb	sy
 8009466:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800946a:	f7ff fd13 	bl	8008e94 <vPortExitCritical>
				return pdPASS;
 800946e:	2001      	movs	r0, #1
}
 8009470:	b004      	add	sp, #16
 8009472:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009476:	9b01      	ldr	r3, [sp, #4]
 8009478:	2b00      	cmp	r3, #0
 800947a:	d0d8      	beq.n	800942e <xQueueGenericSend+0x5e>
 800947c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009480:	f383 8811 	msr	BASEPRI, r3
 8009484:	f3bf 8f6f 	isb	sy
 8009488:	f3bf 8f4f 	dsb	sy
 800948c:	e7fe      	b.n	800948c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800948e:	2e02      	cmp	r6, #2
 8009490:	d0d5      	beq.n	800943e <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009492:	9b01      	ldr	r3, [sp, #4]
 8009494:	b91b      	cbnz	r3, 800949e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 8009496:	f7ff fcfd 	bl	8008e94 <vPortExitCritical>
					return errQUEUE_FULL;
 800949a:	2000      	movs	r0, #0
 800949c:	e7e8      	b.n	8009470 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 800949e:	b915      	cbnz	r5, 80094a6 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80094a0:	a802      	add	r0, sp, #8
 80094a2:	f000 fefd 	bl	800a2a0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80094a6:	f7ff fcf5 	bl	8008e94 <vPortExitCritical>
		vTaskSuspendAll();
 80094aa:	f000 fd0b 	bl	8009ec4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80094ae:	f7ff fcd1 	bl	8008e54 <vPortEnterCritical>
 80094b2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80094b6:	2bff      	cmp	r3, #255	@ 0xff
 80094b8:	bf08      	it	eq
 80094ba:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80094be:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80094c2:	2bff      	cmp	r3, #255	@ 0xff
 80094c4:	bf08      	it	eq
 80094c6:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80094ca:	f7ff fce3 	bl	8008e94 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80094ce:	a901      	add	r1, sp, #4
 80094d0:	a802      	add	r0, sp, #8
 80094d2:	f000 fef1 	bl	800a2b8 <xTaskCheckForTimeOut>
 80094d6:	bb38      	cbnz	r0, 8009528 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80094d8:	f7ff fcbc 	bl	8008e54 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80094dc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80094de:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80094e0:	429a      	cmp	r2, r3
 80094e2:	d10e      	bne.n	8009502 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80094e4:	f7ff fcd6 	bl	8008e94 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80094e8:	9901      	ldr	r1, [sp, #4]
 80094ea:	f104 0010 	add.w	r0, r4, #16
 80094ee:	f000 fe5f 	bl	800a1b0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80094f2:	4620      	mov	r0, r4
 80094f4:	f7ff fe42 	bl	800917c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80094f8:	f000 fd88 	bl	800a00c <xTaskResumeAll>
 80094fc:	b148      	cbz	r0, 8009512 <xQueueGenericSend+0x142>
 80094fe:	2501      	movs	r5, #1
 8009500:	e797      	b.n	8009432 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 8009502:	f7ff fcc7 	bl	8008e94 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009506:	4620      	mov	r0, r4
 8009508:	f7ff fe38 	bl	800917c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800950c:	f000 fd7e 	bl	800a00c <xTaskResumeAll>
 8009510:	e7f5      	b.n	80094fe <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 8009512:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009516:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800951a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800951e:	f3bf 8f4f 	dsb	sy
 8009522:	f3bf 8f6f 	isb	sy
 8009526:	e7ea      	b.n	80094fe <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 8009528:	4620      	mov	r0, r4
 800952a:	f7ff fe27 	bl	800917c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800952e:	f000 fd6d 	bl	800a00c <xTaskResumeAll>
			return errQUEUE_FULL;
 8009532:	e7b2      	b.n	800949a <xQueueGenericSend+0xca>

08009534 <xQueueGenericSendFromISR>:
{
 8009534:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009538:	4689      	mov	r9, r1
 800953a:	4617      	mov	r7, r2
 800953c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800953e:	4604      	mov	r4, r0
 8009540:	b940      	cbnz	r0, 8009554 <xQueueGenericSendFromISR+0x20>
 8009542:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009546:	f383 8811 	msr	BASEPRI, r3
 800954a:	f3bf 8f6f 	isb	sy
 800954e:	f3bf 8f4f 	dsb	sy
 8009552:	e7fe      	b.n	8009552 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009554:	b951      	cbnz	r1, 800956c <xQueueGenericSendFromISR+0x38>
 8009556:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009558:	b143      	cbz	r3, 800956c <xQueueGenericSendFromISR+0x38>
 800955a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800955e:	f383 8811 	msr	BASEPRI, r3
 8009562:	f3bf 8f6f 	isb	sy
 8009566:	f3bf 8f4f 	dsb	sy
 800956a:	e7fe      	b.n	800956a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800956c:	2e02      	cmp	r6, #2
 800956e:	d10b      	bne.n	8009588 <xQueueGenericSendFromISR+0x54>
 8009570:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009572:	2b01      	cmp	r3, #1
 8009574:	d008      	beq.n	8009588 <xQueueGenericSendFromISR+0x54>
 8009576:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800957a:	f383 8811 	msr	BASEPRI, r3
 800957e:	f3bf 8f6f 	isb	sy
 8009582:	f3bf 8f4f 	dsb	sy
 8009586:	e7fe      	b.n	8009586 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009588:	f7ff fd76 	bl	8009078 <vPortValidateInterruptPriority>
	__asm volatile
 800958c:	f3ef 8811 	mrs	r8, BASEPRI
 8009590:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009594:	f383 8811 	msr	BASEPRI, r3
 8009598:	f3bf 8f6f 	isb	sy
 800959c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80095a0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80095a2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80095a4:	429a      	cmp	r2, r3
 80095a6:	d301      	bcc.n	80095ac <xQueueGenericSendFromISR+0x78>
 80095a8:	2e02      	cmp	r6, #2
 80095aa:	d11e      	bne.n	80095ea <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 80095ac:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80095b0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80095b2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80095b4:	4632      	mov	r2, r6
 80095b6:	4649      	mov	r1, r9
 80095b8:	4620      	mov	r0, r4
 80095ba:	f7ff fd96 	bl	80090ea <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80095be:	1c6b      	adds	r3, r5, #1
 80095c0:	d10e      	bne.n	80095e0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80095c2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80095c4:	b13b      	cbz	r3, 80095d6 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80095c6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80095ca:	f000 fe29 	bl	800a220 <xTaskRemoveFromEventList>
 80095ce:	b110      	cbz	r0, 80095d6 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 80095d0:	b10f      	cbz	r7, 80095d6 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80095d2:	2301      	movs	r3, #1
 80095d4:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 80095d6:	2001      	movs	r0, #1
	__asm volatile
 80095d8:	f388 8811 	msr	BASEPRI, r8
}
 80095dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80095e0:	3501      	adds	r5, #1
 80095e2:	b26d      	sxtb	r5, r5
 80095e4:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 80095e8:	e7f5      	b.n	80095d6 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 80095ea:	2000      	movs	r0, #0
 80095ec:	e7f4      	b.n	80095d8 <xQueueGenericSendFromISR+0xa4>

080095ee <xQueueGiveFromISR>:
{
 80095ee:	b570      	push	{r4, r5, r6, lr}
 80095f0:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80095f2:	4604      	mov	r4, r0
 80095f4:	b940      	cbnz	r0, 8009608 <xQueueGiveFromISR+0x1a>
	__asm volatile
 80095f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80095fa:	f383 8811 	msr	BASEPRI, r3
 80095fe:	f3bf 8f6f 	isb	sy
 8009602:	f3bf 8f4f 	dsb	sy
 8009606:	e7fe      	b.n	8009606 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009608:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800960a:	b143      	cbz	r3, 800961e <xQueueGiveFromISR+0x30>
 800960c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009610:	f383 8811 	msr	BASEPRI, r3
 8009614:	f3bf 8f6f 	isb	sy
 8009618:	f3bf 8f4f 	dsb	sy
 800961c:	e7fe      	b.n	800961c <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800961e:	6803      	ldr	r3, [r0, #0]
 8009620:	b953      	cbnz	r3, 8009638 <xQueueGiveFromISR+0x4a>
 8009622:	6883      	ldr	r3, [r0, #8]
 8009624:	b143      	cbz	r3, 8009638 <xQueueGiveFromISR+0x4a>
 8009626:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800962a:	f383 8811 	msr	BASEPRI, r3
 800962e:	f3bf 8f6f 	isb	sy
 8009632:	f3bf 8f4f 	dsb	sy
 8009636:	e7fe      	b.n	8009636 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009638:	f7ff fd1e 	bl	8009078 <vPortValidateInterruptPriority>
	__asm volatile
 800963c:	f3ef 8611 	mrs	r6, BASEPRI
 8009640:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009644:	f383 8811 	msr	BASEPRI, r3
 8009648:	f3bf 8f6f 	isb	sy
 800964c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009650:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8009652:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009654:	4293      	cmp	r3, r2
 8009656:	d919      	bls.n	800968c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009658:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800965c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800965e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8009660:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009662:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8009664:	d10d      	bne.n	8009682 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009666:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009668:	b13b      	cbz	r3, 800967a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800966a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800966e:	f000 fdd7 	bl	800a220 <xTaskRemoveFromEventList>
 8009672:	b110      	cbz	r0, 800967a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009674:	b10d      	cbz	r5, 800967a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009676:	2301      	movs	r3, #1
 8009678:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800967a:	2001      	movs	r0, #1
	__asm volatile
 800967c:	f386 8811 	msr	BASEPRI, r6
}
 8009680:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009682:	3301      	adds	r3, #1
 8009684:	b25b      	sxtb	r3, r3
 8009686:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800968a:	e7f6      	b.n	800967a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 800968c:	2000      	movs	r0, #0
 800968e:	e7f5      	b.n	800967c <xQueueGiveFromISR+0x8e>

08009690 <xQueueReceive>:
{
 8009690:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009694:	460e      	mov	r6, r1
 8009696:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009698:	4604      	mov	r4, r0
 800969a:	b940      	cbnz	r0, 80096ae <xQueueReceive+0x1e>
	__asm volatile
 800969c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80096a0:	f383 8811 	msr	BASEPRI, r3
 80096a4:	f3bf 8f6f 	isb	sy
 80096a8:	f3bf 8f4f 	dsb	sy
 80096ac:	e7fe      	b.n	80096ac <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80096ae:	b951      	cbnz	r1, 80096c6 <xQueueReceive+0x36>
 80096b0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80096b2:	b143      	cbz	r3, 80096c6 <xQueueReceive+0x36>
 80096b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80096b8:	f383 8811 	msr	BASEPRI, r3
 80096bc:	f3bf 8f6f 	isb	sy
 80096c0:	f3bf 8f4f 	dsb	sy
 80096c4:	e7fe      	b.n	80096c4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80096c6:	f000 fe39 	bl	800a33c <xTaskGetSchedulerState>
 80096ca:	4605      	mov	r5, r0
 80096cc:	b318      	cbz	r0, 8009716 <xQueueReceive+0x86>
 80096ce:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 80096d0:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 80096d4:	f7ff fbbe 	bl	8008e54 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80096d8:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80096da:	b347      	cbz	r7, 800972e <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80096dc:	4631      	mov	r1, r6
 80096de:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80096e0:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80096e2:	f7ff fd35 	bl	8009150 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80096e6:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80096e8:	6923      	ldr	r3, [r4, #16]
 80096ea:	b173      	cbz	r3, 800970a <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096ec:	f104 0010 	add.w	r0, r4, #16
 80096f0:	f000 fd96 	bl	800a220 <xTaskRemoveFromEventList>
 80096f4:	b148      	cbz	r0, 800970a <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 80096f6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80096fa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80096fe:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009702:	f3bf 8f4f 	dsb	sy
 8009706:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800970a:	f7ff fbc3 	bl	8008e94 <vPortExitCritical>
				return pdPASS;
 800970e:	2001      	movs	r0, #1
}
 8009710:	b004      	add	sp, #16
 8009712:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009716:	9b01      	ldr	r3, [sp, #4]
 8009718:	2b00      	cmp	r3, #0
 800971a:	d0d9      	beq.n	80096d0 <xQueueReceive+0x40>
 800971c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009720:	f383 8811 	msr	BASEPRI, r3
 8009724:	f3bf 8f6f 	isb	sy
 8009728:	f3bf 8f4f 	dsb	sy
 800972c:	e7fe      	b.n	800972c <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800972e:	9b01      	ldr	r3, [sp, #4]
 8009730:	b91b      	cbnz	r3, 800973a <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 8009732:	f7ff fbaf 	bl	8008e94 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009736:	2000      	movs	r0, #0
 8009738:	e7ea      	b.n	8009710 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800973a:	b915      	cbnz	r5, 8009742 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800973c:	a802      	add	r0, sp, #8
 800973e:	f000 fdaf 	bl	800a2a0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009742:	f7ff fba7 	bl	8008e94 <vPortExitCritical>
		vTaskSuspendAll();
 8009746:	f000 fbbd 	bl	8009ec4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800974a:	f7ff fb83 	bl	8008e54 <vPortEnterCritical>
 800974e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009752:	2bff      	cmp	r3, #255	@ 0xff
 8009754:	bf08      	it	eq
 8009756:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800975a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800975e:	2bff      	cmp	r3, #255	@ 0xff
 8009760:	bf08      	it	eq
 8009762:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8009766:	f7ff fb95 	bl	8008e94 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800976a:	a901      	add	r1, sp, #4
 800976c:	a802      	add	r0, sp, #8
 800976e:	f000 fda3 	bl	800a2b8 <xTaskCheckForTimeOut>
 8009772:	bb00      	cbnz	r0, 80097b6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009774:	4620      	mov	r0, r4
 8009776:	f7ff fcad 	bl	80090d4 <prvIsQueueEmpty>
 800977a:	b1b0      	cbz	r0, 80097aa <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800977c:	9901      	ldr	r1, [sp, #4]
 800977e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009782:	f000 fd15 	bl	800a1b0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009786:	4620      	mov	r0, r4
 8009788:	f7ff fcf8 	bl	800917c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800978c:	f000 fc3e 	bl	800a00c <xTaskResumeAll>
 8009790:	b948      	cbnz	r0, 80097a6 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 8009792:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009796:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800979a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800979e:	f3bf 8f4f 	dsb	sy
 80097a2:	f3bf 8f6f 	isb	sy
 80097a6:	2501      	movs	r5, #1
 80097a8:	e794      	b.n	80096d4 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 80097aa:	4620      	mov	r0, r4
 80097ac:	f7ff fce6 	bl	800917c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80097b0:	f000 fc2c 	bl	800a00c <xTaskResumeAll>
 80097b4:	e7f7      	b.n	80097a6 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 80097b6:	4620      	mov	r0, r4
 80097b8:	f7ff fce0 	bl	800917c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80097bc:	f000 fc26 	bl	800a00c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80097c0:	4620      	mov	r0, r4
 80097c2:	f7ff fc87 	bl	80090d4 <prvIsQueueEmpty>
 80097c6:	2800      	cmp	r0, #0
 80097c8:	d0ed      	beq.n	80097a6 <xQueueReceive+0x116>
 80097ca:	e7b4      	b.n	8009736 <xQueueReceive+0xa6>

080097cc <xQueueSemaphoreTake>:
{
 80097cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80097ce:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80097d0:	4604      	mov	r4, r0
{
 80097d2:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80097d4:	b940      	cbnz	r0, 80097e8 <xQueueSemaphoreTake+0x1c>
 80097d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097da:	f383 8811 	msr	BASEPRI, r3
 80097de:	f3bf 8f6f 	isb	sy
 80097e2:	f3bf 8f4f 	dsb	sy
 80097e6:	e7fe      	b.n	80097e6 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80097e8:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 80097ea:	b145      	cbz	r5, 80097fe <xQueueSemaphoreTake+0x32>
 80097ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80097f0:	f383 8811 	msr	BASEPRI, r3
 80097f4:	f3bf 8f6f 	isb	sy
 80097f8:	f3bf 8f4f 	dsb	sy
 80097fc:	e7fe      	b.n	80097fc <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80097fe:	f000 fd9d 	bl	800a33c <xTaskGetSchedulerState>
 8009802:	4606      	mov	r6, r0
 8009804:	b320      	cbz	r0, 8009850 <xQueueSemaphoreTake+0x84>
 8009806:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009808:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800980a:	f7ff fb23 	bl	8008e54 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800980e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009810:	b353      	cbz	r3, 8009868 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009812:	3b01      	subs	r3, #1
 8009814:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009816:	6823      	ldr	r3, [r4, #0]
 8009818:	b913      	cbnz	r3, 8009820 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800981a:	f000 fe6d 	bl	800a4f8 <pvTaskIncrementMutexHeldCount>
 800981e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009820:	6923      	ldr	r3, [r4, #16]
 8009822:	b173      	cbz	r3, 8009842 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009824:	f104 0010 	add.w	r0, r4, #16
 8009828:	f000 fcfa 	bl	800a220 <xTaskRemoveFromEventList>
 800982c:	b148      	cbz	r0, 8009842 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800982e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009832:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009836:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800983a:	f3bf 8f4f 	dsb	sy
 800983e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009842:	f7ff fb27 	bl	8008e94 <vPortExitCritical>
				return pdPASS;
 8009846:	2001      	movs	r0, #1
}
 8009848:	b005      	add	sp, #20
 800984a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800984c:	4635      	mov	r5, r6
 800984e:	e7db      	b.n	8009808 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009850:	9b01      	ldr	r3, [sp, #4]
 8009852:	2b00      	cmp	r3, #0
 8009854:	d0fa      	beq.n	800984c <xQueueSemaphoreTake+0x80>
 8009856:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800985a:	f383 8811 	msr	BASEPRI, r3
 800985e:	f3bf 8f6f 	isb	sy
 8009862:	f3bf 8f4f 	dsb	sy
 8009866:	e7fe      	b.n	8009866 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009868:	9b01      	ldr	r3, [sp, #4]
 800986a:	b953      	cbnz	r3, 8009882 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800986c:	2d00      	cmp	r5, #0
 800986e:	d066      	beq.n	800993e <xQueueSemaphoreTake+0x172>
 8009870:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009874:	f383 8811 	msr	BASEPRI, r3
 8009878:	f3bf 8f6f 	isb	sy
 800987c:	f3bf 8f4f 	dsb	sy
 8009880:	e7fe      	b.n	8009880 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 8009882:	b916      	cbnz	r6, 800988a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009884:	a802      	add	r0, sp, #8
 8009886:	f000 fd0b 	bl	800a2a0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800988a:	f7ff fb03 	bl	8008e94 <vPortExitCritical>
		vTaskSuspendAll();
 800988e:	f000 fb19 	bl	8009ec4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009892:	f7ff fadf 	bl	8008e54 <vPortEnterCritical>
 8009896:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800989a:	2bff      	cmp	r3, #255	@ 0xff
 800989c:	bf08      	it	eq
 800989e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 80098a2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80098a6:	2bff      	cmp	r3, #255	@ 0xff
 80098a8:	bf08      	it	eq
 80098aa:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 80098ae:	f7ff faf1 	bl	8008e94 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80098b2:	a901      	add	r1, sp, #4
 80098b4:	a802      	add	r0, sp, #8
 80098b6:	f000 fcff 	bl	800a2b8 <xTaskCheckForTimeOut>
 80098ba:	bb50      	cbnz	r0, 8009912 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80098bc:	4620      	mov	r0, r4
 80098be:	f7ff fc09 	bl	80090d4 <prvIsQueueEmpty>
 80098c2:	b300      	cbz	r0, 8009906 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80098c4:	6823      	ldr	r3, [r4, #0]
 80098c6:	b93b      	cbnz	r3, 80098d8 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 80098c8:	f7ff fac4 	bl	8008e54 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80098cc:	68a0      	ldr	r0, [r4, #8]
 80098ce:	f000 fd45 	bl	800a35c <xTaskPriorityInherit>
 80098d2:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80098d4:	f7ff fade 	bl	8008e94 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80098d8:	9901      	ldr	r1, [sp, #4]
 80098da:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80098de:	f000 fc67 	bl	800a1b0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80098e2:	4620      	mov	r0, r4
 80098e4:	f7ff fc4a 	bl	800917c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80098e8:	f000 fb90 	bl	800a00c <xTaskResumeAll>
 80098ec:	b948      	cbnz	r0, 8009902 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 80098ee:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80098f2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80098f6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80098fa:	f3bf 8f4f 	dsb	sy
 80098fe:	f3bf 8f6f 	isb	sy
 8009902:	2601      	movs	r6, #1
 8009904:	e781      	b.n	800980a <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 8009906:	4620      	mov	r0, r4
 8009908:	f7ff fc38 	bl	800917c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800990c:	f000 fb7e 	bl	800a00c <xTaskResumeAll>
 8009910:	e7f7      	b.n	8009902 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 8009912:	4620      	mov	r0, r4
 8009914:	f7ff fc32 	bl	800917c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009918:	f000 fb78 	bl	800a00c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800991c:	4620      	mov	r0, r4
 800991e:	f7ff fbd9 	bl	80090d4 <prvIsQueueEmpty>
 8009922:	2800      	cmp	r0, #0
 8009924:	d0ed      	beq.n	8009902 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 8009926:	b165      	cbz	r5, 8009942 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 8009928:	f7ff fa94 	bl	8008e54 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800992c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800992e:	b119      	cbz	r1, 8009938 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8009930:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009932:	6819      	ldr	r1, [r3, #0]
 8009934:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009938:	68a0      	ldr	r0, [r4, #8]
 800993a:	f000 fd8f 	bl	800a45c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800993e:	f7ff faa9 	bl	8008e94 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009942:	2000      	movs	r0, #0
 8009944:	e780      	b.n	8009848 <xQueueSemaphoreTake+0x7c>

08009946 <xQueueReceiveFromISR>:
{
 8009946:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800994a:	4689      	mov	r9, r1
 800994c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800994e:	4604      	mov	r4, r0
 8009950:	b940      	cbnz	r0, 8009964 <xQueueReceiveFromISR+0x1e>
 8009952:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009956:	f383 8811 	msr	BASEPRI, r3
 800995a:	f3bf 8f6f 	isb	sy
 800995e:	f3bf 8f4f 	dsb	sy
 8009962:	e7fe      	b.n	8009962 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009964:	b951      	cbnz	r1, 800997c <xQueueReceiveFromISR+0x36>
 8009966:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8009968:	b143      	cbz	r3, 800997c <xQueueReceiveFromISR+0x36>
 800996a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800996e:	f383 8811 	msr	BASEPRI, r3
 8009972:	f3bf 8f6f 	isb	sy
 8009976:	f3bf 8f4f 	dsb	sy
 800997a:	e7fe      	b.n	800997a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800997c:	f7ff fb7c 	bl	8009078 <vPortValidateInterruptPriority>
	__asm volatile
 8009980:	f3ef 8711 	mrs	r7, BASEPRI
 8009984:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009988:	f383 8811 	msr	BASEPRI, r3
 800998c:	f3bf 8f6f 	isb	sy
 8009990:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009994:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009996:	b30d      	cbz	r5, 80099dc <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009998:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800999c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800999e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80099a0:	4620      	mov	r0, r4
 80099a2:	f7ff fbd5 	bl	8009150 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80099a6:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 80099a8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80099aa:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 80099ac:	d111      	bne.n	80099d2 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80099ae:	6923      	ldr	r3, [r4, #16]
 80099b0:	b153      	cbz	r3, 80099c8 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80099b2:	f104 0010 	add.w	r0, r4, #16
 80099b6:	f000 fc33 	bl	800a220 <xTaskRemoveFromEventList>
 80099ba:	b128      	cbz	r0, 80099c8 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 80099bc:	f1b8 0f00 	cmp.w	r8, #0
 80099c0:	d002      	beq.n	80099c8 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80099c2:	2301      	movs	r3, #1
 80099c4:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 80099c8:	2001      	movs	r0, #1
	__asm volatile
 80099ca:	f387 8811 	msr	BASEPRI, r7
}
 80099ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80099d2:	3601      	adds	r6, #1
 80099d4:	b276      	sxtb	r6, r6
 80099d6:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 80099da:	e7f5      	b.n	80099c8 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 80099dc:	4628      	mov	r0, r5
 80099de:	e7f4      	b.n	80099ca <xQueueReceiveFromISR+0x84>

080099e0 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80099e0:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80099e2:	4a07      	ldr	r2, [pc, #28]	@ (8009a00 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80099e4:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80099e6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80099ea:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80099ee:	b91d      	cbnz	r5, 80099f8 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80099f0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80099f4:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80099f6:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80099f8:	3301      	adds	r3, #1
 80099fa:	2b08      	cmp	r3, #8
 80099fc:	d1f3      	bne.n	80099e6 <vQueueAddToRegistry+0x6>
 80099fe:	e7fa      	b.n	80099f6 <vQueueAddToRegistry+0x16>
 8009a00:	200134f4 	.word	0x200134f4

08009a04 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009a04:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009a06:	4a09      	ldr	r2, [pc, #36]	@ (8009a2c <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009a08:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009a0a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 8009a0e:	4281      	cmp	r1, r0
 8009a10:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8009a14:	d106      	bne.n	8009a24 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009a16:	4a06      	ldr	r2, [pc, #24]	@ (8009a30 <vQueueUnregisterQueue+0x2c>)
 8009a18:	2100      	movs	r1, #0
 8009a1a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8009a1e:	4422      	add	r2, r4
 8009a20:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009a22:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009a24:	3301      	adds	r3, #1
 8009a26:	2b08      	cmp	r3, #8
 8009a28:	d1ef      	bne.n	8009a0a <vQueueUnregisterQueue+0x6>
 8009a2a:	e7fa      	b.n	8009a22 <vQueueUnregisterQueue+0x1e>
 8009a2c:	200134f8 	.word	0x200134f8
 8009a30:	200134f4 	.word	0x200134f4

08009a34 <vQueueDelete>:
{
 8009a34:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009a36:	b940      	cbnz	r0, 8009a4a <vQueueDelete+0x16>
	__asm volatile
 8009a38:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a3c:	f383 8811 	msr	BASEPRI, r3
 8009a40:	f3bf 8f6f 	isb	sy
 8009a44:	f3bf 8f4f 	dsb	sy
 8009a48:	e7fe      	b.n	8009a48 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8009a4a:	f7ff ffdb 	bl	8009a04 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8009a4e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8009a52:	b91b      	cbnz	r3, 8009a5c <vQueueDelete+0x28>
}
 8009a54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009a58:	f7ff b912 	b.w	8008c80 <vPortFree>
}
 8009a5c:	bd10      	pop	{r4, pc}

08009a5e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8009a5e:	b570      	push	{r4, r5, r6, lr}
 8009a60:	4604      	mov	r4, r0
 8009a62:	460d      	mov	r5, r1
 8009a64:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009a66:	f7ff f9f5 	bl	8008e54 <vPortEnterCritical>
 8009a6a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8009a6e:	2bff      	cmp	r3, #255	@ 0xff
 8009a70:	bf04      	itt	eq
 8009a72:	2300      	moveq	r3, #0
 8009a74:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8009a78:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8009a7c:	2bff      	cmp	r3, #255	@ 0xff
 8009a7e:	bf04      	itt	eq
 8009a80:	2300      	moveq	r3, #0
 8009a82:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8009a86:	f7ff fa05 	bl	8008e94 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8009a8a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8009a8c:	b92b      	cbnz	r3, 8009a9a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8009a8e:	4632      	mov	r2, r6
 8009a90:	4629      	mov	r1, r5
 8009a92:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8009a96:	f000 fba5 	bl	800a1e4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8009a9a:	4620      	mov	r0, r4
	}
 8009a9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009aa0:	f7ff bb6c 	b.w	800917c <prvUnlockQueue>

08009aa4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009aa4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009aa8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8009aaa:	f7ff f9d3 	bl	8008e54 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8009aae:	4b30      	ldr	r3, [pc, #192]	@ (8009b70 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009ab0:	4e30      	ldr	r6, [pc, #192]	@ (8009b74 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009ab2:	681a      	ldr	r2, [r3, #0]
 8009ab4:	4f30      	ldr	r7, [pc, #192]	@ (8009b78 <prvAddNewTaskToReadyList+0xd4>)
 8009ab6:	3201      	adds	r2, #1
 8009ab8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8009aba:	6835      	ldr	r5, [r6, #0]
 8009abc:	2d00      	cmp	r5, #0
 8009abe:	d14b      	bne.n	8009b58 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009ac0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009ac2:	681b      	ldr	r3, [r3, #0]
 8009ac4:	2b01      	cmp	r3, #1
 8009ac6:	d11f      	bne.n	8009b08 <prvAddNewTaskToReadyList+0x64>
 8009ac8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009aca:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009acc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009ace:	f7ff f915 	bl	8008cfc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009ad2:	2d38      	cmp	r5, #56	@ 0x38
 8009ad4:	f108 0814 	add.w	r8, r8, #20
 8009ad8:	d1f7      	bne.n	8009aca <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8009ada:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8009ba0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8009ade:	4d27      	ldr	r5, [pc, #156]	@ (8009b7c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009ae0:	4640      	mov	r0, r8
 8009ae2:	f7ff f90b 	bl	8008cfc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009ae6:	4628      	mov	r0, r5
 8009ae8:	f7ff f908 	bl	8008cfc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8009aec:	4824      	ldr	r0, [pc, #144]	@ (8009b80 <prvAddNewTaskToReadyList+0xdc>)
 8009aee:	f7ff f905 	bl	8008cfc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009af2:	4824      	ldr	r0, [pc, #144]	@ (8009b84 <prvAddNewTaskToReadyList+0xe0>)
 8009af4:	f7ff f902 	bl	8008cfc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009af8:	4823      	ldr	r0, [pc, #140]	@ (8009b88 <prvAddNewTaskToReadyList+0xe4>)
 8009afa:	f7ff f8ff 	bl	8008cfc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8009afe:	4b23      	ldr	r3, [pc, #140]	@ (8009b8c <prvAddNewTaskToReadyList+0xe8>)
 8009b00:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009b04:	4b22      	ldr	r3, [pc, #136]	@ (8009b90 <prvAddNewTaskToReadyList+0xec>)
 8009b06:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009b08:	4a22      	ldr	r2, [pc, #136]	@ (8009b94 <prvAddNewTaskToReadyList+0xf0>)
 8009b0a:	6813      	ldr	r3, [r2, #0]
 8009b0c:	3301      	adds	r3, #1
 8009b0e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009b10:	4a21      	ldr	r2, [pc, #132]	@ (8009b98 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009b12:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009b14:	6811      	ldr	r1, [r2, #0]
 8009b16:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009b18:	2014      	movs	r0, #20
 8009b1a:	428b      	cmp	r3, r1
 8009b1c:	fb00 7003 	mla	r0, r0, r3, r7
 8009b20:	f104 0104 	add.w	r1, r4, #4
 8009b24:	bf88      	it	hi
 8009b26:	6013      	strhi	r3, [r2, #0]
 8009b28:	f7ff f8f6 	bl	8008d18 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8009b2c:	f7ff f9b2 	bl	8008e94 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009b30:	4b1a      	ldr	r3, [pc, #104]	@ (8009b9c <prvAddNewTaskToReadyList+0xf8>)
 8009b32:	681b      	ldr	r3, [r3, #0]
 8009b34:	b173      	cbz	r3, 8009b54 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009b36:	6833      	ldr	r3, [r6, #0]
 8009b38:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009b3a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8009b3c:	429a      	cmp	r2, r3
 8009b3e:	d209      	bcs.n	8009b54 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009b40:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009b44:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009b48:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009b4c:	f3bf 8f4f 	dsb	sy
 8009b50:	f3bf 8f6f 	isb	sy
}
 8009b54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009b58:	4b10      	ldr	r3, [pc, #64]	@ (8009b9c <prvAddNewTaskToReadyList+0xf8>)
 8009b5a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009b5c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 8009b5e:	2a00      	cmp	r2, #0
 8009b60:	d1d2      	bne.n	8009b08 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009b62:	6832      	ldr	r2, [r6, #0]
 8009b64:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009b66:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009b68:	bf98      	it	ls
 8009b6a:	6034      	strls	r4, [r6, #0]
 8009b6c:	e7cc      	b.n	8009b08 <prvAddNewTaskToReadyList+0x64>
 8009b6e:	bf00      	nop
 8009b70:	20013558 	.word	0x20013558
 8009b74:	20013a2c 	.word	0x20013a2c
 8009b78:	200135cc 	.word	0x200135cc
 8009b7c:	200135a4 	.word	0x200135a4
 8009b80:	20013588 	.word	0x20013588
 8009b84:	20013574 	.word	0x20013574
 8009b88:	2001355c 	.word	0x2001355c
 8009b8c:	200135a0 	.word	0x200135a0
 8009b90:	2001359c 	.word	0x2001359c
 8009b94:	2001353c 	.word	0x2001353c
 8009b98:	20013550 	.word	0x20013550
 8009b9c:	2001354c 	.word	0x2001354c
 8009ba0:	200135b8 	.word	0x200135b8

08009ba4 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009ba4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009ba6:	4b15      	ldr	r3, [pc, #84]	@ (8009bfc <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009ba8:	4d15      	ldr	r5, [pc, #84]	@ (8009c00 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8009baa:	681c      	ldr	r4, [r3, #0]
{
 8009bac:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009bae:	6828      	ldr	r0, [r5, #0]
 8009bb0:	3004      	adds	r0, #4
{
 8009bb2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009bb4:	f7ff f8d2 	bl	8008d5c <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009bb8:	1c73      	adds	r3, r6, #1
 8009bba:	d107      	bne.n	8009bcc <prvAddCurrentTaskToDelayedList+0x28>
 8009bbc:	b137      	cbz	r7, 8009bcc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009bbe:	6829      	ldr	r1, [r5, #0]
 8009bc0:	4810      	ldr	r0, [pc, #64]	@ (8009c04 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009bc2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009bc6:	3104      	adds	r1, #4
 8009bc8:	f7ff b8a6 	b.w	8008d18 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009bcc:	682b      	ldr	r3, [r5, #0]
 8009bce:	19a4      	adds	r4, r4, r6
 8009bd0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009bd2:	d307      	bcc.n	8009be4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009bd4:	4b0c      	ldr	r3, [pc, #48]	@ (8009c08 <prvAddCurrentTaskToDelayedList+0x64>)
 8009bd6:	6818      	ldr	r0, [r3, #0]
 8009bd8:	6829      	ldr	r1, [r5, #0]
}
 8009bda:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009bde:	3104      	adds	r1, #4
 8009be0:	f7ff b8a5 	b.w	8008d2e <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009be4:	4b09      	ldr	r3, [pc, #36]	@ (8009c0c <prvAddCurrentTaskToDelayedList+0x68>)
 8009be6:	6818      	ldr	r0, [r3, #0]
 8009be8:	6829      	ldr	r1, [r5, #0]
 8009bea:	3104      	adds	r1, #4
 8009bec:	f7ff f89f 	bl	8008d2e <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009bf0:	4b07      	ldr	r3, [pc, #28]	@ (8009c10 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009bf2:	681a      	ldr	r2, [r3, #0]
 8009bf4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009bf6:	bf88      	it	hi
 8009bf8:	601c      	strhi	r4, [r3, #0]
}
 8009bfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009bfc:	20013554 	.word	0x20013554
 8009c00:	20013a2c 	.word	0x20013a2c
 8009c04:	2001355c 	.word	0x2001355c
 8009c08:	2001359c 	.word	0x2001359c
 8009c0c:	200135a0 	.word	0x200135a0
 8009c10:	20013538 	.word	0x20013538

08009c14 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009c14:	4a06      	ldr	r2, [pc, #24]	@ (8009c30 <prvResetNextTaskUnblockTime+0x1c>)
 8009c16:	6813      	ldr	r3, [r2, #0]
 8009c18:	6819      	ldr	r1, [r3, #0]
 8009c1a:	4b06      	ldr	r3, [pc, #24]	@ (8009c34 <prvResetNextTaskUnblockTime+0x20>)
 8009c1c:	b919      	cbnz	r1, 8009c26 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8009c1e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009c22:	601a      	str	r2, [r3, #0]
}
 8009c24:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009c26:	6812      	ldr	r2, [r2, #0]
 8009c28:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009c2a:	68d2      	ldr	r2, [r2, #12]
 8009c2c:	6852      	ldr	r2, [r2, #4]
 8009c2e:	e7f8      	b.n	8009c22 <prvResetNextTaskUnblockTime+0xe>
 8009c30:	200135a0 	.word	0x200135a0
 8009c34:	20013538 	.word	0x20013538

08009c38 <prvDeleteTCB>:
	{
 8009c38:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009c3a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 8009c3e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009c40:	b93b      	cbnz	r3, 8009c52 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8009c42:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8009c44:	f7ff f81c 	bl	8008c80 <vPortFree>
				vPortFree( pxTCB );
 8009c48:	4620      	mov	r0, r4
	}
 8009c4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009c4e:	f7ff b817 	b.w	8008c80 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009c52:	2b01      	cmp	r3, #1
 8009c54:	d0f9      	beq.n	8009c4a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009c56:	2b02      	cmp	r3, #2
 8009c58:	d008      	beq.n	8009c6c <prvDeleteTCB+0x34>
 8009c5a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c5e:	f383 8811 	msr	BASEPRI, r3
 8009c62:	f3bf 8f6f 	isb	sy
 8009c66:	f3bf 8f4f 	dsb	sy
 8009c6a:	e7fe      	b.n	8009c6a <prvDeleteTCB+0x32>
	}
 8009c6c:	bd10      	pop	{r4, pc}
	...

08009c70 <prvIdleTask>:
{
 8009c70:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009c72:	4c13      	ldr	r4, [pc, #76]	@ (8009cc0 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009c74:	4f13      	ldr	r7, [pc, #76]	@ (8009cc4 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8009c76:	4d14      	ldr	r5, [pc, #80]	@ (8009cc8 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009c78:	6823      	ldr	r3, [r4, #0]
 8009c7a:	b973      	cbnz	r3, 8009c9a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009c7c:	4b13      	ldr	r3, [pc, #76]	@ (8009ccc <prvIdleTask+0x5c>)
 8009c7e:	681b      	ldr	r3, [r3, #0]
 8009c80:	2b01      	cmp	r3, #1
 8009c82:	d9f8      	bls.n	8009c76 <prvIdleTask+0x6>
				taskYIELD();
 8009c84:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009c88:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009c8c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8009c90:	f3bf 8f4f 	dsb	sy
 8009c94:	f3bf 8f6f 	isb	sy
 8009c98:	e7ed      	b.n	8009c76 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009c9a:	f7ff f8db 	bl	8008e54 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009c9e:	68fb      	ldr	r3, [r7, #12]
 8009ca0:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009ca2:	1d30      	adds	r0, r6, #4
 8009ca4:	f7ff f85a 	bl	8008d5c <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009ca8:	682b      	ldr	r3, [r5, #0]
 8009caa:	3b01      	subs	r3, #1
 8009cac:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009cae:	6823      	ldr	r3, [r4, #0]
 8009cb0:	3b01      	subs	r3, #1
 8009cb2:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009cb4:	f7ff f8ee 	bl	8008e94 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009cb8:	4630      	mov	r0, r6
 8009cba:	f7ff ffbd 	bl	8009c38 <prvDeleteTCB>
 8009cbe:	e7db      	b.n	8009c78 <prvIdleTask+0x8>
 8009cc0:	20013570 	.word	0x20013570
 8009cc4:	20013574 	.word	0x20013574
 8009cc8:	20013558 	.word	0x20013558
 8009ccc:	200135cc 	.word	0x200135cc

08009cd0 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009cd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009cd4:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009cd8:	0096      	lsls	r6, r2, #2
 8009cda:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009cdc:	4607      	mov	r7, r0
 8009cde:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009ce0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8009ce2:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009ce4:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009ce6:	f01a fe38 	bl	802495a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009cea:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8009cec:	3e04      	subs	r6, #4
 8009cee:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009cf0:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 8009cf4:	b3b5      	cbz	r5, 8009d64 <prvInitialiseNewTask.constprop.0+0x94>
 8009cf6:	1e6b      	subs	r3, r5, #1
 8009cf8:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 8009cfc:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009cfe:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009d02:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 8009d06:	b109      	cbz	r1, 8009d0c <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009d08:	42ab      	cmp	r3, r5
 8009d0a:	d1f8      	bne.n	8009cfe <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009d0c:	2300      	movs	r3, #0
 8009d0e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009d12:	9d08      	ldr	r5, [sp, #32]
 8009d14:	2d37      	cmp	r5, #55	@ 0x37
 8009d16:	bf28      	it	cs
 8009d18:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009d1a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009d1e:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009d20:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009d22:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009d24:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009d28:	f7fe fff3 	bl	8008d12 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009d2c:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009d30:	f104 0018 	add.w	r0, r4, #24
 8009d34:	f7fe ffed 	bl	8008d12 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009d38:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009d3c:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009d3e:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009d40:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009d42:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009d46:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009d4a:	4642      	mov	r2, r8
 8009d4c:	4639      	mov	r1, r7
 8009d4e:	4630      	mov	r0, r6
 8009d50:	f7ff f852 	bl	8008df8 <pxPortInitialiseStack>
 8009d54:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009d56:	f1b9 0f00 	cmp.w	r9, #0
 8009d5a:	d001      	beq.n	8009d60 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009d5c:	f8c9 4000 	str.w	r4, [r9]
}
 8009d60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009d64:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8009d68:	e7d3      	b.n	8009d12 <prvInitialiseNewTask.constprop.0+0x42>

08009d6a <xTaskCreateStatic>:
	{
 8009d6a:	b570      	push	{r4, r5, r6, lr}
 8009d6c:	b086      	sub	sp, #24
 8009d6e:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009d72:	b945      	cbnz	r5, 8009d86 <xTaskCreateStatic+0x1c>
 8009d74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d78:	f383 8811 	msr	BASEPRI, r3
 8009d7c:	f3bf 8f6f 	isb	sy
 8009d80:	f3bf 8f4f 	dsb	sy
 8009d84:	e7fe      	b.n	8009d84 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009d86:	b944      	cbnz	r4, 8009d9a <xTaskCreateStatic+0x30>
 8009d88:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009d8c:	f383 8811 	msr	BASEPRI, r3
 8009d90:	f3bf 8f6f 	isb	sy
 8009d94:	f3bf 8f4f 	dsb	sy
 8009d98:	e7fe      	b.n	8009d98 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009d9a:	2660      	movs	r6, #96	@ 0x60
 8009d9c:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009d9e:	9e05      	ldr	r6, [sp, #20]
 8009da0:	2e60      	cmp	r6, #96	@ 0x60
 8009da2:	d008      	beq.n	8009db6 <xTaskCreateStatic+0x4c>
 8009da4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009da8:	f383 8811 	msr	BASEPRI, r3
 8009dac:	f3bf 8f6f 	isb	sy
 8009db0:	f3bf 8f4f 	dsb	sy
 8009db4:	e7fe      	b.n	8009db4 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009db6:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009db8:	2502      	movs	r5, #2
 8009dba:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009dbe:	ad04      	add	r5, sp, #16
 8009dc0:	9501      	str	r5, [sp, #4]
 8009dc2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8009dc4:	9402      	str	r4, [sp, #8]
 8009dc6:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009dc8:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009dca:	f7ff ff81 	bl	8009cd0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009dce:	4620      	mov	r0, r4
 8009dd0:	f7ff fe68 	bl	8009aa4 <prvAddNewTaskToReadyList>
	}
 8009dd4:	9804      	ldr	r0, [sp, #16]
 8009dd6:	b006      	add	sp, #24
 8009dd8:	bd70      	pop	{r4, r5, r6, pc}

08009dda <xTaskCreate>:
	{
 8009dda:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009dde:	4607      	mov	r7, r0
 8009de0:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009de2:	0090      	lsls	r0, r2, #2
	{
 8009de4:	4688      	mov	r8, r1
 8009de6:	4616      	mov	r6, r2
 8009de8:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009dea:	f7fe feb1 	bl	8008b50 <pvPortMalloc>
			if( pxStack != NULL )
 8009dee:	4605      	mov	r5, r0
 8009df0:	b920      	cbnz	r0, 8009dfc <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009df2:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8009df6:	b005      	add	sp, #20
 8009df8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009dfc:	2060      	movs	r0, #96	@ 0x60
 8009dfe:	f7fe fea7 	bl	8008b50 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009e02:	4604      	mov	r4, r0
 8009e04:	b198      	cbz	r0, 8009e2e <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009e06:	2300      	movs	r3, #0
 8009e08:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009e0c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 8009e0e:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009e10:	9301      	str	r3, [sp, #4]
 8009e12:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009e14:	9002      	str	r0, [sp, #8]
 8009e16:	9300      	str	r3, [sp, #0]
 8009e18:	4632      	mov	r2, r6
 8009e1a:	464b      	mov	r3, r9
 8009e1c:	4641      	mov	r1, r8
 8009e1e:	4638      	mov	r0, r7
 8009e20:	f7ff ff56 	bl	8009cd0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009e24:	4620      	mov	r0, r4
 8009e26:	f7ff fe3d 	bl	8009aa4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009e2a:	2001      	movs	r0, #1
 8009e2c:	e7e3      	b.n	8009df6 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 8009e2e:	4628      	mov	r0, r5
 8009e30:	f7fe ff26 	bl	8008c80 <vPortFree>
		if( pxNewTCB != NULL )
 8009e34:	e7dd      	b.n	8009df2 <xTaskCreate+0x18>
	...

08009e38 <vTaskStartScheduler>:
{
 8009e38:	b510      	push	{r4, lr}
 8009e3a:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009e3c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009e3e:	aa07      	add	r2, sp, #28
 8009e40:	a906      	add	r1, sp, #24
 8009e42:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009e44:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009e48:	f7fe fe44 	bl	8008ad4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009e4c:	9b05      	ldr	r3, [sp, #20]
 8009e4e:	9302      	str	r3, [sp, #8]
 8009e50:	9b06      	ldr	r3, [sp, #24]
 8009e52:	9a07      	ldr	r2, [sp, #28]
 8009e54:	4916      	ldr	r1, [pc, #88]	@ (8009eb0 <vTaskStartScheduler+0x78>)
 8009e56:	4817      	ldr	r0, [pc, #92]	@ (8009eb4 <vTaskStartScheduler+0x7c>)
 8009e58:	e9cd 4300 	strd	r4, r3, [sp]
 8009e5c:	4623      	mov	r3, r4
 8009e5e:	f7ff ff84 	bl	8009d6a <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009e62:	b318      	cbz	r0, 8009eac <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 8009e64:	f000 fba6 	bl	800a5b4 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009e68:	2801      	cmp	r0, #1
 8009e6a:	d114      	bne.n	8009e96 <vTaskStartScheduler+0x5e>
 8009e6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e70:	f383 8811 	msr	BASEPRI, r3
 8009e74:	f3bf 8f6f 	isb	sy
 8009e78:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8009e7c:	4b0e      	ldr	r3, [pc, #56]	@ (8009eb8 <vTaskStartScheduler+0x80>)
 8009e7e:	f04f 32ff 	mov.w	r2, #4294967295
 8009e82:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009e84:	4b0d      	ldr	r3, [pc, #52]	@ (8009ebc <vTaskStartScheduler+0x84>)
 8009e86:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009e88:	4b0d      	ldr	r3, [pc, #52]	@ (8009ec0 <vTaskStartScheduler+0x88>)
 8009e8a:	601c      	str	r4, [r3, #0]
}
 8009e8c:	b008      	add	sp, #32
 8009e8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009e92:	f7ff b86f 	b.w	8008f74 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009e96:	3001      	adds	r0, #1
 8009e98:	d108      	bne.n	8009eac <vTaskStartScheduler+0x74>
 8009e9a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e9e:	f383 8811 	msr	BASEPRI, r3
 8009ea2:	f3bf 8f6f 	isb	sy
 8009ea6:	f3bf 8f4f 	dsb	sy
 8009eaa:	e7fe      	b.n	8009eaa <vTaskStartScheduler+0x72>
}
 8009eac:	b008      	add	sp, #32
 8009eae:	bd10      	pop	{r4, pc}
 8009eb0:	0802636e 	.word	0x0802636e
 8009eb4:	08009c71 	.word	0x08009c71
 8009eb8:	20013538 	.word	0x20013538
 8009ebc:	2001354c 	.word	0x2001354c
 8009ec0:	20013554 	.word	0x20013554

08009ec4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009ec4:	4a02      	ldr	r2, [pc, #8]	@ (8009ed0 <vTaskSuspendAll+0xc>)
 8009ec6:	6813      	ldr	r3, [r2, #0]
 8009ec8:	3301      	adds	r3, #1
 8009eca:	6013      	str	r3, [r2, #0]
}
 8009ecc:	4770      	bx	lr
 8009ece:	bf00      	nop
 8009ed0:	20013534 	.word	0x20013534

08009ed4 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009ed4:	4b01      	ldr	r3, [pc, #4]	@ (8009edc <xTaskGetTickCount+0x8>)
 8009ed6:	6818      	ldr	r0, [r3, #0]
}
 8009ed8:	4770      	bx	lr
 8009eda:	bf00      	nop
 8009edc:	20013554 	.word	0x20013554

08009ee0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009ee0:	4b3f      	ldr	r3, [pc, #252]	@ (8009fe0 <xTaskIncrementTick+0x100>)
 8009ee2:	681b      	ldr	r3, [r3, #0]
{
 8009ee4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009ee8:	2b00      	cmp	r3, #0
 8009eea:	d172      	bne.n	8009fd2 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009eec:	4b3d      	ldr	r3, [pc, #244]	@ (8009fe4 <xTaskIncrementTick+0x104>)
 8009eee:	681c      	ldr	r4, [r3, #0]
 8009ef0:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8009ef2:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009ef4:	b9bc      	cbnz	r4, 8009f26 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009ef6:	4b3c      	ldr	r3, [pc, #240]	@ (8009fe8 <xTaskIncrementTick+0x108>)
 8009ef8:	681a      	ldr	r2, [r3, #0]
 8009efa:	6812      	ldr	r2, [r2, #0]
 8009efc:	b142      	cbz	r2, 8009f10 <xTaskIncrementTick+0x30>
 8009efe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009f02:	f383 8811 	msr	BASEPRI, r3
 8009f06:	f3bf 8f6f 	isb	sy
 8009f0a:	f3bf 8f4f 	dsb	sy
 8009f0e:	e7fe      	b.n	8009f0e <xTaskIncrementTick+0x2e>
 8009f10:	4a36      	ldr	r2, [pc, #216]	@ (8009fec <xTaskIncrementTick+0x10c>)
 8009f12:	6819      	ldr	r1, [r3, #0]
 8009f14:	6810      	ldr	r0, [r2, #0]
 8009f16:	6018      	str	r0, [r3, #0]
 8009f18:	6011      	str	r1, [r2, #0]
 8009f1a:	4a35      	ldr	r2, [pc, #212]	@ (8009ff0 <xTaskIncrementTick+0x110>)
 8009f1c:	6813      	ldr	r3, [r2, #0]
 8009f1e:	3301      	adds	r3, #1
 8009f20:	6013      	str	r3, [r2, #0]
 8009f22:	f7ff fe77 	bl	8009c14 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009f26:	4d33      	ldr	r5, [pc, #204]	@ (8009ff4 <xTaskIncrementTick+0x114>)
 8009f28:	4e33      	ldr	r6, [pc, #204]	@ (8009ff8 <xTaskIncrementTick+0x118>)
 8009f2a:	682b      	ldr	r3, [r5, #0]
 8009f2c:	4f33      	ldr	r7, [pc, #204]	@ (8009ffc <xTaskIncrementTick+0x11c>)
 8009f2e:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 8009f30:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009f34:	d212      	bcs.n	8009f5c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009f36:	683a      	ldr	r2, [r7, #0]
 8009f38:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8009f3a:	2114      	movs	r1, #20
 8009f3c:	434a      	muls	r2, r1
 8009f3e:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8009f40:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 8009f42:	4a2f      	ldr	r2, [pc, #188]	@ (800a000 <xTaskIncrementTick+0x120>)
 8009f44:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8009f46:	bf28      	it	cs
 8009f48:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 8009f4c:	2a00      	cmp	r2, #0
 8009f4e:	bf18      	it	ne
 8009f50:	f04f 0b01 	movne.w	fp, #1
}
 8009f54:	4658      	mov	r0, fp
 8009f56:	b003      	add	sp, #12
 8009f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009f5c:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8009fe8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009f60:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 800a008 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009f64:	f8d9 2000 	ldr.w	r2, [r9]
 8009f68:	6812      	ldr	r2, [r2, #0]
 8009f6a:	b91a      	cbnz	r2, 8009f74 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009f6c:	f04f 32ff 	mov.w	r2, #4294967295
 8009f70:	602a      	str	r2, [r5, #0]
					break;
 8009f72:	e7e0      	b.n	8009f36 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f74:	f8d9 2000 	ldr.w	r2, [r9]
 8009f78:	68d2      	ldr	r2, [r2, #12]
 8009f7a:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009f7e:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8009f82:	428c      	cmp	r4, r1
 8009f84:	d201      	bcs.n	8009f8a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009f86:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009f88:	e7d5      	b.n	8009f36 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009f8a:	f108 0304 	add.w	r3, r8, #4
 8009f8e:	4618      	mov	r0, r3
 8009f90:	9301      	str	r3, [sp, #4]
 8009f92:	f7fe fee3 	bl	8008d5c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009f96:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8009f9a:	b119      	cbz	r1, 8009fa4 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009f9c:	f108 0018 	add.w	r0, r8, #24
 8009fa0:	f7fe fedc 	bl	8008d5c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009fa4:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8009fa8:	f8da 1000 	ldr.w	r1, [sl]
 8009fac:	2314      	movs	r3, #20
 8009fae:	4288      	cmp	r0, r1
 8009fb0:	bf88      	it	hi
 8009fb2:	f8ca 0000 	strhi.w	r0, [sl]
 8009fb6:	9901      	ldr	r1, [sp, #4]
 8009fb8:	fb03 6000 	mla	r0, r3, r0, r6
 8009fbc:	f7fe feac 	bl	8008d18 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009fc0:	6838      	ldr	r0, [r7, #0]
 8009fc2:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8009fc6:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8009fc8:	4291      	cmp	r1, r2
 8009fca:	bf28      	it	cs
 8009fcc:	f04f 0b01 	movcs.w	fp, #1
 8009fd0:	e7c8      	b.n	8009f64 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8009fd2:	4a0c      	ldr	r2, [pc, #48]	@ (800a004 <xTaskIncrementTick+0x124>)
 8009fd4:	6813      	ldr	r3, [r2, #0]
 8009fd6:	3301      	adds	r3, #1
 8009fd8:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009fda:	f04f 0b00 	mov.w	fp, #0
 8009fde:	e7b9      	b.n	8009f54 <xTaskIncrementTick+0x74>
 8009fe0:	20013534 	.word	0x20013534
 8009fe4:	20013554 	.word	0x20013554
 8009fe8:	200135a0 	.word	0x200135a0
 8009fec:	2001359c 	.word	0x2001359c
 8009ff0:	20013540 	.word	0x20013540
 8009ff4:	20013538 	.word	0x20013538
 8009ff8:	200135cc 	.word	0x200135cc
 8009ffc:	20013a2c 	.word	0x20013a2c
 800a000:	20013544 	.word	0x20013544
 800a004:	20013548 	.word	0x20013548
 800a008:	20013550 	.word	0x20013550

0800a00c <xTaskResumeAll>:
{
 800a00c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800a010:	4c30      	ldr	r4, [pc, #192]	@ (800a0d4 <xTaskResumeAll+0xc8>)
 800a012:	6823      	ldr	r3, [r4, #0]
 800a014:	b943      	cbnz	r3, 800a028 <xTaskResumeAll+0x1c>
 800a016:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a01a:	f383 8811 	msr	BASEPRI, r3
 800a01e:	f3bf 8f6f 	isb	sy
 800a022:	f3bf 8f4f 	dsb	sy
 800a026:	e7fe      	b.n	800a026 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 800a028:	f7fe ff14 	bl	8008e54 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800a02c:	6823      	ldr	r3, [r4, #0]
 800a02e:	3b01      	subs	r3, #1
 800a030:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a032:	6824      	ldr	r4, [r4, #0]
 800a034:	b12c      	cbz	r4, 800a042 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 800a036:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a038:	f7fe ff2c 	bl	8008e94 <vPortExitCritical>
}
 800a03c:	4620      	mov	r0, r4
 800a03e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800a042:	4b25      	ldr	r3, [pc, #148]	@ (800a0d8 <xTaskResumeAll+0xcc>)
 800a044:	681b      	ldr	r3, [r3, #0]
 800a046:	2b00      	cmp	r3, #0
 800a048:	d0f5      	beq.n	800a036 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a04a:	4d24      	ldr	r5, [pc, #144]	@ (800a0dc <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800a04c:	4e24      	ldr	r6, [pc, #144]	@ (800a0e0 <xTaskResumeAll+0xd4>)
 800a04e:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800a0f0 <xTaskResumeAll+0xe4>
 800a052:	e01d      	b.n	800a090 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a054:	68eb      	ldr	r3, [r5, #12]
 800a056:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a058:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a05a:	f104 0018 	add.w	r0, r4, #24
 800a05e:	f7fe fe7d 	bl	8008d5c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a062:	4638      	mov	r0, r7
 800a064:	f7fe fe7a 	bl	8008d5c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800a068:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a06a:	6832      	ldr	r2, [r6, #0]
 800a06c:	2014      	movs	r0, #20
 800a06e:	4293      	cmp	r3, r2
 800a070:	fb00 8003 	mla	r0, r0, r3, r8
 800a074:	4639      	mov	r1, r7
 800a076:	bf88      	it	hi
 800a078:	6033      	strhi	r3, [r6, #0]
 800a07a:	f7fe fe4d 	bl	8008d18 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a07e:	4b19      	ldr	r3, [pc, #100]	@ (800a0e4 <xTaskResumeAll+0xd8>)
 800a080:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800a082:	681b      	ldr	r3, [r3, #0]
 800a084:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a086:	429a      	cmp	r2, r3
 800a088:	d302      	bcc.n	800a090 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 800a08a:	4b17      	ldr	r3, [pc, #92]	@ (800a0e8 <xTaskResumeAll+0xdc>)
 800a08c:	2201      	movs	r2, #1
 800a08e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a090:	682b      	ldr	r3, [r5, #0]
 800a092:	2b00      	cmp	r3, #0
 800a094:	d1de      	bne.n	800a054 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 800a096:	b10c      	cbz	r4, 800a09c <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 800a098:	f7ff fdbc 	bl	8009c14 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800a09c:	4d13      	ldr	r5, [pc, #76]	@ (800a0ec <xTaskResumeAll+0xe0>)
 800a09e:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800a0a0:	b144      	cbz	r4, 800a0b4 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 800a0a2:	4e11      	ldr	r6, [pc, #68]	@ (800a0e8 <xTaskResumeAll+0xdc>)
 800a0a4:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800a0a6:	f7ff ff1b 	bl	8009ee0 <xTaskIncrementTick>
 800a0aa:	b100      	cbz	r0, 800a0ae <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 800a0ac:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800a0ae:	3c01      	subs	r4, #1
 800a0b0:	d1f9      	bne.n	800a0a6 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 800a0b2:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800a0b4:	4b0c      	ldr	r3, [pc, #48]	@ (800a0e8 <xTaskResumeAll+0xdc>)
 800a0b6:	681b      	ldr	r3, [r3, #0]
 800a0b8:	2b00      	cmp	r3, #0
 800a0ba:	d0bc      	beq.n	800a036 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 800a0bc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a0c0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a0c4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a0c8:	f3bf 8f4f 	dsb	sy
 800a0cc:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800a0d0:	2401      	movs	r4, #1
 800a0d2:	e7b1      	b.n	800a038 <xTaskResumeAll+0x2c>
 800a0d4:	20013534 	.word	0x20013534
 800a0d8:	20013558 	.word	0x20013558
 800a0dc:	20013588 	.word	0x20013588
 800a0e0:	20013550 	.word	0x20013550
 800a0e4:	20013a2c 	.word	0x20013a2c
 800a0e8:	20013544 	.word	0x20013544
 800a0ec:	20013548 	.word	0x20013548
 800a0f0:	200135cc 	.word	0x200135cc

0800a0f4 <vTaskDelay>:
	{
 800a0f4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800a0f6:	b950      	cbnz	r0, 800a10e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800a0f8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a0fc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a100:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a104:	f3bf 8f4f 	dsb	sy
 800a108:	f3bf 8f6f 	isb	sy
	}
 800a10c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800a10e:	4b0a      	ldr	r3, [pc, #40]	@ (800a138 <vTaskDelay+0x44>)
 800a110:	6819      	ldr	r1, [r3, #0]
 800a112:	b141      	cbz	r1, 800a126 <vTaskDelay+0x32>
 800a114:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a118:	f383 8811 	msr	BASEPRI, r3
 800a11c:	f3bf 8f6f 	isb	sy
 800a120:	f3bf 8f4f 	dsb	sy
 800a124:	e7fe      	b.n	800a124 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800a126:	f7ff fecd 	bl	8009ec4 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800a12a:	f7ff fd3b 	bl	8009ba4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800a12e:	f7ff ff6d 	bl	800a00c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800a132:	2800      	cmp	r0, #0
 800a134:	d0e0      	beq.n	800a0f8 <vTaskDelay+0x4>
 800a136:	e7e9      	b.n	800a10c <vTaskDelay+0x18>
 800a138:	20013534 	.word	0x20013534

0800a13c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a13c:	4b17      	ldr	r3, [pc, #92]	@ (800a19c <vTaskSwitchContext+0x60>)
 800a13e:	681a      	ldr	r2, [r3, #0]
 800a140:	4b17      	ldr	r3, [pc, #92]	@ (800a1a0 <vTaskSwitchContext+0x64>)
{
 800a142:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a144:	b112      	cbz	r2, 800a14c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800a146:	2201      	movs	r2, #1
 800a148:	601a      	str	r2, [r3, #0]
}
 800a14a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a14c:	4d15      	ldr	r5, [pc, #84]	@ (800a1a4 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 800a14e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a150:	682a      	ldr	r2, [r5, #0]
 800a152:	4915      	ldr	r1, [pc, #84]	@ (800a1a8 <vTaskSwitchContext+0x6c>)
 800a154:	2614      	movs	r6, #20
 800a156:	fb06 f302 	mul.w	r3, r6, r2
 800a15a:	18c8      	adds	r0, r1, r3
 800a15c:	58cc      	ldr	r4, [r1, r3]
 800a15e:	b18c      	cbz	r4, 800a184 <vTaskSwitchContext+0x48>
 800a160:	6844      	ldr	r4, [r0, #4]
 800a162:	3308      	adds	r3, #8
 800a164:	6864      	ldr	r4, [r4, #4]
 800a166:	6044      	str	r4, [r0, #4]
 800a168:	440b      	add	r3, r1
 800a16a:	429c      	cmp	r4, r3
 800a16c:	bf04      	itt	eq
 800a16e:	6863      	ldreq	r3, [r4, #4]
 800a170:	6043      	streq	r3, [r0, #4]
 800a172:	2314      	movs	r3, #20
 800a174:	fb03 1102 	mla	r1, r3, r2, r1
 800a178:	684b      	ldr	r3, [r1, #4]
 800a17a:	68d9      	ldr	r1, [r3, #12]
 800a17c:	4b0b      	ldr	r3, [pc, #44]	@ (800a1ac <vTaskSwitchContext+0x70>)
 800a17e:	6019      	str	r1, [r3, #0]
 800a180:	602a      	str	r2, [r5, #0]
}
 800a182:	e7e2      	b.n	800a14a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a184:	b942      	cbnz	r2, 800a198 <vTaskSwitchContext+0x5c>
 800a186:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a18a:	f383 8811 	msr	BASEPRI, r3
 800a18e:	f3bf 8f6f 	isb	sy
 800a192:	f3bf 8f4f 	dsb	sy
 800a196:	e7fe      	b.n	800a196 <vTaskSwitchContext+0x5a>
 800a198:	3a01      	subs	r2, #1
 800a19a:	e7dc      	b.n	800a156 <vTaskSwitchContext+0x1a>
 800a19c:	20013534 	.word	0x20013534
 800a1a0:	20013544 	.word	0x20013544
 800a1a4:	20013550 	.word	0x20013550
 800a1a8:	200135cc 	.word	0x200135cc
 800a1ac:	20013a2c 	.word	0x20013a2c

0800a1b0 <vTaskPlaceOnEventList>:
{
 800a1b0:	b510      	push	{r4, lr}
 800a1b2:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a1b4:	b940      	cbnz	r0, 800a1c8 <vTaskPlaceOnEventList+0x18>
 800a1b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a1ba:	f383 8811 	msr	BASEPRI, r3
 800a1be:	f3bf 8f6f 	isb	sy
 800a1c2:	f3bf 8f4f 	dsb	sy
 800a1c6:	e7fe      	b.n	800a1c6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a1c8:	4b05      	ldr	r3, [pc, #20]	@ (800a1e0 <vTaskPlaceOnEventList+0x30>)
 800a1ca:	6819      	ldr	r1, [r3, #0]
 800a1cc:	3118      	adds	r1, #24
 800a1ce:	f7fe fdae 	bl	8008d2e <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a1d2:	4620      	mov	r0, r4
 800a1d4:	2101      	movs	r1, #1
}
 800a1d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a1da:	f7ff bce3 	b.w	8009ba4 <prvAddCurrentTaskToDelayedList>
 800a1de:	bf00      	nop
 800a1e0:	20013a2c 	.word	0x20013a2c

0800a1e4 <vTaskPlaceOnEventListRestricted>:
	{
 800a1e4:	b538      	push	{r3, r4, r5, lr}
 800a1e6:	460d      	mov	r5, r1
 800a1e8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a1ea:	b940      	cbnz	r0, 800a1fe <vTaskPlaceOnEventListRestricted+0x1a>
 800a1ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a1f0:	f383 8811 	msr	BASEPRI, r3
 800a1f4:	f3bf 8f6f 	isb	sy
 800a1f8:	f3bf 8f4f 	dsb	sy
 800a1fc:	e7fe      	b.n	800a1fc <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a1fe:	4b07      	ldr	r3, [pc, #28]	@ (800a21c <vTaskPlaceOnEventListRestricted+0x38>)
 800a200:	6819      	ldr	r1, [r3, #0]
 800a202:	3118      	adds	r1, #24
 800a204:	f7fe fd88 	bl	8008d18 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a208:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a20a:	4621      	mov	r1, r4
 800a20c:	bf0c      	ite	eq
 800a20e:	4628      	moveq	r0, r5
 800a210:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a214:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a218:	f7ff bcc4 	b.w	8009ba4 <prvAddCurrentTaskToDelayedList>
 800a21c:	20013a2c 	.word	0x20013a2c

0800a220 <xTaskRemoveFromEventList>:
{
 800a220:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a222:	68c3      	ldr	r3, [r0, #12]
 800a224:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a226:	b944      	cbnz	r4, 800a23a <xTaskRemoveFromEventList+0x1a>
 800a228:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a22c:	f383 8811 	msr	BASEPRI, r3
 800a230:	f3bf 8f6f 	isb	sy
 800a234:	f3bf 8f4f 	dsb	sy
 800a238:	e7fe      	b.n	800a238 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a23a:	f104 0518 	add.w	r5, r4, #24
 800a23e:	4628      	mov	r0, r5
 800a240:	f7fe fd8c 	bl	8008d5c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a244:	4b10      	ldr	r3, [pc, #64]	@ (800a288 <xTaskRemoveFromEventList+0x68>)
 800a246:	681b      	ldr	r3, [r3, #0]
 800a248:	b9db      	cbnz	r3, 800a282 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a24a:	1d25      	adds	r5, r4, #4
 800a24c:	4628      	mov	r0, r5
 800a24e:	f7fe fd85 	bl	8008d5c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a252:	4a0e      	ldr	r2, [pc, #56]	@ (800a28c <xTaskRemoveFromEventList+0x6c>)
 800a254:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a256:	6811      	ldr	r1, [r2, #0]
 800a258:	428b      	cmp	r3, r1
 800a25a:	bf88      	it	hi
 800a25c:	6013      	strhi	r3, [r2, #0]
 800a25e:	4a0c      	ldr	r2, [pc, #48]	@ (800a290 <xTaskRemoveFromEventList+0x70>)
 800a260:	2014      	movs	r0, #20
 800a262:	4629      	mov	r1, r5
 800a264:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a268:	f7fe fd56 	bl	8008d18 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a26c:	4b09      	ldr	r3, [pc, #36]	@ (800a294 <xTaskRemoveFromEventList+0x74>)
 800a26e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800a270:	681b      	ldr	r3, [r3, #0]
 800a272:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a274:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a276:	bf83      	ittte	hi
 800a278:	4b07      	ldrhi	r3, [pc, #28]	@ (800a298 <xTaskRemoveFromEventList+0x78>)
 800a27a:	2001      	movhi	r0, #1
 800a27c:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 800a27e:	2000      	movls	r0, #0
}
 800a280:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a282:	4806      	ldr	r0, [pc, #24]	@ (800a29c <xTaskRemoveFromEventList+0x7c>)
 800a284:	4629      	mov	r1, r5
 800a286:	e7ef      	b.n	800a268 <xTaskRemoveFromEventList+0x48>
 800a288:	20013534 	.word	0x20013534
 800a28c:	20013550 	.word	0x20013550
 800a290:	200135cc 	.word	0x200135cc
 800a294:	20013a2c 	.word	0x20013a2c
 800a298:	20013544 	.word	0x20013544
 800a29c:	20013588 	.word	0x20013588

0800a2a0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a2a0:	4b03      	ldr	r3, [pc, #12]	@ (800a2b0 <vTaskInternalSetTimeOutState+0x10>)
 800a2a2:	681b      	ldr	r3, [r3, #0]
 800a2a4:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a2a6:	4b03      	ldr	r3, [pc, #12]	@ (800a2b4 <vTaskInternalSetTimeOutState+0x14>)
 800a2a8:	681b      	ldr	r3, [r3, #0]
 800a2aa:	6043      	str	r3, [r0, #4]
}
 800a2ac:	4770      	bx	lr
 800a2ae:	bf00      	nop
 800a2b0:	20013540 	.word	0x20013540
 800a2b4:	20013554 	.word	0x20013554

0800a2b8 <xTaskCheckForTimeOut>:
{
 800a2b8:	b570      	push	{r4, r5, r6, lr}
 800a2ba:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a2bc:	4605      	mov	r5, r0
 800a2be:	b940      	cbnz	r0, 800a2d2 <xTaskCheckForTimeOut+0x1a>
 800a2c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a2c4:	f383 8811 	msr	BASEPRI, r3
 800a2c8:	f3bf 8f6f 	isb	sy
 800a2cc:	f3bf 8f4f 	dsb	sy
 800a2d0:	e7fe      	b.n	800a2d0 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a2d2:	b941      	cbnz	r1, 800a2e6 <xTaskCheckForTimeOut+0x2e>
 800a2d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a2d8:	f383 8811 	msr	BASEPRI, r3
 800a2dc:	f3bf 8f6f 	isb	sy
 800a2e0:	f3bf 8f4f 	dsb	sy
 800a2e4:	e7fe      	b.n	800a2e4 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a2e6:	f7fe fdb5 	bl	8008e54 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a2ea:	4b0f      	ldr	r3, [pc, #60]	@ (800a328 <xTaskCheckForTimeOut+0x70>)
 800a2ec:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a2ee:	6823      	ldr	r3, [r4, #0]
 800a2f0:	1c5a      	adds	r2, r3, #1
 800a2f2:	d010      	beq.n	800a316 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a2f4:	480d      	ldr	r0, [pc, #52]	@ (800a32c <xTaskCheckForTimeOut+0x74>)
 800a2f6:	682e      	ldr	r6, [r5, #0]
 800a2f8:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a2fa:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a2fc:	4286      	cmp	r6, r0
 800a2fe:	d001      	beq.n	800a304 <xTaskCheckForTimeOut+0x4c>
 800a300:	428a      	cmp	r2, r1
 800a302:	d90f      	bls.n	800a324 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a304:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a306:	4283      	cmp	r3, r0
 800a308:	d90a      	bls.n	800a320 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a30a:	1a5b      	subs	r3, r3, r1
 800a30c:	4413      	add	r3, r2
 800a30e:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a310:	4628      	mov	r0, r5
 800a312:	f7ff ffc5 	bl	800a2a0 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a316:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a318:	f7fe fdbc 	bl	8008e94 <vPortExitCritical>
}
 800a31c:	4620      	mov	r0, r4
 800a31e:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a320:	2300      	movs	r3, #0
 800a322:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a324:	2401      	movs	r4, #1
 800a326:	e7f7      	b.n	800a318 <xTaskCheckForTimeOut+0x60>
 800a328:	20013554 	.word	0x20013554
 800a32c:	20013540 	.word	0x20013540

0800a330 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a330:	4b01      	ldr	r3, [pc, #4]	@ (800a338 <vTaskMissedYield+0x8>)
 800a332:	2201      	movs	r2, #1
 800a334:	601a      	str	r2, [r3, #0]
}
 800a336:	4770      	bx	lr
 800a338:	20013544 	.word	0x20013544

0800a33c <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a33c:	4b05      	ldr	r3, [pc, #20]	@ (800a354 <xTaskGetSchedulerState+0x18>)
 800a33e:	681b      	ldr	r3, [r3, #0]
 800a340:	b133      	cbz	r3, 800a350 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a342:	4b05      	ldr	r3, [pc, #20]	@ (800a358 <xTaskGetSchedulerState+0x1c>)
 800a344:	6818      	ldr	r0, [r3, #0]
 800a346:	fab0 f080 	clz	r0, r0
 800a34a:	0940      	lsrs	r0, r0, #5
 800a34c:	0040      	lsls	r0, r0, #1
 800a34e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a350:	2001      	movs	r0, #1
	}
 800a352:	4770      	bx	lr
 800a354:	2001354c 	.word	0x2001354c
 800a358:	20013534 	.word	0x20013534

0800a35c <xTaskPriorityInherit>:
	{
 800a35c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 800a35e:	4604      	mov	r4, r0
 800a360:	b338      	cbz	r0, 800a3b2 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a362:	4d1a      	ldr	r5, [pc, #104]	@ (800a3cc <xTaskPriorityInherit+0x70>)
 800a364:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a366:	682a      	ldr	r2, [r5, #0]
 800a368:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800a36a:	4293      	cmp	r3, r2
 800a36c:	d226      	bcs.n	800a3bc <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a36e:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a370:	4e17      	ldr	r6, [pc, #92]	@ (800a3d0 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a372:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a374:	bfa1      	itttt	ge
 800a376:	682a      	ldrge	r2, [r5, #0]
 800a378:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800a37a:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800a37e:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a380:	2214      	movs	r2, #20
 800a382:	fb02 6303 	mla	r3, r2, r3, r6
 800a386:	6942      	ldr	r2, [r0, #20]
 800a388:	429a      	cmp	r2, r3
 800a38a:	d113      	bne.n	800a3b4 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a38c:	1d07      	adds	r7, r0, #4
 800a38e:	4638      	mov	r0, r7
 800a390:	f7fe fce4 	bl	8008d5c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a394:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a396:	4a0f      	ldr	r2, [pc, #60]	@ (800a3d4 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a398:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a39a:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a39c:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a39e:	2014      	movs	r0, #20
 800a3a0:	428b      	cmp	r3, r1
 800a3a2:	fb00 6003 	mla	r0, r0, r3, r6
 800a3a6:	4639      	mov	r1, r7
 800a3a8:	bf88      	it	hi
 800a3aa:	6013      	strhi	r3, [r2, #0]
 800a3ac:	f7fe fcb4 	bl	8008d18 <vListInsertEnd>
				xReturn = pdTRUE;
 800a3b0:	2001      	movs	r0, #1
	}
 800a3b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a3b4:	682b      	ldr	r3, [r5, #0]
 800a3b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a3b8:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800a3ba:	e7f9      	b.n	800a3b0 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a3bc:	682b      	ldr	r3, [r5, #0]
 800a3be:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800a3c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a3c2:	4298      	cmp	r0, r3
 800a3c4:	bf2c      	ite	cs
 800a3c6:	2000      	movcs	r0, #0
 800a3c8:	2001      	movcc	r0, #1
 800a3ca:	e7f2      	b.n	800a3b2 <xTaskPriorityInherit+0x56>
 800a3cc:	20013a2c 	.word	0x20013a2c
 800a3d0:	200135cc 	.word	0x200135cc
 800a3d4:	20013550 	.word	0x20013550

0800a3d8 <xTaskPriorityDisinherit>:
	{
 800a3d8:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a3da:	b908      	cbnz	r0, 800a3e0 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 800a3dc:	2000      	movs	r0, #0
	}
 800a3de:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a3e0:	4b1b      	ldr	r3, [pc, #108]	@ (800a450 <xTaskPriorityDisinherit+0x78>)
 800a3e2:	681c      	ldr	r4, [r3, #0]
 800a3e4:	4284      	cmp	r4, r0
 800a3e6:	d008      	beq.n	800a3fa <xTaskPriorityDisinherit+0x22>
 800a3e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a3ec:	f383 8811 	msr	BASEPRI, r3
 800a3f0:	f3bf 8f6f 	isb	sy
 800a3f4:	f3bf 8f4f 	dsb	sy
 800a3f8:	e7fe      	b.n	800a3f8 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 800a3fa:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800a3fc:	b943      	cbnz	r3, 800a410 <xTaskPriorityDisinherit+0x38>
 800a3fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a402:	f383 8811 	msr	BASEPRI, r3
 800a406:	f3bf 8f6f 	isb	sy
 800a40a:	f3bf 8f4f 	dsb	sy
 800a40e:	e7fe      	b.n	800a40e <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a410:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800a412:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a414:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a416:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a418:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a41a:	d0df      	beq.n	800a3dc <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a41c:	2b00      	cmp	r3, #0
 800a41e:	d1dd      	bne.n	800a3dc <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a420:	1d25      	adds	r5, r4, #4
 800a422:	4628      	mov	r0, r5
 800a424:	f7fe fc9a 	bl	8008d5c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a428:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800a42a:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a42c:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800a430:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a432:	4a08      	ldr	r2, [pc, #32]	@ (800a454 <xTaskPriorityDisinherit+0x7c>)
 800a434:	6811      	ldr	r1, [r2, #0]
 800a436:	428b      	cmp	r3, r1
 800a438:	bf88      	it	hi
 800a43a:	6013      	strhi	r3, [r2, #0]
 800a43c:	4a06      	ldr	r2, [pc, #24]	@ (800a458 <xTaskPriorityDisinherit+0x80>)
 800a43e:	2014      	movs	r0, #20
 800a440:	fb00 2003 	mla	r0, r0, r3, r2
 800a444:	4629      	mov	r1, r5
 800a446:	f7fe fc67 	bl	8008d18 <vListInsertEnd>
					xReturn = pdTRUE;
 800a44a:	2001      	movs	r0, #1
		return xReturn;
 800a44c:	e7c7      	b.n	800a3de <xTaskPriorityDisinherit+0x6>
 800a44e:	bf00      	nop
 800a450:	20013a2c 	.word	0x20013a2c
 800a454:	20013550 	.word	0x20013550
 800a458:	200135cc 	.word	0x200135cc

0800a45c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a45c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a45e:	4604      	mov	r4, r0
 800a460:	2800      	cmp	r0, #0
 800a462:	d041      	beq.n	800a4e8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 800a464:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800a466:	b942      	cbnz	r2, 800a47a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a468:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a46c:	f383 8811 	msr	BASEPRI, r3
 800a470:	f3bf 8f6f 	isb	sy
 800a474:	f3bf 8f4f 	dsb	sy
 800a478:	e7fe      	b.n	800a478 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a47a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800a47c:	4299      	cmp	r1, r3
 800a47e:	bf38      	it	cc
 800a480:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a482:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800a484:	428b      	cmp	r3, r1
 800a486:	d02f      	beq.n	800a4e8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a488:	2a01      	cmp	r2, #1
 800a48a:	d12d      	bne.n	800a4e8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 800a48c:	4a17      	ldr	r2, [pc, #92]	@ (800a4ec <vTaskPriorityDisinheritAfterTimeout+0x90>)
 800a48e:	6812      	ldr	r2, [r2, #0]
 800a490:	4282      	cmp	r2, r0
 800a492:	d108      	bne.n	800a4a6 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a494:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a498:	f383 8811 	msr	BASEPRI, r3
 800a49c:	f3bf 8f6f 	isb	sy
 800a4a0:	f3bf 8f4f 	dsb	sy
 800a4a4:	e7fe      	b.n	800a4a4 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a4a6:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a4a8:	4d11      	ldr	r5, [pc, #68]	@ (800a4f0 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a4aa:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a4ac:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a4ae:	f04f 0214 	mov.w	r2, #20
 800a4b2:	fb02 5303 	mla	r3, r2, r3, r5
 800a4b6:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a4b8:	bfa4      	itt	ge
 800a4ba:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800a4be:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a4c0:	429a      	cmp	r2, r3
 800a4c2:	d111      	bne.n	800a4e8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a4c4:	1d06      	adds	r6, r0, #4
 800a4c6:	4630      	mov	r0, r6
 800a4c8:	f7fe fc48 	bl	8008d5c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a4cc:	4a09      	ldr	r2, [pc, #36]	@ (800a4f4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a4ce:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800a4d0:	6811      	ldr	r1, [r2, #0]
 800a4d2:	2014      	movs	r0, #20
 800a4d4:	428b      	cmp	r3, r1
 800a4d6:	fb00 5003 	mla	r0, r0, r3, r5
 800a4da:	4631      	mov	r1, r6
	}
 800a4dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 800a4e0:	bf88      	it	hi
 800a4e2:	6013      	strhi	r3, [r2, #0]
 800a4e4:	f7fe bc18 	b.w	8008d18 <vListInsertEnd>
	}
 800a4e8:	bd70      	pop	{r4, r5, r6, pc}
 800a4ea:	bf00      	nop
 800a4ec:	20013a2c 	.word	0x20013a2c
 800a4f0:	200135cc 	.word	0x200135cc
 800a4f4:	20013550 	.word	0x20013550

0800a4f8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a4f8:	4b04      	ldr	r3, [pc, #16]	@ (800a50c <pvTaskIncrementMutexHeldCount+0x14>)
 800a4fa:	681a      	ldr	r2, [r3, #0]
 800a4fc:	b11a      	cbz	r2, 800a506 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a4fe:	6819      	ldr	r1, [r3, #0]
 800a500:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800a502:	3201      	adds	r2, #1
 800a504:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800a506:	6818      	ldr	r0, [r3, #0]
	}
 800a508:	4770      	bx	lr
 800a50a:	bf00      	nop
 800a50c:	20013a2c 	.word	0x20013a2c

0800a510 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 800a510:	4291      	cmp	r1, r2
{
 800a512:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a514:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a516:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a518:	d80a      	bhi.n	800a530 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a51a:	1ad2      	subs	r2, r2, r3
 800a51c:	6983      	ldr	r3, [r0, #24]
 800a51e:	429a      	cmp	r2, r3
 800a520:	d20d      	bcs.n	800a53e <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a522:	4b08      	ldr	r3, [pc, #32]	@ (800a544 <prvInsertTimerInActiveList+0x34>)
 800a524:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a526:	6818      	ldr	r0, [r3, #0]
 800a528:	f7fe fc01 	bl	8008d2e <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a52c:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 800a52e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a530:	429a      	cmp	r2, r3
 800a532:	d201      	bcs.n	800a538 <prvInsertTimerInActiveList+0x28>
 800a534:	4299      	cmp	r1, r3
 800a536:	d202      	bcs.n	800a53e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a538:	4b03      	ldr	r3, [pc, #12]	@ (800a548 <prvInsertTimerInActiveList+0x38>)
 800a53a:	1d01      	adds	r1, r0, #4
 800a53c:	e7f3      	b.n	800a526 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a53e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a540:	e7f5      	b.n	800a52e <prvInsertTimerInActiveList+0x1e>
 800a542:	bf00      	nop
 800a544:	20013b2c 	.word	0x20013b2c
 800a548:	20013b30 	.word	0x20013b30

0800a54c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a54c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a54e:	4c11      	ldr	r4, [pc, #68]	@ (800a594 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a550:	f7fe fc80 	bl	8008e54 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a554:	6825      	ldr	r5, [r4, #0]
 800a556:	b9bd      	cbnz	r5, 800a588 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a558:	4f0f      	ldr	r7, [pc, #60]	@ (800a598 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a55a:	4e10      	ldr	r6, [pc, #64]	@ (800a59c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a55c:	4638      	mov	r0, r7
 800a55e:	f7fe fbcd 	bl	8008cfc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a562:	4630      	mov	r0, r6
 800a564:	f7fe fbca 	bl	8008cfc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a568:	4b0d      	ldr	r3, [pc, #52]	@ (800a5a0 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a56a:	4a0e      	ldr	r2, [pc, #56]	@ (800a5a4 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a56c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a56e:	4b0e      	ldr	r3, [pc, #56]	@ (800a5a8 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a570:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a572:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a574:	200a      	movs	r0, #10
 800a576:	4b0d      	ldr	r3, [pc, #52]	@ (800a5ac <prvCheckForValidListAndQueue+0x60>)
 800a578:	9500      	str	r5, [sp, #0]
 800a57a:	f7fe fe74 	bl	8009266 <xQueueGenericCreateStatic>
 800a57e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a580:	b110      	cbz	r0, 800a588 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a582:	490b      	ldr	r1, [pc, #44]	@ (800a5b0 <prvCheckForValidListAndQueue+0x64>)
 800a584:	f7ff fa2c 	bl	80099e0 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a588:	b003      	add	sp, #12
 800a58a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a58e:	f7fe bc81 	b.w	8008e94 <vPortExitCritical>
 800a592:	bf00      	nop
 800a594:	20013b28 	.word	0x20013b28
 800a598:	20013b48 	.word	0x20013b48
 800a59c:	20013b34 	.word	0x20013b34
 800a5a0:	20013b30 	.word	0x20013b30
 800a5a4:	20013a80 	.word	0x20013a80
 800a5a8:	20013b2c 	.word	0x20013b2c
 800a5ac:	20013a30 	.word	0x20013a30
 800a5b0:	08026373 	.word	0x08026373

0800a5b4 <xTimerCreateTimerTask>:
{
 800a5b4:	b510      	push	{r4, lr}
 800a5b6:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a5b8:	f7ff ffc8 	bl	800a54c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a5bc:	4b12      	ldr	r3, [pc, #72]	@ (800a608 <xTimerCreateTimerTask+0x54>)
 800a5be:	681b      	ldr	r3, [r3, #0]
 800a5c0:	b1b3      	cbz	r3, 800a5f0 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a5c2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a5c4:	aa07      	add	r2, sp, #28
 800a5c6:	a906      	add	r1, sp, #24
 800a5c8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a5ca:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a5ce:	f7fe fa8d 	bl	8008aec <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a5d2:	9b05      	ldr	r3, [sp, #20]
 800a5d4:	9302      	str	r3, [sp, #8]
 800a5d6:	9b06      	ldr	r3, [sp, #24]
 800a5d8:	9301      	str	r3, [sp, #4]
 800a5da:	2302      	movs	r3, #2
 800a5dc:	9300      	str	r3, [sp, #0]
 800a5de:	9a07      	ldr	r2, [sp, #28]
 800a5e0:	490a      	ldr	r1, [pc, #40]	@ (800a60c <xTimerCreateTimerTask+0x58>)
 800a5e2:	480b      	ldr	r0, [pc, #44]	@ (800a610 <xTimerCreateTimerTask+0x5c>)
 800a5e4:	4623      	mov	r3, r4
 800a5e6:	f7ff fbc0 	bl	8009d6a <xTaskCreateStatic>
 800a5ea:	4b0a      	ldr	r3, [pc, #40]	@ (800a614 <xTimerCreateTimerTask+0x60>)
 800a5ec:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a5ee:	b940      	cbnz	r0, 800a602 <xTimerCreateTimerTask+0x4e>
 800a5f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a5f4:	f383 8811 	msr	BASEPRI, r3
 800a5f8:	f3bf 8f6f 	isb	sy
 800a5fc:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a600:	e7fe      	b.n	800a600 <xTimerCreateTimerTask+0x4c>
}
 800a602:	2001      	movs	r0, #1
 800a604:	b008      	add	sp, #32
 800a606:	bd10      	pop	{r4, pc}
 800a608:	20013b28 	.word	0x20013b28
 800a60c:	08026378 	.word	0x08026378
 800a610:	0800a715 	.word	0x0800a715
 800a614:	20013b24 	.word	0x20013b24

0800a618 <xTimerGenericCommand>:
{
 800a618:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a61a:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a61c:	4604      	mov	r4, r0
{
 800a61e:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a620:	b940      	cbnz	r0, 800a634 <xTimerGenericCommand+0x1c>
 800a622:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a626:	f383 8811 	msr	BASEPRI, r3
 800a62a:	f3bf 8f6f 	isb	sy
 800a62e:	f3bf 8f4f 	dsb	sy
 800a632:	e7fe      	b.n	800a632 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a634:	4d0d      	ldr	r5, [pc, #52]	@ (800a66c <xTimerGenericCommand+0x54>)
 800a636:	6828      	ldr	r0, [r5, #0]
 800a638:	b180      	cbz	r0, 800a65c <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a63a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a63c:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a640:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a642:	dc0d      	bgt.n	800a660 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a644:	f7ff fe7a 	bl	800a33c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a648:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a64a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a64c:	bf08      	it	eq
 800a64e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a650:	6828      	ldr	r0, [r5, #0]
 800a652:	bf18      	it	ne
 800a654:	461a      	movne	r2, r3
 800a656:	4669      	mov	r1, sp
 800a658:	f7fe feba 	bl	80093d0 <xQueueGenericSend>
}
 800a65c:	b004      	add	sp, #16
 800a65e:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a660:	2300      	movs	r3, #0
 800a662:	4669      	mov	r1, sp
 800a664:	f7fe ff66 	bl	8009534 <xQueueGenericSendFromISR>
 800a668:	e7f8      	b.n	800a65c <xTimerGenericCommand+0x44>
 800a66a:	bf00      	nop
 800a66c:	20013b28 	.word	0x20013b28

0800a670 <prvSampleTimeNow>:
{
 800a670:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a674:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 800a710 <prvSampleTimeNow+0xa0>
{
 800a678:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a67a:	f7ff fc2b 	bl	8009ed4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a67e:	f8d8 3000 	ldr.w	r3, [r8]
 800a682:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a684:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a686:	d909      	bls.n	800a69c <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a688:	4f1f      	ldr	r7, [pc, #124]	@ (800a708 <prvSampleTimeNow+0x98>)
 800a68a:	683b      	ldr	r3, [r7, #0]
 800a68c:	681a      	ldr	r2, [r3, #0]
 800a68e:	b96a      	cbnz	r2, 800a6ac <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a690:	4a1e      	ldr	r2, [pc, #120]	@ (800a70c <prvSampleTimeNow+0x9c>)
 800a692:	6811      	ldr	r1, [r2, #0]
 800a694:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a696:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a698:	2301      	movs	r3, #1
 800a69a:	e000      	b.n	800a69e <prvSampleTimeNow+0x2e>
 800a69c:	2300      	movs	r3, #0
}
 800a69e:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800a6a0:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a6a2:	f8c8 5000 	str.w	r5, [r8]
}
 800a6a6:	b002      	add	sp, #8
 800a6a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a6ac:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a6ae:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a6b0:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a6b4:	f104 0a04 	add.w	sl, r4, #4
 800a6b8:	4650      	mov	r0, sl
 800a6ba:	f7fe fb4f 	bl	8008d5c <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a6be:	6a23      	ldr	r3, [r4, #32]
 800a6c0:	4620      	mov	r0, r4
 800a6c2:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a6c4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a6c8:	075b      	lsls	r3, r3, #29
 800a6ca:	d5de      	bpl.n	800a68a <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a6cc:	69a3      	ldr	r3, [r4, #24]
 800a6ce:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 800a6d0:	4599      	cmp	r9, r3
 800a6d2:	d206      	bcs.n	800a6e2 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a6d4:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a6d6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a6d8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a6da:	4651      	mov	r1, sl
 800a6dc:	f7fe fb27 	bl	8008d2e <vListInsert>
 800a6e0:	e7d3      	b.n	800a68a <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a6e2:	2300      	movs	r3, #0
 800a6e4:	9300      	str	r3, [sp, #0]
 800a6e6:	464a      	mov	r2, r9
 800a6e8:	4619      	mov	r1, r3
 800a6ea:	4620      	mov	r0, r4
 800a6ec:	f7ff ff94 	bl	800a618 <xTimerGenericCommand>
				configASSERT( xResult );
 800a6f0:	2800      	cmp	r0, #0
 800a6f2:	d1ca      	bne.n	800a68a <prvSampleTimeNow+0x1a>
 800a6f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a6f8:	f383 8811 	msr	BASEPRI, r3
 800a6fc:	f3bf 8f6f 	isb	sy
 800a700:	f3bf 8f4f 	dsb	sy
 800a704:	e7fe      	b.n	800a704 <prvSampleTimeNow+0x94>
 800a706:	bf00      	nop
 800a708:	20013b30 	.word	0x20013b30
 800a70c:	20013b2c 	.word	0x20013b2c
 800a710:	20013b20 	.word	0x20013b20

0800a714 <prvTimerTask>:
{
 800a714:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a718:	4d6e      	ldr	r5, [pc, #440]	@ (800a8d4 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a71a:	4e6f      	ldr	r6, [pc, #444]	@ (800a8d8 <prvTimerTask+0x1c4>)
{
 800a71c:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a71e:	682b      	ldr	r3, [r5, #0]
 800a720:	f8d3 8000 	ldr.w	r8, [r3]
 800a724:	f1b8 0f00 	cmp.w	r8, #0
 800a728:	d035      	beq.n	800a796 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a72a:	68db      	ldr	r3, [r3, #12]
 800a72c:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a730:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a732:	f7ff fbc7 	bl	8009ec4 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a736:	a804      	add	r0, sp, #16
 800a738:	f7ff ff9a 	bl	800a670 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a73c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a73e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a740:	2b00      	cmp	r3, #0
 800a742:	d169      	bne.n	800a818 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a744:	2c00      	cmp	r4, #0
 800a746:	d14c      	bne.n	800a7e2 <prvTimerTask+0xce>
 800a748:	4540      	cmp	r0, r8
 800a74a:	d350      	bcc.n	800a7ee <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a74c:	f7ff fc5e 	bl	800a00c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a750:	682b      	ldr	r3, [r5, #0]
 800a752:	68db      	ldr	r3, [r3, #12]
 800a754:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a756:	1d38      	adds	r0, r7, #4
 800a758:	f7fe fb00 	bl	8008d5c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a75c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800a760:	0758      	lsls	r0, r3, #29
 800a762:	d51a      	bpl.n	800a79a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a764:	69b9      	ldr	r1, [r7, #24]
 800a766:	4643      	mov	r3, r8
 800a768:	464a      	mov	r2, r9
 800a76a:	4441      	add	r1, r8
 800a76c:	4638      	mov	r0, r7
 800a76e:	f7ff fecf 	bl	800a510 <prvInsertTimerInActiveList>
 800a772:	b1b0      	cbz	r0, 800a7a2 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a774:	9400      	str	r4, [sp, #0]
 800a776:	4623      	mov	r3, r4
 800a778:	4642      	mov	r2, r8
 800a77a:	4621      	mov	r1, r4
 800a77c:	4638      	mov	r0, r7
 800a77e:	f7ff ff4b 	bl	800a618 <xTimerGenericCommand>
			configASSERT( xResult );
 800a782:	b970      	cbnz	r0, 800a7a2 <prvTimerTask+0x8e>
 800a784:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a788:	f383 8811 	msr	BASEPRI, r3
 800a78c:	f3bf 8f6f 	isb	sy
 800a790:	f3bf 8f4f 	dsb	sy
 800a794:	e7fe      	b.n	800a794 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a796:	2401      	movs	r4, #1
 800a798:	e7cb      	b.n	800a732 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a79a:	f023 0301 	bic.w	r3, r3, #1
 800a79e:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a7a2:	6a3b      	ldr	r3, [r7, #32]
 800a7a4:	4638      	mov	r0, r7
 800a7a6:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a7a8:	6830      	ldr	r0, [r6, #0]
 800a7aa:	2200      	movs	r2, #0
 800a7ac:	a904      	add	r1, sp, #16
 800a7ae:	f7fe ff6f 	bl	8009690 <xQueueReceive>
 800a7b2:	2800      	cmp	r0, #0
 800a7b4:	d0b3      	beq.n	800a71e <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a7b6:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a7b8:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a7ba:	2b00      	cmp	r3, #0
 800a7bc:	db2f      	blt.n	800a81e <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a7be:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a7c0:	6963      	ldr	r3, [r4, #20]
 800a7c2:	2b00      	cmp	r3, #0
 800a7c4:	d132      	bne.n	800a82c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a7c6:	a803      	add	r0, sp, #12
 800a7c8:	f7ff ff52 	bl	800a670 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a7cc:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a7ce:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a7d0:	2b09      	cmp	r3, #9
 800a7d2:	d8e9      	bhi.n	800a7a8 <prvTimerTask+0x94>
 800a7d4:	e8df f003 	tbb	[pc, r3]
 800a7d8:	572e2e2e 	.word	0x572e2e2e
 800a7dc:	2e2e765e 	.word	0x2e2e765e
 800a7e0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a7e2:	4b3e      	ldr	r3, [pc, #248]	@ (800a8dc <prvTimerTask+0x1c8>)
 800a7e4:	681b      	ldr	r3, [r3, #0]
 800a7e6:	681c      	ldr	r4, [r3, #0]
 800a7e8:	fab4 f484 	clz	r4, r4
 800a7ec:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a7ee:	6830      	ldr	r0, [r6, #0]
 800a7f0:	4622      	mov	r2, r4
 800a7f2:	eba8 0109 	sub.w	r1, r8, r9
 800a7f6:	f7ff f932 	bl	8009a5e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a7fa:	f7ff fc07 	bl	800a00c <xTaskResumeAll>
 800a7fe:	2800      	cmp	r0, #0
 800a800:	d1d2      	bne.n	800a7a8 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a802:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800a806:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a80a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800a80e:	f3bf 8f4f 	dsb	sy
 800a812:	f3bf 8f6f 	isb	sy
 800a816:	e7c7      	b.n	800a7a8 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a818:	f7ff fbf8 	bl	800a00c <xTaskResumeAll>
}
 800a81c:	e7c4      	b.n	800a7a8 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a81e:	9b05      	ldr	r3, [sp, #20]
 800a820:	9907      	ldr	r1, [sp, #28]
 800a822:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a824:	9b04      	ldr	r3, [sp, #16]
 800a826:	2b00      	cmp	r3, #0
 800a828:	dbbe      	blt.n	800a7a8 <prvTimerTask+0x94>
 800a82a:	e7c8      	b.n	800a7be <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a82c:	1d20      	adds	r0, r4, #4
 800a82e:	f7fe fa95 	bl	8008d5c <uxListRemove>
 800a832:	e7c8      	b.n	800a7c6 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a834:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a838:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a83a:	f043 0301 	orr.w	r3, r3, #1
 800a83e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a842:	9b05      	ldr	r3, [sp, #20]
 800a844:	4620      	mov	r0, r4
 800a846:	4419      	add	r1, r3
 800a848:	f7ff fe62 	bl	800a510 <prvInsertTimerInActiveList>
 800a84c:	2800      	cmp	r0, #0
 800a84e:	d0ab      	beq.n	800a7a8 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a850:	6a23      	ldr	r3, [r4, #32]
 800a852:	4620      	mov	r0, r4
 800a854:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a856:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a85a:	0759      	lsls	r1, r3, #29
 800a85c:	d5a4      	bpl.n	800a7a8 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a85e:	69a2      	ldr	r2, [r4, #24]
 800a860:	9905      	ldr	r1, [sp, #20]
 800a862:	2300      	movs	r3, #0
 800a864:	440a      	add	r2, r1
 800a866:	9300      	str	r3, [sp, #0]
 800a868:	4619      	mov	r1, r3
 800a86a:	4620      	mov	r0, r4
 800a86c:	f7ff fed4 	bl	800a618 <xTimerGenericCommand>
							configASSERT( xResult );
 800a870:	2800      	cmp	r0, #0
 800a872:	d199      	bne.n	800a7a8 <prvTimerTask+0x94>
 800a874:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a878:	f383 8811 	msr	BASEPRI, r3
 800a87c:	f3bf 8f6f 	isb	sy
 800a880:	f3bf 8f4f 	dsb	sy
 800a884:	e7fe      	b.n	800a884 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a886:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a88a:	f023 0301 	bic.w	r3, r3, #1
 800a88e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800a892:	e789      	b.n	800a7a8 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a894:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a898:	f043 0301 	orr.w	r3, r3, #1
 800a89c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a8a0:	9905      	ldr	r1, [sp, #20]
 800a8a2:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a8a4:	b941      	cbnz	r1, 800a8b8 <prvTimerTask+0x1a4>
 800a8a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a8aa:	f383 8811 	msr	BASEPRI, r3
 800a8ae:	f3bf 8f6f 	isb	sy
 800a8b2:	f3bf 8f4f 	dsb	sy
 800a8b6:	e7fe      	b.n	800a8b6 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a8b8:	4603      	mov	r3, r0
 800a8ba:	4401      	add	r1, r0
 800a8bc:	4620      	mov	r0, r4
 800a8be:	f7ff fe27 	bl	800a510 <prvInsertTimerInActiveList>
					break;
 800a8c2:	e771      	b.n	800a7a8 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a8c4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800a8c8:	079a      	lsls	r2, r3, #30
 800a8ca:	d4de      	bmi.n	800a88a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a8cc:	4620      	mov	r0, r4
 800a8ce:	f7fe f9d7 	bl	8008c80 <vPortFree>
 800a8d2:	e769      	b.n	800a7a8 <prvTimerTask+0x94>
 800a8d4:	20013b30 	.word	0x20013b30
 800a8d8:	20013b28 	.word	0x20013b28
 800a8dc:	20013b2c 	.word	0x20013b2c

0800a8e0 <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 800a8e0:	b178      	cbz	r0, 800a902 <USBD_Init+0x22>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
 800a8e2:	2300      	movs	r3, #0
 800a8e4:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
  pdev->pUserData[0] = NULL;
 800a8e8:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
 800a8ec:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 800a8f0:	b109      	cbz	r1, 800a8f6 <USBD_Init+0x16>
  {
    pdev->pDesc = pdesc;
 800a8f2:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800a8f6:	2301      	movs	r3, #1
 800a8f8:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
  pdev->id = id;
 800a8fc:	7002      	strb	r2, [r0, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 800a8fe:	f7f6 bfff 	b.w	8001900 <USBD_LL_Init>

  return ret;
}
 800a902:	2003      	movs	r0, #3
 800a904:	4770      	bx	lr

0800a906 <USBD_RegisterClass>:
  * @param  pdev: Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 800a906:	b513      	push	{r0, r1, r4, lr}
  uint16_t len = 0U;
 800a908:	2300      	movs	r3, #0
{
 800a90a:	4604      	mov	r4, r0
  uint16_t len = 0U;
 800a90c:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
 800a910:	b181      	cbz	r1, 800a934 <USBD_RegisterClass+0x2e>
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 800a912:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
  pdev->pClass[0] = pclass;
 800a914:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 800a918:	b123      	cbz	r3, 800a924 <USBD_RegisterClass+0x1e>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
 800a91a:	f10d 0006 	add.w	r0, sp, #6
 800a91e:	4798      	blx	r3
 800a920:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses++;
 800a924:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8
 800a928:	3301      	adds	r3, #1
 800a92a:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8

  return USBD_OK;
 800a92e:	2000      	movs	r0, #0
}
 800a930:	b002      	add	sp, #8
 800a932:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 800a934:	2003      	movs	r0, #3
 800a936:	e7fb      	b.n	800a930 <USBD_RegisterClass+0x2a>

0800a938 <USBD_Start>:
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 800a938:	f7f7 b833 	b.w	80019a2 <USBD_LL_Start>

0800a93c <USBD_SetClassConfig>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 800a93c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a940:	b10b      	cbz	r3, 800a946 <USBD_SetClassConfig+0xa>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
 800a942:	681b      	ldr	r3, [r3, #0]
 800a944:	4718      	bx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800a946:	4618      	mov	r0, r3
 800a948:	4770      	bx	lr

0800a94a <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 800a94a:	b508      	push	{r3, lr}
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
 800a94c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a950:	685b      	ldr	r3, [r3, #4]
 800a952:	4798      	blx	r3
  {
    ret = USBD_FAIL;
 800a954:	2800      	cmp	r0, #0
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800a956:	bf18      	it	ne
 800a958:	2003      	movne	r0, #3
 800a95a:	bd08      	pop	{r3, pc}

0800a95c <USBD_LL_SetupStage>:
  * @param  pdev: device instance
  * @param  psetup: setup packet buffer pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 800a95c:	b538      	push	{r3, r4, r5, lr}
 800a95e:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 800a960:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
 800a964:	4628      	mov	r0, r5
 800a966:	f000 fb97 	bl	800b098 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 800a96a:	2301      	movs	r3, #1

  pdev->ep0_data_len = pdev->request.wLength;

  switch (pdev->request.bmRequest & 0x1FU)
 800a96c:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
  pdev->ep0_state = USBD_EP0_SETUP;
 800a970:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
  pdev->ep0_data_len = pdev->request.wLength;
 800a974:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	@ 0x2b0
 800a978:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
  switch (pdev->request.bmRequest & 0x1FU)
 800a97c:	f001 031f 	and.w	r3, r1, #31
 800a980:	2b01      	cmp	r3, #1
 800a982:	d008      	beq.n	800a996 <USBD_LL_SetupStage+0x3a>
 800a984:	2b02      	cmp	r3, #2
 800a986:	d00c      	beq.n	800a9a2 <USBD_LL_SetupStage+0x46>
 800a988:	b98b      	cbnz	r3, 800a9ae <USBD_LL_SetupStage+0x52>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      ret = USBD_StdDevReq(pdev, &pdev->request);
 800a98a:	4629      	mov	r1, r5
 800a98c:	4620      	mov	r0, r4
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
      break;
  }

  return ret;
}
 800a98e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdDevReq(pdev, &pdev->request);
 800a992:	f000 b94d 	b.w	800ac30 <USBD_StdDevReq>
      ret = USBD_StdItfReq(pdev, &pdev->request);
 800a996:	4629      	mov	r1, r5
 800a998:	4620      	mov	r0, r4
}
 800a99a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdItfReq(pdev, &pdev->request);
 800a99e:	f000 baab 	b.w	800aef8 <USBD_StdItfReq>
      ret = USBD_StdEPReq(pdev, &pdev->request);
 800a9a2:	4629      	mov	r1, r5
 800a9a4:	4620      	mov	r0, r4
}
 800a9a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdEPReq(pdev, &pdev->request);
 800a9aa:	f000 bad4 	b.w	800af56 <USBD_StdEPReq>
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 800a9ae:	4620      	mov	r0, r4
 800a9b0:	f001 0180 	and.w	r1, r1, #128	@ 0x80
}
 800a9b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 800a9b8:	f7f7 b811 	b.w	80019de <USBD_LL_StallEP>

0800a9bc <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 800a9bc:	b570      	push	{r4, r5, r6, lr}
 800a9be:	4604      	mov	r4, r0
 800a9c0:	4616      	mov	r6, r2
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret = USBD_OK;
  uint8_t idx;

  if (epnum == 0U)
 800a9c2:	bb09      	cbnz	r1, 800aa08 <USBD_LL_DataOutStage+0x4c>
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 800a9c4:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 800a9c8:	2b03      	cmp	r3, #3
 800a9ca:	d10c      	bne.n	800a9e6 <USBD_LL_DataOutStage+0x2a>
    {
      if (pep->rem_length > pep->maxpacket)
 800a9cc:	e9d0 3257 	ldrd	r3, r2, [r0, #348]	@ 0x15c
 800a9d0:	4293      	cmp	r3, r2
 800a9d2:	d90a      	bls.n	800a9ea <USBD_LL_DataOutStage+0x2e>
      {
        pep->rem_length -= pep->maxpacket;
 800a9d4:	1a9b      	subs	r3, r3, r2

        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 800a9d6:	429a      	cmp	r2, r3
        pep->rem_length -= pep->maxpacket;
 800a9d8:	f8c0 315c 	str.w	r3, [r0, #348]	@ 0x15c
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 800a9dc:	bf28      	it	cs
 800a9de:	461a      	movcs	r2, r3
 800a9e0:	4631      	mov	r1, r6
 800a9e2:	f000 fc9e 	bl	800b322 <USBD_CtlContinueRx>
      }
    }
  }

  return USBD_OK;
}
 800a9e6:	2000      	movs	r0, #0
 800a9e8:	bd70      	pop	{r4, r5, r6, pc}
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800a9ea:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800a9ee:	2b03      	cmp	r3, #3
 800a9f0:	d106      	bne.n	800aa00 <USBD_LL_DataOutStage+0x44>
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
 800a9f2:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800a9f6:	691b      	ldr	r3, [r3, #16]
 800a9f8:	b113      	cbz	r3, 800aa00 <USBD_LL_DataOutStage+0x44>
              pdev->classId = idx;
 800a9fa:	f8c0 12d4 	str.w	r1, [r0, #724]	@ 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
 800a9fe:	4798      	blx	r3
        (void)USBD_CtlSendStatus(pdev);
 800aa00:	4620      	mov	r0, r4
 800aa02:	f000 fc96 	bl	800b332 <USBD_CtlSendStatus>
 800aa06:	e7ee      	b.n	800a9e6 <USBD_LL_DataOutStage+0x2a>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800aa08:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800aa0c:	2b03      	cmp	r3, #3
 800aa0e:	d1ea      	bne.n	800a9e6 <USBD_LL_DataOutStage+0x2a>
        if (pdev->pClass[idx]->DataOut != NULL)
 800aa10:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800aa14:	699b      	ldr	r3, [r3, #24]
 800aa16:	2b00      	cmp	r3, #0
 800aa18:	d0e5      	beq.n	800a9e6 <USBD_LL_DataOutStage+0x2a>
          pdev->classId = idx;
 800aa1a:	2200      	movs	r2, #0
}
 800aa1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 800aa20:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
 800aa24:	4718      	bx	r3

0800aa26 <USBD_LL_DataInStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 800aa26:	b570      	push	{r4, r5, r6, lr}
 800aa28:	4604      	mov	r4, r0
 800aa2a:	4616      	mov	r6, r2
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;
  uint8_t idx;

  if (epnum == 0U)
 800aa2c:	460d      	mov	r5, r1
 800aa2e:	2900      	cmp	r1, #0
 800aa30:	d13d      	bne.n	800aaae <USBD_LL_DataInStage+0x88>
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 800aa32:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 800aa36:	2b02      	cmp	r3, #2
 800aa38:	d10e      	bne.n	800aa58 <USBD_LL_DataInStage+0x32>
    {
      if (pep->rem_length > pep->maxpacket)
 800aa3a:	e9d0 3207 	ldrd	r3, r2, [r0, #28]
 800aa3e:	4293      	cmp	r3, r2
 800aa40:	d912      	bls.n	800aa68 <USBD_LL_DataInStage+0x42>
      {
        pep->rem_length -= pep->maxpacket;
 800aa42:	1a9a      	subs	r2, r3, r2
 800aa44:	61c2      	str	r2, [r0, #28]

        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
 800aa46:	4631      	mov	r1, r6
 800aa48:	f000 fc63 	bl	800b312 <USBD_CtlContinueSendData>
        {
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
          pdev->ep0_data_len = 0U;

          /* Prepare endpoint for premature end of transfer */
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800aa4c:	462b      	mov	r3, r5
 800aa4e:	462a      	mov	r2, r5
 800aa50:	4629      	mov	r1, r5
 800aa52:	4620      	mov	r0, r4
 800aa54:	f7f6 ffe7 	bl	8001a26 <USBD_LL_PrepareReceive>
          (void)USBD_CtlReceiveStatus(pdev);
        }
      }
    }

    if (pdev->dev_test_mode != 0U)
 800aa58:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800aa5c:	b113      	cbz	r3, 800aa64 <USBD_LL_DataInStage+0x3e>
    {
      (void)USBD_RunTestMode(pdev);
      pdev->dev_test_mode = 0U;
 800aa5e:	2300      	movs	r3, #0
 800aa60:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
      }
    }
  }

  return USBD_OK;
}
 800aa64:	2000      	movs	r0, #0
 800aa66:	bd70      	pop	{r4, r5, r6, pc}
        if ((pep->maxpacket == pep->rem_length) &&
 800aa68:	d10c      	bne.n	800aa84 <USBD_LL_DataInStage+0x5e>
            (pep->total_length >= pep->maxpacket) &&
 800aa6a:	6982      	ldr	r2, [r0, #24]
        if ((pep->maxpacket == pep->rem_length) &&
 800aa6c:	4293      	cmp	r3, r2
 800aa6e:	d809      	bhi.n	800aa84 <USBD_LL_DataInStage+0x5e>
            (pep->total_length >= pep->maxpacket) &&
 800aa70:	f8d0 3298 	ldr.w	r3, [r0, #664]	@ 0x298
 800aa74:	429a      	cmp	r2, r3
 800aa76:	d205      	bcs.n	800aa84 <USBD_LL_DataInStage+0x5e>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 800aa78:	460a      	mov	r2, r1
 800aa7a:	f000 fc4a 	bl	800b312 <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 800aa7e:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
 800aa82:	e7e3      	b.n	800aa4c <USBD_LL_DataInStage+0x26>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800aa84:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800aa88:	2b03      	cmp	r3, #3
 800aa8a:	d108      	bne.n	800aa9e <USBD_LL_DataInStage+0x78>
            if (pdev->pClass[0]->EP0_TxSent != NULL)
 800aa8c:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800aa90:	68db      	ldr	r3, [r3, #12]
 800aa92:	b123      	cbz	r3, 800aa9e <USBD_LL_DataInStage+0x78>
              pdev->classId = 0U;
 800aa94:	2200      	movs	r2, #0
 800aa96:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
 800aa9a:	4620      	mov	r0, r4
 800aa9c:	4798      	blx	r3
          (void)USBD_LL_StallEP(pdev, 0x80U);
 800aa9e:	2180      	movs	r1, #128	@ 0x80
 800aaa0:	4620      	mov	r0, r4
 800aaa2:	f7f6 ff9c 	bl	80019de <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 800aaa6:	4620      	mov	r0, r4
 800aaa8:	f000 fc4e 	bl	800b348 <USBD_CtlReceiveStatus>
 800aaac:	e7d4      	b.n	800aa58 <USBD_LL_DataInStage+0x32>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800aaae:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800aab2:	2b03      	cmp	r3, #3
 800aab4:	d1d6      	bne.n	800aa64 <USBD_LL_DataInStage+0x3e>
        if (pdev->pClass[idx]->DataIn != NULL)
 800aab6:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800aaba:	695b      	ldr	r3, [r3, #20]
 800aabc:	2b00      	cmp	r3, #0
 800aabe:	d0d1      	beq.n	800aa64 <USBD_LL_DataInStage+0x3e>
          pdev->classId = idx;
 800aac0:	2200      	movs	r2, #0
}
 800aac2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 800aac6:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
 800aaca:	4718      	bx	r3

0800aacc <USBD_LL_Reset>:
  *         Handle Reset event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 800aacc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  USBD_StatusTypeDef ret = USBD_OK;

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800aace:	2301      	movs	r3, #1
 800aad0:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
 800aad4:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
  pdev->ep0_state = USBD_EP0_IDLE;
 800aad8:	2100      	movs	r1, #0
{
 800aada:	4604      	mov	r4, r0
  pdev->ep0_state = USBD_EP0_IDLE;
 800aadc:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
  pdev->dev_config = 0U;
 800aae0:	6041      	str	r1, [r0, #4]
  pdev->dev_remote_wakeup = 0U;
 800aae2:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
  pdev->dev_test_mode = 0U;
 800aae6:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
  if (pdev->pClass[0] != NULL)
 800aaea:	b9b3      	cbnz	r3, 800ab1a <USBD_LL_Reset+0x4e>
  USBD_StatusTypeDef ret = USBD_OK;
 800aaec:	2600      	movs	r6, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800aaee:	2200      	movs	r2, #0
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 800aaf0:	2540      	movs	r5, #64	@ 0x40
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800aaf2:	4611      	mov	r1, r2
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800aaf4:	2701      	movs	r7, #1
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800aaf6:	2340      	movs	r3, #64	@ 0x40
 800aaf8:	4620      	mov	r0, r4
 800aafa:	f7f6 ff5b 	bl	80019b4 <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800aafe:	f8a4 7164 	strh.w	r7, [r4, #356]	@ 0x164
  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 800ab02:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 800ab06:	462b      	mov	r3, r5
 800ab08:	2200      	movs	r2, #0
 800ab0a:	2180      	movs	r1, #128	@ 0x80
 800ab0c:	4620      	mov	r0, r4
 800ab0e:	f7f6 ff51 	bl	80019b4 <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 800ab12:	84a7      	strh	r7, [r4, #36]	@ 0x24

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 800ab14:	6225      	str	r5, [r4, #32]

  return ret;
}
 800ab16:	4630      	mov	r0, r6
 800ab18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (pdev->pClass[0]->DeInit != NULL)
 800ab1a:	685b      	ldr	r3, [r3, #4]
 800ab1c:	2b00      	cmp	r3, #0
 800ab1e:	d0e5      	beq.n	800aaec <USBD_LL_Reset+0x20>
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
 800ab20:	4798      	blx	r3
 800ab22:	2800      	cmp	r0, #0
 800ab24:	d0e2      	beq.n	800aaec <USBD_LL_Reset+0x20>
        ret = USBD_FAIL;
 800ab26:	2603      	movs	r6, #3
 800ab28:	e7e1      	b.n	800aaee <USBD_LL_Reset+0x22>

0800ab2a <USBD_LL_SetSpeed>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
  pdev->dev_speed = speed;
 800ab2a:	7401      	strb	r1, [r0, #16]

  return USBD_OK;
}
 800ab2c:	2000      	movs	r0, #0
 800ab2e:	4770      	bx	lr

0800ab30 <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
 800ab30:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800ab34:	2b04      	cmp	r3, #4
  {
    pdev->dev_old_state = pdev->dev_state;
 800ab36:	bf1e      	ittt	ne
 800ab38:	f890 329c 	ldrbne.w	r3, [r0, #668]	@ 0x29c
 800ab3c:	b2db      	uxtbne	r3, r3
 800ab3e:	f880 329d 	strbne.w	r3, [r0, #669]	@ 0x29d
  }

  pdev->dev_state = USBD_STATE_SUSPENDED;
 800ab42:	2304      	movs	r3, #4
 800ab44:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c

  return USBD_OK;
}
 800ab48:	2000      	movs	r0, #0
 800ab4a:	4770      	bx	lr

0800ab4c <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 800ab4c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800ab50:	2b04      	cmp	r3, #4
  {
    pdev->dev_state = pdev->dev_old_state;
 800ab52:	bf02      	ittt	eq
 800ab54:	f890 329d 	ldrbeq.w	r3, [r0, #669]	@ 0x29d
 800ab58:	b2db      	uxtbeq	r3, r3
 800ab5a:	f880 329c 	strbeq.w	r3, [r0, #668]	@ 0x29c
  }

  return USBD_OK;
}
 800ab5e:	2000      	movs	r0, #0
 800ab60:	4770      	bx	lr

0800ab62 <USBD_LL_SOF>:
  *         Handle SOF event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 800ab62:	b508      	push	{r3, lr}
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800ab64:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800ab68:	2a03      	cmp	r2, #3
 800ab6a:	d105      	bne.n	800ab78 <USBD_LL_SOF+0x16>
          }
        }
      }
    }
#else
    if (pdev->pClass[0] != NULL)
 800ab6c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800ab70:	b113      	cbz	r3, 800ab78 <USBD_LL_SOF+0x16>
    {
      if (pdev->pClass[0]->SOF != NULL)
 800ab72:	69db      	ldr	r3, [r3, #28]
 800ab74:	b103      	cbz	r3, 800ab78 <USBD_LL_SOF+0x16>
      {
        (void)pdev->pClass[0]->SOF(pdev);
 800ab76:	4798      	blx	r3
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
}
 800ab78:	2000      	movs	r0, #0
 800ab7a:	bd08      	pop	{r3, pc}

0800ab7c <USBD_LL_IsoINIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 800ab7c:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800ab80:	32ae      	adds	r2, #174	@ 0xae
{
 800ab82:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 800ab84:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800ab88:	b14a      	cbz	r2, 800ab9e <USBD_LL_IsoINIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800ab8a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800ab8e:	2b03      	cmp	r3, #3
 800ab90:	d101      	bne.n	800ab96 <USBD_LL_IsoINIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
 800ab92:	6a13      	ldr	r3, [r2, #32]
 800ab94:	b90b      	cbnz	r3, 800ab9a <USBD_LL_IsoINIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 800ab96:	2000      	movs	r0, #0
}
 800ab98:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
 800ab9a:	4798      	blx	r3
 800ab9c:	e7fb      	b.n	800ab96 <USBD_LL_IsoINIncomplete+0x1a>
    return USBD_FAIL;
 800ab9e:	2003      	movs	r0, #3
 800aba0:	e7fa      	b.n	800ab98 <USBD_LL_IsoINIncomplete+0x1c>

0800aba2 <USBD_LL_IsoOUTIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 800aba2:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800aba6:	32ae      	adds	r2, #174	@ 0xae
{
 800aba8:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 800abaa:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800abae:	b14a      	cbz	r2, 800abc4 <USBD_LL_IsoOUTIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800abb0:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800abb4:	2b03      	cmp	r3, #3
 800abb6:	d101      	bne.n	800abbc <USBD_LL_IsoOUTIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
 800abb8:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 800abba:	b90b      	cbnz	r3, 800abc0 <USBD_LL_IsoOUTIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 800abbc:	2000      	movs	r0, #0
}
 800abbe:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
 800abc0:	4798      	blx	r3
 800abc2:	e7fb      	b.n	800abbc <USBD_LL_IsoOUTIncomplete+0x1a>
    return USBD_FAIL;
 800abc4:	2003      	movs	r0, #3
 800abc6:	e7fa      	b.n	800abbe <USBD_LL_IsoOUTIncomplete+0x1c>

0800abc8 <USBD_LL_DevConnected>:
  * @brief  USBD_LL_DevConnected
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
 800abc8:	2000      	movs	r0, #0
 800abca:	4770      	bx	lr

0800abcc <USBD_LL_DevDisconnected>:
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
  USBD_StatusTypeDef   ret = USBD_OK;

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800abcc:	2201      	movs	r2, #1
{
 800abce:	b508      	push	{r3, lr}
  pdev->dev_state = USBD_STATE_DEFAULT;
 800abd0:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 800abd4:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
 800abd8:	b90a      	cbnz	r2, 800abde <USBD_LL_DevDisconnected+0x12>
  USBD_StatusTypeDef   ret = USBD_OK;
 800abda:	2000      	movs	r0, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800abdc:	bd08      	pop	{r3, pc}
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
 800abde:	6852      	ldr	r2, [r2, #4]
 800abe0:	7901      	ldrb	r1, [r0, #4]
 800abe2:	4790      	blx	r2
 800abe4:	2800      	cmp	r0, #0
 800abe6:	d0f8      	beq.n	800abda <USBD_LL_DevDisconnected+0xe>
      ret = USBD_FAIL;
 800abe8:	2003      	movs	r0, #3
 800abea:	e7f7      	b.n	800abdc <USBD_LL_DevDisconnected+0x10>

0800abec <USBD_CoreFindIF>:
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
#endif /* USE_USBD_COMPOSITE */
}
 800abec:	2000      	movs	r0, #0
 800abee:	4770      	bx	lr

0800abf0 <USBD_CoreFindEP>:
  *         return the class index relative to the selected endpoint
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
 800abf0:	2000      	movs	r0, #0
 800abf2:	4770      	bx	lr

0800abf4 <USBD_GetEpDesc>:
  * @param  pConfDesc:  pointer to Bos descriptor
  * @param  EpAddr:  endpoint address
  * @retval pointer to video endpoint descriptor
  */
void *USBD_GetEpDesc(uint8_t *pConfDesc, uint8_t EpAddr)
{
 800abf4:	b510      	push	{r4, lr}
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
  USBD_EpDescTypeDef *pEpDesc = NULL;
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
 800abf6:	8842      	ldrh	r2, [r0, #2]
 800abf8:	7803      	ldrb	r3, [r0, #0]
 800abfa:	429a      	cmp	r2, r3
 800abfc:	d801      	bhi.n	800ac02 <USBD_GetEpDesc+0xe>
  USBD_EpDescTypeDef *pEpDesc = NULL;
 800abfe:	2000      	movs	r0, #0
      }
    }
  }

  return (void *)pEpDesc;
}
 800ac00:	bd10      	pop	{r4, pc}
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;

  *ptr += pnext->bLength;
 800ac02:	7804      	ldrb	r4, [r0, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
 800ac04:	4420      	add	r0, r4
  *ptr += pnext->bLength;
 800ac06:	4423      	add	r3, r4
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800ac08:	7844      	ldrb	r4, [r0, #1]
 800ac0a:	2c05      	cmp	r4, #5
  *ptr += pnext->bLength;
 800ac0c:	b29b      	uxth	r3, r3
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800ac0e:	d1f4      	bne.n	800abfa <USBD_GetEpDesc+0x6>
        if (pEpDesc->bEndpointAddress == EpAddr)
 800ac10:	7884      	ldrb	r4, [r0, #2]
 800ac12:	428c      	cmp	r4, r1
 800ac14:	d1f1      	bne.n	800abfa <USBD_GetEpDesc+0x6>
 800ac16:	e7f3      	b.n	800ac00 <USBD_GetEpDesc+0xc>

0800ac18 <USBD_CtlError.constprop.0>:
  *         Handle USB low level Error
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 800ac18:	b510      	push	{r4, lr}
{
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
 800ac1a:	2180      	movs	r1, #128	@ 0x80
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 800ac1c:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800ac1e:	f7f6 fede 	bl	80019de <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800ac22:	4620      	mov	r0, r4
 800ac24:	2100      	movs	r1, #0
}
 800ac26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 800ac2a:	f7f6 bed8 	b.w	80019de <USBD_LL_StallEP>
	...

0800ac30 <USBD_StdDevReq>:
{
 800ac30:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ac32:	780b      	ldrb	r3, [r1, #0]
 800ac34:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800ac38:	2b20      	cmp	r3, #32
{
 800ac3a:	4604      	mov	r4, r0
 800ac3c:	460d      	mov	r5, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800ac3e:	d009      	beq.n	800ac54 <USBD_StdDevReq+0x24>
 800ac40:	2b40      	cmp	r3, #64	@ 0x40
 800ac42:	d007      	beq.n	800ac54 <USBD_StdDevReq+0x24>
 800ac44:	b193      	cbz	r3, 800ac6c <USBD_StdDevReq+0x3c>
      USBD_CtlError(pdev, req);
 800ac46:	4620      	mov	r0, r4
 800ac48:	f7ff ffe6 	bl	800ac18 <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 800ac4c:	2500      	movs	r5, #0
}
 800ac4e:	4628      	mov	r0, r5
 800ac50:	b002      	add	sp, #8
 800ac52:	bd70      	pop	{r4, r5, r6, pc}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 800ac54:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800ac58:	33ae      	adds	r3, #174	@ 0xae
 800ac5a:	4629      	mov	r1, r5
 800ac5c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 800ac60:	689b      	ldr	r3, [r3, #8]
 800ac62:	4620      	mov	r0, r4
}
 800ac64:	b002      	add	sp, #8
 800ac66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 800ac6a:	4718      	bx	r3
      switch (req->bRequest)
 800ac6c:	784b      	ldrb	r3, [r1, #1]
 800ac6e:	2b09      	cmp	r3, #9
 800ac70:	d8e9      	bhi.n	800ac46 <USBD_StdDevReq+0x16>
 800ac72:	a201      	add	r2, pc, #4	@ (adr r2, 800ac78 <USBD_StdDevReq+0x48>)
 800ac74:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ac78:	0800ae99 	.word	0x0800ae99
 800ac7c:	0800aedd 	.word	0x0800aedd
 800ac80:	0800ac47 	.word	0x0800ac47
 800ac84:	0800aec1 	.word	0x0800aec1
 800ac88:	0800ac47 	.word	0x0800ac47
 800ac8c:	0800ad93 	.word	0x0800ad93
 800ac90:	0800aca1 	.word	0x0800aca1
 800ac94:	0800ac47 	.word	0x0800ac47
 800ac98:	0800ae6d 	.word	0x0800ae6d
 800ac9c:	0800add5 	.word	0x0800add5
  uint16_t len = 0U;
 800aca0:	2300      	movs	r3, #0
 800aca2:	f8ad 3006 	strh.w	r3, [sp, #6]
  switch (req->wValue >> 8)
 800aca6:	884b      	ldrh	r3, [r1, #2]
 800aca8:	0a1a      	lsrs	r2, r3, #8
 800acaa:	3a01      	subs	r2, #1
 800acac:	2a06      	cmp	r2, #6
 800acae:	d8ca      	bhi.n	800ac46 <USBD_StdDevReq+0x16>
 800acb0:	a101      	add	r1, pc, #4	@ (adr r1, 800acb8 <USBD_StdDevReq+0x88>)
 800acb2:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800acb6:	bf00      	nop
 800acb8:	0800acd5 	.word	0x0800acd5
 800acbc:	0800ad07 	.word	0x0800ad07
 800acc0:	0800ad21 	.word	0x0800ad21
 800acc4:	0800ac47 	.word	0x0800ac47
 800acc8:	0800ac47 	.word	0x0800ac47
 800accc:	0800ad65 	.word	0x0800ad65
 800acd0:	0800ad7b 	.word	0x0800ad7b
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 800acd4:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800acd8:	681b      	ldr	r3, [r3, #0]
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 800acda:	7c20      	ldrb	r0, [r4, #16]
 800acdc:	f10d 0106 	add.w	r1, sp, #6
 800ace0:	4798      	blx	r3
  if (req->wLength != 0U)
 800ace2:	88ea      	ldrh	r2, [r5, #6]
 800ace4:	2a00      	cmp	r2, #0
 800ace6:	f000 80a4 	beq.w	800ae32 <USBD_StdDevReq+0x202>
    if (len != 0U)
 800acea:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800acee:	2b00      	cmp	r3, #0
 800acf0:	d0a9      	beq.n	800ac46 <USBD_StdDevReq+0x16>
      len = MIN(len, req->wLength);
 800acf2:	429a      	cmp	r2, r3
 800acf4:	bf28      	it	cs
 800acf6:	461a      	movcs	r2, r3
 800acf8:	f8ad 2006 	strh.w	r2, [sp, #6]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 800acfc:	4601      	mov	r1, r0
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 800acfe:	4620      	mov	r0, r4
 800ad00:	f000 fafa 	bl	800b2f8 <USBD_CtlSendData>
      break;
 800ad04:	e7a2      	b.n	800ac4c <USBD_StdDevReq+0x1c>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800ad06:	7c02      	ldrb	r2, [r0, #16]
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 800ad08:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800ad0c:	b932      	cbnz	r2, 800ad1c <USBD_StdDevReq+0xec>
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 800ad0e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 800ad10:	f10d 0006 	add.w	r0, sp, #6
 800ad14:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800ad16:	2302      	movs	r3, #2
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800ad18:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
 800ad1a:	e7e2      	b.n	800ace2 <USBD_StdDevReq+0xb2>
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 800ad1c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ad1e:	e7f7      	b.n	800ad10 <USBD_StdDevReq+0xe0>
      switch ((uint8_t)(req->wValue))
 800ad20:	b2db      	uxtb	r3, r3
 800ad22:	2b05      	cmp	r3, #5
 800ad24:	d88f      	bhi.n	800ac46 <USBD_StdDevReq+0x16>
 800ad26:	e8df f003 	tbb	[pc, r3]
 800ad2a:	0903      	.short	0x0903
 800ad2c:	1915110d 	.word	0x1915110d
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 800ad30:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800ad34:	685b      	ldr	r3, [r3, #4]
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800ad36:	2b00      	cmp	r3, #0
 800ad38:	d1cf      	bne.n	800acda <USBD_StdDevReq+0xaa>
 800ad3a:	e784      	b.n	800ac46 <USBD_StdDevReq+0x16>
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 800ad3c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800ad40:	689b      	ldr	r3, [r3, #8]
 800ad42:	e7f8      	b.n	800ad36 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 800ad44:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800ad48:	68db      	ldr	r3, [r3, #12]
 800ad4a:	e7f4      	b.n	800ad36 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 800ad4c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800ad50:	691b      	ldr	r3, [r3, #16]
 800ad52:	e7f0      	b.n	800ad36 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 800ad54:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800ad58:	695b      	ldr	r3, [r3, #20]
 800ad5a:	e7ec      	b.n	800ad36 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800ad5c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 800ad60:	699b      	ldr	r3, [r3, #24]
 800ad62:	e7e8      	b.n	800ad36 <USBD_StdDevReq+0x106>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800ad64:	7c03      	ldrb	r3, [r0, #16]
 800ad66:	2b00      	cmp	r3, #0
 800ad68:	f47f af6d 	bne.w	800ac46 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
 800ad6c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800ad70:	f10d 0006 	add.w	r0, sp, #6
 800ad74:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ad76:	4798      	blx	r3
  if (err != 0U)
 800ad78:	e7b3      	b.n	800ace2 <USBD_StdDevReq+0xb2>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800ad7a:	7c03      	ldrb	r3, [r0, #16]
 800ad7c:	2b00      	cmp	r3, #0
 800ad7e:	f47f af62 	bne.w	800ac46 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
 800ad82:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800ad86:	f10d 0006 	add.w	r0, sp, #6
 800ad8a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ad8c:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800ad8e:	2307      	movs	r3, #7
 800ad90:	e7c2      	b.n	800ad18 <USBD_StdDevReq+0xe8>
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 800ad92:	888b      	ldrh	r3, [r1, #4]
 800ad94:	2b00      	cmp	r3, #0
 800ad96:	f47f af56 	bne.w	800ac46 <USBD_StdDevReq+0x16>
 800ad9a:	88cb      	ldrh	r3, [r1, #6]
 800ad9c:	2b00      	cmp	r3, #0
 800ad9e:	f47f af52 	bne.w	800ac46 <USBD_StdDevReq+0x16>
 800ada2:	884d      	ldrh	r5, [r1, #2]
 800ada4:	2d7f      	cmp	r5, #127	@ 0x7f
 800ada6:	f63f af4e 	bhi.w	800ac46 <USBD_StdDevReq+0x16>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800adaa:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800adae:	2b03      	cmp	r3, #3
 800adb0:	f43f af49 	beq.w	800ac46 <USBD_StdDevReq+0x16>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 800adb4:	b2ed      	uxtb	r5, r5
      pdev->dev_address = dev_addr;
 800adb6:	f880 529e 	strb.w	r5, [r0, #670]	@ 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 800adba:	4629      	mov	r1, r5
 800adbc:	f7f6 fe21 	bl	8001a02 <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 800adc0:	4620      	mov	r0, r4
 800adc2:	f000 fab6 	bl	800b332 <USBD_CtlSendStatus>
      if (dev_addr != 0U)
 800adc6:	b11d      	cbz	r5, 800add0 <USBD_StdDevReq+0x1a0>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800adc8:	2302      	movs	r3, #2
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800adca:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800adce:	e73d      	b.n	800ac4c <USBD_StdDevReq+0x1c>
        pdev->dev_state = USBD_STATE_DEFAULT;
 800add0:	2301      	movs	r3, #1
 800add2:	e7fa      	b.n	800adca <USBD_StdDevReq+0x19a>
  cfgidx = (uint8_t)(req->wValue);
 800add4:	7889      	ldrb	r1, [r1, #2]
 800add6:	4d47      	ldr	r5, [pc, #284]	@ (800aef4 <USBD_StdDevReq+0x2c4>)
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800add8:	2901      	cmp	r1, #1
  cfgidx = (uint8_t)(req->wValue);
 800adda:	7029      	strb	r1, [r5, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800addc:	d903      	bls.n	800ade6 <USBD_StdDevReq+0x1b6>
    USBD_CtlError(pdev, req);
 800adde:	f7ff ff1b 	bl	800ac18 <USBD_CtlError.constprop.0>
    return USBD_FAIL;
 800ade2:	2503      	movs	r5, #3
 800ade4:	e733      	b.n	800ac4e <USBD_StdDevReq+0x1e>
  switch (pdev->dev_state)
 800ade6:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800adea:	2b02      	cmp	r3, #2
 800adec:	b2de      	uxtb	r6, r3
 800adee:	d008      	beq.n	800ae02 <USBD_StdDevReq+0x1d2>
 800adf0:	2e03      	cmp	r6, #3
 800adf2:	d017      	beq.n	800ae24 <USBD_StdDevReq+0x1f4>
      USBD_CtlError(pdev, req);
 800adf4:	f7ff ff10 	bl	800ac18 <USBD_CtlError.constprop.0>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 800adf8:	7829      	ldrb	r1, [r5, #0]
 800adfa:	4620      	mov	r0, r4
 800adfc:	f7ff fda5 	bl	800a94a <USBD_ClrClassConfig>
      break;
 800ae00:	e7ef      	b.n	800ade2 <USBD_StdDevReq+0x1b2>
      if (cfgidx != 0U)
 800ae02:	b1b1      	cbz	r1, 800ae32 <USBD_StdDevReq+0x202>
        pdev->dev_config = cfgidx;
 800ae04:	2101      	movs	r1, #1
 800ae06:	6041      	str	r1, [r0, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800ae08:	f7ff fd98 	bl	800a93c <USBD_SetClassConfig>
        if (ret != USBD_OK)
 800ae0c:	4605      	mov	r5, r0
          USBD_CtlError(pdev, req);
 800ae0e:	4620      	mov	r0, r4
        if (ret != USBD_OK)
 800ae10:	b125      	cbz	r5, 800ae1c <USBD_StdDevReq+0x1ec>
          USBD_CtlError(pdev, req);
 800ae12:	f7ff ff01 	bl	800ac18 <USBD_CtlError.constprop.0>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800ae16:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
 800ae1a:	e718      	b.n	800ac4e <USBD_StdDevReq+0x1e>
          (void)USBD_CtlSendStatus(pdev);
 800ae1c:	f000 fa89 	bl	800b332 <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800ae20:	2303      	movs	r3, #3
 800ae22:	e7d2      	b.n	800adca <USBD_StdDevReq+0x19a>
      if (cfgidx == 0U)
 800ae24:	b949      	cbnz	r1, 800ae3a <USBD_StdDevReq+0x20a>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800ae26:	2302      	movs	r3, #2
 800ae28:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
        pdev->dev_config = cfgidx;
 800ae2c:	6041      	str	r1, [r0, #4]
        (void)USBD_ClrClassConfig(pdev, cfgidx);
 800ae2e:	f7ff fd8c 	bl	800a94a <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
 800ae32:	4620      	mov	r0, r4
 800ae34:	f000 fa7d 	bl	800b332 <USBD_CtlSendStatus>
 800ae38:	e708      	b.n	800ac4c <USBD_StdDevReq+0x1c>
      else if (cfgidx != pdev->dev_config)
 800ae3a:	6841      	ldr	r1, [r0, #4]
 800ae3c:	2901      	cmp	r1, #1
 800ae3e:	d0f8      	beq.n	800ae32 <USBD_StdDevReq+0x202>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800ae40:	b2c9      	uxtb	r1, r1
 800ae42:	f7ff fd82 	bl	800a94a <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
 800ae46:	7829      	ldrb	r1, [r5, #0]
 800ae48:	6061      	str	r1, [r4, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800ae4a:	4620      	mov	r0, r4
 800ae4c:	f7ff fd76 	bl	800a93c <USBD_SetClassConfig>
        if (ret != USBD_OK)
 800ae50:	4605      	mov	r5, r0
 800ae52:	2800      	cmp	r0, #0
 800ae54:	d0ed      	beq.n	800ae32 <USBD_StdDevReq+0x202>
          USBD_CtlError(pdev, req);
 800ae56:	4620      	mov	r0, r4
 800ae58:	f7ff fede 	bl	800ac18 <USBD_CtlError.constprop.0>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800ae5c:	7921      	ldrb	r1, [r4, #4]
 800ae5e:	4620      	mov	r0, r4
 800ae60:	f7ff fd73 	bl	800a94a <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 800ae64:	2302      	movs	r3, #2
 800ae66:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800ae6a:	e6f0      	b.n	800ac4e <USBD_StdDevReq+0x1e>
  if (req->wLength != 1U)
 800ae6c:	88ca      	ldrh	r2, [r1, #6]
 800ae6e:	2a01      	cmp	r2, #1
 800ae70:	f47f aee9 	bne.w	800ac46 <USBD_StdDevReq+0x16>
    switch (pdev->dev_state)
 800ae74:	f890 129c 	ldrb.w	r1, [r0, #668]	@ 0x29c
 800ae78:	2902      	cmp	r1, #2
 800ae7a:	b2cb      	uxtb	r3, r1
 800ae7c:	d807      	bhi.n	800ae8e <USBD_StdDevReq+0x25e>
 800ae7e:	2b00      	cmp	r3, #0
 800ae80:	f43f aee1 	beq.w	800ac46 <USBD_StdDevReq+0x16>
        pdev->dev_default_config = 0U;
 800ae84:	4601      	mov	r1, r0
 800ae86:	2300      	movs	r3, #0
 800ae88:	f841 3f08 	str.w	r3, [r1, #8]!
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 800ae8c:	e737      	b.n	800acfe <USBD_StdDevReq+0xce>
    switch (pdev->dev_state)
 800ae8e:	2b03      	cmp	r3, #3
 800ae90:	f47f aed9 	bne.w	800ac46 <USBD_StdDevReq+0x16>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 800ae94:	1d01      	adds	r1, r0, #4
 800ae96:	e732      	b.n	800acfe <USBD_StdDevReq+0xce>
  switch (pdev->dev_state)
 800ae98:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800ae9c:	3b01      	subs	r3, #1
 800ae9e:	2b02      	cmp	r3, #2
 800aea0:	f63f aed1 	bhi.w	800ac46 <USBD_StdDevReq+0x16>
      if (req->wLength != 0x2U)
 800aea4:	88ca      	ldrh	r2, [r1, #6]
 800aea6:	2a02      	cmp	r2, #2
 800aea8:	f47f aecd 	bne.w	800ac46 <USBD_StdDevReq+0x16>
      if (pdev->dev_remote_wakeup != 0U)
 800aeac:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
 800aeb0:	4601      	mov	r1, r0
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 800aeb2:	2b00      	cmp	r3, #0
 800aeb4:	bf0c      	ite	eq
 800aeb6:	2301      	moveq	r3, #1
 800aeb8:	2303      	movne	r3, #3
 800aeba:	f841 3f0c 	str.w	r3, [r1, #12]!
 800aebe:	e71e      	b.n	800acfe <USBD_StdDevReq+0xce>
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800aec0:	884b      	ldrh	r3, [r1, #2]
 800aec2:	2b01      	cmp	r3, #1
 800aec4:	d102      	bne.n	800aecc <USBD_StdDevReq+0x29c>
        pdev->dev_remote_wakeup = 0U;
 800aec6:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
 800aeca:	e7b2      	b.n	800ae32 <USBD_StdDevReq+0x202>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
 800aecc:	2b02      	cmp	r3, #2
 800aece:	f47f aeba 	bne.w	800ac46 <USBD_StdDevReq+0x16>
    pdev->dev_test_mode = (uint8_t)(req->wIndex >> 8);
 800aed2:	888b      	ldrh	r3, [r1, #4]
 800aed4:	0a1b      	lsrs	r3, r3, #8
 800aed6:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
    (void)USBD_CtlSendStatus(pdev);
 800aeda:	e7aa      	b.n	800ae32 <USBD_StdDevReq+0x202>
  switch (pdev->dev_state)
 800aedc:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800aee0:	3b01      	subs	r3, #1
 800aee2:	2b02      	cmp	r3, #2
 800aee4:	f63f aeaf 	bhi.w	800ac46 <USBD_StdDevReq+0x16>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 800aee8:	884b      	ldrh	r3, [r1, #2]
 800aeea:	2b01      	cmp	r3, #1
 800aeec:	f47f aeae 	bne.w	800ac4c <USBD_StdDevReq+0x1c>
        pdev->dev_remote_wakeup = 0U;
 800aef0:	2300      	movs	r3, #0
 800aef2:	e7e8      	b.n	800aec6 <USBD_StdDevReq+0x296>
 800aef4:	20013b5c 	.word	0x20013b5c

0800aef8 <USBD_StdItfReq>:
{
 800aef8:	b570      	push	{r4, r5, r6, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800aefa:	780b      	ldrb	r3, [r1, #0]
 800aefc:	f003 0260 	and.w	r2, r3, #96	@ 0x60
 800af00:	065b      	lsls	r3, r3, #25
{
 800af02:	4604      	mov	r4, r0
 800af04:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800af06:	d501      	bpl.n	800af0c <USBD_StdItfReq+0x14>
 800af08:	2a40      	cmp	r2, #64	@ 0x40
 800af0a:	d11f      	bne.n	800af4c <USBD_StdItfReq+0x54>
      switch (pdev->dev_state)
 800af0c:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 800af10:	3b01      	subs	r3, #1
 800af12:	2b02      	cmp	r3, #2
 800af14:	d81a      	bhi.n	800af4c <USBD_StdItfReq+0x54>
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 800af16:	7931      	ldrb	r1, [r6, #4]
 800af18:	2901      	cmp	r1, #1
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 800af1a:	4620      	mov	r0, r4
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 800af1c:	d817      	bhi.n	800af4e <USBD_StdItfReq+0x56>
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 800af1e:	f7ff fe65 	bl	800abec <USBD_CoreFindIF>
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800af22:	b988      	cbnz	r0, 800af48 <USBD_StdItfReq+0x50>
              if (pdev->pClass[idx]->Setup != NULL)
 800af24:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 800af28:	689b      	ldr	r3, [r3, #8]
 800af2a:	b16b      	cbz	r3, 800af48 <USBD_StdItfReq+0x50>
                pdev->classId = idx;
 800af2c:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800af30:	4631      	mov	r1, r6
 800af32:	4620      	mov	r0, r4
 800af34:	4798      	blx	r3
 800af36:	4605      	mov	r5, r0
            if ((req->wLength == 0U) && (ret == USBD_OK))
 800af38:	88f3      	ldrh	r3, [r6, #6]
 800af3a:	b91b      	cbnz	r3, 800af44 <USBD_StdItfReq+0x4c>
 800af3c:	b915      	cbnz	r5, 800af44 <USBD_StdItfReq+0x4c>
              (void)USBD_CtlSendStatus(pdev);
 800af3e:	4620      	mov	r0, r4
 800af40:	f000 f9f7 	bl	800b332 <USBD_CtlSendStatus>
}
 800af44:	4628      	mov	r0, r5
 800af46:	bd70      	pop	{r4, r5, r6, pc}
                ret = USBD_FAIL;
 800af48:	2503      	movs	r5, #3
 800af4a:	e7f5      	b.n	800af38 <USBD_StdItfReq+0x40>
          USBD_CtlError(pdev, req);
 800af4c:	4620      	mov	r0, r4
            USBD_CtlError(pdev, req);
 800af4e:	f7ff fe63 	bl	800ac18 <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 800af52:	2500      	movs	r5, #0
 800af54:	e7f6      	b.n	800af44 <USBD_StdItfReq+0x4c>

0800af56 <USBD_StdEPReq>:
{
 800af56:	b570      	push	{r4, r5, r6, lr}
 800af58:	780b      	ldrb	r3, [r1, #0]
  ep_addr = LOBYTE(req->wIndex);
 800af5a:	888a      	ldrh	r2, [r1, #4]
 800af5c:	790d      	ldrb	r5, [r1, #4]
 800af5e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800af62:	2b20      	cmp	r3, #32
{
 800af64:	4604      	mov	r4, r0
 800af66:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800af68:	d058      	beq.n	800b01c <USBD_StdEPReq+0xc6>
 800af6a:	2b40      	cmp	r3, #64	@ 0x40
 800af6c:	d056      	beq.n	800b01c <USBD_StdEPReq+0xc6>
 800af6e:	b11b      	cbz	r3, 800af78 <USBD_StdEPReq+0x22>
              USBD_CtlError(pdev, req);
 800af70:	4620      	mov	r0, r4
 800af72:	f7ff fe51 	bl	800ac18 <USBD_CtlError.constprop.0>
              break;
 800af76:	e03d      	b.n	800aff4 <USBD_StdEPReq+0x9e>
      switch (req->bRequest)
 800af78:	784b      	ldrb	r3, [r1, #1]
 800af7a:	2b01      	cmp	r3, #1
 800af7c:	d03c      	beq.n	800aff8 <USBD_StdEPReq+0xa2>
 800af7e:	2b03      	cmp	r3, #3
 800af80:	d025      	beq.n	800afce <USBD_StdEPReq+0x78>
 800af82:	2b00      	cmp	r3, #0
 800af84:	d1f4      	bne.n	800af70 <USBD_StdEPReq+0x1a>
          switch (pdev->dev_state)
 800af86:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800af8a:	2b02      	cmp	r3, #2
 800af8c:	b2d9      	uxtb	r1, r3
 800af8e:	d061      	beq.n	800b054 <USBD_StdEPReq+0xfe>
 800af90:	2903      	cmp	r1, #3
 800af92:	d1ed      	bne.n	800af70 <USBD_StdEPReq+0x1a>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800af94:	f005 030f 	and.w	r3, r5, #15
              if ((ep_addr & 0x80U) == 0x80U)
 800af98:	f012 0f80 	tst.w	r2, #128	@ 0x80
 800af9c:	f04f 0214 	mov.w	r2, #20
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800afa0:	fb02 0303 	mla	r3, r2, r3, r0
              if ((ep_addr & 0x80U) == 0x80U)
 800afa4:	d065      	beq.n	800b072 <USBD_StdEPReq+0x11c>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 800afa6:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 800afa8:	2b00      	cmp	r3, #0
 800afaa:	d0e1      	beq.n	800af70 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800afac:	f005 067f 	and.w	r6, r5, #127	@ 0x7f
 800afb0:	3601      	adds	r6, #1
 800afb2:	eb06 0686 	add.w	r6, r6, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800afb6:	2d80      	cmp	r5, #128	@ 0x80
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800afb8:	eb00 0686 	add.w	r6, r0, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800afbc:	d065      	beq.n	800b08a <USBD_StdEPReq+0x134>
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 800afbe:	4629      	mov	r1, r5
 800afc0:	4620      	mov	r0, r4
 800afc2:	f7f6 fcd1 	bl	8001968 <USBD_LL_IsStallEP>
 800afc6:	2800      	cmp	r0, #0
 800afc8:	d064      	beq.n	800b094 <USBD_StdEPReq+0x13e>
                pep->status = 0x0001U;
 800afca:	2301      	movs	r3, #1
 800afcc:	e05e      	b.n	800b08c <USBD_StdEPReq+0x136>
          switch (pdev->dev_state)
 800afce:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800afd2:	2b02      	cmp	r3, #2
 800afd4:	b2da      	uxtb	r2, r3
 800afd6:	d033      	beq.n	800b040 <USBD_StdEPReq+0xea>
 800afd8:	2a03      	cmp	r2, #3
 800afda:	d1c9      	bne.n	800af70 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 800afdc:	884b      	ldrh	r3, [r1, #2]
 800afde:	b933      	cbnz	r3, 800afee <USBD_StdEPReq+0x98>
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 800afe0:	0669      	lsls	r1, r5, #25
 800afe2:	d004      	beq.n	800afee <USBD_StdEPReq+0x98>
 800afe4:	88f3      	ldrh	r3, [r6, #6]
 800afe6:	b913      	cbnz	r3, 800afee <USBD_StdEPReq+0x98>
                  (void)USBD_LL_StallEP(pdev, ep_addr);
 800afe8:	4629      	mov	r1, r5
 800afea:	f7f6 fcf8 	bl	80019de <USBD_LL_StallEP>
              (void)USBD_CtlSendStatus(pdev);
 800afee:	4620      	mov	r0, r4
 800aff0:	f000 f99f 	bl	800b332 <USBD_CtlSendStatus>
}
 800aff4:	2000      	movs	r0, #0
 800aff6:	bd70      	pop	{r4, r5, r6, pc}
          switch (pdev->dev_state)
 800aff8:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800affc:	2b02      	cmp	r3, #2
 800affe:	b2da      	uxtb	r2, r3
 800b000:	d01e      	beq.n	800b040 <USBD_StdEPReq+0xea>
 800b002:	2a03      	cmp	r2, #3
 800b004:	d1b4      	bne.n	800af70 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 800b006:	884b      	ldrh	r3, [r1, #2]
 800b008:	2b00      	cmp	r3, #0
 800b00a:	d1f3      	bne.n	800aff4 <USBD_StdEPReq+0x9e>
                if ((ep_addr & 0x7FU) != 0x00U)
 800b00c:	066b      	lsls	r3, r5, #25
 800b00e:	d002      	beq.n	800b016 <USBD_StdEPReq+0xc0>
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 800b010:	4629      	mov	r1, r5
 800b012:	f7f6 fced 	bl	80019f0 <USBD_LL_ClearStallEP>
                (void)USBD_CtlSendStatus(pdev);
 800b016:	4620      	mov	r0, r4
 800b018:	f000 f98b 	bl	800b332 <USBD_CtlSendStatus>
                idx = USBD_CoreFindEP(pdev, ep_addr);
 800b01c:	4629      	mov	r1, r5
 800b01e:	4620      	mov	r0, r4
 800b020:	f7ff fde6 	bl	800abf0 <USBD_CoreFindEP>
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 800b024:	2800      	cmp	r0, #0
 800b026:	d1e5      	bne.n	800aff4 <USBD_StdEPReq+0x9e>
                  if (pdev->pClass[idx]->Setup != NULL)
 800b028:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
                  pdev->classId = idx;
 800b02c:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                  if (pdev->pClass[idx]->Setup != NULL)
 800b030:	689b      	ldr	r3, [r3, #8]
 800b032:	2b00      	cmp	r3, #0
 800b034:	d0de      	beq.n	800aff4 <USBD_StdEPReq+0x9e>
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800b036:	4631      	mov	r1, r6
 800b038:	4620      	mov	r0, r4
}
 800b03a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 800b03e:	4718      	bx	r3
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800b040:	066a      	lsls	r2, r5, #25
 800b042:	d095      	beq.n	800af70 <USBD_StdEPReq+0x1a>
                (void)USBD_LL_StallEP(pdev, ep_addr);
 800b044:	4629      	mov	r1, r5
 800b046:	f7f6 fcca 	bl	80019de <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 800b04a:	2180      	movs	r1, #128	@ 0x80
 800b04c:	4620      	mov	r0, r4
 800b04e:	f7f6 fcc6 	bl	80019de <USBD_LL_StallEP>
 800b052:	e7cf      	b.n	800aff4 <USBD_StdEPReq+0x9e>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800b054:	0669      	lsls	r1, r5, #25
 800b056:	d18b      	bne.n	800af70 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800b058:	0613      	lsls	r3, r2, #24
 800b05a:	bf4c      	ite	mi
 800b05c:	f100 0114 	addmi.w	r1, r0, #20
 800b060:	f500 71aa 	addpl.w	r1, r0, #340	@ 0x154
              pep->status = 0x0000U;
 800b064:	2300      	movs	r3, #0
 800b066:	600b      	str	r3, [r1, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800b068:	2202      	movs	r2, #2
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800b06a:	4620      	mov	r0, r4
 800b06c:	f000 f944 	bl	800b2f8 <USBD_CtlSendData>
              break;
 800b070:	e7c0      	b.n	800aff4 <USBD_StdEPReq+0x9e>
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 800b072:	f8b3 3164 	ldrh.w	r3, [r3, #356]	@ 0x164
 800b076:	2b00      	cmp	r3, #0
 800b078:	f43f af7a 	beq.w	800af70 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800b07c:	2614      	movs	r6, #20
 800b07e:	fb06 0605 	mla	r6, r6, r5, r0
 800b082:	f506 76aa 	add.w	r6, r6, #340	@ 0x154
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800b086:	2d00      	cmp	r5, #0
 800b088:	d199      	bne.n	800afbe <USBD_StdEPReq+0x68>
                pep->status = 0x0000U;
 800b08a:	2300      	movs	r3, #0
                pep->status = 0x0001U;
 800b08c:	6033      	str	r3, [r6, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800b08e:	2202      	movs	r2, #2
 800b090:	4631      	mov	r1, r6
 800b092:	e7ea      	b.n	800b06a <USBD_StdEPReq+0x114>
                pep->status = 0x0000U;
 800b094:	6030      	str	r0, [r6, #0]
 800b096:	e7fa      	b.n	800b08e <USBD_StdEPReq+0x138>

0800b098 <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
 800b098:	780b      	ldrb	r3, [r1, #0]
 800b09a:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
 800b09c:	784b      	ldrb	r3, [r1, #1]
 800b09e:	7043      	strb	r3, [r0, #1]
  req->wValue = SWAPBYTE(pbuff);
 800b0a0:	884b      	ldrh	r3, [r1, #2]
 800b0a2:	8043      	strh	r3, [r0, #2]
  req->wIndex = SWAPBYTE(pbuff);
 800b0a4:	888b      	ldrh	r3, [r1, #4]
 800b0a6:	8083      	strh	r3, [r0, #4]
  req->wLength = SWAPBYTE(pbuff);
 800b0a8:	88cb      	ldrh	r3, [r1, #6]
 800b0aa:	80c3      	strh	r3, [r0, #6]
}
 800b0ac:	4770      	bx	lr

0800b0ae <USBD_CtlError>:
{
 800b0ae:	b510      	push	{r4, lr}
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800b0b0:	2180      	movs	r1, #128	@ 0x80
{
 800b0b2:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800b0b4:	f7f6 fc93 	bl	80019de <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 800b0b8:	4620      	mov	r0, r4
 800b0ba:	2100      	movs	r1, #0
}
 800b0bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 800b0c0:	f7f6 bc8d 	b.w	80019de <USBD_LL_StallEP>

0800b0c4 <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 800b0c4:	b570      	push	{r4, r5, r6, lr}
 800b0c6:	460d      	mov	r5, r1
 800b0c8:	4616      	mov	r6, r2
  uint8_t idx = 0U;
  uint8_t *pdesc;

  if (desc == NULL)
 800b0ca:	4604      	mov	r4, r0
 800b0cc:	b170      	cbz	r0, 800b0ec <USBD_GetString+0x28>
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
 800b0ce:	f7f5 f88f 	bl	80001f0 <strlen>
  *len = MIN(USBD_MAX_STR_DESC_SIZ, ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U);
 800b0d2:	b2c3      	uxtb	r3, r0
 800b0d4:	3301      	adds	r3, #1
 800b0d6:	005b      	lsls	r3, r3, #1
 800b0d8:	8033      	strh	r3, [r6, #0]
  unicode[idx] = *(uint8_t *)len;
 800b0da:	702b      	strb	r3, [r5, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
 800b0dc:	2303      	movs	r3, #3
 800b0de:	706b      	strb	r3, [r5, #1]
  while (*pdesc != (uint8_t)'\0')
 800b0e0:	3c01      	subs	r4, #1
  idx++;
 800b0e2:	2302      	movs	r3, #2
    unicode[idx] = 0U;
 800b0e4:	2100      	movs	r1, #0
  while (*pdesc != (uint8_t)'\0')
 800b0e6:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800b0ea:	b902      	cbnz	r2, 800b0ee <USBD_GetString+0x2a>
}
 800b0ec:	bd70      	pop	{r4, r5, r6, pc}
    unicode[idx] = *pdesc;
 800b0ee:	54ea      	strb	r2, [r5, r3]
    idx++;
 800b0f0:	1c5a      	adds	r2, r3, #1
    unicode[idx] = 0U;
 800b0f2:	b2d2      	uxtb	r2, r2
    idx++;
 800b0f4:	3302      	adds	r3, #2
    unicode[idx] = 0U;
 800b0f6:	54a9      	strb	r1, [r5, r2]
    idx++;
 800b0f8:	b2db      	uxtb	r3, r3
 800b0fa:	e7f4      	b.n	800b0e6 <USBD_GetString+0x22>

0800b0fc <USBD_HID_DataIn>:
static uint8_t USBD_HID_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
  UNUSED(epnum);
  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
 800b0fc:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 800b100:	33b0      	adds	r3, #176	@ 0xb0
 800b102:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800b106:	2000      	movs	r0, #0
 800b108:	7318      	strb	r0, [r3, #12]

  return (uint8_t)USBD_OK;
}
 800b10a:	4770      	bx	lr

0800b10c <USBD_HID_GetDeviceQualifierDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_HID_GetDeviceQualifierDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_HID_DeviceQualifierDesc);
 800b10c:	230a      	movs	r3, #10
 800b10e:	8003      	strh	r3, [r0, #0]

  return USBD_HID_DeviceQualifierDesc;
}
 800b110:	4800      	ldr	r0, [pc, #0]	@ (800b114 <USBD_HID_GetDeviceQualifierDesc+0x8>)
 800b112:	4770      	bx	lr
 800b114:	20000128 	.word	0x20000128

0800b118 <USBD_HID_GetFSCfgDesc>:
{
 800b118:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800b11a:	2181      	movs	r1, #129	@ 0x81
{
 800b11c:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800b11e:	4805      	ldr	r0, [pc, #20]	@ (800b134 <USBD_HID_GetFSCfgDesc+0x1c>)
 800b120:	f7ff fd68 	bl	800abf4 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 800b124:	b108      	cbz	r0, 800b12a <USBD_HID_GetFSCfgDesc+0x12>
    pEpDesc->bInterval = HID_FS_BINTERVAL;
 800b126:	230a      	movs	r3, #10
 800b128:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800b12a:	2322      	movs	r3, #34	@ 0x22
}
 800b12c:	4801      	ldr	r0, [pc, #4]	@ (800b134 <USBD_HID_GetFSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800b12e:	8023      	strh	r3, [r4, #0]
}
 800b130:	bd10      	pop	{r4, pc}
 800b132:	bf00      	nop
 800b134:	20000140 	.word	0x20000140

0800b138 <USBD_HID_GetOtherSpeedCfgDesc>:
static uint8_t *USBD_HID_GetOtherSpeedCfgDesc(uint16_t *length)
 800b138:	f7ff bfee 	b.w	800b118 <USBD_HID_GetFSCfgDesc>

0800b13c <USBD_HID_GetHSCfgDesc>:
{
 800b13c:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800b13e:	2181      	movs	r1, #129	@ 0x81
{
 800b140:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 800b142:	4805      	ldr	r0, [pc, #20]	@ (800b158 <USBD_HID_GetHSCfgDesc+0x1c>)
 800b144:	f7ff fd56 	bl	800abf4 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 800b148:	b108      	cbz	r0, 800b14e <USBD_HID_GetHSCfgDesc+0x12>
    pEpDesc->bInterval = HID_HS_BINTERVAL;
 800b14a:	2307      	movs	r3, #7
 800b14c:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800b14e:	2322      	movs	r3, #34	@ 0x22
}
 800b150:	4801      	ldr	r0, [pc, #4]	@ (800b158 <USBD_HID_GetHSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800b152:	8023      	strh	r3, [r4, #0]
}
 800b154:	bd10      	pop	{r4, pc}
 800b156:	bf00      	nop
 800b158:	20000140 	.word	0x20000140

0800b15c <USBD_HID_Setup>:
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800b15c:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
{
 800b160:	b513      	push	{r0, r1, r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800b162:	33b0      	adds	r3, #176	@ 0xb0
  uint16_t status_info = 0U;
 800b164:	2200      	movs	r2, #0
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800b166:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  uint16_t status_info = 0U;
 800b16a:	f8ad 2006 	strh.w	r2, [sp, #6]
  if (hhid == NULL)
 800b16e:	2b00      	cmp	r3, #0
 800b170:	d04a      	beq.n	800b208 <USBD_HID_Setup+0xac>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800b172:	780a      	ldrb	r2, [r1, #0]
 800b174:	f012 0260 	ands.w	r2, r2, #96	@ 0x60
 800b178:	d01d      	beq.n	800b1b6 <USBD_HID_Setup+0x5a>
 800b17a:	2a20      	cmp	r2, #32
 800b17c:	d142      	bne.n	800b204 <USBD_HID_Setup+0xa8>
      switch (req->bRequest)
 800b17e:	784a      	ldrb	r2, [r1, #1]
 800b180:	3a02      	subs	r2, #2
 800b182:	2a09      	cmp	r2, #9
 800b184:	d83e      	bhi.n	800b204 <USBD_HID_Setup+0xa8>
 800b186:	e8df f002 	tbb	[pc, r2]
 800b18a:	0a13      	.short	0x0a13
 800b18c:	3d3d3d3d 	.word	0x3d3d3d3d
 800b190:	050f3d3d 	.word	0x050f3d3d
          hhid->Protocol = (uint8_t)(req->wValue);
 800b194:	788a      	ldrb	r2, [r1, #2]
 800b196:	601a      	str	r2, [r3, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 800b198:	2000      	movs	r0, #0
}
 800b19a:	b002      	add	sp, #8
 800b19c:	bd10      	pop	{r4, pc}
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
 800b19e:	2201      	movs	r2, #1
 800b1a0:	4619      	mov	r1, r3
          (void)USBD_CtlSendData(pdev, pbuf, len);
 800b1a2:	f000 f8a9 	bl	800b2f8 <USBD_CtlSendData>
          break;
 800b1a6:	e7f7      	b.n	800b198 <USBD_HID_Setup+0x3c>
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
 800b1a8:	884a      	ldrh	r2, [r1, #2]
 800b1aa:	0a12      	lsrs	r2, r2, #8
 800b1ac:	605a      	str	r2, [r3, #4]
          break;
 800b1ae:	e7f3      	b.n	800b198 <USBD_HID_Setup+0x3c>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
 800b1b0:	2201      	movs	r2, #1
 800b1b2:	1d19      	adds	r1, r3, #4
 800b1b4:	e7f5      	b.n	800b1a2 <USBD_HID_Setup+0x46>
      switch (req->bRequest)
 800b1b6:	784a      	ldrb	r2, [r1, #1]
 800b1b8:	2a0b      	cmp	r2, #11
 800b1ba:	d823      	bhi.n	800b204 <USBD_HID_Setup+0xa8>
 800b1bc:	a401      	add	r4, pc, #4	@ (adr r4, 800b1c4 <USBD_HID_Setup+0x68>)
 800b1be:	f854 f022 	ldr.w	pc, [r4, r2, lsl #2]
 800b1c2:	bf00      	nop
 800b1c4:	0800b1f5 	.word	0x0800b1f5
 800b1c8:	0800b199 	.word	0x0800b199
 800b1cc:	0800b205 	.word	0x0800b205
 800b1d0:	0800b205 	.word	0x0800b205
 800b1d4:	0800b205 	.word	0x0800b205
 800b1d8:	0800b205 	.word	0x0800b205
 800b1dc:	0800b20d 	.word	0x0800b20d
 800b1e0:	0800b205 	.word	0x0800b205
 800b1e4:	0800b205 	.word	0x0800b205
 800b1e8:	0800b205 	.word	0x0800b205
 800b1ec:	0800b231 	.word	0x0800b231
 800b1f0:	0800b241 	.word	0x0800b241
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800b1f4:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800b1f8:	2b03      	cmp	r3, #3
 800b1fa:	d103      	bne.n	800b204 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 800b1fc:	2202      	movs	r2, #2
 800b1fe:	f10d 0106 	add.w	r1, sp, #6
 800b202:	e7ce      	b.n	800b1a2 <USBD_HID_Setup+0x46>
            USBD_CtlError(pdev, req);
 800b204:	f7ff ff53 	bl	800b0ae <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
 800b208:	2003      	movs	r0, #3
 800b20a:	e7c6      	b.n	800b19a <USBD_HID_Setup+0x3e>
          if ((req->wValue >> 8) == HID_REPORT_DESC)
 800b20c:	884b      	ldrh	r3, [r1, #2]
 800b20e:	0a1b      	lsrs	r3, r3, #8
 800b210:	2b22      	cmp	r3, #34	@ 0x22
 800b212:	d105      	bne.n	800b220 <USBD_HID_Setup+0xc4>
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 800b214:	88ca      	ldrh	r2, [r1, #6]
            pbuf = HID_MOUSE_ReportDesc;
 800b216:	490e      	ldr	r1, [pc, #56]	@ (800b250 <USBD_HID_Setup+0xf4>)
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 800b218:	2a4a      	cmp	r2, #74	@ 0x4a
 800b21a:	bf28      	it	cs
 800b21c:	224a      	movcs	r2, #74	@ 0x4a
            pbuf = HID_MOUSE_ReportDesc;
 800b21e:	e7c0      	b.n	800b1a2 <USBD_HID_Setup+0x46>
          else if ((req->wValue >> 8) == HID_DESCRIPTOR_TYPE)
 800b220:	2b21      	cmp	r3, #33	@ 0x21
 800b222:	d1ef      	bne.n	800b204 <USBD_HID_Setup+0xa8>
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 800b224:	88ca      	ldrh	r2, [r1, #6]
            pbuf = USBD_HID_Desc;
 800b226:	490b      	ldr	r1, [pc, #44]	@ (800b254 <USBD_HID_Setup+0xf8>)
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 800b228:	2a09      	cmp	r2, #9
 800b22a:	bf28      	it	cs
 800b22c:	2209      	movcs	r2, #9
 800b22e:	e7b8      	b.n	800b1a2 <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800b230:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800b234:	2a03      	cmp	r2, #3
 800b236:	d1e5      	bne.n	800b204 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
 800b238:	2201      	movs	r2, #1
 800b23a:	f103 0108 	add.w	r1, r3, #8
 800b23e:	e7b0      	b.n	800b1a2 <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800b240:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 800b244:	2a03      	cmp	r2, #3
 800b246:	d1dd      	bne.n	800b204 <USBD_HID_Setup+0xa8>
            hhid->AltSetting = (uint8_t)(req->wValue);
 800b248:	788a      	ldrb	r2, [r1, #2]
 800b24a:	609a      	str	r2, [r3, #8]
 800b24c:	e7a4      	b.n	800b198 <USBD_HID_Setup+0x3c>
 800b24e:	bf00      	nop
 800b250:	200000dc 	.word	0x200000dc
 800b254:	20000134 	.word	0x20000134

0800b258 <USBD_HID_DeInit>:
{
 800b258:	b538      	push	{r3, r4, r5, lr}
 800b25a:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, HIDInEpAdd);
 800b25c:	2181      	movs	r1, #129	@ 0x81
 800b25e:	f7f6 fbb5 	bl	80019cc <USBD_LL_CloseEP>
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800b262:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800b266:	33b0      	adds	r3, #176	@ 0xb0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 800b268:	2500      	movs	r5, #0
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800b26a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 800b26e:	63a5      	str	r5, [r4, #56]	@ 0x38
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800b270:	b130      	cbz	r0, 800b280 <USBD_HID_DeInit+0x28>
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
 800b272:	f7f6 fb8f 	bl	8001994 <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800b276:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800b27a:	33b0      	adds	r3, #176	@ 0xb0
 800b27c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
}
 800b280:	2000      	movs	r0, #0
 800b282:	bd38      	pop	{r3, r4, r5, pc}

0800b284 <USBD_HID_Init>:
{
 800b284:	b538      	push	{r3, r4, r5, lr}
 800b286:	4604      	mov	r4, r0
  hhid = (USBD_HID_HandleTypeDef *)USBD_malloc(sizeof(USBD_HID_HandleTypeDef));
 800b288:	2010      	movs	r0, #16
 800b28a:	f7f6 fb7f 	bl	800198c <USBD_static_malloc>
  if (hhid == NULL)
 800b28e:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800b292:	33b0      	adds	r3, #176	@ 0xb0
  if (hhid == NULL)
 800b294:	4605      	mov	r5, r0
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 800b296:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
  if (hhid == NULL)
 800b29a:	b908      	cbnz	r0, 800b2a0 <USBD_HID_Init+0x1c>
    return (uint8_t)USBD_EMEM;
 800b29c:	2002      	movs	r0, #2
}
 800b29e:	bd38      	pop	{r3, r4, r5, pc}
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 800b2a0:	7c23      	ldrb	r3, [r4, #16]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
 800b2a2:	f8c4 02bc 	str.w	r0, [r4, #700]	@ 0x2bc
    pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = HID_HS_BINTERVAL;
 800b2a6:	2b00      	cmp	r3, #0
 800b2a8:	bf14      	ite	ne
 800b2aa:	230a      	movne	r3, #10
 800b2ac:	2307      	moveq	r3, #7
 800b2ae:	8763      	strh	r3, [r4, #58]	@ 0x3a
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
 800b2b0:	2203      	movs	r2, #3
 800b2b2:	2304      	movs	r3, #4
 800b2b4:	2181      	movs	r1, #129	@ 0x81
 800b2b6:	4620      	mov	r0, r4
 800b2b8:	f7f6 fb7c 	bl	80019b4 <USBD_LL_OpenEP>
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 800b2bc:	2301      	movs	r3, #1
  hhid->state = USBD_HID_IDLE;
 800b2be:	2000      	movs	r0, #0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 800b2c0:	8723      	strh	r3, [r4, #56]	@ 0x38
  hhid->state = USBD_HID_IDLE;
 800b2c2:	7328      	strb	r0, [r5, #12]
  return (uint8_t)USBD_OK;
 800b2c4:	e7eb      	b.n	800b29e <USBD_HID_Init+0x1a>

0800b2c6 <USBD_HID_SendReport>:
{
 800b2c6:	4613      	mov	r3, r2
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800b2c8:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 800b2cc:	32b0      	adds	r2, #176	@ 0xb0
{
 800b2ce:	b510      	push	{r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800b2d0:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
  if (hhid == NULL)
 800b2d4:	b172      	cbz	r2, 800b2f4 <USBD_HID_SendReport+0x2e>
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800b2d6:	f890 429c 	ldrb.w	r4, [r0, #668]	@ 0x29c
 800b2da:	2c03      	cmp	r4, #3
 800b2dc:	d101      	bne.n	800b2e2 <USBD_HID_SendReport+0x1c>
    if (hhid->state == USBD_HID_IDLE)
 800b2de:	7b14      	ldrb	r4, [r2, #12]
 800b2e0:	b10c      	cbz	r4, 800b2e6 <USBD_HID_SendReport+0x20>
  return (uint8_t)USBD_OK;
 800b2e2:	2000      	movs	r0, #0
}
 800b2e4:	bd10      	pop	{r4, pc}
      hhid->state = USBD_HID_BUSY;
 800b2e6:	2401      	movs	r4, #1
 800b2e8:	7314      	strb	r4, [r2, #12]
      (void)USBD_LL_Transmit(pdev, HIDInEpAdd, report, len);
 800b2ea:	460a      	mov	r2, r1
 800b2ec:	2181      	movs	r1, #129	@ 0x81
 800b2ee:	f7f6 fb91 	bl	8001a14 <USBD_LL_Transmit>
 800b2f2:	e7f6      	b.n	800b2e2 <USBD_HID_SendReport+0x1c>
    return (uint8_t)USBD_FAIL;
 800b2f4:	2003      	movs	r0, #3
 800b2f6:	e7f5      	b.n	800b2e4 <USBD_HID_SendReport+0x1e>

0800b2f8 <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 800b2f8:	b510      	push	{r4, lr}
 800b2fa:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800b2fc:	2202      	movs	r2, #2
  pdev->ep_in[0].total_length = len;

#ifdef USBD_AVOID_PACKET_SPLIT_MPS
  pdev->ep_in[0].rem_length = 0U;
#else
  pdev->ep_in[0].rem_length = len;
 800b2fe:	e9c0 3306 	strd	r3, r3, [r0, #24]
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800b302:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800b306:	460a      	mov	r2, r1
 800b308:	2100      	movs	r1, #0
 800b30a:	f7f6 fb83 	bl	8001a14 <USBD_LL_Transmit>

  return USBD_OK;
}
 800b30e:	2000      	movs	r0, #0
 800b310:	bd10      	pop	{r4, pc}

0800b312 <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 800b312:	b508      	push	{r3, lr}
 800b314:	4613      	mov	r3, r2
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 800b316:	460a      	mov	r2, r1
 800b318:	2100      	movs	r1, #0
 800b31a:	f7f6 fb7b 	bl	8001a14 <USBD_LL_Transmit>

  return USBD_OK;
}
 800b31e:	2000      	movs	r0, #0
 800b320:	bd08      	pop	{r3, pc}

0800b322 <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 800b322:	b508      	push	{r3, lr}
 800b324:	4613      	mov	r3, r2
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 800b326:	460a      	mov	r2, r1
 800b328:	2100      	movs	r1, #0
 800b32a:	f7f6 fb7c 	bl	8001a26 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 800b32e:	2000      	movs	r0, #0
 800b330:	bd08      	pop	{r3, pc}

0800b332 <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 800b332:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800b334:	2204      	movs	r2, #4

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800b336:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 800b338:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 800b33c:	4619      	mov	r1, r3
 800b33e:	461a      	mov	r2, r3
 800b340:	f7f6 fb68 	bl	8001a14 <USBD_LL_Transmit>

  return USBD_OK;
}
 800b344:	2000      	movs	r0, #0
 800b346:	bd08      	pop	{r3, pc}

0800b348 <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 800b348:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800b34a:	2205      	movs	r2, #5

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800b34c:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 800b34e:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800b352:	4619      	mov	r1, r3
 800b354:	461a      	mov	r2, r3
 800b356:	f7f6 fb66 	bl	8001a26 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 800b35a:	2000      	movs	r0, #0
 800b35c:	bd08      	pop	{r3, pc}

0800b35e <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800b35e:	8880      	ldrh	r0, [r0, #4]
 800b360:	4770      	bx	lr

0800b362 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800b362:	b570      	push	{r4, r5, r6, lr}
 800b364:	6803      	ldr	r3, [r0, #0]
 800b366:	4605      	mov	r5, r0
 800b368:	460c      	mov	r4, r1
 800b36a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b36c:	2100      	movs	r1, #0
 800b36e:	4798      	blx	r3
 800b370:	682b      	ldr	r3, [r5, #0]
 800b372:	4606      	mov	r6, r0
 800b374:	6a1b      	ldr	r3, [r3, #32]
 800b376:	4628      	mov	r0, r5
 800b378:	4798      	blx	r3
 800b37a:	1ba4      	subs	r4, r4, r6
 800b37c:	b2a4      	uxth	r4, r4
 800b37e:	fbb4 f0f0 	udiv	r0, r4, r0
 800b382:	bd70      	pop	{r4, r5, r6, pc}

0800b384 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800b384:	2300      	movs	r3, #0
 800b386:	8083      	strh	r3, [r0, #4]
 800b388:	4770      	bx	lr

0800b38a <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800b38a:	b510      	push	{r4, lr}
 800b38c:	6803      	ldr	r3, [r0, #0]
 800b38e:	8881      	ldrh	r1, [r0, #4]
 800b390:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b392:	4604      	mov	r4, r0
 800b394:	4798      	blx	r3
 800b396:	88a3      	ldrh	r3, [r4, #4]
 800b398:	3301      	adds	r3, #1
 800b39a:	80a3      	strh	r3, [r4, #4]
 800b39c:	bd10      	pop	{r4, pc}

0800b39e <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800b39e:	6803      	ldr	r3, [r0, #0]
 800b3a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b3a2:	4718      	bx	r3

0800b3a4 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800b3a4:	4770      	bx	lr
	...

0800b3a8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800b3a8:	4a02      	ldr	r2, [pc, #8]	@ (800b3b4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800b3aa:	6002      	str	r2, [r0, #0]
 800b3ac:	2200      	movs	r2, #0
 800b3ae:	8082      	strh	r2, [r0, #4]
 800b3b0:	4770      	bx	lr
 800b3b2:	bf00      	nop
 800b3b4:	08027228 	.word	0x08027228

0800b3b8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800b3b8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b3ba:	2000      	movs	r0, #0
 800b3bc:	b12b      	cbz	r3, 800b3ca <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800b3be:	b920      	cbnz	r0, 800b3ca <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800b3c0:	1a5a      	subs	r2, r3, r1
 800b3c2:	4250      	negs	r0, r2
 800b3c4:	4150      	adcs	r0, r2
 800b3c6:	699b      	ldr	r3, [r3, #24]
 800b3c8:	e7f8      	b.n	800b3bc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800b3ca:	4770      	bx	lr

0800b3cc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800b3cc:	2300      	movs	r3, #0
 800b3ce:	6148      	str	r0, [r1, #20]
 800b3d0:	618b      	str	r3, [r1, #24]
 800b3d2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b3d4:	b913      	cbnz	r3, 800b3dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800b3d6:	6281      	str	r1, [r0, #40]	@ 0x28
 800b3d8:	4770      	bx	lr
 800b3da:	4613      	mov	r3, r2
 800b3dc:	699a      	ldr	r2, [r3, #24]
 800b3de:	2a00      	cmp	r2, #0
 800b3e0:	d1fb      	bne.n	800b3da <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800b3e2:	6199      	str	r1, [r3, #24]
 800b3e4:	4770      	bx	lr

0800b3e6 <_ZN8touchgfx9Container9removeAllEv>:
 800b3e6:	2200      	movs	r2, #0
 800b3e8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b3ea:	b123      	cbz	r3, 800b3f6 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800b3ec:	6999      	ldr	r1, [r3, #24]
 800b3ee:	6281      	str	r1, [r0, #40]	@ 0x28
 800b3f0:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800b3f4:	e7f8      	b.n	800b3e8 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800b3f6:	4770      	bx	lr

0800b3f8 <_ZN8touchgfx9Container6unlinkEv>:
 800b3f8:	2300      	movs	r3, #0
 800b3fa:	6283      	str	r3, [r0, #40]	@ 0x28
 800b3fc:	4770      	bx	lr

0800b3fe <_ZNK8touchgfx9Container12getSolidRectEv>:
 800b3fe:	2200      	movs	r2, #0
 800b400:	8002      	strh	r2, [r0, #0]
 800b402:	8042      	strh	r2, [r0, #2]
 800b404:	8082      	strh	r2, [r0, #4]
 800b406:	80c2      	strh	r2, [r0, #6]
 800b408:	4770      	bx	lr

0800b40a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800b40a:	b570      	push	{r4, r5, r6, lr}
 800b40c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800b40e:	460d      	mov	r5, r1
 800b410:	4616      	mov	r6, r2
 800b412:	b13c      	cbz	r4, 800b424 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800b414:	6823      	ldr	r3, [r4, #0]
 800b416:	4620      	mov	r0, r4
 800b418:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800b41a:	4632      	mov	r2, r6
 800b41c:	4629      	mov	r1, r5
 800b41e:	4798      	blx	r3
 800b420:	69a4      	ldr	r4, [r4, #24]
 800b422:	e7f6      	b.n	800b412 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800b424:	bd70      	pop	{r4, r5, r6, pc}

0800b426 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800b426:	b538      	push	{r3, r4, r5, lr}
 800b428:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800b42a:	460d      	mov	r5, r1
 800b42c:	b134      	cbz	r4, 800b43c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800b42e:	682b      	ldr	r3, [r5, #0]
 800b430:	4621      	mov	r1, r4
 800b432:	689b      	ldr	r3, [r3, #8]
 800b434:	4628      	mov	r0, r5
 800b436:	4798      	blx	r3
 800b438:	69a4      	ldr	r4, [r4, #24]
 800b43a:	e7f7      	b.n	800b42c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800b43c:	bd38      	pop	{r3, r4, r5, pc}

0800b43e <_ZN8touchgfx9ContainerD1Ev>:
 800b43e:	4770      	bx	lr

0800b440 <_ZN8touchgfx9ContainerD0Ev>:
 800b440:	b510      	push	{r4, lr}
 800b442:	212c      	movs	r1, #44	@ 0x2c
 800b444:	4604      	mov	r4, r0
 800b446:	f018 f90e 	bl	8023666 <_ZdlPvj>
 800b44a:	4620      	mov	r0, r4
 800b44c:	bd10      	pop	{r4, pc}

0800b44e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800b44e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b450:	b19b      	cbz	r3, 800b47a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800b452:	428b      	cmp	r3, r1
 800b454:	d109      	bne.n	800b46a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800b456:	699a      	ldr	r2, [r3, #24]
 800b458:	2100      	movs	r1, #0
 800b45a:	6159      	str	r1, [r3, #20]
 800b45c:	6282      	str	r2, [r0, #40]	@ 0x28
 800b45e:	b902      	cbnz	r2, 800b462 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800b460:	4770      	bx	lr
 800b462:	6199      	str	r1, [r3, #24]
 800b464:	4770      	bx	lr
 800b466:	4613      	mov	r3, r2
 800b468:	b13a      	cbz	r2, 800b47a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800b46a:	699a      	ldr	r2, [r3, #24]
 800b46c:	428a      	cmp	r2, r1
 800b46e:	d1fa      	bne.n	800b466 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800b470:	698a      	ldr	r2, [r1, #24]
 800b472:	619a      	str	r2, [r3, #24]
 800b474:	2300      	movs	r3, #0
 800b476:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800b47a:	4770      	bx	lr

0800b47c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800b47c:	b410      	push	{r4}
 800b47e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800b480:	4604      	mov	r4, r0
 800b482:	b92b      	cbnz	r3, 800b490 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800b484:	6803      	ldr	r3, [r0, #0]
 800b486:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b48a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800b48c:	4611      	mov	r1, r2
 800b48e:	4718      	bx	r3
 800b490:	b941      	cbnz	r1, 800b4a4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800b492:	6193      	str	r3, [r2, #24]
 800b494:	6282      	str	r2, [r0, #40]	@ 0x28
 800b496:	6154      	str	r4, [r2, #20]
 800b498:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b49c:	4770      	bx	lr
 800b49e:	4603      	mov	r3, r0
 800b4a0:	2800      	cmp	r0, #0
 800b4a2:	d0f9      	beq.n	800b498 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800b4a4:	4299      	cmp	r1, r3
 800b4a6:	6998      	ldr	r0, [r3, #24]
 800b4a8:	d1f9      	bne.n	800b49e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800b4aa:	6190      	str	r0, [r2, #24]
 800b4ac:	618a      	str	r2, [r1, #24]
 800b4ae:	e7f2      	b.n	800b496 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800b4b0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800b4b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b4b4:	461f      	mov	r7, r3
 800b4b6:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800b4ba:	460d      	mov	r5, r1
 800b4bc:	4616      	mov	r6, r2
 800b4be:	b103      	cbz	r3, 800b4c2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800b4c0:	6038      	str	r0, [r7, #0]
 800b4c2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800b4c4:	b314      	cbz	r4, 800b50c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800b4c6:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800b4ca:	b1eb      	cbz	r3, 800b508 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b4cc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800b4d0:	428d      	cmp	r5, r1
 800b4d2:	db19      	blt.n	800b508 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b4d4:	8923      	ldrh	r3, [r4, #8]
 800b4d6:	b289      	uxth	r1, r1
 800b4d8:	440b      	add	r3, r1
 800b4da:	b21b      	sxth	r3, r3
 800b4dc:	429d      	cmp	r5, r3
 800b4de:	da13      	bge.n	800b508 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b4e0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800b4e4:	4296      	cmp	r6, r2
 800b4e6:	db0f      	blt.n	800b508 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b4e8:	8963      	ldrh	r3, [r4, #10]
 800b4ea:	b292      	uxth	r2, r2
 800b4ec:	4413      	add	r3, r2
 800b4ee:	b21b      	sxth	r3, r3
 800b4f0:	429e      	cmp	r6, r3
 800b4f2:	da09      	bge.n	800b508 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b4f4:	6823      	ldr	r3, [r4, #0]
 800b4f6:	1ab2      	subs	r2, r6, r2
 800b4f8:	1a69      	subs	r1, r5, r1
 800b4fa:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800b4fe:	b212      	sxth	r2, r2
 800b500:	463b      	mov	r3, r7
 800b502:	b209      	sxth	r1, r1
 800b504:	4620      	mov	r0, r4
 800b506:	47c0      	blx	r8
 800b508:	69a4      	ldr	r4, [r4, #24]
 800b50a:	e7db      	b.n	800b4c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800b50c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b510 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800b510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b514:	4c6e      	ldr	r4, [pc, #440]	@ (800b6d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800b516:	b0a1      	sub	sp, #132	@ 0x84
 800b518:	6824      	ldr	r4, [r4, #0]
 800b51a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800b51c:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800b520:	9303      	str	r3, [sp, #12]
 800b522:	2400      	movs	r4, #0
 800b524:	802c      	strh	r4, [r5, #0]
 800b526:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800b528:	802c      	strh	r4, [r5, #0]
 800b52a:	601c      	str	r4, [r3, #0]
 800b52c:	4606      	mov	r6, r0
 800b52e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800b532:	f7ff ffbd 	bl	800b4b0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800b536:	f1b9 0f03 	cmp.w	r9, #3
 800b53a:	f340 80c2 	ble.w	800b6c2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800b53e:	4631      	mov	r1, r6
 800b540:	a80c      	add	r0, sp, #48	@ 0x30
 800b542:	f007 f86f 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b546:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800b54a:	9306      	str	r3, [sp, #24]
 800b54c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800b550:	9307      	str	r3, [sp, #28]
 800b552:	9b03      	ldr	r3, [sp, #12]
 800b554:	f8d3 a000 	ldr.w	sl, [r3]
 800b558:	f1ba 0f00 	cmp.w	sl, #0
 800b55c:	f000 80b4 	beq.w	800b6c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800b560:	4651      	mov	r1, sl
 800b562:	a810      	add	r0, sp, #64	@ 0x40
 800b564:	f007 f85e 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b568:	9b01      	ldr	r3, [sp, #4]
 800b56a:	9a06      	ldr	r2, [sp, #24]
 800b56c:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800b570:	189d      	adds	r5, r3, r2
 800b572:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800b576:	9a07      	ldr	r2, [sp, #28]
 800b578:	2002      	movs	r0, #2
 800b57a:	fb91 f1f0 	sdiv	r1, r1, r0
 800b57e:	4419      	add	r1, r3
 800b580:	1a6d      	subs	r5, r5, r1
 800b582:	9b02      	ldr	r3, [sp, #8]
 800b584:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800b588:	4413      	add	r3, r2
 800b58a:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800b58e:	fb92 f2f0 	sdiv	r2, r2, r0
 800b592:	440a      	add	r2, r1
 800b594:	1a9b      	subs	r3, r3, r2
 800b596:	435b      	muls	r3, r3
 800b598:	fb05 3505 	mla	r5, r5, r5, r3
 800b59c:	4f4d      	ldr	r7, [pc, #308]	@ (800b6d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800b59e:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800b5a0:	ac10      	add	r4, sp, #64	@ 0x40
 800b5a2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b5a4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800b5a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b5a8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800b5aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b5ac:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800b5b0:	f1b9 0f0c 	cmp.w	r9, #12
 800b5b4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800b5b8:	f04f 0303 	mov.w	r3, #3
 800b5bc:	bfc8      	it	gt
 800b5be:	4698      	movgt	r8, r3
 800b5c0:	f8cd 9000 	str.w	r9, [sp]
 800b5c4:	f04f 0400 	mov.w	r4, #0
 800b5c8:	bfdc      	itt	le
 800b5ca:	f109 32ff 	addle.w	r2, r9, #4294967295
 800b5ce:	fb92 f8f3 	sdivle	r8, r2, r3
 800b5d2:	1c63      	adds	r3, r4, #1
 800b5d4:	aa10      	add	r2, sp, #64	@ 0x40
 800b5d6:	f004 0401 	and.w	r4, r4, #1
 800b5da:	9308      	str	r3, [sp, #32]
 800b5dc:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800b5e0:	9b00      	ldr	r3, [sp, #0]
 800b5e2:	fb93 f3f8 	sdiv	r3, r3, r8
 800b5e6:	b29b      	uxth	r3, r3
 800b5e8:	3404      	adds	r4, #4
 800b5ea:	f04f 0b00 	mov.w	fp, #0
 800b5ee:	9304      	str	r3, [sp, #16]
 800b5f0:	9a04      	ldr	r2, [sp, #16]
 800b5f2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800b5f6:	fb13 f302 	smulbb	r3, r3, r2
 800b5fa:	9a01      	ldr	r2, [sp, #4]
 800b5fc:	b29b      	uxth	r3, r3
 800b5fe:	1899      	adds	r1, r3, r2
 800b600:	9305      	str	r3, [sp, #20]
 800b602:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b606:	b209      	sxth	r1, r1
 800b608:	4299      	cmp	r1, r3
 800b60a:	db4d      	blt.n	800b6a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b60c:	8932      	ldrh	r2, [r6, #8]
 800b60e:	4413      	add	r3, r2
 800b610:	b21b      	sxth	r3, r3
 800b612:	4299      	cmp	r1, r3
 800b614:	da48      	bge.n	800b6a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b616:	9b04      	ldr	r3, [sp, #16]
 800b618:	6827      	ldr	r7, [r4, #0]
 800b61a:	fb17 f703 	smulbb	r7, r7, r3
 800b61e:	9b02      	ldr	r3, [sp, #8]
 800b620:	b2bf      	uxth	r7, r7
 800b622:	18fa      	adds	r2, r7, r3
 800b624:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b628:	b212      	sxth	r2, r2
 800b62a:	429a      	cmp	r2, r3
 800b62c:	db3c      	blt.n	800b6a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b62e:	8970      	ldrh	r0, [r6, #10]
 800b630:	4403      	add	r3, r0
 800b632:	b21b      	sxth	r3, r3
 800b634:	429a      	cmp	r2, r3
 800b636:	da37      	bge.n	800b6a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b638:	2300      	movs	r3, #0
 800b63a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b63c:	4630      	mov	r0, r6
 800b63e:	ab0b      	add	r3, sp, #44	@ 0x2c
 800b640:	f7ff ff36 	bl	800b4b0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800b644:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800b646:	b37a      	cbz	r2, 800b6a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b648:	4552      	cmp	r2, sl
 800b64a:	d02d      	beq.n	800b6a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b64c:	4611      	mov	r1, r2
 800b64e:	a80e      	add	r0, sp, #56	@ 0x38
 800b650:	9209      	str	r2, [sp, #36]	@ 0x24
 800b652:	f006 ffe7 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b656:	9a06      	ldr	r2, [sp, #24]
 800b658:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800b65c:	9b01      	ldr	r3, [sp, #4]
 800b65e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800b662:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800b666:	4413      	add	r3, r2
 800b668:	f04f 0e02 	mov.w	lr, #2
 800b66c:	fb91 f1fe 	sdiv	r1, r1, lr
 800b670:	4401      	add	r1, r0
 800b672:	1a58      	subs	r0, r3, r1
 800b674:	9a07      	ldr	r2, [sp, #28]
 800b676:	9b02      	ldr	r3, [sp, #8]
 800b678:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800b67c:	fb9c fcfe 	sdiv	ip, ip, lr
 800b680:	4413      	add	r3, r2
 800b682:	448c      	add	ip, r1
 800b684:	eba3 030c 	sub.w	r3, r3, ip
 800b688:	435b      	muls	r3, r3
 800b68a:	fb00 3300 	mla	r3, r0, r0, r3
 800b68e:	42ab      	cmp	r3, r5
 800b690:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800b692:	d208      	bcs.n	800b6a6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800b694:	9803      	ldr	r0, [sp, #12]
 800b696:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800b698:	6001      	str	r1, [r0, #0]
 800b69a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800b69c:	9805      	ldr	r0, [sp, #20]
 800b69e:	8008      	strh	r0, [r1, #0]
 800b6a0:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800b6a2:	461d      	mov	r5, r3
 800b6a4:	800f      	strh	r7, [r1, #0]
 800b6a6:	4692      	mov	sl, r2
 800b6a8:	f10b 0b01 	add.w	fp, fp, #1
 800b6ac:	f1bb 0f04 	cmp.w	fp, #4
 800b6b0:	f104 0408 	add.w	r4, r4, #8
 800b6b4:	d19c      	bne.n	800b5f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800b6b6:	9b00      	ldr	r3, [sp, #0]
 800b6b8:	9c08      	ldr	r4, [sp, #32]
 800b6ba:	444b      	add	r3, r9
 800b6bc:	4544      	cmp	r4, r8
 800b6be:	9300      	str	r3, [sp, #0]
 800b6c0:	d187      	bne.n	800b5d2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800b6c2:	b021      	add	sp, #132	@ 0x84
 800b6c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b6c8:	f04f 35ff 	mov.w	r5, #4294967295
 800b6cc:	e766      	b.n	800b59c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800b6ce:	bf00      	nop
 800b6d0:	20013b6c 	.word	0x20013b6c
 800b6d4:	080258f0 	.word	0x080258f0

0800b6d8 <_ZN8touchgfx4RectaNERKS0_>:
 800b6d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b6dc:	f9b1 7000 	ldrsh.w	r7, [r1]
 800b6e0:	888c      	ldrh	r4, [r1, #4]
 800b6e2:	f9b0 9000 	ldrsh.w	r9, [r0]
 800b6e6:	443c      	add	r4, r7
 800b6e8:	b2a4      	uxth	r4, r4
 800b6ea:	fa0f f884 	sxth.w	r8, r4
 800b6ee:	45c1      	cmp	r9, r8
 800b6f0:	da2f      	bge.n	800b752 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b6f2:	8882      	ldrh	r2, [r0, #4]
 800b6f4:	444a      	add	r2, r9
 800b6f6:	b292      	uxth	r2, r2
 800b6f8:	fa0f fe82 	sxth.w	lr, r2
 800b6fc:	4577      	cmp	r7, lr
 800b6fe:	da28      	bge.n	800b752 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b700:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800b704:	88cb      	ldrh	r3, [r1, #6]
 800b706:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800b70a:	442b      	add	r3, r5
 800b70c:	b21b      	sxth	r3, r3
 800b70e:	429e      	cmp	r6, r3
 800b710:	da1f      	bge.n	800b752 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b712:	88c3      	ldrh	r3, [r0, #6]
 800b714:	4433      	add	r3, r6
 800b716:	b29b      	uxth	r3, r3
 800b718:	fa0f fc83 	sxth.w	ip, r3
 800b71c:	4565      	cmp	r5, ip
 800b71e:	da18      	bge.n	800b752 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b720:	454f      	cmp	r7, r9
 800b722:	bfb8      	it	lt
 800b724:	464f      	movlt	r7, r9
 800b726:	42b5      	cmp	r5, r6
 800b728:	bfb8      	it	lt
 800b72a:	4635      	movlt	r5, r6
 800b72c:	45f0      	cmp	r8, lr
 800b72e:	bfd8      	it	le
 800b730:	4622      	movle	r2, r4
 800b732:	1bd2      	subs	r2, r2, r7
 800b734:	8082      	strh	r2, [r0, #4]
 800b736:	884a      	ldrh	r2, [r1, #2]
 800b738:	88c9      	ldrh	r1, [r1, #6]
 800b73a:	8007      	strh	r7, [r0, #0]
 800b73c:	440a      	add	r2, r1
 800b73e:	b292      	uxth	r2, r2
 800b740:	b211      	sxth	r1, r2
 800b742:	458c      	cmp	ip, r1
 800b744:	bfa8      	it	ge
 800b746:	4613      	movge	r3, r2
 800b748:	1b5b      	subs	r3, r3, r5
 800b74a:	80c3      	strh	r3, [r0, #6]
 800b74c:	8045      	strh	r5, [r0, #2]
 800b74e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b752:	2300      	movs	r3, #0
 800b754:	8003      	strh	r3, [r0, #0]
 800b756:	8043      	strh	r3, [r0, #2]
 800b758:	8083      	strh	r3, [r0, #4]
 800b75a:	80c3      	strh	r3, [r0, #6]
 800b75c:	e7f7      	b.n	800b74e <_ZN8touchgfx4RectaNERKS0_+0x76>

0800b75e <_ZNK8touchgfx4Rect7isEmptyEv>:
 800b75e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b762:	2b00      	cmp	r3, #0
 800b764:	dd06      	ble.n	800b774 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800b766:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800b76a:	2800      	cmp	r0, #0
 800b76c:	bfcc      	ite	gt
 800b76e:	2000      	movgt	r0, #0
 800b770:	2001      	movle	r0, #1
 800b772:	4770      	bx	lr
 800b774:	2001      	movs	r0, #1
 800b776:	4770      	bx	lr

0800b778 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800b778:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b77c:	2300      	movs	r3, #0
 800b77e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800b780:	8003      	strh	r3, [r0, #0]
 800b782:	4604      	mov	r4, r0
 800b784:	8043      	strh	r3, [r0, #2]
 800b786:	8083      	strh	r3, [r0, #4]
 800b788:	80c3      	strh	r3, [r0, #6]
 800b78a:	2d00      	cmp	r5, #0
 800b78c:	d040      	beq.n	800b810 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800b78e:	1d28      	adds	r0, r5, #4
 800b790:	f7ff ffe5 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 800b794:	b988      	cbnz	r0, 800b7ba <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b796:	4620      	mov	r0, r4
 800b798:	f7ff ffe1 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 800b79c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800b7a0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b7a4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800b7a8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800b7ac:	b138      	cbz	r0, 800b7be <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800b7ae:	8022      	strh	r2, [r4, #0]
 800b7b0:	8063      	strh	r3, [r4, #2]
 800b7b2:	f8a4 e004 	strh.w	lr, [r4, #4]
 800b7b6:	f8a4 c006 	strh.w	ip, [r4, #6]
 800b7ba:	69ad      	ldr	r5, [r5, #24]
 800b7bc:	e7e5      	b.n	800b78a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800b7be:	f9b4 0000 	ldrsh.w	r0, [r4]
 800b7c2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800b7c6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800b7ca:	4290      	cmp	r0, r2
 800b7cc:	4607      	mov	r7, r0
 800b7ce:	bfa8      	it	ge
 800b7d0:	4617      	movge	r7, r2
 800b7d2:	4472      	add	r2, lr
 800b7d4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800b7d8:	8027      	strh	r7, [r4, #0]
 800b7da:	4299      	cmp	r1, r3
 800b7dc:	460e      	mov	r6, r1
 800b7de:	4440      	add	r0, r8
 800b7e0:	bfa8      	it	ge
 800b7e2:	461e      	movge	r6, r3
 800b7e4:	4471      	add	r1, lr
 800b7e6:	4463      	add	r3, ip
 800b7e8:	b200      	sxth	r0, r0
 800b7ea:	b212      	sxth	r2, r2
 800b7ec:	b209      	sxth	r1, r1
 800b7ee:	b21b      	sxth	r3, r3
 800b7f0:	4290      	cmp	r0, r2
 800b7f2:	bfac      	ite	ge
 800b7f4:	ebc7 0200 	rsbge	r2, r7, r0
 800b7f8:	ebc7 0202 	rsblt	r2, r7, r2
 800b7fc:	4299      	cmp	r1, r3
 800b7fe:	bfac      	ite	ge
 800b800:	ebc6 0301 	rsbge	r3, r6, r1
 800b804:	ebc6 0303 	rsblt	r3, r6, r3
 800b808:	8066      	strh	r6, [r4, #2]
 800b80a:	80a2      	strh	r2, [r4, #4]
 800b80c:	80e3      	strh	r3, [r4, #6]
 800b80e:	e7d4      	b.n	800b7ba <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b810:	4620      	mov	r0, r4
 800b812:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b816 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800b816:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b81a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800b81e:	b383      	cbz	r3, 800b882 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b820:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800b822:	b374      	cbz	r4, 800b882 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b824:	f9b1 5000 	ldrsh.w	r5, [r1]
 800b828:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800b82c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800b830:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800b834:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800b838:	b303      	cbz	r3, 800b87c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b83a:	4668      	mov	r0, sp
 800b83c:	1d21      	adds	r1, r4, #4
 800b83e:	f8ad 5000 	strh.w	r5, [sp]
 800b842:	f8ad 6002 	strh.w	r6, [sp, #2]
 800b846:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b84a:	f8ad 8006 	strh.w	r8, [sp, #6]
 800b84e:	f7ff ff43 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 800b852:	4668      	mov	r0, sp
 800b854:	f7ff ff83 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 800b858:	b980      	cbnz	r0, 800b87c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b85a:	f8bd 3000 	ldrh.w	r3, [sp]
 800b85e:	88a2      	ldrh	r2, [r4, #4]
 800b860:	1a9b      	subs	r3, r3, r2
 800b862:	f8ad 3000 	strh.w	r3, [sp]
 800b866:	88e2      	ldrh	r2, [r4, #6]
 800b868:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b86c:	1a9b      	subs	r3, r3, r2
 800b86e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b872:	6823      	ldr	r3, [r4, #0]
 800b874:	4669      	mov	r1, sp
 800b876:	689b      	ldr	r3, [r3, #8]
 800b878:	4620      	mov	r0, r4
 800b87a:	4798      	blx	r3
 800b87c:	69a4      	ldr	r4, [r4, #24]
 800b87e:	2c00      	cmp	r4, #0
 800b880:	d1d8      	bne.n	800b834 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800b882:	b002      	add	sp, #8
 800b884:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b888 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800b888:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b88a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800b88e:	460d      	mov	r5, r1
 800b890:	4616      	mov	r6, r2
 800b892:	b323      	cbz	r3, 800b8de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b894:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800b896:	b314      	cbz	r4, 800b8de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b898:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800b89c:	b1eb      	cbz	r3, 800b8da <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b89e:	6828      	ldr	r0, [r5, #0]
 800b8a0:	6869      	ldr	r1, [r5, #4]
 800b8a2:	466b      	mov	r3, sp
 800b8a4:	c303      	stmia	r3!, {r0, r1}
 800b8a6:	4668      	mov	r0, sp
 800b8a8:	1d21      	adds	r1, r4, #4
 800b8aa:	f7ff ff15 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 800b8ae:	4668      	mov	r0, sp
 800b8b0:	f7ff ff55 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 800b8b4:	b988      	cbnz	r0, 800b8da <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b8b6:	f8bd 3000 	ldrh.w	r3, [sp]
 800b8ba:	88a2      	ldrh	r2, [r4, #4]
 800b8bc:	1a9b      	subs	r3, r3, r2
 800b8be:	f8ad 3000 	strh.w	r3, [sp]
 800b8c2:	88e2      	ldrh	r2, [r4, #6]
 800b8c4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b8c8:	1a9b      	subs	r3, r3, r2
 800b8ca:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b8ce:	6823      	ldr	r3, [r4, #0]
 800b8d0:	4632      	mov	r2, r6
 800b8d2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800b8d4:	4669      	mov	r1, sp
 800b8d6:	4620      	mov	r0, r4
 800b8d8:	4798      	blx	r3
 800b8da:	69a4      	ldr	r4, [r4, #24]
 800b8dc:	e7db      	b.n	800b896 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800b8de:	b002      	add	sp, #8
 800b8e0:	bd70      	pop	{r4, r5, r6, pc}

0800b8e2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b8e2:	b513      	push	{r0, r1, r4, lr}
 800b8e4:	6803      	ldr	r3, [r0, #0]
 800b8e6:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 800b8ea:	2300      	movs	r3, #0
 800b8ec:	e9cd 3300 	strd	r3, r3, [sp]
 800b8f0:	466b      	mov	r3, sp
 800b8f2:	47a0      	blx	r4
 800b8f4:	b002      	add	sp, #8
 800b8f6:	bd10      	pop	{r4, pc}

0800b8f8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b8f8:	2301      	movs	r3, #1
 800b8fa:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800b8fe:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800b902:	4770      	bx	lr

0800b904 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b904:	2301      	movs	r3, #1
 800b906:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800b90a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800b90e:	4770      	bx	lr

0800b910 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b910:	6843      	ldr	r3, [r0, #4]
 800b912:	2201      	movs	r2, #1
 800b914:	725a      	strb	r2, [r3, #9]
 800b916:	6840      	ldr	r0, [r0, #4]
 800b918:	6803      	ldr	r3, [r0, #0]
 800b91a:	691b      	ldr	r3, [r3, #16]
 800b91c:	4718      	bx	r3

0800b91e <_ZN8touchgfx3HAL8flushDMAEv>:
 800b91e:	6840      	ldr	r0, [r0, #4]
 800b920:	6803      	ldr	r3, [r0, #0]
 800b922:	689b      	ldr	r3, [r3, #8]
 800b924:	4718      	bx	r3

0800b926 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800b926:	b530      	push	{r4, r5, lr}
 800b928:	b08b      	sub	sp, #44	@ 0x2c
 800b92a:	6804      	ldr	r4, [r0, #0]
 800b92c:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800b930:	9509      	str	r5, [sp, #36]	@ 0x24
 800b932:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800b936:	9508      	str	r5, [sp, #32]
 800b938:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800b93c:	9507      	str	r5, [sp, #28]
 800b93e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800b942:	9506      	str	r5, [sp, #24]
 800b944:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800b948:	9505      	str	r5, [sp, #20]
 800b94a:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800b94e:	9504      	str	r5, [sp, #16]
 800b950:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800b954:	9503      	str	r5, [sp, #12]
 800b956:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800b95a:	9502      	str	r5, [sp, #8]
 800b95c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800b960:	e9cd 3500 	strd	r3, r5, [sp]
 800b964:	4613      	mov	r3, r2
 800b966:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 800b968:	2200      	movs	r2, #0
 800b96a:	47a0      	blx	r4
 800b96c:	b00b      	add	sp, #44	@ 0x2c
 800b96e:	bd30      	pop	{r4, r5, pc}

0800b970 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b970:	4b04      	ldr	r3, [pc, #16]	@ (800b984 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b972:	781b      	ldrb	r3, [r3, #0]
 800b974:	b123      	cbz	r3, 800b980 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b976:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800b97a:	f080 0001 	eor.w	r0, r0, #1
 800b97e:	4770      	bx	lr
 800b980:	2001      	movs	r0, #1
 800b982:	4770      	bx	lr
 800b984:	20013b68 	.word	0x20013b68

0800b988 <_ZN8touchgfx3HAL8endFrameEv>:
 800b988:	b510      	push	{r4, lr}
 800b98a:	4604      	mov	r4, r0
 800b98c:	6840      	ldr	r0, [r0, #4]
 800b98e:	6803      	ldr	r3, [r0, #0]
 800b990:	689b      	ldr	r3, [r3, #8]
 800b992:	4798      	blx	r3
 800b994:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800b998:	b113      	cbz	r3, 800b9a0 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b99a:	2301      	movs	r3, #1
 800b99c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b9a0:	bd10      	pop	{r4, pc}

0800b9a2 <_ZN8touchgfx3HAL10initializeEv>:
 800b9a2:	b510      	push	{r4, lr}
 800b9a4:	4604      	mov	r4, r0
 800b9a6:	f7f5 f8cf 	bl	8000b48 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b9aa:	f7f4 ffd7 	bl	800095c <_ZN8touchgfx4GPIO4initEv>
 800b9ae:	6860      	ldr	r0, [r4, #4]
 800b9b0:	6803      	ldr	r3, [r0, #0]
 800b9b2:	68db      	ldr	r3, [r3, #12]
 800b9b4:	4798      	blx	r3
 800b9b6:	68e0      	ldr	r0, [r4, #12]
 800b9b8:	6803      	ldr	r3, [r0, #0]
 800b9ba:	689b      	ldr	r3, [r3, #8]
 800b9bc:	4798      	blx	r3
 800b9be:	6823      	ldr	r3, [r4, #0]
 800b9c0:	4620      	mov	r0, r4
 800b9c2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800b9c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b9c8:	4718      	bx	r3
	...

0800b9cc <_ZN8touchgfx3HAL4tickEv>:
 800b9cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b9ce:	6803      	ldr	r3, [r0, #0]
 800b9d0:	4d62      	ldr	r5, [pc, #392]	@ (800bb5c <_ZN8touchgfx3HAL4tickEv+0x190>)
 800b9d2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800b9d6:	4604      	mov	r4, r0
 800b9d8:	4798      	blx	r3
 800b9da:	2800      	cmp	r0, #0
 800b9dc:	f000 809e 	beq.w	800bb1c <_ZN8touchgfx3HAL4tickEv+0x150>
 800b9e0:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800b9e4:	2b02      	cmp	r3, #2
 800b9e6:	d002      	beq.n	800b9ee <_ZN8touchgfx3HAL4tickEv+0x22>
 800b9e8:	2001      	movs	r0, #1
 800b9ea:	f7f4 ff35 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b9ee:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800b9f2:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800b9f6:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800b9fa:	2600      	movs	r6, #0
 800b9fc:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800ba00:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800ba04:	b133      	cbz	r3, 800ba14 <_ZN8touchgfx3HAL4tickEv+0x48>
 800ba06:	6823      	ldr	r3, [r4, #0]
 800ba08:	4620      	mov	r0, r4
 800ba0a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800ba0e:	4798      	blx	r3
 800ba10:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800ba14:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800ba18:	6862      	ldr	r2, [r4, #4]
 800ba1a:	f083 0301 	eor.w	r3, r3, #1
 800ba1e:	7253      	strb	r3, [r2, #9]
 800ba20:	2601      	movs	r6, #1
 800ba22:	702e      	strb	r6, [r5, #0]
 800ba24:	f005 fbb0 	bl	8011188 <_ZN8touchgfx11Application11getInstanceEv>
 800ba28:	6803      	ldr	r3, [r0, #0]
 800ba2a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ba2c:	4798      	blx	r3
 800ba2e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800ba32:	b90b      	cbnz	r3, 800ba38 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800ba34:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800ba38:	f005 fba6 	bl	8011188 <_ZN8touchgfx11Application11getInstanceEv>
 800ba3c:	6803      	ldr	r3, [r0, #0]
 800ba3e:	695b      	ldr	r3, [r3, #20]
 800ba40:	4798      	blx	r3
 800ba42:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800ba44:	6803      	ldr	r3, [r0, #0]
 800ba46:	691b      	ldr	r3, [r3, #16]
 800ba48:	4798      	blx	r3
 800ba4a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800ba4e:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800ba52:	3b01      	subs	r3, #1
 800ba54:	b2db      	uxtb	r3, r3
 800ba56:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800ba5a:	b10a      	cbz	r2, 800ba60 <_ZN8touchgfx3HAL4tickEv+0x94>
 800ba5c:	2b00      	cmp	r3, #0
 800ba5e:	d1eb      	bne.n	800ba38 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800ba60:	4a3f      	ldr	r2, [pc, #252]	@ (800bb60 <_ZN8touchgfx3HAL4tickEv+0x194>)
 800ba62:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800ba66:	7813      	ldrb	r3, [r2, #0]
 800ba68:	3301      	adds	r3, #1
 800ba6a:	b25b      	sxtb	r3, r3
 800ba6c:	4299      	cmp	r1, r3
 800ba6e:	7013      	strb	r3, [r2, #0]
 800ba70:	dc10      	bgt.n	800ba94 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800ba72:	68e0      	ldr	r0, [r4, #12]
 800ba74:	2300      	movs	r3, #0
 800ba76:	7013      	strb	r3, [r2, #0]
 800ba78:	6803      	ldr	r3, [r0, #0]
 800ba7a:	aa03      	add	r2, sp, #12
 800ba7c:	68db      	ldr	r3, [r3, #12]
 800ba7e:	a902      	add	r1, sp, #8
 800ba80:	4798      	blx	r3
 800ba82:	6823      	ldr	r3, [r4, #0]
 800ba84:	2800      	cmp	r0, #0
 800ba86:	d059      	beq.n	800bb3c <_ZN8touchgfx3HAL4tickEv+0x170>
 800ba88:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800ba8c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ba90:	4620      	mov	r0, r4
 800ba92:	4798      	blx	r3
 800ba94:	6960      	ldr	r0, [r4, #20]
 800ba96:	2300      	movs	r3, #0
 800ba98:	f88d 3007 	strb.w	r3, [sp, #7]
 800ba9c:	b158      	cbz	r0, 800bab6 <_ZN8touchgfx3HAL4tickEv+0xea>
 800ba9e:	6803      	ldr	r3, [r0, #0]
 800baa0:	f10d 0107 	add.w	r1, sp, #7
 800baa4:	68db      	ldr	r3, [r3, #12]
 800baa6:	4798      	blx	r3
 800baa8:	b128      	cbz	r0, 800bab6 <_ZN8touchgfx3HAL4tickEv+0xea>
 800baaa:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800baac:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800bab0:	6803      	ldr	r3, [r0, #0]
 800bab2:	68db      	ldr	r3, [r3, #12]
 800bab4:	4798      	blx	r3
 800bab6:	f104 001c 	add.w	r0, r4, #28
 800baba:	f016 ffd3 	bl	8022a64 <_ZN8touchgfx8Gestures4tickEv>
 800babe:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800bac2:	b30b      	cbz	r3, 800bb08 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800bac4:	6920      	ldr	r0, [r4, #16]
 800bac6:	6803      	ldr	r3, [r0, #0]
 800bac8:	691b      	ldr	r3, [r3, #16]
 800baca:	4798      	blx	r3
 800bacc:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800bace:	4606      	mov	r6, r0
 800bad0:	b903      	cbnz	r3, 800bad4 <_ZN8touchgfx3HAL4tickEv+0x108>
 800bad2:	6760      	str	r0, [r4, #116]	@ 0x74
 800bad4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800bad6:	4a23      	ldr	r2, [pc, #140]	@ (800bb64 <_ZN8touchgfx3HAL4tickEv+0x198>)
 800bad8:	1af3      	subs	r3, r6, r3
 800bada:	4293      	cmp	r3, r2
 800badc:	d914      	bls.n	800bb08 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800bade:	6920      	ldr	r0, [r4, #16]
 800bae0:	6803      	ldr	r3, [r0, #0]
 800bae2:	699b      	ldr	r3, [r3, #24]
 800bae4:	4798      	blx	r3
 800bae6:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800bae8:	2264      	movs	r2, #100	@ 0x64
 800baea:	1af3      	subs	r3, r6, r3
 800baec:	fbb3 f3f2 	udiv	r3, r3, r2
 800baf0:	fbb0 f0f3 	udiv	r0, r0, r3
 800baf4:	2800      	cmp	r0, #0
 800baf6:	dc26      	bgt.n	800bb46 <_ZN8touchgfx3HAL4tickEv+0x17a>
 800baf8:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800bafc:	6920      	ldr	r0, [r4, #16]
 800bafe:	6803      	ldr	r3, [r0, #0]
 800bb00:	2100      	movs	r1, #0
 800bb02:	69db      	ldr	r3, [r3, #28]
 800bb04:	4798      	blx	r3
 800bb06:	6766      	str	r6, [r4, #116]	@ 0x74
 800bb08:	6823      	ldr	r3, [r4, #0]
 800bb0a:	4620      	mov	r0, r4
 800bb0c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800bb10:	4798      	blx	r3
 800bb12:	f005 fb39 	bl	8011188 <_ZN8touchgfx11Application11getInstanceEv>
 800bb16:	6803      	ldr	r3, [r0, #0]
 800bb18:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bb1a:	4798      	blx	r3
 800bb1c:	6823      	ldr	r3, [r4, #0]
 800bb1e:	4620      	mov	r0, r4
 800bb20:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800bb24:	4798      	blx	r3
 800bb26:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800bb2a:	2b02      	cmp	r3, #2
 800bb2c:	d002      	beq.n	800bb34 <_ZN8touchgfx3HAL4tickEv+0x168>
 800bb2e:	2001      	movs	r0, #1
 800bb30:	f7f4 febc 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800bb34:	2300      	movs	r3, #0
 800bb36:	702b      	strb	r3, [r5, #0]
 800bb38:	b004      	add	sp, #16
 800bb3a:	bd70      	pop	{r4, r5, r6, pc}
 800bb3c:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800bb40:	4620      	mov	r0, r4
 800bb42:	4798      	blx	r3
 800bb44:	e7a6      	b.n	800ba94 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800bb46:	2863      	cmp	r0, #99	@ 0x63
 800bb48:	bfcb      	itete	gt
 800bb4a:	2300      	movgt	r3, #0
 800bb4c:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800bb50:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800bb54:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800bb58:	e7d0      	b.n	800bafc <_ZN8touchgfx3HAL4tickEv+0x130>
 800bb5a:	bf00      	nop
 800bb5c:	20013b70 	.word	0x20013b70
 800bb60:	20013b71 	.word	0x20013b71
 800bb64:	05f5e100 	.word	0x05f5e100

0800bb68 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800bb68:	b510      	push	{r4, lr}
 800bb6a:	4604      	mov	r4, r0
 800bb6c:	f7f5 f81c 	bl	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800bb70:	6863      	ldr	r3, [r4, #4]
 800bb72:	2200      	movs	r2, #0
 800bb74:	729a      	strb	r2, [r3, #10]
 800bb76:	bd10      	pop	{r4, pc}

0800bb78 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800bb78:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800bb7a:	301c      	adds	r0, #28
 800bb7c:	f016 bf70 	b.w	8022a60 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800bb80 <_ZN8touchgfx3HAL5touchEll>:
 800bb80:	b530      	push	{r4, r5, lr}
 800bb82:	b087      	sub	sp, #28
 800bb84:	4604      	mov	r4, r0
 800bb86:	a804      	add	r0, sp, #16
 800bb88:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800bb8c:	f005 f8e4 	bl	8010d58 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800bb90:	9b04      	ldr	r3, [sp, #16]
 800bb92:	f8ad 300c 	strh.w	r3, [sp, #12]
 800bb96:	a906      	add	r1, sp, #24
 800bb98:	9b05      	ldr	r3, [sp, #20]
 800bb9a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800bb9e:	a803      	add	r0, sp, #12
 800bba0:	f005 f92c 	bl	8010dfc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800bba4:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800bba8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800bbac:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800bbb0:	f104 001c 	add.w	r0, r4, #28
 800bbb4:	b189      	cbz	r1, 800bbda <_ZN8touchgfx3HAL5touchEll+0x5a>
 800bbb6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800bbba:	9300      	str	r3, [sp, #0]
 800bbbc:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800bbc0:	4613      	mov	r3, r2
 800bbc2:	462a      	mov	r2, r5
 800bbc4:	f016 ff5c 	bl	8022a80 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800bbc8:	b128      	cbz	r0, 800bbd6 <_ZN8touchgfx3HAL5touchEll+0x56>
 800bbca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800bbce:	6623      	str	r3, [r4, #96]	@ 0x60
 800bbd0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800bbd4:	6663      	str	r3, [r4, #100]	@ 0x64
 800bbd6:	b007      	add	sp, #28
 800bbd8:	bd30      	pop	{r4, r5, pc}
 800bbda:	f016 ff91 	bl	8022b00 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800bbde:	2301      	movs	r3, #1
 800bbe0:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800bbe4:	e7f1      	b.n	800bbca <_ZN8touchgfx3HAL5touchEll+0x4a>

0800bbe6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800bbe6:	b510      	push	{r4, lr}
 800bbe8:	2b00      	cmp	r3, #0
 800bbea:	d046      	beq.n	800bc7a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800bbec:	ea81 0002 	eor.w	r0, r1, r2
 800bbf0:	07c4      	lsls	r4, r0, #31
 800bbf2:	d508      	bpl.n	800bc06 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800bbf4:	440b      	add	r3, r1
 800bbf6:	3a01      	subs	r2, #1
 800bbf8:	428b      	cmp	r3, r1
 800bbfa:	d93e      	bls.n	800bc7a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800bbfc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800bc00:	f801 0b01 	strb.w	r0, [r1], #1
 800bc04:	e7f8      	b.n	800bbf8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800bc06:	07d0      	lsls	r0, r2, #31
 800bc08:	bf42      	ittt	mi
 800bc0a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800bc0e:	f801 0b01 	strbmi.w	r0, [r1], #1
 800bc12:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800bc16:	2b01      	cmp	r3, #1
 800bc18:	d911      	bls.n	800bc3e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800bc1a:	ea81 0402 	eor.w	r4, r1, r2
 800bc1e:	07a4      	lsls	r4, r4, #30
 800bc20:	4610      	mov	r0, r2
 800bc22:	d022      	beq.n	800bc6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800bc24:	f023 0401 	bic.w	r4, r3, #1
 800bc28:	440c      	add	r4, r1
 800bc2a:	428c      	cmp	r4, r1
 800bc2c:	4602      	mov	r2, r0
 800bc2e:	d904      	bls.n	800bc3a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800bc30:	8812      	ldrh	r2, [r2, #0]
 800bc32:	f821 2b02 	strh.w	r2, [r1], #2
 800bc36:	3002      	adds	r0, #2
 800bc38:	e7f7      	b.n	800bc2a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800bc3a:	f003 0301 	and.w	r3, r3, #1
 800bc3e:	f023 0003 	bic.w	r0, r3, #3
 800bc42:	4408      	add	r0, r1
 800bc44:	4288      	cmp	r0, r1
 800bc46:	4614      	mov	r4, r2
 800bc48:	d904      	bls.n	800bc54 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800bc4a:	6824      	ldr	r4, [r4, #0]
 800bc4c:	f841 4b04 	str.w	r4, [r1], #4
 800bc50:	3204      	adds	r2, #4
 800bc52:	e7f7      	b.n	800bc44 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800bc54:	f003 0303 	and.w	r3, r3, #3
 800bc58:	440b      	add	r3, r1
 800bc5a:	3a01      	subs	r2, #1
 800bc5c:	428b      	cmp	r3, r1
 800bc5e:	d90c      	bls.n	800bc7a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800bc60:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800bc64:	f801 0b01 	strb.w	r0, [r1], #1
 800bc68:	e7f8      	b.n	800bc5c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800bc6a:	0790      	lsls	r0, r2, #30
 800bc6c:	d0e7      	beq.n	800bc3e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800bc6e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800bc72:	f821 0b02 	strh.w	r0, [r1], #2
 800bc76:	3b02      	subs	r3, #2
 800bc78:	e7e1      	b.n	800bc3e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800bc7a:	2001      	movs	r0, #1
 800bc7c:	bd10      	pop	{r4, pc}

0800bc7e <_ZN8touchgfx3HAL7noTouchEv>:
 800bc7e:	b510      	push	{r4, lr}
 800bc80:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800bc84:	4604      	mov	r4, r0
 800bc86:	b153      	cbz	r3, 800bc9e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800bc88:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800bc8c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800bc90:	2101      	movs	r1, #1
 800bc92:	301c      	adds	r0, #28
 800bc94:	f016 ff34 	bl	8022b00 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800bc98:	2300      	movs	r3, #0
 800bc9a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800bc9e:	bd10      	pop	{r4, pc}

0800bca0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800bca0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bca4:	b085      	sub	sp, #20
 800bca6:	ad04      	add	r5, sp, #16
 800bca8:	4604      	mov	r4, r0
 800bcaa:	2000      	movs	r0, #0
 800bcac:	f845 0d04 	str.w	r0, [r5, #-4]!
 800bcb0:	69a0      	ldr	r0, [r4, #24]
 800bcb2:	6806      	ldr	r6, [r0, #0]
 800bcb4:	9501      	str	r5, [sp, #4]
 800bcb6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800bcba:	9500      	str	r5, [sp, #0]
 800bcbc:	6835      	ldr	r5, [r6, #0]
 800bcbe:	4699      	mov	r9, r3
 800bcc0:	460f      	mov	r7, r1
 800bcc2:	4690      	mov	r8, r2
 800bcc4:	47a8      	blx	r5
 800bcc6:	4d10      	ldr	r5, [pc, #64]	@ (800bd08 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800bcc8:	4606      	mov	r6, r0
 800bcca:	f8a5 9000 	strh.w	r9, [r5]
 800bcce:	f7f6 ff21 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 800bcd2:	6803      	ldr	r3, [r0, #0]
 800bcd4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bcd6:	4798      	blx	r3
 800bcd8:	b128      	cbz	r0, 800bce6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800bcda:	2801      	cmp	r0, #1
 800bcdc:	d00b      	beq.n	800bcf6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800bcde:	4630      	mov	r0, r6
 800bce0:	b005      	add	sp, #20
 800bce2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bce6:	882b      	ldrh	r3, [r5, #0]
 800bce8:	fb08 7203 	mla	r2, r8, r3, r7
 800bcec:	9b03      	ldr	r3, [sp, #12]
 800bcee:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800bcf2:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800bcf4:	e7f3      	b.n	800bcde <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800bcf6:	882a      	ldrh	r2, [r5, #0]
 800bcf8:	9b03      	ldr	r3, [sp, #12]
 800bcfa:	fb08 7202 	mla	r2, r8, r2, r7
 800bcfe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800bd02:	1a9a      	subs	r2, r3, r2
 800bd04:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800bd06:	e7ea      	b.n	800bcde <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800bd08:	20013b64 	.word	0x20013b64

0800bd0c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800bd0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bd0e:	4b15      	ldr	r3, [pc, #84]	@ (800bd64 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800bd10:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800bd14:	881b      	ldrh	r3, [r3, #0]
 800bd16:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800bd18:	fb93 f4f4 	sdiv	r4, r3, r4
 800bd1c:	460f      	mov	r7, r1
 800bd1e:	4606      	mov	r6, r0
 800bd20:	f7f6 fef8 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 800bd24:	6803      	ldr	r3, [r0, #0]
 800bd26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bd28:	4798      	blx	r3
 800bd2a:	2801      	cmp	r0, #1
 800bd2c:	d00b      	beq.n	800bd46 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800bd2e:	d303      	bcc.n	800bd38 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800bd30:	2802      	cmp	r0, #2
 800bd32:	d010      	beq.n	800bd56 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800bd34:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800bd36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bd38:	4b0b      	ldr	r3, [pc, #44]	@ (800bd68 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800bd3a:	8819      	ldrh	r1, [r3, #0]
 800bd3c:	437c      	muls	r4, r7
 800bd3e:	434c      	muls	r4, r1
 800bd40:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800bd44:	e7f6      	b.n	800bd34 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800bd46:	4b08      	ldr	r3, [pc, #32]	@ (800bd68 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800bd48:	8819      	ldrh	r1, [r3, #0]
 800bd4a:	437c      	muls	r4, r7
 800bd4c:	434c      	muls	r4, r1
 800bd4e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800bd52:	1b2d      	subs	r5, r5, r4
 800bd54:	e7ee      	b.n	800bd34 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800bd56:	4b04      	ldr	r3, [pc, #16]	@ (800bd68 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800bd58:	8819      	ldrh	r1, [r3, #0]
 800bd5a:	437c      	muls	r4, r7
 800bd5c:	434c      	muls	r4, r1
 800bd5e:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800bd62:	e7e7      	b.n	800bd34 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800bd64:	20013b66 	.word	0x20013b66
 800bd68:	20013b64 	.word	0x20013b64

0800bd6c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800bd6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd6e:	b08b      	sub	sp, #44	@ 0x2c
 800bd70:	4617      	mov	r7, r2
 800bd72:	4604      	mov	r4, r0
 800bd74:	460e      	mov	r6, r1
 800bd76:	461d      	mov	r5, r3
 800bd78:	f7f6 fecc 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 800bd7c:	6803      	ldr	r3, [r0, #0]
 800bd7e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bd80:	4798      	blx	r3
 800bd82:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800bd86:	9007      	str	r0, [sp, #28]
 800bd88:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800bd8c:	4b0d      	ldr	r3, [pc, #52]	@ (800bdc4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800bd8e:	6822      	ldr	r2, [r4, #0]
 800bd90:	881b      	ldrh	r3, [r3, #0]
 800bd92:	9306      	str	r3, [sp, #24]
 800bd94:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800bd98:	9305      	str	r3, [sp, #20]
 800bd9a:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800bd9e:	9304      	str	r3, [sp, #16]
 800bda0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800bda4:	9303      	str	r3, [sp, #12]
 800bda6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800bdaa:	9302      	str	r3, [sp, #8]
 800bdac:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800bdb0:	e9cd 5300 	strd	r5, r3, [sp]
 800bdb4:	4631      	mov	r1, r6
 800bdb6:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800bdb8:	463b      	mov	r3, r7
 800bdba:	2200      	movs	r2, #0
 800bdbc:	4620      	mov	r0, r4
 800bdbe:	47a8      	blx	r5
 800bdc0:	b00b      	add	sp, #44	@ 0x2c
 800bdc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bdc4:	20013b64 	.word	0x20013b64

0800bdc8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800bdc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bdcc:	4698      	mov	r8, r3
 800bdce:	6803      	ldr	r3, [r0, #0]
 800bdd0:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800bdd2:	4b15      	ldr	r3, [pc, #84]	@ (800be28 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800bdd4:	b08b      	sub	sp, #44	@ 0x2c
 800bdd6:	4617      	mov	r7, r2
 800bdd8:	f8b3 9000 	ldrh.w	r9, [r3]
 800bddc:	460e      	mov	r6, r1
 800bdde:	4604      	mov	r4, r0
 800bde0:	f7f6 fe98 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 800bde4:	6803      	ldr	r3, [r0, #0]
 800bde6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bde8:	4798      	blx	r3
 800bdea:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800bdee:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800bdf2:	2302      	movs	r3, #2
 800bdf4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800bdf8:	2301      	movs	r3, #1
 800bdfa:	9305      	str	r3, [sp, #20]
 800bdfc:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800be00:	9304      	str	r3, [sp, #16]
 800be02:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800be06:	9303      	str	r3, [sp, #12]
 800be08:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800be0c:	9302      	str	r3, [sp, #8]
 800be0e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800be12:	2200      	movs	r2, #0
 800be14:	e9cd 8300 	strd	r8, r3, [sp]
 800be18:	4631      	mov	r1, r6
 800be1a:	463b      	mov	r3, r7
 800be1c:	4620      	mov	r0, r4
 800be1e:	47a8      	blx	r5
 800be20:	b00b      	add	sp, #44	@ 0x2c
 800be22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800be26:	bf00      	nop
 800be28:	20013b64 	.word	0x20013b64

0800be2c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800be2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800be30:	4698      	mov	r8, r3
 800be32:	6803      	ldr	r3, [r0, #0]
 800be34:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800be36:	4b11      	ldr	r3, [pc, #68]	@ (800be7c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800be38:	b087      	sub	sp, #28
 800be3a:	f8b3 9000 	ldrh.w	r9, [r3]
 800be3e:	460e      	mov	r6, r1
 800be40:	4617      	mov	r7, r2
 800be42:	4604      	mov	r4, r0
 800be44:	f7f6 fe66 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 800be48:	6803      	ldr	r3, [r0, #0]
 800be4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800be4c:	4798      	blx	r3
 800be4e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800be52:	f8cd 900c 	str.w	r9, [sp, #12]
 800be56:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800be5a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800be5e:	9302      	str	r3, [sp, #8]
 800be60:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800be64:	9301      	str	r3, [sp, #4]
 800be66:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800be6a:	9300      	str	r3, [sp, #0]
 800be6c:	463a      	mov	r2, r7
 800be6e:	4643      	mov	r3, r8
 800be70:	4631      	mov	r1, r6
 800be72:	4620      	mov	r0, r4
 800be74:	47a8      	blx	r5
 800be76:	b007      	add	sp, #28
 800be78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800be7c:	20013b64 	.word	0x20013b64

0800be80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800be80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be84:	4604      	mov	r4, r0
 800be86:	b08f      	sub	sp, #60	@ 0x3c
 800be88:	4610      	mov	r0, r2
 800be8a:	460d      	mov	r5, r1
 800be8c:	4691      	mov	r9, r2
 800be8e:	461e      	mov	r6, r3
 800be90:	f008 fad6 	bl	8014440 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800be94:	2800      	cmp	r0, #0
 800be96:	f000 809d 	beq.w	800bfd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800be9a:	6823      	ldr	r3, [r4, #0]
 800be9c:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800c038 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800bea0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bea2:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800c03c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800bea6:	4f61      	ldr	r7, [pc, #388]	@ (800c02c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800bea8:	4620      	mov	r0, r4
 800beaa:	4798      	blx	r3
 800beac:	6823      	ldr	r3, [r4, #0]
 800beae:	4620      	mov	r0, r4
 800beb0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800beb2:	4798      	blx	r3
 800beb4:	f8bb 3000 	ldrh.w	r3, [fp]
 800beb8:	9301      	str	r3, [sp, #4]
 800beba:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800bebe:	f8ba 3000 	ldrh.w	r3, [sl]
 800bec2:	9302      	str	r3, [sp, #8]
 800bec4:	883b      	ldrh	r3, [r7, #0]
 800bec6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800beca:	9303      	str	r3, [sp, #12]
 800becc:	4b58      	ldr	r3, [pc, #352]	@ (800c030 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800bece:	9305      	str	r3, [sp, #20]
 800bed0:	881a      	ldrh	r2, [r3, #0]
 800bed2:	9204      	str	r2, [sp, #16]
 800bed4:	4640      	mov	r0, r8
 800bed6:	f008 fb47 	bl	8014568 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800beda:	8038      	strh	r0, [r7, #0]
 800bedc:	4640      	mov	r0, r8
 800bede:	f008 fb77 	bl	80145d0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bee2:	9b05      	ldr	r3, [sp, #20]
 800bee4:	b280      	uxth	r0, r0
 800bee6:	8018      	strh	r0, [r3, #0]
 800bee8:	4b52      	ldr	r3, [pc, #328]	@ (800c034 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800beea:	781b      	ldrb	r3, [r3, #0]
 800beec:	2b00      	cmp	r3, #0
 800beee:	d174      	bne.n	800bfda <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800bef0:	883b      	ldrh	r3, [r7, #0]
 800bef2:	f8ab 3000 	strh.w	r3, [fp]
 800bef6:	f8aa 0000 	strh.w	r0, [sl]
 800befa:	4648      	mov	r0, r9
 800befc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800bf00:	f008 fa9e 	bl	8014440 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800bf04:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800bf08:	2200      	movs	r2, #0
 800bf0a:	4611      	mov	r1, r2
 800bf0c:	4628      	mov	r0, r5
 800bf0e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800bf12:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800bf16:	f7f6 ffcf 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
 800bf1a:	2301      	movs	r3, #1
 800bf1c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800bf20:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800bf24:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800bf28:	2b00      	cmp	r3, #0
 800bf2a:	dd5c      	ble.n	800bfe6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800bf2c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800bf30:	2b00      	cmp	r3, #0
 800bf32:	dd58      	ble.n	800bfe6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800bf34:	462a      	mov	r2, r5
 800bf36:	ab0a      	add	r3, sp, #40	@ 0x28
 800bf38:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800bf3c:	6851      	ldr	r1, [r2, #4]
 800bf3e:	c303      	stmia	r3!, {r0, r1}
 800bf40:	4631      	mov	r1, r6
 800bf42:	a80a      	add	r0, sp, #40	@ 0x28
 800bf44:	f7ff fbc8 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 800bf48:	4b38      	ldr	r3, [pc, #224]	@ (800c02c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800bf4a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bf4e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800bf52:	2100      	movs	r1, #0
 800bf54:	aa0a      	add	r2, sp, #40	@ 0x28
 800bf56:	4b36      	ldr	r3, [pc, #216]	@ (800c030 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800bf58:	910c      	str	r1, [sp, #48]	@ 0x30
 800bf5a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bf5e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bf62:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800bf66:	ab08      	add	r3, sp, #32
 800bf68:	e883 0003 	stmia.w	r3, {r0, r1}
 800bf6c:	4618      	mov	r0, r3
 800bf6e:	a90c      	add	r1, sp, #48	@ 0x30
 800bf70:	f7ff fbb2 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 800bf74:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800bf76:	2b00      	cmp	r3, #0
 800bf78:	d13c      	bne.n	800bff4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800bf7a:	2000      	movs	r0, #0
 800bf7c:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800bf80:	2600      	movs	r6, #0
 800bf82:	682a      	ldr	r2, [r5, #0]
 800bf84:	696b      	ldr	r3, [r5, #20]
 800bf86:	616e      	str	r6, [r5, #20]
 800bf88:	9305      	str	r3, [sp, #20]
 800bf8a:	6892      	ldr	r2, [r2, #8]
 800bf8c:	a908      	add	r1, sp, #32
 800bf8e:	4628      	mov	r0, r5
 800bf90:	4790      	blx	r2
 800bf92:	9b05      	ldr	r3, [sp, #20]
 800bf94:	616b      	str	r3, [r5, #20]
 800bf96:	4652      	mov	r2, sl
 800bf98:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800bf9c:	4649      	mov	r1, r9
 800bf9e:	4628      	mov	r0, r5
 800bfa0:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800bfa4:	f7f6 ff88 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
 800bfa8:	4b23      	ldr	r3, [pc, #140]	@ (800c038 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800bfaa:	9a01      	ldr	r2, [sp, #4]
 800bfac:	801a      	strh	r2, [r3, #0]
 800bfae:	4b23      	ldr	r3, [pc, #140]	@ (800c03c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800bfb0:	9a02      	ldr	r2, [sp, #8]
 800bfb2:	801a      	strh	r2, [r3, #0]
 800bfb4:	4b1d      	ldr	r3, [pc, #116]	@ (800c02c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800bfb6:	9a03      	ldr	r2, [sp, #12]
 800bfb8:	801a      	strh	r2, [r3, #0]
 800bfba:	4b1d      	ldr	r3, [pc, #116]	@ (800c030 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800bfbc:	9a04      	ldr	r2, [sp, #16]
 800bfbe:	801a      	strh	r2, [r3, #0]
 800bfc0:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800bfc4:	6823      	ldr	r3, [r4, #0]
 800bfc6:	4620      	mov	r0, r4
 800bfc8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800bfca:	4798      	blx	r3
 800bfcc:	6823      	ldr	r3, [r4, #0]
 800bfce:	4620      	mov	r0, r4
 800bfd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800bfd2:	4798      	blx	r3
 800bfd4:	b00f      	add	sp, #60	@ 0x3c
 800bfd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bfda:	883b      	ldrh	r3, [r7, #0]
 800bfdc:	f8ab 0000 	strh.w	r0, [fp]
 800bfe0:	f8aa 3000 	strh.w	r3, [sl]
 800bfe4:	e789      	b.n	800befa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800bfe6:	462a      	mov	r2, r5
 800bfe8:	ab0a      	add	r3, sp, #40	@ 0x28
 800bfea:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800bfee:	6851      	ldr	r1, [r2, #4]
 800bff0:	c303      	stmia	r3!, {r0, r1}
 800bff2:	e7a9      	b.n	800bf48 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800bff4:	a807      	add	r0, sp, #28
 800bff6:	f008 fc2d 	bl	8014854 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800bffa:	4606      	mov	r6, r0
 800bffc:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800bffe:	6803      	ldr	r3, [r0, #0]
 800c000:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c002:	4798      	blx	r3
 800c004:	4286      	cmp	r6, r0
 800c006:	d1b8      	bne.n	800bf7a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800c008:	f7f6 fd84 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 800c00c:	6803      	ldr	r3, [r0, #0]
 800c00e:	4606      	mov	r6, r0
 800c010:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800c012:	9305      	str	r3, [sp, #20]
 800c014:	a807      	add	r0, sp, #28
 800c016:	f008 fc1d 	bl	8014854 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c01a:	9b05      	ldr	r3, [sp, #20]
 800c01c:	4601      	mov	r1, r0
 800c01e:	4630      	mov	r0, r6
 800c020:	4798      	blx	r3
 800c022:	f080 0001 	eor.w	r0, r0, #1
 800c026:	b2c0      	uxtb	r0, r0
 800c028:	e7a8      	b.n	800bf7c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800c02a:	bf00      	nop
 800c02c:	20013b5e 	.word	0x20013b5e
 800c030:	20013b60 	.word	0x20013b60
 800c034:	20013b62 	.word	0x20013b62
 800c038:	20013b64 	.word	0x20013b64
 800c03c:	20013b66 	.word	0x20013b66

0800c040 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800c040:	b510      	push	{r4, lr}
 800c042:	4b07      	ldr	r3, [pc, #28]	@ (800c060 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800c044:	781b      	ldrb	r3, [r3, #0]
 800c046:	4604      	mov	r4, r0
 800c048:	b13b      	cbz	r3, 800c05a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c04a:	6803      	ldr	r3, [r0, #0]
 800c04c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800c04e:	4798      	blx	r3
 800c050:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c052:	4283      	cmp	r3, r0
 800c054:	d101      	bne.n	800c05a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c056:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800c058:	bd10      	pop	{r4, pc}
 800c05a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800c05c:	e7fc      	b.n	800c058 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800c05e:	bf00      	nop
 800c060:	20013b68 	.word	0x20013b68

0800c064 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800c064:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c068:	b08a      	sub	sp, #40	@ 0x28
 800c06a:	461d      	mov	r5, r3
 800c06c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800c070:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c074:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800c078:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c07c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800c080:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c084:	2400      	movs	r4, #0
 800c086:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800c08a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800c08e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c092:	4690      	mov	r8, r2
 800c094:	4607      	mov	r7, r0
 800c096:	9404      	str	r4, [sp, #16]
 800c098:	f88d 4020 	strb.w	r4, [sp, #32]
 800c09c:	f7ff ffd0 	bl	800c040 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c0a0:	fb06 8505 	mla	r5, r6, r5, r8
 800c0a4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800c0a8:	6878      	ldr	r0, [r7, #4]
 800c0aa:	9505      	str	r5, [sp, #20]
 800c0ac:	f8ad 601e 	strh.w	r6, [sp, #30]
 800c0b0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800c0b4:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800c0b8:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800c0bc:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800c0c0:	6803      	ldr	r3, [r0, #0]
 800c0c2:	a901      	add	r1, sp, #4
 800c0c4:	685b      	ldr	r3, [r3, #4]
 800c0c6:	4798      	blx	r3
 800c0c8:	b00a      	add	sp, #40	@ 0x28
 800c0ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c0ce <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800c0ce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c0d2:	b08b      	sub	sp, #44	@ 0x2c
 800c0d4:	2400      	movs	r4, #0
 800c0d6:	461d      	mov	r5, r3
 800c0d8:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800c0dc:	4688      	mov	r8, r1
 800c0de:	4691      	mov	r9, r2
 800c0e0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800c0e4:	9404      	str	r4, [sp, #16]
 800c0e6:	4607      	mov	r7, r0
 800c0e8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c0ec:	f7ff ffa8 	bl	800c040 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c0f0:	fb06 9505 	mla	r5, r6, r5, r9
 800c0f4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800c0f8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c0fc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800c100:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800c104:	6878      	ldr	r0, [r7, #4]
 800c106:	9505      	str	r5, [sp, #20]
 800c108:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c10c:	f8ad 401c 	strh.w	r4, [sp, #28]
 800c110:	f8ad 601e 	strh.w	r6, [sp, #30]
 800c114:	f8cd 8010 	str.w	r8, [sp, #16]
 800c118:	f8ad 4020 	strh.w	r4, [sp, #32]
 800c11c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800c120:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800c124:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800c128:	6803      	ldr	r3, [r0, #0]
 800c12a:	a901      	add	r1, sp, #4
 800c12c:	685b      	ldr	r3, [r3, #4]
 800c12e:	4798      	blx	r3
 800c130:	b00b      	add	sp, #44	@ 0x2c
 800c132:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800c138 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800c138:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c13c:	b08a      	sub	sp, #40	@ 0x28
 800c13e:	4698      	mov	r8, r3
 800c140:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800c144:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800c148:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800c14c:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800c150:	2300      	movs	r3, #0
 800c152:	2d0b      	cmp	r5, #11
 800c154:	4606      	mov	r6, r0
 800c156:	9304      	str	r3, [sp, #16]
 800c158:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800c15c:	d138      	bne.n	800c1d0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800c15e:	2380      	movs	r3, #128	@ 0x80
 800c160:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c164:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800c168:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c16c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800c170:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c174:	f88d 0020 	strb.w	r0, [sp, #32]
 800c178:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800c17c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c180:	4630      	mov	r0, r6
 800c182:	9203      	str	r2, [sp, #12]
 800c184:	f7ff ff5c 	bl	800c040 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c188:	2c0b      	cmp	r4, #11
 800c18a:	bf98      	it	ls
 800c18c:	4b1b      	ldrls	r3, [pc, #108]	@ (800c1fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800c18e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800c192:	bf98      	it	ls
 800c194:	5d19      	ldrbls	r1, [r3, r4]
 800c196:	f8ad 701e 	strh.w	r7, [sp, #30]
 800c19a:	bf88      	it	hi
 800c19c:	2100      	movhi	r1, #0
 800c19e:	fb02 8307 	mla	r3, r2, r7, r8
 800c1a2:	10c9      	asrs	r1, r1, #3
 800c1a4:	fb01 0003 	mla	r0, r1, r3, r0
 800c1a8:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800c1ac:	9005      	str	r0, [sp, #20]
 800c1ae:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800c1b2:	6870      	ldr	r0, [r6, #4]
 800c1b4:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800c1b8:	2300      	movs	r3, #0
 800c1ba:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800c1be:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800c1c2:	6803      	ldr	r3, [r0, #0]
 800c1c4:	a901      	add	r1, sp, #4
 800c1c6:	685b      	ldr	r3, [r3, #4]
 800c1c8:	4798      	blx	r3
 800c1ca:	b00a      	add	sp, #40	@ 0x28
 800c1cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c1d0:	2d02      	cmp	r5, #2
 800c1d2:	d109      	bne.n	800c1e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800c1d4:	28ff      	cmp	r0, #255	@ 0xff
 800c1d6:	d105      	bne.n	800c1e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800c1d8:	f1bc 0f00 	cmp.w	ip, #0
 800c1dc:	bf14      	ite	ne
 800c1de:	2340      	movne	r3, #64	@ 0x40
 800c1e0:	2320      	moveq	r3, #32
 800c1e2:	e7bd      	b.n	800c160 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c1e4:	2340      	movs	r3, #64	@ 0x40
 800c1e6:	e7bb      	b.n	800c160 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c1e8:	28ff      	cmp	r0, #255	@ 0xff
 800c1ea:	d105      	bne.n	800c1f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800c1ec:	f1bc 0f00 	cmp.w	ip, #0
 800c1f0:	bf14      	ite	ne
 800c1f2:	2304      	movne	r3, #4
 800c1f4:	2301      	moveq	r3, #1
 800c1f6:	e7b3      	b.n	800c160 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c1f8:	2304      	movs	r3, #4
 800c1fa:	e7b1      	b.n	800c160 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c1fc:	080272e4 	.word	0x080272e4

0800c200 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800c200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c204:	b08b      	sub	sp, #44	@ 0x2c
 800c206:	461d      	mov	r5, r3
 800c208:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800c20c:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800c210:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800c214:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800c218:	bf14      	ite	ne
 800c21a:	2308      	movne	r3, #8
 800c21c:	2302      	moveq	r3, #2
 800c21e:	2400      	movs	r4, #0
 800c220:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c224:	4688      	mov	r8, r1
 800c226:	4693      	mov	fp, r2
 800c228:	9404      	str	r4, [sp, #16]
 800c22a:	4607      	mov	r7, r0
 800c22c:	f7ff ff08 	bl	800c040 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c230:	2e0b      	cmp	r6, #11
 800c232:	bf98      	it	ls
 800c234:	4b15      	ldrls	r3, [pc, #84]	@ (800c28c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800c236:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800c23a:	bf98      	it	ls
 800c23c:	5d9c      	ldrbls	r4, [r3, r6]
 800c23e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800c242:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c246:	fb05 b50a 	mla	r5, r5, sl, fp
 800c24a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800c24e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c252:	10e4      	asrs	r4, r4, #3
 800c254:	fb04 0405 	mla	r4, r4, r5, r0
 800c258:	2300      	movs	r3, #0
 800c25a:	6878      	ldr	r0, [r7, #4]
 800c25c:	9405      	str	r4, [sp, #20]
 800c25e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c262:	f8ad a01e 	strh.w	sl, [sp, #30]
 800c266:	f8cd 8010 	str.w	r8, [sp, #16]
 800c26a:	f88d 9020 	strb.w	r9, [sp, #32]
 800c26e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800c272:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800c276:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800c27a:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800c27e:	6803      	ldr	r3, [r0, #0]
 800c280:	a901      	add	r1, sp, #4
 800c282:	685b      	ldr	r3, [r3, #4]
 800c284:	4798      	blx	r3
 800c286:	b00b      	add	sp, #44	@ 0x2c
 800c288:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c28c:	080272e4 	.word	0x080272e4

0800c290 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800c290:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c294:	461e      	mov	r6, r3
 800c296:	4b0a      	ldr	r3, [pc, #40]	@ (800c2c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800c298:	460f      	mov	r7, r1
 800c29a:	881d      	ldrh	r5, [r3, #0]
 800c29c:	4690      	mov	r8, r2
 800c29e:	f7f6 fc39 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 800c2a2:	6803      	ldr	r3, [r0, #0]
 800c2a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c2a6:	4798      	blx	r3
 800c2a8:	280b      	cmp	r0, #11
 800c2aa:	bf9a      	itte	ls
 800c2ac:	4b05      	ldrls	r3, [pc, #20]	@ (800c2c4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800c2ae:	5c1c      	ldrbls	r4, [r3, r0]
 800c2b0:	2400      	movhi	r4, #0
 800c2b2:	fb08 7005 	mla	r0, r8, r5, r7
 800c2b6:	10e4      	asrs	r4, r4, #3
 800c2b8:	fb04 6000 	mla	r0, r4, r0, r6
 800c2bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c2c0:	20013b64 	.word	0x20013b64
 800c2c4:	080272e4 	.word	0x080272e4

0800c2c8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800c2c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c2ca:	b08b      	sub	sp, #44	@ 0x2c
 800c2cc:	461f      	mov	r7, r3
 800c2ce:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800c2d2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c2d6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800c2da:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c2de:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800c2e2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c2e6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800c2ea:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c2ee:	2500      	movs	r5, #0
 800c2f0:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800c2f4:	f88d 3020 	strb.w	r3, [sp, #32]
 800c2f8:	4604      	mov	r4, r0
 800c2fa:	4616      	mov	r6, r2
 800c2fc:	9504      	str	r5, [sp, #16]
 800c2fe:	f7ff fe9f 	bl	800c040 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c302:	463a      	mov	r2, r7
 800c304:	4631      	mov	r1, r6
 800c306:	4603      	mov	r3, r0
 800c308:	4620      	mov	r0, r4
 800c30a:	f7ff ffc1 	bl	800c290 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c30e:	4b0e      	ldr	r3, [pc, #56]	@ (800c348 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800c310:	9005      	str	r0, [sp, #20]
 800c312:	881b      	ldrh	r3, [r3, #0]
 800c314:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c318:	f7f6 fbfc 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 800c31c:	6803      	ldr	r3, [r0, #0]
 800c31e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c320:	4798      	blx	r3
 800c322:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800c324:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800c328:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800c32c:	9304      	str	r3, [sp, #16]
 800c32e:	6860      	ldr	r0, [r4, #4]
 800c330:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800c334:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800c338:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800c33c:	6803      	ldr	r3, [r0, #0]
 800c33e:	a901      	add	r1, sp, #4
 800c340:	685b      	ldr	r3, [r3, #4]
 800c342:	4798      	blx	r3
 800c344:	b00b      	add	sp, #44	@ 0x2c
 800c346:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c348:	20013b64 	.word	0x20013b64

0800c34c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800c34c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c34e:	b08d      	sub	sp, #52	@ 0x34
 800c350:	466b      	mov	r3, sp
 800c352:	e883 0006 	stmia.w	r3, {r1, r2}
 800c356:	2300      	movs	r3, #0
 800c358:	9306      	str	r3, [sp, #24]
 800c35a:	6803      	ldr	r3, [r0, #0]
 800c35c:	f8bd 6000 	ldrh.w	r6, [sp]
 800c360:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800c362:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800c366:	2501      	movs	r5, #1
 800c368:	9503      	str	r5, [sp, #12]
 800c36a:	4604      	mov	r4, r0
 800c36c:	4798      	blx	r3
 800c36e:	463a      	mov	r2, r7
 800c370:	4631      	mov	r1, r6
 800c372:	4603      	mov	r3, r0
 800c374:	4620      	mov	r0, r4
 800c376:	f7ff ff8b 	bl	800c290 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c37a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800c37c:	9307      	str	r3, [sp, #28]
 800c37e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c382:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c386:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c38a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800c38e:	4b0f      	ldr	r3, [pc, #60]	@ (800c3cc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800c390:	9004      	str	r0, [sp, #16]
 800c392:	881b      	ldrh	r3, [r3, #0]
 800c394:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800c398:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800c39c:	f7f6 fbba 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 800c3a0:	6803      	ldr	r3, [r0, #0]
 800c3a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c3a4:	4798      	blx	r3
 800c3a6:	23ff      	movs	r3, #255	@ 0xff
 800c3a8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800c3ac:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800c3b0:	6860      	ldr	r0, [r4, #4]
 800c3b2:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800c3b6:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800c3ba:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800c3be:	6803      	ldr	r3, [r0, #0]
 800c3c0:	a903      	add	r1, sp, #12
 800c3c2:	685b      	ldr	r3, [r3, #4]
 800c3c4:	4798      	blx	r3
 800c3c6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800c3c8:	b00d      	add	sp, #52	@ 0x34
 800c3ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c3cc:	20013b64 	.word	0x20013b64

0800c3d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800c3d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c3d4:	b08c      	sub	sp, #48	@ 0x30
 800c3d6:	461e      	mov	r6, r3
 800c3d8:	466d      	mov	r5, sp
 800c3da:	2300      	movs	r3, #0
 800c3dc:	e885 0006 	stmia.w	r5, {r1, r2}
 800c3e0:	9306      	str	r3, [sp, #24]
 800c3e2:	6803      	ldr	r3, [r0, #0]
 800c3e4:	f8bd 7000 	ldrh.w	r7, [sp]
 800c3e8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800c3ea:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800c3ee:	2501      	movs	r5, #1
 800c3f0:	9503      	str	r5, [sp, #12]
 800c3f2:	4604      	mov	r4, r0
 800c3f4:	4798      	blx	r3
 800c3f6:	4642      	mov	r2, r8
 800c3f8:	4639      	mov	r1, r7
 800c3fa:	4603      	mov	r3, r0
 800c3fc:	4620      	mov	r0, r4
 800c3fe:	f7ff ff47 	bl	800c290 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c402:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c406:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c40a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c40e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800c412:	4b11      	ldr	r3, [pc, #68]	@ (800c458 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800c414:	9004      	str	r0, [sp, #16]
 800c416:	881b      	ldrh	r3, [r3, #0]
 800c418:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800c41c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800c41e:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800c422:	9607      	str	r6, [sp, #28]
 800c424:	f7f6 fb76 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 800c428:	6803      	ldr	r3, [r0, #0]
 800c42a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c42c:	4798      	blx	r3
 800c42e:	23ff      	movs	r3, #255	@ 0xff
 800c430:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800c434:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800c438:	6860      	ldr	r0, [r4, #4]
 800c43a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800c43e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800c442:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800c446:	6803      	ldr	r3, [r0, #0]
 800c448:	a903      	add	r1, sp, #12
 800c44a:	685b      	ldr	r3, [r3, #4]
 800c44c:	4798      	blx	r3
 800c44e:	4630      	mov	r0, r6
 800c450:	b00c      	add	sp, #48	@ 0x30
 800c452:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c456:	bf00      	nop
 800c458:	20013b64 	.word	0x20013b64

0800c45c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800c45c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c45e:	b085      	sub	sp, #20
 800c460:	ac02      	add	r4, sp, #8
 800c462:	e884 0006 	stmia.w	r4, {r1, r2}
 800c466:	4605      	mov	r5, r0
 800c468:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800c46c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800c470:	f7ff fde6 	bl	800c040 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c474:	463a      	mov	r2, r7
 800c476:	4603      	mov	r3, r0
 800c478:	4631      	mov	r1, r6
 800c47a:	4628      	mov	r0, r5
 800c47c:	f7ff ff08 	bl	800c290 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c480:	4a05      	ldr	r2, [pc, #20]	@ (800c498 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800c482:	682b      	ldr	r3, [r5, #0]
 800c484:	8812      	ldrh	r2, [r2, #0]
 800c486:	9200      	str	r2, [sp, #0]
 800c488:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800c48a:	e894 0006 	ldmia.w	r4, {r1, r2}
 800c48e:	4603      	mov	r3, r0
 800c490:	4628      	mov	r0, r5
 800c492:	47b0      	blx	r6
 800c494:	b005      	add	sp, #20
 800c496:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c498:	20013b64 	.word	0x20013b64

0800c49c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800c49c:	b570      	push	{r4, r5, r6, lr}
 800c49e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800c4a2:	4604      	mov	r4, r0
 800c4a4:	b19b      	cbz	r3, 800c4ce <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800c4a6:	2002      	movs	r0, #2
 800c4a8:	f7f4 fa2a 	bl	8000900 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800c4ac:	2300      	movs	r3, #0
 800c4ae:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800c4b2:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800c4b6:	6823      	ldr	r3, [r4, #0]
 800c4b8:	4620      	mov	r0, r4
 800c4ba:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800c4be:	f7ff fdbf 	bl	800c040 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c4c2:	462b      	mov	r3, r5
 800c4c4:	4601      	mov	r1, r0
 800c4c6:	4620      	mov	r0, r4
 800c4c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c4cc:	4718      	bx	r3
 800c4ce:	bd70      	pop	{r4, r5, r6, pc}

0800c4d0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800c4d0:	b538      	push	{r3, r4, r5, lr}
 800c4d2:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800c4d6:	428b      	cmp	r3, r1
 800c4d8:	4604      	mov	r4, r0
 800c4da:	460d      	mov	r5, r1
 800c4dc:	d006      	beq.n	800c4ec <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800c4de:	6803      	ldr	r3, [r0, #0]
 800c4e0:	b929      	cbnz	r1, 800c4ee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800c4e2:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800c4e6:	4798      	blx	r3
 800c4e8:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800c4ec:	bd38      	pop	{r3, r4, r5, pc}
 800c4ee:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800c4f2:	e7f8      	b.n	800c4e6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800c4f4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800c4f4:	b510      	push	{r4, lr}
 800c4f6:	4b0c      	ldr	r3, [pc, #48]	@ (800c528 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800c4f8:	781b      	ldrb	r3, [r3, #0]
 800c4fa:	4604      	mov	r4, r0
 800c4fc:	b953      	cbnz	r3, 800c514 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800c4fe:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800c502:	b93b      	cbnz	r3, 800c514 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800c504:	6840      	ldr	r0, [r0, #4]
 800c506:	f000 f92b 	bl	800c760 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800c50a:	b118      	cbz	r0, 800c514 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800c50c:	6862      	ldr	r2, [r4, #4]
 800c50e:	7a53      	ldrb	r3, [r2, #9]
 800c510:	2b00      	cmp	r3, #0
 800c512:	d0fc      	beq.n	800c50e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800c514:	f7f4 fb40 	bl	8000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c518:	4620      	mov	r0, r4
 800c51a:	2100      	movs	r1, #0
 800c51c:	f7ff ffd8 	bl	800c4d0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800c520:	4620      	mov	r0, r4
 800c522:	f7ff fd8d 	bl	800c040 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c526:	bd10      	pop	{r4, pc}
 800c528:	20013b68 	.word	0x20013b68

0800c52c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800c52c:	b570      	push	{r4, r5, r6, lr}
 800c52e:	4604      	mov	r4, r0
 800c530:	6803      	ldr	r3, [r0, #0]
 800c532:	b919      	cbnz	r1, 800c53c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800c534:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c536:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c53a:	4718      	bx	r3
 800c53c:	2200      	movs	r2, #0
 800c53e:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800c542:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800c546:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c548:	4798      	blx	r3
 800c54a:	6863      	ldr	r3, [r4, #4]
 800c54c:	2101      	movs	r1, #1
 800c54e:	4605      	mov	r5, r0
 800c550:	7299      	strb	r1, [r3, #10]
 800c552:	4620      	mov	r0, r4
 800c554:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800c558:	f7ff ffba 	bl	800c4d0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800c55c:	4628      	mov	r0, r5
 800c55e:	bd70      	pop	{r4, r5, r6, pc}

0800c560 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800c560:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800c564:	1a13      	subs	r3, r2, r0
 800c566:	4258      	negs	r0, r3
 800c568:	4158      	adcs	r0, r3
 800c56a:	4770      	bx	lr

0800c56c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800c56c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800c570:	1a9b      	subs	r3, r3, r2
 800c572:	2b00      	cmp	r3, #0
 800c574:	bfdc      	itt	le
 800c576:	6882      	ldrle	r2, [r0, #8]
 800c578:	189b      	addle	r3, r3, r2
 800c57a:	2b01      	cmp	r3, #1
 800c57c:	bfcc      	ite	gt
 800c57e:	2000      	movgt	r0, #0
 800c580:	2001      	movle	r0, #1
 800c582:	4770      	bx	lr

0800c584 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800c584:	6902      	ldr	r2, [r0, #16]
 800c586:	6843      	ldr	r3, [r0, #4]
 800c588:	2024      	movs	r0, #36	@ 0x24
 800c58a:	fb00 3002 	mla	r0, r0, r2, r3
 800c58e:	4770      	bx	lr

0800c590 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800c590:	6803      	ldr	r3, [r0, #0]
 800c592:	691b      	ldr	r3, [r3, #16]
 800c594:	4718      	bx	r3

0800c596 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800c596:	b570      	push	{r4, r5, r6, lr}
 800c598:	2301      	movs	r3, #1
 800c59a:	7203      	strb	r3, [r0, #8]
 800c59c:	4604      	mov	r4, r0
 800c59e:	6840      	ldr	r0, [r0, #4]
 800c5a0:	6803      	ldr	r3, [r0, #0]
 800c5a2:	699b      	ldr	r3, [r3, #24]
 800c5a4:	4798      	blx	r3
 800c5a6:	6803      	ldr	r3, [r0, #0]
 800c5a8:	2b40      	cmp	r3, #64	@ 0x40
 800c5aa:	4605      	mov	r5, r0
 800c5ac:	d00c      	beq.n	800c5c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c5ae:	d810      	bhi.n	800c5d2 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800c5b0:	2b04      	cmp	r3, #4
 800c5b2:	d01d      	beq.n	800c5f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800c5b4:	d804      	bhi.n	800c5c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800c5b6:	2b01      	cmp	r3, #1
 800c5b8:	d006      	beq.n	800c5c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c5ba:	2b02      	cmp	r3, #2
 800c5bc:	d02c      	beq.n	800c618 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800c5be:	bd70      	pop	{r4, r5, r6, pc}
 800c5c0:	2b08      	cmp	r3, #8
 800c5c2:	d01d      	beq.n	800c600 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800c5c4:	2b20      	cmp	r3, #32
 800c5c6:	d1fa      	bne.n	800c5be <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800c5c8:	6823      	ldr	r3, [r4, #0]
 800c5ca:	4620      	mov	r0, r4
 800c5cc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c5ce:	4798      	blx	r3
 800c5d0:	e013      	b.n	800c5fa <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800c5d2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800c5d6:	d0f7      	beq.n	800c5c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c5d8:	d804      	bhi.n	800c5e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800c5da:	2b80      	cmp	r3, #128	@ 0x80
 800c5dc:	d0f4      	beq.n	800c5c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c5de:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800c5e2:	e7f0      	b.n	800c5c6 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800c5e4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800c5e8:	d0ee      	beq.n	800c5c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800c5ea:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800c5ee:	e7e5      	b.n	800c5bc <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800c5f0:	6823      	ldr	r3, [r4, #0]
 800c5f2:	7f01      	ldrb	r1, [r0, #28]
 800c5f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c5f6:	4620      	mov	r0, r4
 800c5f8:	4798      	blx	r3
 800c5fa:	6823      	ldr	r3, [r4, #0]
 800c5fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c5fe:	e006      	b.n	800c60e <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800c600:	6823      	ldr	r3, [r4, #0]
 800c602:	7f01      	ldrb	r1, [r0, #28]
 800c604:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c606:	4620      	mov	r0, r4
 800c608:	4798      	blx	r3
 800c60a:	6823      	ldr	r3, [r4, #0]
 800c60c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800c60e:	4629      	mov	r1, r5
 800c610:	4620      	mov	r0, r4
 800c612:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c616:	4718      	bx	r3
 800c618:	6823      	ldr	r3, [r4, #0]
 800c61a:	4620      	mov	r0, r4
 800c61c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c61e:	4798      	blx	r3
 800c620:	e7f3      	b.n	800c60a <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800c622 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800c622:	4770      	bx	lr

0800c624 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800c624:	4770      	bx	lr

0800c626 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800c626:	4770      	bx	lr

0800c628 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800c628:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800c62c:	1ad2      	subs	r2, r2, r3
 800c62e:	2a00      	cmp	r2, #0
 800c630:	b510      	push	{r4, lr}
 800c632:	bfdc      	itt	le
 800c634:	6884      	ldrle	r4, [r0, #8]
 800c636:	1912      	addle	r2, r2, r4
 800c638:	2a01      	cmp	r2, #1
 800c63a:	dd16      	ble.n	800c66a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800c63c:	6842      	ldr	r2, [r0, #4]
 800c63e:	2424      	movs	r4, #36	@ 0x24
 800c640:	fb04 2303 	mla	r3, r4, r3, r2
 800c644:	f101 0220 	add.w	r2, r1, #32
 800c648:	f851 4b04 	ldr.w	r4, [r1], #4
 800c64c:	f843 4b04 	str.w	r4, [r3], #4
 800c650:	4291      	cmp	r1, r2
 800c652:	d1f9      	bne.n	800c648 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800c654:	780a      	ldrb	r2, [r1, #0]
 800c656:	701a      	strb	r2, [r3, #0]
 800c658:	68c3      	ldr	r3, [r0, #12]
 800c65a:	6882      	ldr	r2, [r0, #8]
 800c65c:	f3bf 8f5b 	dmb	ish
 800c660:	3301      	adds	r3, #1
 800c662:	429a      	cmp	r2, r3
 800c664:	bfd8      	it	le
 800c666:	1a9b      	suble	r3, r3, r2
 800c668:	60c3      	str	r3, [r0, #12]
 800c66a:	bd10      	pop	{r4, pc}

0800c66c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800c66c:	6903      	ldr	r3, [r0, #16]
 800c66e:	6882      	ldr	r2, [r0, #8]
 800c670:	f3bf 8f5b 	dmb	ish
 800c674:	3301      	adds	r3, #1
 800c676:	429a      	cmp	r2, r3
 800c678:	bfd8      	it	le
 800c67a:	1a9b      	suble	r3, r3, r2
 800c67c:	6103      	str	r3, [r0, #16]
 800c67e:	4770      	bx	lr

0800c680 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800c680:	b570      	push	{r4, r5, r6, lr}
 800c682:	4604      	mov	r4, r0
 800c684:	460e      	mov	r6, r1
 800c686:	6860      	ldr	r0, [r4, #4]
 800c688:	6803      	ldr	r3, [r0, #0]
 800c68a:	685b      	ldr	r3, [r3, #4]
 800c68c:	4798      	blx	r3
 800c68e:	2800      	cmp	r0, #0
 800c690:	d1f9      	bne.n	800c686 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800c692:	4d0d      	ldr	r5, [pc, #52]	@ (800c6c8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800c694:	6828      	ldr	r0, [r5, #0]
 800c696:	6803      	ldr	r3, [r0, #0]
 800c698:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800c69c:	4798      	blx	r3
 800c69e:	f7f4 fa89 	bl	8000bb4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800c6a2:	6828      	ldr	r0, [r5, #0]
 800c6a4:	2101      	movs	r1, #1
 800c6a6:	f7ff ff13 	bl	800c4d0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800c6aa:	6860      	ldr	r0, [r4, #4]
 800c6ac:	6803      	ldr	r3, [r0, #0]
 800c6ae:	4631      	mov	r1, r6
 800c6b0:	689b      	ldr	r3, [r3, #8]
 800c6b2:	4798      	blx	r3
 800c6b4:	6823      	ldr	r3, [r4, #0]
 800c6b6:	4620      	mov	r0, r4
 800c6b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c6ba:	4798      	blx	r3
 800c6bc:	6828      	ldr	r0, [r5, #0]
 800c6be:	6803      	ldr	r3, [r0, #0]
 800c6c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c6c4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800c6c6:	4718      	bx	r3
 800c6c8:	20013b6c 	.word	0x20013b6c

0800c6cc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800c6cc:	b508      	push	{r3, lr}
 800c6ce:	f7f4 fa63 	bl	8000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c6d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c6d6:	f7f4 ba67 	b.w	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c6da <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800c6da:	b510      	push	{r4, lr}
 800c6dc:	2114      	movs	r1, #20
 800c6de:	4604      	mov	r4, r0
 800c6e0:	f016 ffc1 	bl	8023666 <_ZdlPvj>
 800c6e4:	4620      	mov	r0, r4
 800c6e6:	bd10      	pop	{r4, pc}

0800c6e8 <_ZN8touchgfx13DMA_Interface5startEv>:
 800c6e8:	b510      	push	{r4, lr}
 800c6ea:	4604      	mov	r4, r0
 800c6ec:	6840      	ldr	r0, [r0, #4]
 800c6ee:	6803      	ldr	r3, [r0, #0]
 800c6f0:	681b      	ldr	r3, [r3, #0]
 800c6f2:	4798      	blx	r3
 800c6f4:	b948      	cbnz	r0, 800c70a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c6f6:	7a63      	ldrb	r3, [r4, #9]
 800c6f8:	b13b      	cbz	r3, 800c70a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c6fa:	7a23      	ldrb	r3, [r4, #8]
 800c6fc:	b92b      	cbnz	r3, 800c70a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c6fe:	6823      	ldr	r3, [r4, #0]
 800c700:	4620      	mov	r0, r4
 800c702:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c704:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c708:	4718      	bx	r3
 800c70a:	bd10      	pop	{r4, pc}

0800c70c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800c70c:	b570      	push	{r4, r5, r6, lr}
 800c70e:	4604      	mov	r4, r0
 800c710:	6840      	ldr	r0, [r0, #4]
 800c712:	6803      	ldr	r3, [r0, #0]
 800c714:	681b      	ldr	r3, [r3, #0]
 800c716:	4798      	blx	r3
 800c718:	4605      	mov	r5, r0
 800c71a:	b930      	cbnz	r0, 800c72a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c71c:	7a23      	ldrb	r3, [r4, #8]
 800c71e:	b123      	cbz	r3, 800c72a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c720:	6860      	ldr	r0, [r4, #4]
 800c722:	6803      	ldr	r3, [r0, #0]
 800c724:	695b      	ldr	r3, [r3, #20]
 800c726:	4798      	blx	r3
 800c728:	7225      	strb	r5, [r4, #8]
 800c72a:	6860      	ldr	r0, [r4, #4]
 800c72c:	6803      	ldr	r3, [r0, #0]
 800c72e:	681b      	ldr	r3, [r3, #0]
 800c730:	4798      	blx	r3
 800c732:	b928      	cbnz	r0, 800c740 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800c734:	6823      	ldr	r3, [r4, #0]
 800c736:	4620      	mov	r0, r4
 800c738:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c73a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c73e:	4718      	bx	r3
 800c740:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c744:	f7f4 ba3e 	b.w	8000bc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800c748 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800c748:	b510      	push	{r4, lr}
 800c74a:	4c04      	ldr	r4, [pc, #16]	@ (800c75c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800c74c:	6082      	str	r2, [r0, #8]
 800c74e:	2200      	movs	r2, #0
 800c750:	e9c0 4100 	strd	r4, r1, [r0]
 800c754:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800c758:	bd10      	pop	{r4, pc}
 800c75a:	bf00      	nop
 800c75c:	080272f8 	.word	0x080272f8

0800c760 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800c760:	6840      	ldr	r0, [r0, #4]
 800c762:	6803      	ldr	r3, [r0, #0]
 800c764:	681b      	ldr	r3, [r3, #0]
 800c766:	4718      	bx	r3

0800c768 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800c768:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800c76c:	4f20      	ldr	r7, [pc, #128]	@ (800c7f0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800c76e:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800c772:	fb80 0101 	smull	r0, r1, r0, r1
 800c776:	fba0 bc07 	umull	fp, ip, r0, r7
 800c77a:	fb07 cc01 	mla	ip, r7, r1, ip
 800c77e:	fb0b f70c 	mul.w	r7, fp, ip
 800c782:	fbab 010b 	umull	r0, r1, fp, fp
 800c786:	461c      	mov	r4, r3
 800c788:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800c78c:	fb00 f30c 	mul.w	r3, r0, ip
 800c790:	fb0b 3301 	mla	r3, fp, r1, r3
 800c794:	fba0 010b 	umull	r0, r1, r0, fp
 800c798:	4616      	mov	r6, r2
 800c79a:	4419      	add	r1, r3
 800c79c:	a312      	add	r3, pc, #72	@ (adr r3, 800c7e8 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800c79e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c7a2:	f7f3 fd7d 	bl	80002a0 <__aeabi_ldivmod>
 800c7a6:	2ef7      	cmp	r6, #247	@ 0xf7
 800c7a8:	b290      	uxth	r0, r2
 800c7aa:	bf9e      	ittt	ls
 800c7ac:	f002 0207 	andls.w	r2, r2, #7
 800c7b0:	18b6      	addls	r6, r6, r2
 800c7b2:	b2f6      	uxtbls	r6, r6
 800c7b4:	2cfb      	cmp	r4, #251	@ 0xfb
 800c7b6:	bf9e      	ittt	ls
 800c7b8:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800c7bc:	18e4      	addls	r4, r4, r3
 800c7be:	b2e4      	uxtbls	r4, r4
 800c7c0:	2df7      	cmp	r5, #247	@ 0xf7
 800c7c2:	bf9c      	itt	ls
 800c7c4:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800c7c8:	182d      	addls	r5, r5, r0
 800c7ca:	480a      	ldr	r0, [pc, #40]	@ (800c7f4 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800c7cc:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800c7d0:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800c7d4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800c7d8:	bf98      	it	ls
 800c7da:	b2ed      	uxtbls	r5, r5
 800c7dc:	4304      	orrs	r4, r0
 800c7de:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800c7e2:	b280      	uxth	r0, r0
 800c7e4:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800c7e8:	797a8d77 	.word	0x797a8d77
 800c7ec:	00000000 	.word	0x00000000
 800c7f0:	00ec4ba7 	.word	0x00ec4ba7
 800c7f4:	fffff800 	.word	0xfffff800

0800c7f8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800c7f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7fc:	ed2d 8b02 	vpush	{d8}
 800c800:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800c804:	b087      	sub	sp, #28
 800c806:	7c41      	ldrb	r1, [r0, #17]
 800c808:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800c80c:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800c810:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800c814:	4605      	mov	r5, r0
 800c816:	2900      	cmp	r1, #0
 800c818:	f000 809a 	beq.w	800c950 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800c81c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800c820:	ed90 7a08 	vldr	s14, [r0, #32]
 800c824:	68c0      	ldr	r0, [r0, #12]
 800c826:	454a      	cmp	r2, r9
 800c828:	db25      	blt.n	800c876 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800c82a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c82e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c832:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800c836:	bfc8      	it	gt
 800c838:	2200      	movgt	r2, #0
 800c83a:	5882      	ldr	r2, [r0, r2]
 800c83c:	2100      	movs	r1, #0
 800c83e:	7c2d      	ldrb	r5, [r5, #16]
 800c840:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800c844:	0950      	lsrs	r0, r2, #5
 800c846:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800c84a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800c84e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800c852:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800c856:	2d00      	cmp	r5, #0
 800c858:	d044      	beq.n	800c8e4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800c85a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c85e:	d141      	bne.n	800c8e4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800c860:	bb61      	cbnz	r1, 800c8bc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800c862:	ea4e 0000 	orr.w	r0, lr, r0
 800c866:	ea4c 0500 	orr.w	r5, ip, r0
 800c86a:	42bc      	cmp	r4, r7
 800c86c:	f080 8217 	bcs.w	800cc9e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c870:	f824 5b02 	strh.w	r5, [r4], #2
 800c874:	e7f9      	b.n	800c86a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800c876:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800c87a:	454f      	cmp	r7, r9
 800c87c:	dc08      	bgt.n	800c890 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800c87e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c882:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c886:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800c88a:	bfd8      	it	le
 800c88c:	2200      	movle	r2, #0
 800c88e:	e7d4      	b.n	800c83a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800c890:	eba9 0202 	sub.w	r2, r9, r2
 800c894:	ee07 2a90 	vmov	s15, r2
 800c898:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c89c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c8a0:	ee67 7a87 	vmul.f32	s15, s15, s14
 800c8a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c8a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c8ac:	ee17 2a90 	vmov	r2, s15
 800c8b0:	bfd8      	it	le
 800c8b2:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800c8b6:	0092      	lsls	r2, r2, #2
 800c8b8:	5882      	ldr	r2, [r0, r2]
 800c8ba:	e7c0      	b.n	800c83e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800c8bc:	b2d5      	uxtb	r5, r2
 800c8be:	fa5f f888 	uxtb.w	r8, r8
 800c8c2:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800c8c6:	461e      	mov	r6, r3
 800c8c8:	42bc      	cmp	r4, r7
 800c8ca:	f080 81e8 	bcs.w	800cc9e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c8ce:	4630      	mov	r0, r6
 800c8d0:	9500      	str	r5, [sp, #0]
 800c8d2:	4643      	mov	r3, r8
 800c8d4:	4652      	mov	r2, sl
 800c8d6:	4649      	mov	r1, r9
 800c8d8:	f7ff ff46 	bl	800c768 <_ZN8touchgfxL10applyNoiseEiihhh>
 800c8dc:	3601      	adds	r6, #1
 800c8de:	f824 0b02 	strh.w	r0, [r4], #2
 800c8e2:	e7f1      	b.n	800c8c8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800c8e4:	0e12      	lsrs	r2, r2, #24
 800c8e6:	fb02 f20a 	mul.w	r2, r2, sl
 800c8ea:	1c53      	adds	r3, r2, #1
 800c8ec:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800c8f0:	1212      	asrs	r2, r2, #8
 800c8f2:	fb02 f50c 	mul.w	r5, r2, ip
 800c8f6:	fb02 f10e 	mul.w	r1, r2, lr
 800c8fa:	4350      	muls	r0, r2
 800c8fc:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800ccb0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800c900:	43d2      	mvns	r2, r2
 800c902:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800c906:	26ff      	movs	r6, #255	@ 0xff
 800c908:	42bc      	cmp	r4, r7
 800c90a:	f080 81c8 	bcs.w	800cc9e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800c90e:	f8b4 e000 	ldrh.w	lr, [r4]
 800c912:	ea0e 030c 	and.w	r3, lr, ip
 800c916:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800c91a:	fb02 1303 	mla	r3, r2, r3, r1
 800c91e:	fb02 0808 	mla	r8, r2, r8, r0
 800c922:	fb93 f3f6 	sdiv	r3, r3, r6
 800c926:	fb98 f8f6 	sdiv	r8, r8, r6
 800c92a:	ea03 030c 	and.w	r3, r3, ip
 800c92e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800c932:	f00e 0e1f 	and.w	lr, lr, #31
 800c936:	ea43 0308 	orr.w	r3, r3, r8
 800c93a:	fb02 5e0e 	mla	lr, r2, lr, r5
 800c93e:	fb9e fef6 	sdiv	lr, lr, r6
 800c942:	f00e 0e1f 	and.w	lr, lr, #31
 800c946:	ea43 030e 	orr.w	r3, r3, lr
 800c94a:	f824 3b02 	strh.w	r3, [r4], #2
 800c94e:	e7db      	b.n	800c908 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800c950:	7c82      	ldrb	r2, [r0, #18]
 800c952:	2a00      	cmp	r2, #0
 800c954:	d04f      	beq.n	800c9f6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800c956:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800c95a:	ee07 2a90 	vmov	s15, r2
 800c95e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c962:	ee07 3a10 	vmov	s14, r3
 800c966:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c96a:	461f      	mov	r7, r3
 800c96c:	eef4 6ae7 	vcmpe.f32	s13, s15
 800c970:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c974:	f200 8095 	bhi.w	800caa2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800c978:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800c97c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800c980:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800c984:	ee37 7a66 	vsub.f32	s14, s14, s13
 800c988:	ee06 6a90 	vmov	s13, r6
 800c98c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800c990:	68ea      	ldr	r2, [r5, #12]
 800c992:	f895 c010 	ldrb.w	ip, [r5, #16]
 800c996:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800c99a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c99e:	bf4a      	itet	mi
 800c9a0:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800c9a4:	9602      	strpl	r6, [sp, #8]
 800c9a6:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800c9aa:	ed95 7a08 	vldr	s14, [r5, #32]
 800c9ae:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800c9b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c9b6:	bfc8      	it	gt
 800c9b8:	2100      	movgt	r1, #0
 800c9ba:	5852      	ldr	r2, [r2, r1]
 800c9bc:	9902      	ldr	r1, [sp, #8]
 800c9be:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800c9c2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800c9c6:	0950      	lsrs	r0, r2, #5
 800c9c8:	9103      	str	r1, [sp, #12]
 800c9ca:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800c9ce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800c9d2:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800c9d6:	f1bc 0f00 	cmp.w	ip, #0
 800c9da:	d024      	beq.n	800ca26 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800c9dc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800c9e0:	d121      	bne.n	800ca26 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800c9e2:	ea4b 0b00 	orr.w	fp, fp, r0
 800c9e6:	ea41 010b 	orr.w	r1, r1, fp
 800c9ea:	9a03      	ldr	r2, [sp, #12]
 800c9ec:	4294      	cmp	r4, r2
 800c9ee:	d255      	bcs.n	800ca9c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800c9f0:	f824 1b02 	strh.w	r1, [r4], #2
 800c9f4:	e7f9      	b.n	800c9ea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800c9f6:	ee07 9a10 	vmov	s14, r9
 800c9fa:	edd0 7a06 	vldr	s15, [r0, #24]
 800c9fe:	edd0 6a05 	vldr	s13, [r0, #20]
 800ca02:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ca06:	ee37 7a67 	vsub.f32	s14, s14, s15
 800ca0a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800ca0e:	ed90 7a08 	vldr	s14, [r0, #32]
 800ca12:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800ca16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ca1a:	bf44      	itt	mi
 800ca1c:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800ca20:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800ca24:	e79d      	b.n	800c962 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800ca26:	0e12      	lsrs	r2, r2, #24
 800ca28:	fb02 f20a 	mul.w	r2, r2, sl
 800ca2c:	f102 0c01 	add.w	ip, r2, #1
 800ca30:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800ca34:	1212      	asrs	r2, r2, #8
 800ca36:	4350      	muls	r0, r2
 800ca38:	4351      	muls	r1, r2
 800ca3a:	fb02 fb0b 	mul.w	fp, r2, fp
 800ca3e:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800ccb0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800ca42:	9004      	str	r0, [sp, #16]
 800ca44:	43d2      	mvns	r2, r2
 800ca46:	9105      	str	r1, [sp, #20]
 800ca48:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800ca4c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800ca50:	9903      	ldr	r1, [sp, #12]
 800ca52:	428c      	cmp	r4, r1
 800ca54:	d222      	bcs.n	800ca9c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800ca56:	8820      	ldrh	r0, [r4, #0]
 800ca58:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800ca5c:	460f      	mov	r7, r1
 800ca5e:	9904      	ldr	r1, [sp, #16]
 800ca60:	ea00 0c08 	and.w	ip, r0, r8
 800ca64:	fb02 bc0c 	mla	ip, r2, ip, fp
 800ca68:	fb02 1107 	mla	r1, r2, r7, r1
 800ca6c:	fb9c fcfe 	sdiv	ip, ip, lr
 800ca70:	fb91 f1fe 	sdiv	r1, r1, lr
 800ca74:	ea0c 0c08 	and.w	ip, ip, r8
 800ca78:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800ca7c:	ea4c 0101 	orr.w	r1, ip, r1
 800ca80:	f000 0c1f 	and.w	ip, r0, #31
 800ca84:	9805      	ldr	r0, [sp, #20]
 800ca86:	fb02 0c0c 	mla	ip, r2, ip, r0
 800ca8a:	fb9c fcfe 	sdiv	ip, ip, lr
 800ca8e:	f00c 0c1f 	and.w	ip, ip, #31
 800ca92:	ea41 010c 	orr.w	r1, r1, ip
 800ca96:	f824 1b02 	strh.w	r1, [r4], #2
 800ca9a:	e7d9      	b.n	800ca50 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800ca9c:	9a02      	ldr	r2, [sp, #8]
 800ca9e:	441a      	add	r2, r3
 800caa0:	4617      	mov	r7, r2
 800caa2:	441e      	add	r6, r3
 800caa4:	b236      	sxth	r6, r6
 800caa6:	42be      	cmp	r6, r7
 800caa8:	f340 80f9 	ble.w	800cc9e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800caac:	ed95 7a07 	vldr	s14, [r5, #28]
 800cab0:	ee06 7a90 	vmov	s13, r7
 800cab4:	ee37 7a87 	vadd.f32	s14, s15, s14
 800cab8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800cabc:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800cac0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cac4:	f340 80b5 	ble.w	800cc32 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800cac8:	ee06 6a10 	vmov	s12, r6
 800cacc:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800cad0:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800cca8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800cad4:	7c2b      	ldrb	r3, [r5, #16]
 800cad6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800cada:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cade:	bfd8      	it	le
 800cae0:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800cae4:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800ccac <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800cae8:	bfd8      	it	le
 800caea:	ee17 8a10 	vmovle	r8, s14
 800caee:	ed95 7a08 	vldr	s14, [r5, #32]
 800caf2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800caf6:	bfc8      	it	gt
 800caf8:	46b0      	movgt	r8, r6
 800cafa:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800cafe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cb02:	eba8 0707 	sub.w	r7, r8, r7
 800cb06:	bfd8      	it	le
 800cb08:	eeb0 8a46 	vmovle.f32	s16, s12
 800cb0c:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800cb10:	eea7 8a27 	vfma.f32	s16, s14, s15
 800cb14:	b1db      	cbz	r3, 800cb4e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800cb16:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800cb1a:	d118      	bne.n	800cb4e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800cb1c:	42bc      	cmp	r4, r7
 800cb1e:	d262      	bcs.n	800cbe6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800cb20:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800cb24:	68eb      	ldr	r3, [r5, #12]
 800cb26:	ee17 0a90 	vmov	r0, s15
 800cb2a:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800cb2e:	b2d3      	uxtb	r3, r2
 800cb30:	9300      	str	r3, [sp, #0]
 800cb32:	4649      	mov	r1, r9
 800cb34:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800cb38:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800cb3c:	f7ff fe14 	bl	800c768 <_ZN8touchgfxL10applyNoiseEiihhh>
 800cb40:	f824 0b02 	strh.w	r0, [r4], #2
 800cb44:	edd5 7a08 	vldr	s15, [r5, #32]
 800cb48:	ee38 8a27 	vadd.f32	s16, s16, s15
 800cb4c:	e7e6      	b.n	800cb1c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800cb4e:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800ccb0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800cb52:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800cb56:	42bc      	cmp	r4, r7
 800cb58:	d245      	bcs.n	800cbe6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800cb5a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800cb5e:	68eb      	ldr	r3, [r5, #12]
 800cb60:	f8b4 e000 	ldrh.w	lr, [r4]
 800cb64:	ee17 2a90 	vmov	r2, s15
 800cb68:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800cb6c:	0e13      	lsrs	r3, r2, #24
 800cb6e:	fb03 f30a 	mul.w	r3, r3, sl
 800cb72:	1c58      	adds	r0, r3, #1
 800cb74:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800cb78:	1200      	asrs	r0, r0, #8
 800cb7a:	ea6f 0c00 	mvn.w	ip, r0
 800cb7e:	fa5f fc8c 	uxtb.w	ip, ip
 800cb82:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800cb86:	ea0e 030b 	and.w	r3, lr, fp
 800cb8a:	fb0c f303 	mul.w	r3, ip, r3
 800cb8e:	b289      	uxth	r1, r1
 800cb90:	fb00 3101 	mla	r1, r0, r1, r3
 800cb94:	fb91 f1f9 	sdiv	r1, r1, r9
 800cb98:	ea01 030b 	and.w	r3, r1, fp
 800cb9c:	9302      	str	r3, [sp, #8]
 800cb9e:	0953      	lsrs	r3, r2, #5
 800cba0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800cba4:	4619      	mov	r1, r3
 800cba6:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800cbaa:	fb0c f303 	mul.w	r3, ip, r3
 800cbae:	fb00 3301 	mla	r3, r0, r1, r3
 800cbb2:	f00e 0e1f 	and.w	lr, lr, #31
 800cbb6:	9902      	ldr	r1, [sp, #8]
 800cbb8:	fb93 f3f9 	sdiv	r3, r3, r9
 800cbbc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800cbc0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800cbc4:	fb0c fc0e 	mul.w	ip, ip, lr
 800cbc8:	4319      	orrs	r1, r3
 800cbca:	fb00 c002 	mla	r0, r0, r2, ip
 800cbce:	fb90 f0f9 	sdiv	r0, r0, r9
 800cbd2:	f000 001f 	and.w	r0, r0, #31
 800cbd6:	4301      	orrs	r1, r0
 800cbd8:	f824 1b02 	strh.w	r1, [r4], #2
 800cbdc:	edd5 7a08 	vldr	s15, [r5, #32]
 800cbe0:	ee38 8a27 	vadd.f32	s16, s16, s15
 800cbe4:	e7b7      	b.n	800cb56 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800cbe6:	4546      	cmp	r6, r8
 800cbe8:	dd59      	ble.n	800cc9e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800cbea:	edd5 7a08 	vldr	s15, [r5, #32]
 800cbee:	68ea      	ldr	r2, [r5, #12]
 800cbf0:	7c29      	ldrb	r1, [r5, #16]
 800cbf2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800cbf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cbfa:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800cbfe:	bfd8      	it	le
 800cc00:	2300      	movle	r3, #0
 800cc02:	eba6 0608 	sub.w	r6, r6, r8
 800cc06:	58d2      	ldr	r2, [r2, r3]
 800cc08:	0a10      	lsrs	r0, r2, #8
 800cc0a:	0953      	lsrs	r3, r2, #5
 800cc0c:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800cc10:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800cc14:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800cc18:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800cc1c:	b159      	cbz	r1, 800cc36 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800cc1e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800cc22:	d108      	bne.n	800cc36 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800cc24:	4318      	orrs	r0, r3
 800cc26:	4338      	orrs	r0, r7
 800cc28:	42b4      	cmp	r4, r6
 800cc2a:	d238      	bcs.n	800cc9e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800cc2c:	f824 0b02 	strh.w	r0, [r4], #2
 800cc30:	e7fa      	b.n	800cc28 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800cc32:	46b8      	mov	r8, r7
 800cc34:	e7d9      	b.n	800cbea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800cc36:	0e12      	lsrs	r2, r2, #24
 800cc38:	fb02 f10a 	mul.w	r1, r2, sl
 800cc3c:	1c4a      	adds	r2, r1, #1
 800cc3e:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800cc42:	1212      	asrs	r2, r2, #8
 800cc44:	fb02 f507 	mul.w	r5, r2, r7
 800cc48:	4350      	muls	r0, r2
 800cc4a:	4353      	muls	r3, r2
 800cc4c:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800ccb0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800cc50:	43d2      	mvns	r2, r2
 800cc52:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800cc56:	27ff      	movs	r7, #255	@ 0xff
 800cc58:	42b4      	cmp	r4, r6
 800cc5a:	d220      	bcs.n	800cc9e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800cc5c:	f8b4 e000 	ldrh.w	lr, [r4]
 800cc60:	ea0e 010c 	and.w	r1, lr, ip
 800cc64:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800cc68:	fb02 0101 	mla	r1, r2, r1, r0
 800cc6c:	fb02 3808 	mla	r8, r2, r8, r3
 800cc70:	fb91 f1f7 	sdiv	r1, r1, r7
 800cc74:	fb98 f8f7 	sdiv	r8, r8, r7
 800cc78:	ea01 010c 	and.w	r1, r1, ip
 800cc7c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800cc80:	f00e 0e1f 	and.w	lr, lr, #31
 800cc84:	ea41 0108 	orr.w	r1, r1, r8
 800cc88:	fb02 5e0e 	mla	lr, r2, lr, r5
 800cc8c:	fb9e fef7 	sdiv	lr, lr, r7
 800cc90:	f00e 0e1f 	and.w	lr, lr, #31
 800cc94:	ea41 010e 	orr.w	r1, r1, lr
 800cc98:	f824 1b02 	strh.w	r1, [r4], #2
 800cc9c:	e7dc      	b.n	800cc58 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800cc9e:	b007      	add	sp, #28
 800cca0:	ecbd 8b02 	vpop	{d8}
 800cca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cca8:	00000000 	.word	0x00000000
 800ccac:	447ffffe 	.word	0x447ffffe
 800ccb0:	fffff800 	.word	0xfffff800

0800ccb4 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800ccb4:	4770      	bx	lr

0800ccb6 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800ccb6:	4770      	bx	lr

0800ccb8 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800ccb8:	b510      	push	{r4, lr}
 800ccba:	2124      	movs	r1, #36	@ 0x24
 800ccbc:	4604      	mov	r4, r0
 800ccbe:	f016 fcd2 	bl	8023666 <_ZdlPvj>
 800ccc2:	4620      	mov	r0, r4
 800ccc4:	bd10      	pop	{r4, pc}
	...

0800ccc8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800ccc8:	4b06      	ldr	r3, [pc, #24]	@ (800cce4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800ccca:	60c1      	str	r1, [r0, #12]
 800cccc:	094a      	lsrs	r2, r1, #5
 800ccce:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800ccd2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800ccd6:	4313      	orrs	r3, r2
 800ccd8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800ccdc:	4319      	orrs	r1, r3
 800ccde:	8201      	strh	r1, [r0, #16]
 800cce0:	4770      	bx	lr
 800cce2:	bf00      	nop
 800cce4:	fffff800 	.word	0xfffff800

0800cce8 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800cce8:	f1a0 0008 	sub.w	r0, r0, #8
 800ccec:	e7ec      	b.n	800ccc8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800ccee:	bf00      	nop

0800ccf0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800ccf0:	b508      	push	{r3, lr}
 800ccf2:	4b05      	ldr	r3, [pc, #20]	@ (800cd08 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800ccf4:	6818      	ldr	r0, [r3, #0]
 800ccf6:	6803      	ldr	r3, [r0, #0]
 800ccf8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800ccfc:	4798      	blx	r3
 800ccfe:	1e43      	subs	r3, r0, #1
 800cd00:	4258      	negs	r0, r3
 800cd02:	4158      	adcs	r0, r3
 800cd04:	bd08      	pop	{r3, pc}
 800cd06:	bf00      	nop
 800cd08:	20013b6c 	.word	0x20013b6c

0800cd0c <_ZN8touchgfx13PainterRGB565D1Ev>:
 800cd0c:	4770      	bx	lr

0800cd0e <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800cd0e:	3808      	subs	r0, #8
 800cd10:	4770      	bx	lr

0800cd12 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800cd12:	b430      	push	{r4, r5}
 800cd14:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800cd18:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800cd1c:	8a02      	ldrh	r2, [r0, #16]
 800cd1e:	9202      	str	r2, [sp, #8]
 800cd20:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800cd24:	68c2      	ldr	r2, [r0, #12]
 800cd26:	4629      	mov	r1, r5
 800cd28:	4620      	mov	r0, r4
 800cd2a:	bc30      	pop	{r4, r5}
 800cd2c:	f7f4 b912 	b.w	8000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800cd30 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800cd30:	f7f4 b904 	b.w	8000f3c <_ZN8touchgfx5paint8tearDownEv>

0800cd34 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800cd34:	b510      	push	{r4, lr}
 800cd36:	2114      	movs	r1, #20
 800cd38:	4604      	mov	r4, r0
 800cd3a:	f016 fc94 	bl	8023666 <_ZdlPvj>
 800cd3e:	4620      	mov	r0, r4
 800cd40:	bd10      	pop	{r4, pc}

0800cd42 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800cd42:	f1a0 0008 	sub.w	r0, r0, #8
 800cd46:	e7f5      	b.n	800cd34 <_ZN8touchgfx13PainterRGB565D0Ev>

0800cd48 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800cd48:	2300      	movs	r3, #0
 800cd4a:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800cd4c:	8503      	strh	r3, [r0, #40]	@ 0x28
 800cd4e:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800cd50:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800cd52:	6980      	ldr	r0, [r0, #24]
 800cd54:	b110      	cbz	r0, 800cd5c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800cd56:	6803      	ldr	r3, [r0, #0]
 800cd58:	691b      	ldr	r3, [r3, #16]
 800cd5a:	4718      	bx	r3
 800cd5c:	4770      	bx	lr

0800cd5e <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800cd5e:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800cd62:	4770      	bx	lr

0800cd64 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800cd64:	b538      	push	{r3, r4, r5, lr}
 800cd66:	0e0b      	lsrs	r3, r1, #24
 800cd68:	7783      	strb	r3, [r0, #30]
 800cd6a:	6803      	ldr	r3, [r0, #0]
 800cd6c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800cd6e:	4604      	mov	r4, r0
 800cd70:	460d      	mov	r5, r1
 800cd72:	4798      	blx	r3
 800cd74:	6803      	ldr	r3, [r0, #0]
 800cd76:	4629      	mov	r1, r5
 800cd78:	689b      	ldr	r3, [r3, #8]
 800cd7a:	4798      	blx	r3
 800cd7c:	6823      	ldr	r3, [r4, #0]
 800cd7e:	4620      	mov	r0, r4
 800cd80:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800cd82:	4798      	blx	r3
 800cd84:	61a0      	str	r0, [r4, #24]
 800cd86:	bd38      	pop	{r3, r4, r5, pc}

0800cd88 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800cd88:	7741      	strb	r1, [r0, #29]
 800cd8a:	4770      	bx	lr

0800cd8c <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800cd8c:	b530      	push	{r4, r5, lr}
 800cd8e:	460d      	mov	r5, r1
 800cd90:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800cd94:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800cd96:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800cd98:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800cd9a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800cd9c:	682b      	ldr	r3, [r5, #0]
 800cd9e:	6023      	str	r3, [r4, #0]
 800cda0:	bd30      	pop	{r4, r5, pc}

0800cda2 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800cda2:	b538      	push	{r3, r4, r5, lr}
 800cda4:	4604      	mov	r4, r0
 800cda6:	1d03      	adds	r3, r0, #4
 800cda8:	6808      	ldr	r0, [r1, #0]
 800cdaa:	6849      	ldr	r1, [r1, #4]
 800cdac:	c303      	stmia	r3!, {r0, r1}
 800cdae:	6813      	ldr	r3, [r2, #0]
 800cdb0:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800cdb4:	6853      	ldr	r3, [r2, #4]
 800cdb6:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800cdba:	2500      	movs	r5, #0
 800cdbc:	61a5      	str	r5, [r4, #24]
 800cdbe:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800cdc2:	f005 ff21 	bl	8012c08 <_ZN8touchgfx9Matrix3x35resetEv>
 800cdc6:	23ff      	movs	r3, #255	@ 0xff
 800cdc8:	7763      	strb	r3, [r4, #29]
 800cdca:	77a3      	strb	r3, [r4, #30]
 800cdcc:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800cdd0:	6323      	str	r3, [r4, #48]	@ 0x30
 800cdd2:	2301      	movs	r3, #1
 800cdd4:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800cdd8:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800cddc:	bd38      	pop	{r3, r4, r5, pc}
	...

0800cde0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800cde0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cde4:	ed2d 8b0a 	vpush	{d8-d12}
 800cde8:	ee70 7a41 	vsub.f32	s15, s0, s2
 800cdec:	b087      	sub	sp, #28
 800cdee:	eef5 7a40 	vcmp.f32	s15, #0.0
 800cdf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cdf6:	4605      	mov	r5, r0
 800cdf8:	eef0 9a40 	vmov.f32	s19, s0
 800cdfc:	eeb0 aa60 	vmov.f32	s20, s1
 800ce00:	eeb0 9a41 	vmov.f32	s18, s2
 800ce04:	eef0 8a61 	vmov.f32	s17, s3
 800ce08:	eeb0 ca42 	vmov.f32	s24, s4
 800ce0c:	eef0 ca62 	vmov.f32	s25, s5
 800ce10:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800ce14:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 800ce16:	6802      	ldr	r2, [r0, #0]
 800ce18:	d112      	bne.n	800ce40 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800ce1a:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800ce1e:	eef5 7a40 	vcmp.f32	s15, #0.0
 800ce22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ce26:	d10b      	bne.n	800ce40 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800ce28:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800ce2c:	3901      	subs	r1, #1
 800ce2e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800ce30:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800ce34:	b007      	add	sp, #28
 800ce36:	ecbd 8b0a 	vpop	{d8-d12}
 800ce3a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce3e:	4710      	bx	r2
 800ce40:	23ff      	movs	r3, #255	@ 0xff
 800ce42:	77ab      	strb	r3, [r5, #30]
 800ce44:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800ce46:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 800d10c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 800ce4a:	4628      	mov	r0, r5
 800ce4c:	4798      	blx	r3
 800ce4e:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800ce52:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800ce56:	80c3      	strh	r3, [r0, #6]
 800ce58:	eef0 0a4a 	vmov.f32	s1, s20
 800ce5c:	eeb0 0a69 	vmov.f32	s0, s19
 800ce60:	4604      	mov	r4, r0
 800ce62:	4640      	mov	r0, r8
 800ce64:	f005 ff7f 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ce68:	4640      	mov	r0, r8
 800ce6a:	eeb0 ba40 	vmov.f32	s22, s0
 800ce6e:	eef0 ba60 	vmov.f32	s23, s1
 800ce72:	ed8d 0a00 	vstr	s0, [sp]
 800ce76:	edcd 0a01 	vstr	s1, [sp, #4]
 800ce7a:	eeb0 0a49 	vmov.f32	s0, s18
 800ce7e:	eef0 0a68 	vmov.f32	s1, s17
 800ce82:	f005 ff70 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ce86:	eeb4 ba40 	vcmp.f32	s22, s0
 800ce8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ce8e:	eef4 ba60 	vcmp.f32	s23, s1
 800ce92:	bf0c      	ite	eq
 800ce94:	2301      	moveq	r3, #1
 800ce96:	2300      	movne	r3, #0
 800ce98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ce9c:	eeb4 ba40 	vcmp.f32	s22, s0
 800cea0:	7463      	strb	r3, [r4, #17]
 800cea2:	bf0c      	ite	eq
 800cea4:	2301      	moveq	r3, #1
 800cea6:	2300      	movne	r3, #0
 800cea8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ceac:	eeb0 8a40 	vmov.f32	s16, s0
 800ceb0:	eef0 aa60 	vmov.f32	s21, s1
 800ceb4:	ed8d 0a02 	vstr	s0, [sp, #8]
 800ceb8:	edcd 0a03 	vstr	s1, [sp, #12]
 800cebc:	74a3      	strb	r3, [r4, #18]
 800cebe:	d030      	beq.n	800cf22 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800cec0:	eef4 ba60 	vcmp.f32	s23, s1
 800cec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cec8:	d02b      	beq.n	800cf22 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800ceca:	ee39 9a69 	vsub.f32	s18, s18, s19
 800cece:	ee78 8aca 	vsub.f32	s17, s17, s20
 800ced2:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 800ced6:	4640      	mov	r0, r8
 800ced8:	eec8 7aac 	vdiv.f32	s15, s17, s25
 800cedc:	eef0 0a4a 	vmov.f32	s1, s20
 800cee0:	eeb0 0a69 	vmov.f32	s0, s19
 800cee4:	eea7 0acc 	vfms.f32	s0, s15, s24
 800cee8:	eeec 0a87 	vfma.f32	s1, s25, s14
 800ceec:	f005 ff3b 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800cef0:	f899 3000 	ldrb.w	r3, [r9]
 800cef4:	edcd 0a05 	vstr	s1, [sp, #20]
 800cef8:	ee70 0aeb 	vsub.f32	s1, s1, s23
 800cefc:	2b01      	cmp	r3, #1
 800cefe:	ed8d 0a04 	vstr	s0, [sp, #16]
 800cf02:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800cf06:	bf02      	ittt	eq
 800cf08:	eef1 7a60 	vnegeq.f32	s15, s1
 800cf0c:	eef0 0a40 	vmoveq.f32	s1, s0
 800cf10:	eeb0 0a67 	vmoveq.f32	s0, s15
 800cf14:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800cf18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf1c:	d134      	bne.n	800cf88 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 800cf1e:	2301      	movs	r3, #1
 800cf20:	74a3      	strb	r3, [r4, #18]
 800cf22:	f899 2000 	ldrb.w	r2, [r9]
 800cf26:	7c63      	ldrb	r3, [r4, #17]
 800cf28:	2a01      	cmp	r2, #1
 800cf2a:	f040 80a3 	bne.w	800d074 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 800cf2e:	2b00      	cmp	r3, #0
 800cf30:	d072      	beq.n	800d018 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 800cf32:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800cf36:	eddf 6a73 	vldr	s13, [pc, #460]	@ 800d104 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800cf3a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800cf3e:	eef4 baea 	vcmpe.f32	s23, s21
 800cf42:	edc4 7a08 	vstr	s15, [r4, #32]
 800cf46:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800cf4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf4e:	ee17 3a90 	vmov	r3, s15
 800cf52:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800cf56:	b21a      	sxth	r2, r3
 800cf58:	ee17 3a90 	vmov	r3, s15
 800cf5c:	b21b      	sxth	r3, r3
 800cf5e:	bf47      	ittee	mi
 800cf60:	8123      	strhmi	r3, [r4, #8]
 800cf62:	8162      	strhmi	r2, [r4, #10]
 800cf64:	8122      	strhpl	r2, [r4, #8]
 800cf66:	8163      	strhpl	r3, [r4, #10]
 800cf68:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800cf6c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800cf70:	1a9b      	subs	r3, r3, r2
 800cf72:	ee07 3a90 	vmov	s15, r3
 800cf76:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800cf7a:	2300      	movs	r3, #0
 800cf7c:	7463      	strb	r3, [r4, #17]
 800cf7e:	edc4 7a07 	vstr	s15, [r4, #28]
 800cf82:	2301      	movs	r3, #1
 800cf84:	74a3      	strb	r3, [r4, #18]
 800cf86:	e03f      	b.n	800d008 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800cf88:	ee80 7a80 	vdiv.f32	s14, s1, s0
 800cf8c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800cf90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cf94:	ed84 7a05 	vstr	s14, [r4, #20]
 800cf98:	d102      	bne.n	800cfa0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 800cf9a:	2301      	movs	r3, #1
 800cf9c:	7463      	strb	r3, [r4, #17]
 800cf9e:	e7c0      	b.n	800cf22 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800cfa0:	2b01      	cmp	r3, #1
 800cfa2:	bf03      	ittte	eq
 800cfa4:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 800cfa8:	ee07 2a90 	vmoveq	s15, r2
 800cfac:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 800cfb0:	eef0 7a6b 	vmovne.f32	s15, s23
 800cfb4:	bf0a      	itet	eq
 800cfb6:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 800cfba:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 800cfbe:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 800cfc2:	2b01      	cmp	r3, #1
 800cfc4:	ee38 8a4b 	vsub.f32	s16, s16, s22
 800cfc8:	ee7a aaeb 	vsub.f32	s21, s21, s23
 800cfcc:	edc4 7a06 	vstr	s15, [r4, #24]
 800cfd0:	bf02      	ittt	eq
 800cfd2:	eef1 7a48 	vnegeq.f32	s15, s16
 800cfd6:	eeb0 8a6a 	vmoveq.f32	s16, s21
 800cfda:	eef0 aa67 	vmoveq.f32	s21, s15
 800cfde:	eeca 7a87 	vdiv.f32	s15, s21, s14
 800cfe2:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 800d108 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 800cfe6:	ee38 8a67 	vsub.f32	s16, s16, s15
 800cfea:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800cfee:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800cff2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800cff6:	ed84 8a07 	vstr	s16, [r4, #28]
 800cffa:	edc4 7a08 	vstr	s15, [r4, #32]
 800cffe:	d503      	bpl.n	800d008 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800d000:	eeb1 8a48 	vneg.f32	s16, s16
 800d004:	ed84 8a07 	vstr	s16, [r4, #28]
 800d008:	60e7      	str	r7, [r4, #12]
 800d00a:	7426      	strb	r6, [r4, #16]
 800d00c:	61ac      	str	r4, [r5, #24]
 800d00e:	b007      	add	sp, #28
 800d010:	ecbd 8b0a 	vpop	{d8-d12}
 800d014:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d018:	7ca3      	ldrb	r3, [r4, #18]
 800d01a:	2b00      	cmp	r3, #0
 800d01c:	d0f4      	beq.n	800d008 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800d01e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d022:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800d104 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800d026:	ee00 3a10 	vmov	s0, r3
 800d02a:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800d02e:	ee30 8a48 	vsub.f32	s16, s0, s16
 800d032:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800d036:	ee38 7a40 	vsub.f32	s14, s16, s0
 800d03a:	eeb4 8ac0 	vcmpe.f32	s16, s0
 800d03e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800d042:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d046:	edc4 7a08 	vstr	s15, [r4, #32]
 800d04a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800d04e:	ee17 3a90 	vmov	r3, s15
 800d052:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800d056:	b21a      	sxth	r2, r3
 800d058:	ee17 3a90 	vmov	r3, s15
 800d05c:	b21b      	sxth	r3, r3
 800d05e:	bfcc      	ite	gt
 800d060:	8123      	strhgt	r3, [r4, #8]
 800d062:	8163      	strhle	r3, [r4, #10]
 800d064:	f04f 0301 	mov.w	r3, #1
 800d068:	7463      	strb	r3, [r4, #17]
 800d06a:	bfcc      	ite	gt
 800d06c:	8162      	strhgt	r2, [r4, #10]
 800d06e:	8122      	strhle	r2, [r4, #8]
 800d070:	2300      	movs	r3, #0
 800d072:	e787      	b.n	800cf84 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 800d074:	b1db      	cbz	r3, 800d0ae <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 800d076:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800d07a:	eddf 6a22 	vldr	s13, [pc, #136]	@ 800d104 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800d07e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800d082:	eef4 baea 	vcmpe.f32	s23, s21
 800d086:	edc4 7a08 	vstr	s15, [r4, #32]
 800d08a:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800d08e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d092:	ee17 3a90 	vmov	r3, s15
 800d096:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800d09a:	b21a      	sxth	r2, r3
 800d09c:	ee17 3a90 	vmov	r3, s15
 800d0a0:	b21b      	sxth	r3, r3
 800d0a2:	bf47      	ittee	mi
 800d0a4:	8123      	strhmi	r3, [r4, #8]
 800d0a6:	8162      	strhmi	r2, [r4, #10]
 800d0a8:	8122      	strhpl	r2, [r4, #8]
 800d0aa:	8163      	strhpl	r3, [r4, #10]
 800d0ac:	e7ac      	b.n	800d008 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800d0ae:	7ca3      	ldrb	r3, [r4, #18]
 800d0b0:	2b00      	cmp	r3, #0
 800d0b2:	d0a9      	beq.n	800d008 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800d0b4:	ee38 7a4b 	vsub.f32	s14, s16, s22
 800d0b8:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800d104 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800d0bc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800d0c0:	eeb4 bac8 	vcmpe.f32	s22, s16
 800d0c4:	edc4 7a08 	vstr	s15, [r4, #32]
 800d0c8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800d0cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d0d0:	ee17 3a90 	vmov	r3, s15
 800d0d4:	eefd 7acb 	vcvt.s32.f32	s15, s22
 800d0d8:	b21a      	sxth	r2, r3
 800d0da:	ee17 3a90 	vmov	r3, s15
 800d0de:	b21b      	sxth	r3, r3
 800d0e0:	bf47      	ittee	mi
 800d0e2:	8123      	strhmi	r3, [r4, #8]
 800d0e4:	8162      	strhmi	r2, [r4, #10]
 800d0e6:	8122      	strhpl	r2, [r4, #8]
 800d0e8:	8163      	strhpl	r3, [r4, #10]
 800d0ea:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d0ee:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800d0f2:	1a9b      	subs	r3, r3, r2
 800d0f4:	ee07 3a90 	vmov	s15, r3
 800d0f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d0fc:	edc4 7a07 	vstr	s15, [r4, #28]
 800d100:	e782      	b.n	800d008 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800d102:	bf00      	nop
 800d104:	447ffffe 	.word	0x447ffffe
 800d108:	44800000 	.word	0x44800000
 800d10c:	20013b62 	.word	0x20013b62

0800d110 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800d110:	b510      	push	{r4, lr}
 800d112:	2100      	movs	r1, #0
 800d114:	ed2d 8b02 	vpush	{d8}
 800d118:	eef0 8a62 	vmov.f32	s17, s5
 800d11c:	4604      	mov	r4, r0
 800d11e:	eeb0 8a42 	vmov.f32	s16, s4
 800d122:	f016 f82f 	bl	8023184 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800d126:	eef0 7a68 	vmov.f32	s15, s17
 800d12a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d12e:	6823      	ldr	r3, [r4, #0]
 800d130:	ee17 2a90 	vmov	r2, s15
 800d134:	eef0 7a48 	vmov.f32	s15, s16
 800d138:	ecbd 8b02 	vpop	{d8}
 800d13c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d140:	4620      	mov	r0, r4
 800d142:	689b      	ldr	r3, [r3, #8]
 800d144:	ee17 1a90 	vmov	r1, s15
 800d148:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d14c:	4718      	bx	r3

0800d14e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800d14e:	b510      	push	{r4, lr}
 800d150:	2100      	movs	r1, #0
 800d152:	ed2d 8b02 	vpush	{d8}
 800d156:	eef0 8a63 	vmov.f32	s17, s7
 800d15a:	4604      	mov	r4, r0
 800d15c:	eeb0 8a43 	vmov.f32	s16, s6
 800d160:	f016 f8d2 	bl	8023308 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800d164:	eef0 7a68 	vmov.f32	s15, s17
 800d168:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d16c:	6823      	ldr	r3, [r4, #0]
 800d16e:	ee17 2a90 	vmov	r2, s15
 800d172:	eef0 7a48 	vmov.f32	s15, s16
 800d176:	ecbd 8b02 	vpop	{d8}
 800d17a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d17e:	4620      	mov	r0, r4
 800d180:	689b      	ldr	r3, [r3, #8]
 800d182:	ee17 1a90 	vmov	r1, s15
 800d186:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d18a:	4718      	bx	r3

0800d18c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800d18c:	b513      	push	{r0, r1, r4, lr}
 800d18e:	4604      	mov	r4, r0
 800d190:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800d192:	f005 fde8 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d196:	eef0 7a60 	vmov.f32	s15, s1
 800d19a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d19e:	4620      	mov	r0, r4
 800d1a0:	ee17 2a90 	vmov	r2, s15
 800d1a4:	eef0 7a40 	vmov.f32	s15, s0
 800d1a8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d1ac:	ee17 1a90 	vmov	r1, s15
 800d1b0:	b002      	add	sp, #8
 800d1b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d1b6:	f015 bf3f 	b.w	8023038 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800d1ba:	b513      	push	{r0, r1, r4, lr}
 800d1bc:	4604      	mov	r4, r0
 800d1be:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800d1c0:	f005 fdd1 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800d1c4:	eef0 7a60 	vmov.f32	s15, s1
 800d1c8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d1cc:	4620      	mov	r0, r4
 800d1ce:	ee17 2a90 	vmov	r2, s15
 800d1d2:	eef0 7a40 	vmov.f32	s15, s0
 800d1d6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d1da:	ee17 1a90 	vmov	r1, s15
 800d1de:	b002      	add	sp, #8
 800d1e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d1e4:	f015 bf75 	b.w	80230d2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800d1e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800d1e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d1ea:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800d1ee:	2400      	movs	r4, #0
 800d1f0:	9f07      	ldr	r7, [sp, #28]
 800d1f2:	4463      	add	r3, ip
 800d1f4:	4626      	mov	r6, r4
 800d1f6:	f04f 0e01 	mov.w	lr, #1
 800d1fa:	4563      	cmp	r3, ip
 800d1fc:	d02d      	beq.n	800d25a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800d1fe:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800d202:	2d06      	cmp	r5, #6
 800d204:	d8f9      	bhi.n	800d1fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800d206:	fa0e f505 	lsl.w	r5, lr, r5
 800d20a:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800d20e:	d10d      	bne.n	800d22c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800d210:	f015 0f10 	tst.w	r5, #16
 800d214:	d117      	bne.n	800d246 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800d216:	072d      	lsls	r5, r5, #28
 800d218:	d5ef      	bpl.n	800d1fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800d21a:	3801      	subs	r0, #1
 800d21c:	b91e      	cbnz	r6, 800d226 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800d21e:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800d222:	682d      	ldr	r5, [r5, #0]
 800d224:	600d      	str	r5, [r1, #0]
 800d226:	b96c      	cbnz	r4, 800d244 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800d228:	2601      	movs	r6, #1
 800d22a:	e7e6      	b.n	800d1fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800d22c:	b926      	cbnz	r6, 800d238 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800d22e:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800d232:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800d236:	600b      	str	r3, [r1, #0]
 800d238:	b924      	cbnz	r4, 800d244 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800d23a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800d23e:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d242:	6013      	str	r3, [r2, #0]
 800d244:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d246:	3801      	subs	r0, #1
 800d248:	b91c      	cbnz	r4, 800d252 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800d24a:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800d24e:	6824      	ldr	r4, [r4, #0]
 800d250:	6014      	str	r4, [r2, #0]
 800d252:	2e00      	cmp	r6, #0
 800d254:	d1f6      	bne.n	800d244 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800d256:	2401      	movs	r4, #1
 800d258:	e7cf      	b.n	800d1fa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800d25a:	b90e      	cbnz	r6, 800d260 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800d25c:	2300      	movs	r3, #0
 800d25e:	600b      	str	r3, [r1, #0]
 800d260:	2c00      	cmp	r4, #0
 800d262:	d1ef      	bne.n	800d244 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800d264:	2300      	movs	r3, #0
 800d266:	e7ec      	b.n	800d242 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800d268 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800d268:	b538      	push	{r3, r4, r5, lr}
 800d26a:	4604      	mov	r4, r0
 800d26c:	ed2d 8b0a 	vpush	{d8-d12}
 800d270:	460d      	mov	r5, r1
 800d272:	eef0 ba40 	vmov.f32	s23, s0
 800d276:	eeb0 ca60 	vmov.f32	s24, s1
 800d27a:	eef0 aa41 	vmov.f32	s21, s2
 800d27e:	eeb0 ba61 	vmov.f32	s22, s3
 800d282:	eeb0 9a42 	vmov.f32	s18, s4
 800d286:	eef0 9a62 	vmov.f32	s19, s5
 800d28a:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800d28e:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800d292:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800d296:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800d29a:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800d29e:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800d2a2:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800d2a6:	ee20 0a00 	vmul.f32	s0, s0, s0
 800d2aa:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800d2ae:	f016 fa05 	bl	80236bc <sqrtf>
 800d2b2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800d2b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d2ba:	d12e      	bne.n	800d31a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800d2bc:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800d2c0:	ee39 7acb 	vsub.f32	s14, s19, s22
 800d2c4:	eeb0 8a6a 	vmov.f32	s16, s21
 800d2c8:	eef0 8a4b 	vmov.f32	s17, s22
 800d2cc:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800d2d0:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800d2d4:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800d2d8:	eee7 8aca 	vfms.f32	s17, s15, s20
 800d2dc:	2d02      	cmp	r5, #2
 800d2de:	dc2f      	bgt.n	800d340 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800d2e0:	3501      	adds	r5, #1
 800d2e2:	eef0 1a4b 	vmov.f32	s3, s22
 800d2e6:	eeb0 1a6a 	vmov.f32	s2, s21
 800d2ea:	4629      	mov	r1, r5
 800d2ec:	eef0 2a68 	vmov.f32	s5, s17
 800d2f0:	eeb0 2a48 	vmov.f32	s4, s16
 800d2f4:	eef0 0a4c 	vmov.f32	s1, s24
 800d2f8:	eeb0 0a6b 	vmov.f32	s0, s23
 800d2fc:	4620      	mov	r0, r4
 800d2fe:	f7ff ffb3 	bl	800d268 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800d302:	eef0 0a68 	vmov.f32	s1, s17
 800d306:	eeb0 0a48 	vmov.f32	s0, s16
 800d30a:	4620      	mov	r0, r4
 800d30c:	f7ff ff55 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d310:	eeb0 ba68 	vmov.f32	s22, s17
 800d314:	eef0 aa48 	vmov.f32	s21, s16
 800d318:	e7b9      	b.n	800d28e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800d31a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800d31e:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800d322:	ee78 8acc 	vsub.f32	s17, s17, s24
 800d326:	ee28 7a27 	vmul.f32	s14, s16, s15
 800d32a:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800d32e:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800d332:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800d336:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800d33a:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800d33e:	e7cd      	b.n	800d2dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800d340:	eef0 0a68 	vmov.f32	s1, s17
 800d344:	eeb0 0a48 	vmov.f32	s0, s16
 800d348:	4620      	mov	r0, r4
 800d34a:	f7ff ff36 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d34e:	ecbd 8b0a 	vpop	{d8-d12}
 800d352:	bd38      	pop	{r3, r4, r5, pc}

0800d354 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800d354:	b510      	push	{r4, lr}
 800d356:	ed2d 8b0a 	vpush	{d8-d12}
 800d35a:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800d35e:	2b02      	cmp	r3, #2
 800d360:	4604      	mov	r4, r0
 800d362:	eeb0 ca40 	vmov.f32	s24, s0
 800d366:	eeb0 9a60 	vmov.f32	s18, s1
 800d36a:	eef0 9a41 	vmov.f32	s19, s2
 800d36e:	eef0 8a61 	vmov.f32	s17, s3
 800d372:	eeb0 ba42 	vmov.f32	s22, s4
 800d376:	eef0 ba62 	vmov.f32	s23, s5
 800d37a:	eeb0 aa43 	vmov.f32	s20, s6
 800d37e:	eef0 aa63 	vmov.f32	s21, s7
 800d382:	eeb0 8a44 	vmov.f32	s16, s8
 800d386:	eef0 ca64 	vmov.f32	s25, s9
 800d38a:	d12c      	bne.n	800d3e6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800d38c:	eef0 0a62 	vmov.f32	s1, s5
 800d390:	eeb0 0a42 	vmov.f32	s0, s4
 800d394:	f7ff ff11 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d398:	ee79 9acb 	vsub.f32	s19, s19, s22
 800d39c:	ee7a caec 	vsub.f32	s25, s21, s25
 800d3a0:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800d3a4:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800d3a8:	ee69 9aac 	vmul.f32	s19, s19, s25
 800d3ac:	ee28 8a88 	vmul.f32	s16, s17, s16
 800d3b0:	eef4 9ac8 	vcmpe.f32	s19, s16
 800d3b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d3b8:	db0f      	blt.n	800d3da <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800d3ba:	2101      	movs	r1, #1
 800d3bc:	eef0 2a6a 	vmov.f32	s5, s21
 800d3c0:	eeb0 2a4a 	vmov.f32	s4, s20
 800d3c4:	eef0 1a6b 	vmov.f32	s3, s23
 800d3c8:	eeb0 1a4b 	vmov.f32	s2, s22
 800d3cc:	eef0 0a49 	vmov.f32	s1, s18
 800d3d0:	eeb0 0a4c 	vmov.f32	s0, s24
 800d3d4:	4620      	mov	r0, r4
 800d3d6:	f7ff ff47 	bl	800d268 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800d3da:	eef0 0a6a 	vmov.f32	s1, s21
 800d3de:	eeb0 0a4a 	vmov.f32	s0, s20
 800d3e2:	4620      	mov	r0, r4
 800d3e4:	e035      	b.n	800d452 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800d3e6:	2b01      	cmp	r3, #1
 800d3e8:	d138      	bne.n	800d45c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800d3ea:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800d3ee:	ee33 6a48 	vsub.f32	s12, s6, s16
 800d3f2:	ee71 7a42 	vsub.f32	s15, s2, s4
 800d3f6:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800d3fa:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800d3fe:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800d402:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800d406:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d40a:	d027      	beq.n	800d45c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800d40c:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800d410:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800d414:	eea4 8a83 	vfma.f32	s16, s9, s6
 800d418:	eee1 8a22 	vfma.f32	s17, s2, s5
 800d41c:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800d420:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800d424:	eee6 7a28 	vfma.f32	s15, s12, s17
 800d428:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800d42c:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800d430:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800d434:	ee3c ca40 	vsub.f32	s24, s24, s0
 800d438:	ee39 9a60 	vsub.f32	s18, s18, s1
 800d43c:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800d440:	ee29 9a09 	vmul.f32	s18, s18, s18
 800d444:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800d448:	eef4 7ac9 	vcmpe.f32	s15, s18
 800d44c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d450:	db04      	blt.n	800d45c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800d452:	f7ff feb2 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d456:	ecbd 8b0a 	vpop	{d8-d12}
 800d45a:	bd10      	pop	{r4, pc}
 800d45c:	eef0 0a6b 	vmov.f32	s1, s23
 800d460:	eeb0 0a4b 	vmov.f32	s0, s22
 800d464:	4620      	mov	r0, r4
 800d466:	f7ff fea8 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d46a:	e7b6      	b.n	800d3da <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800d46c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800d46c:	b510      	push	{r4, lr}
 800d46e:	ed2d 8b0c 	vpush	{d8-d13}
 800d472:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800d476:	4604      	mov	r4, r0
 800d478:	eeb0 9a40 	vmov.f32	s18, s0
 800d47c:	eef0 9a60 	vmov.f32	s19, s1
 800d480:	eef0 aa41 	vmov.f32	s21, s2
 800d484:	eeb0 ba61 	vmov.f32	s22, s3
 800d488:	b933      	cbnz	r3, 800d498 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800d48a:	f7ff fe96 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d48e:	eef0 0a4b 	vmov.f32	s1, s22
 800d492:	eeb0 0a6a 	vmov.f32	s0, s21
 800d496:	e015      	b.n	800d4c4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800d498:	ee71 8a40 	vsub.f32	s17, s2, s0
 800d49c:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800d4a0:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800d4a4:	2b02      	cmp	r3, #2
 800d4a6:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800d4aa:	ee28 8a27 	vmul.f32	s16, s16, s15
 800d4ae:	d10f      	bne.n	800d4d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800d4b0:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800d4b4:	ee30 0a08 	vadd.f32	s0, s0, s16
 800d4b8:	f7ff fe7f 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d4bc:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800d4c0:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800d4c4:	4620      	mov	r0, r4
 800d4c6:	f7ff fe78 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d4ca:	ecbd 8b0c 	vpop	{d8-d13}
 800d4ce:	bd10      	pop	{r4, pc}
 800d4d0:	f7ff fe73 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d4d4:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800d60c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800d4d8:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800d610 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800d4dc:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800d614 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800d4e0:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800d618 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800d4e4:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800d61c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800d4e8:	eef0 0a69 	vmov.f32	s1, s19
 800d4ec:	eeb0 0a49 	vmov.f32	s0, s18
 800d4f0:	eee8 0a27 	vfma.f32	s1, s16, s15
 800d4f4:	4620      	mov	r0, r4
 800d4f6:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800d4fa:	eeb1 aa68 	vneg.f32	s20, s17
 800d4fe:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800d502:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800d506:	f7ff fe58 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d50a:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800d620 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800d50e:	eef0 0a69 	vmov.f32	s1, s19
 800d512:	eeb0 0a49 	vmov.f32	s0, s18
 800d516:	eee8 0a27 	vfma.f32	s1, s16, s15
 800d51a:	4620      	mov	r0, r4
 800d51c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800d520:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800d524:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800d528:	f7ff fe47 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d52c:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800d624 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800d530:	eef0 0a69 	vmov.f32	s1, s19
 800d534:	eeb0 0a49 	vmov.f32	s0, s18
 800d538:	eee8 0a27 	vfma.f32	s1, s16, s15
 800d53c:	4620      	mov	r0, r4
 800d53e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800d542:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800d546:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800d54a:	f7ff fe36 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d54e:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800d628 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800d552:	eef0 0a69 	vmov.f32	s1, s19
 800d556:	eeb0 0a49 	vmov.f32	s0, s18
 800d55a:	eee8 0a27 	vfma.f32	s1, s16, s15
 800d55e:	4620      	mov	r0, r4
 800d560:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800d564:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800d568:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800d56c:	f7ff fe25 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d570:	ee79 0a88 	vadd.f32	s1, s19, s16
 800d574:	ee39 0a28 	vadd.f32	s0, s18, s17
 800d578:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800d57c:	ee30 0a08 	vadd.f32	s0, s0, s16
 800d580:	4620      	mov	r0, r4
 800d582:	f7ff fe1a 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d586:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800d62c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800d58a:	eef0 0a69 	vmov.f32	s1, s19
 800d58e:	eeb0 0a49 	vmov.f32	s0, s18
 800d592:	eee8 0a27 	vfma.f32	s1, s16, s15
 800d596:	4620      	mov	r0, r4
 800d598:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800d59c:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800d5a0:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800d5a4:	f7ff fe09 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d5a8:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800d630 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800d5ac:	eef0 0a69 	vmov.f32	s1, s19
 800d5b0:	eeb0 0a49 	vmov.f32	s0, s18
 800d5b4:	eee8 0a27 	vfma.f32	s1, s16, s15
 800d5b8:	4620      	mov	r0, r4
 800d5ba:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800d5be:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800d5c2:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800d5c6:	f7ff fdf8 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d5ca:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800d634 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800d5ce:	eef0 0a69 	vmov.f32	s1, s19
 800d5d2:	eeb0 0a49 	vmov.f32	s0, s18
 800d5d6:	eee8 0a27 	vfma.f32	s1, s16, s15
 800d5da:	4620      	mov	r0, r4
 800d5dc:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800d5e0:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800d5e4:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800d5e8:	f7ff fde7 	bl	800d1ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800d5ec:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800d638 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800d5f0:	eef0 0a69 	vmov.f32	s1, s19
 800d5f4:	eeb0 0a49 	vmov.f32	s0, s18
 800d5f8:	eee8 0a27 	vfma.f32	s1, s16, s15
 800d5fc:	4620      	mov	r0, r4
 800d5fe:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800d602:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800d606:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800d60a:	e73e      	b.n	800d48a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800d60c:	3d23d70a 	.word	0x3d23d70a
 800d610:	3e8f5c29 	.word	0x3e8f5c29
 800d614:	3f19999a 	.word	0x3f19999a
 800d618:	3f4ccccd 	.word	0x3f4ccccd
 800d61c:	3f75c28f 	.word	0x3f75c28f
 800d620:	3e4ccccd 	.word	0x3e4ccccd
 800d624:	3ecccccd 	.word	0x3ecccccd
 800d628:	3f3851ec 	.word	0x3f3851ec
 800d62c:	3fa3d70a 	.word	0x3fa3d70a
 800d630:	3fcccccd 	.word	0x3fcccccd
 800d634:	3fe66666 	.word	0x3fe66666
 800d638:	3ffae148 	.word	0x3ffae148

0800d63c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800d63c:	b570      	push	{r4, r5, r6, lr}
 800d63e:	ed2d 8b06 	vpush	{d8-d10}
 800d642:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800d646:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800d64a:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800d64e:	ee30 9a49 	vsub.f32	s18, s0, s18
 800d652:	eef0 aa40 	vmov.f32	s21, s0
 800d656:	ee28 0a08 	vmul.f32	s0, s16, s16
 800d65a:	4604      	mov	r4, r0
 800d65c:	eea9 0a09 	vfma.f32	s0, s18, s18
 800d660:	eeb0 aa60 	vmov.f32	s20, s1
 800d664:	f016 f82a 	bl	80236bc <sqrtf>
 800d668:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800d66c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d670:	dd36      	ble.n	800d6e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800d672:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800d676:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800d67a:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800d67e:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800d682:	2600      	movs	r6, #0
 800d684:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800d688:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800d68c:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800d690:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800d694:	ee70 9a28 	vadd.f32	s19, s0, s17
 800d698:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800d69c:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800d6a0:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800d6a4:	b1fd      	cbz	r5, 800d6e6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800d6a6:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800d6aa:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800d6ae:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800d6b2:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800d6b6:	eef0 0a49 	vmov.f32	s1, s18
 800d6ba:	eeb0 0a69 	vmov.f32	s0, s19
 800d6be:	4620      	mov	r0, r4
 800d6c0:	f7ff fd64 	bl	800d18c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800d6c4:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800d6c8:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800d6cc:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800d6d0:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800d6d4:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800d6d8:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800d6dc:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800d6e0:	ecbd 8b06 	vpop	{d8-d10}
 800d6e4:	bd70      	pop	{r4, r5, r6, pc}
 800d6e6:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800d6ea:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800d6ee:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800d6f2:	b16b      	cbz	r3, 800d710 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800d6f4:	eef0 1a49 	vmov.f32	s3, s18
 800d6f8:	eeb0 1a69 	vmov.f32	s2, s19
 800d6fc:	eef0 0a62 	vmov.f32	s1, s5
 800d700:	eeb0 0a42 	vmov.f32	s0, s4
 800d704:	4620      	mov	r0, r4
 800d706:	f7ff feb1 	bl	800d46c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800d70a:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800d70e:	e7db      	b.n	800d6c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800d710:	eef0 4a48 	vmov.f32	s9, s16
 800d714:	eeb0 4a68 	vmov.f32	s8, s17
 800d718:	eef0 3a49 	vmov.f32	s7, s18
 800d71c:	eeb0 3a69 	vmov.f32	s6, s19
 800d720:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800d724:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800d728:	4620      	mov	r0, r4
 800d72a:	f7ff fe13 	bl	800d354 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800d72e:	e7cb      	b.n	800d6c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800d730 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800d730:	ee07 2a90 	vmov	s15, r2
 800d734:	ee07 1a10 	vmov	s14, r1
 800d738:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800d73c:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800d740:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800d750 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800d744:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800d748:	ee20 0a27 	vmul.f32	s0, s0, s15
 800d74c:	f7ff bf76 	b.w	800d63c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d750:	3d000000 	.word	0x3d000000

0800d754 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800d754:	b538      	push	{r3, r4, r5, lr}
 800d756:	ed2d 8b02 	vpush	{d8}
 800d75a:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800d75e:	4604      	mov	r4, r0
 800d760:	b31d      	cbz	r5, 800d7aa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800d762:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800d766:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800d76a:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800d76e:	ee78 8a67 	vsub.f32	s17, s16, s15
 800d772:	ee38 8a27 	vadd.f32	s16, s16, s15
 800d776:	eef0 0a68 	vmov.f32	s1, s17
 800d77a:	f7ff fd07 	bl	800d18c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800d77e:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800d782:	eef0 1a48 	vmov.f32	s3, s16
 800d786:	eeb0 0a41 	vmov.f32	s0, s2
 800d78a:	eef0 0a68 	vmov.f32	s1, s17
 800d78e:	4620      	mov	r0, r4
 800d790:	f7ff fe6c 	bl	800d46c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800d794:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800d798:	eef0 1a68 	vmov.f32	s3, s17
 800d79c:	eef0 0a48 	vmov.f32	s1, s16
 800d7a0:	eeb0 0a41 	vmov.f32	s0, s2
 800d7a4:	4620      	mov	r0, r4
 800d7a6:	f7ff fe61 	bl	800d46c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800d7aa:	ecbd 8b02 	vpop	{d8}
 800d7ae:	4628      	mov	r0, r5
 800d7b0:	bd38      	pop	{r3, r4, r5, pc}

0800d7b2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800d7b2:	b510      	push	{r4, lr}
 800d7b4:	ed2d 8b02 	vpush	{d8}
 800d7b8:	4604      	mov	r4, r0
 800d7ba:	eeb0 8a40 	vmov.f32	s16, s0
 800d7be:	eef0 8a60 	vmov.f32	s17, s1
 800d7c2:	f7ff ffc7 	bl	800d754 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800d7c6:	b9d0      	cbnz	r0, 800d7fe <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800d7c8:	4620      	mov	r0, r4
 800d7ca:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800d7ce:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800d7d2:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800d7d6:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800d7da:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800d7de:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800d7e2:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800d7e6:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800d7ea:	eef0 0a68 	vmov.f32	s1, s17
 800d7ee:	eeb0 0a48 	vmov.f32	s0, s16
 800d7f2:	f7ff fdaf 	bl	800d354 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800d7f6:	2001      	movs	r0, #1
 800d7f8:	ecbd 8b02 	vpop	{d8}
 800d7fc:	bd10      	pop	{r4, pc}
 800d7fe:	2000      	movs	r0, #0
 800d800:	e7fa      	b.n	800d7f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800d802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800d802:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800d806:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800d80a:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800d80e:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800d812:	f7ff be2b 	b.w	800d46c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800d818 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800d818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d81c:	b089      	sub	sp, #36	@ 0x24
 800d81e:	461c      	mov	r4, r3
 800d820:	f10d 0820 	add.w	r8, sp, #32
 800d824:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800d828:	9304      	str	r3, [sp, #16]
 800d82a:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800d82c:	9105      	str	r1, [sp, #20]
 800d82e:	2300      	movs	r3, #0
 800d830:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800d834:	9306      	str	r3, [sp, #24]
 800d836:	f848 3d04 	str.w	r3, [r8, #-4]!
 800d83a:	9b04      	ldr	r3, [sp, #16]
 800d83c:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800d840:	4682      	mov	sl, r0
 800d842:	4615      	mov	r5, r2
 800d844:	9b05      	ldr	r3, [sp, #20]
 800d846:	429d      	cmp	r5, r3
 800d848:	d96d      	bls.n	800d926 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800d84a:	3d01      	subs	r5, #1
 800d84c:	f819 3005 	ldrb.w	r3, [r9, r5]
 800d850:	2b06      	cmp	r3, #6
 800d852:	d8f7      	bhi.n	800d844 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800d854:	a201      	add	r2, pc, #4	@ (adr r2, 800d85c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800d856:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d85a:	bf00      	nop
 800d85c:	0800d87b 	.word	0x0800d87b
 800d860:	0800d845 	.word	0x0800d845
 800d864:	0800d879 	.word	0x0800d879
 800d868:	0800d89d 	.word	0x0800d89d
 800d86c:	0800d89d 	.word	0x0800d89d
 800d870:	0800d8a1 	.word	0x0800d8a1
 800d874:	0800d8e1 	.word	0x0800d8e1
 800d878:	3c02      	subs	r4, #2
 800d87a:	4650      	mov	r0, sl
 800d87c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800d880:	9400      	str	r4, [sp, #0]
 800d882:	462b      	mov	r3, r5
 800d884:	4642      	mov	r2, r8
 800d886:	a906      	add	r1, sp, #24
 800d888:	f7ff fcae 	bl	800d1e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800d88c:	eddd 0a07 	vldr	s1, [sp, #28]
 800d890:	ed9d 0a06 	vldr	s0, [sp, #24]
 800d894:	4630      	mov	r0, r6
 800d896:	f7ff fed1 	bl	800d63c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800d89a:	e7d3      	b.n	800d844 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800d89c:	3c01      	subs	r4, #1
 800d89e:	e7ec      	b.n	800d87a <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800d8a0:	f1a4 0b04 	sub.w	fp, r4, #4
 800d8a4:	3c02      	subs	r4, #2
 800d8a6:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800d8aa:	4650      	mov	r0, sl
 800d8ac:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800d8b0:	f8cd b000 	str.w	fp, [sp]
 800d8b4:	462b      	mov	r3, r5
 800d8b6:	4642      	mov	r2, r8
 800d8b8:	a906      	add	r1, sp, #24
 800d8ba:	f7ff fc95 	bl	800d1e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800d8be:	eddd 2a07 	vldr	s5, [sp, #28]
 800d8c2:	ed9d 2a06 	vldr	s4, [sp, #24]
 800d8c6:	ed54 1a01 	vldr	s3, [r4, #-4]
 800d8ca:	ed14 1a02 	vldr	s2, [r4, #-8]
 800d8ce:	edd4 0a01 	vldr	s1, [r4, #4]
 800d8d2:	ed94 0a00 	vldr	s0, [r4]
 800d8d6:	4630      	mov	r0, r6
 800d8d8:	f7ff fc1a 	bl	800d110 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800d8dc:	465c      	mov	r4, fp
 800d8de:	e7b1      	b.n	800d844 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800d8e0:	f1a4 0b06 	sub.w	fp, r4, #6
 800d8e4:	3c02      	subs	r4, #2
 800d8e6:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800d8ea:	4650      	mov	r0, sl
 800d8ec:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800d8f0:	f8cd b000 	str.w	fp, [sp]
 800d8f4:	462b      	mov	r3, r5
 800d8f6:	4642      	mov	r2, r8
 800d8f8:	a906      	add	r1, sp, #24
 800d8fa:	f7ff fc75 	bl	800d1e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800d8fe:	eddd 3a07 	vldr	s7, [sp, #28]
 800d902:	ed9d 3a06 	vldr	s6, [sp, #24]
 800d906:	ed54 2a03 	vldr	s5, [r4, #-12]
 800d90a:	ed14 2a04 	vldr	s4, [r4, #-16]
 800d90e:	ed54 1a01 	vldr	s3, [r4, #-4]
 800d912:	ed14 1a02 	vldr	s2, [r4, #-8]
 800d916:	edd4 0a01 	vldr	s1, [r4, #4]
 800d91a:	ed94 0a00 	vldr	s0, [r4]
 800d91e:	4630      	mov	r0, r6
 800d920:	f7ff fc15 	bl	800d14e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800d924:	e7da      	b.n	800d8dc <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800d926:	9b04      	ldr	r3, [sp, #16]
 800d928:	b113      	cbz	r3, 800d930 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800d92a:	4630      	mov	r0, r6
 800d92c:	f7ff ff69 	bl	800d802 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800d930:	b009      	add	sp, #36	@ 0x24
 800d932:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d936:	bf00      	nop

0800d938 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800d938:	eef0 7a60 	vmov.f32	s15, s1
 800d93c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d940:	6803      	ldr	r3, [r0, #0]
 800d942:	ee17 2a90 	vmov	r2, s15
 800d946:	eef0 7a40 	vmov.f32	s15, s0
 800d94a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800d94e:	689b      	ldr	r3, [r3, #8]
 800d950:	ee17 1a90 	vmov	r1, s15
 800d954:	4718      	bx	r3
	...

0800d958 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 800d958:	b510      	push	{r4, lr}
 800d95a:	4b04      	ldr	r3, [pc, #16]	@ (800d96c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 800d95c:	4604      	mov	r4, r0
 800d95e:	f840 3b14 	str.w	r3, [r0], #20
 800d962:	f001 f894 	bl	800ea8e <_ZN8touchgfx7OutlineD1Ev>
 800d966:	4620      	mov	r0, r4
 800d968:	bd10      	pop	{r4, pc}
 800d96a:	bf00      	nop
 800d96c:	08027a58 	.word	0x08027a58

0800d970 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 800d970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d974:	ed2d 8b04 	vpush	{d8-d9}
 800d978:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800d97c:	b0b5      	sub	sp, #212	@ 0xd4
 800d97e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d982:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d986:	4605      	mov	r5, r0
 800d988:	468b      	mov	fp, r1
 800d98a:	9206      	str	r2, [sp, #24]
 800d98c:	461e      	mov	r6, r3
 800d98e:	f04f 0400 	mov.w	r4, #0
 800d992:	f240 814e 	bls.w	800dc32 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 800d996:	23ff      	movs	r3, #255	@ 0xff
 800d998:	9300      	str	r3, [sp, #0]
 800d99a:	1d02      	adds	r2, r0, #4
 800d99c:	6981      	ldr	r1, [r0, #24]
 800d99e:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 800d9a0:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 800dc38 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 800d9a4:	a808      	add	r0, sp, #32
 800d9a6:	f015 f9fb 	bl	8022da0 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800d9aa:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 800d9ae:	4ba3      	ldr	r3, [pc, #652]	@ (800dc3c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 800d9b0:	edd5 6a08 	vldr	s13, [r5, #32]
 800d9b4:	9308      	str	r3, [sp, #32]
 800d9b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d9ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d9be:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800d9c2:	bf48      	it	mi
 800d9c4:	eef1 7a67 	vnegmi.f32	s15, s15
 800d9c8:	ee67 7a87 	vmul.f32	s15, s15, s14
 800d9cc:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 800d9d0:	2201      	movs	r2, #1
 800d9d2:	9325      	str	r3, [sp, #148]	@ 0x94
 800d9d4:	2300      	movs	r3, #0
 800d9d6:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800d9da:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 800d9de:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 800d9e2:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 800d9e6:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 800d9ea:	7f6a      	ldrb	r2, [r5, #29]
 800d9ec:	7fab      	ldrb	r3, [r5, #30]
 800d9ee:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 800d9f2:	435a      	muls	r2, r3
 800d9f4:	ee27 7a26 	vmul.f32	s14, s14, s13
 800d9f8:	1c53      	adds	r3, r2, #1
 800d9fa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800d9fe:	ee67 7a27 	vmul.f32	s15, s14, s15
 800da02:	f04f 0800 	mov.w	r8, #0
 800da06:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 800da0a:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 800da0e:	942a      	str	r4, [sp, #168]	@ 0xa8
 800da10:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800da14:	942b      	str	r4, [sp, #172]	@ 0xac
 800da16:	942c      	str	r4, [sp, #176]	@ 0xb0
 800da18:	942d      	str	r4, [sp, #180]	@ 0xb4
 800da1a:	942e      	str	r4, [sp, #184]	@ 0xb8
 800da1c:	942f      	str	r4, [sp, #188]	@ 0xbc
 800da1e:	9430      	str	r4, [sp, #192]	@ 0xc0
 800da20:	9431      	str	r4, [sp, #196]	@ 0xc4
 800da22:	9432      	str	r4, [sp, #200]	@ 0xc8
 800da24:	9433      	str	r4, [sp, #204]	@ 0xcc
 800da26:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 800da2a:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 800da2e:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 800da32:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 800da36:	eef0 9a49 	vmov.f32	s19, s18
 800da3a:	eeb0 8a49 	vmov.f32	s16, s18
 800da3e:	eef0 8a49 	vmov.f32	s17, s18
 800da42:	4644      	mov	r4, r8
 800da44:	46c1      	mov	r9, r8
 800da46:	af08      	add	r7, sp, #32
 800da48:	f04f 0a01 	mov.w	sl, #1
 800da4c:	9b06      	ldr	r3, [sp, #24]
 800da4e:	454b      	cmp	r3, r9
 800da50:	f000 80cc 	beq.w	800dbec <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 800da54:	f109 0301 	add.w	r3, r9, #1
 800da58:	9305      	str	r3, [sp, #20]
 800da5a:	f81b 3009 	ldrb.w	r3, [fp, r9]
 800da5e:	2b06      	cmp	r3, #6
 800da60:	d839      	bhi.n	800dad6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800da62:	e8df f003 	tbb	[pc, r3]
 800da66:	3b04      	.short	0x3b04
 800da68:	817c6f60 	.word	0x817c6f60
 800da6c:	a0          	.byte	0xa0
 800da6d:	00          	.byte	0x00
 800da6e:	45c1      	cmp	r9, r8
 800da70:	d92b      	bls.n	800daca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800da72:	eef0 0a49 	vmov.f32	s1, s18
 800da76:	eeb0 0a69 	vmov.f32	s0, s19
 800da7a:	4638      	mov	r0, r7
 800da7c:	f7ff fdde 	bl	800d63c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800da80:	4638      	mov	r0, r7
 800da82:	f7ff fe67 	bl	800d754 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800da86:	4681      	mov	r9, r0
 800da88:	b9f8      	cbnz	r0, 800daca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800da8a:	eef0 0a49 	vmov.f32	s1, s18
 800da8e:	eeb0 0a69 	vmov.f32	s0, s19
 800da92:	4638      	mov	r0, r7
 800da94:	f7ff fe8d 	bl	800d7b2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800da98:	4628      	mov	r0, r5
 800da9a:	e9cd 9702 	strd	r9, r7, [sp, #8]
 800da9e:	e9cd b600 	strd	fp, r6, [sp]
 800daa2:	4623      	mov	r3, r4
 800daa4:	9a05      	ldr	r2, [sp, #20]
 800daa6:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 800daaa:	4641      	mov	r1, r8
 800daac:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 800dab0:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800dab4:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800dab8:	f7ff feae 	bl	800d818 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800dabc:	eef0 0a49 	vmov.f32	s1, s18
 800dac0:	eeb0 0a69 	vmov.f32	s0, s19
 800dac4:	4638      	mov	r0, r7
 800dac6:	f7ff fe74 	bl	800d7b2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800daca:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800dace:	eeb0 8a49 	vmov.f32	s16, s18
 800dad2:	eef0 8a69 	vmov.f32	s17, s19
 800dad6:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800dada:	e7b7      	b.n	800da4c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 800dadc:	45c1      	cmp	r9, r8
 800dade:	d90d      	bls.n	800dafc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800dae0:	4638      	mov	r0, r7
 800dae2:	f7ff fe37 	bl	800d754 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800dae6:	b948      	cbnz	r0, 800dafc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800dae8:	e9cd a702 	strd	sl, r7, [sp, #8]
 800daec:	e9cd b600 	strd	fp, r6, [sp]
 800daf0:	4623      	mov	r3, r4
 800daf2:	464a      	mov	r2, r9
 800daf4:	4641      	mov	r1, r8
 800daf6:	4628      	mov	r0, r5
 800daf8:	f7ff fe8e 	bl	800d818 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800dafc:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800db00:	edd3 8a00 	vldr	s17, [r3]
 800db04:	ed93 8a01 	vldr	s16, [r3, #4]
 800db08:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 800db0c:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 800db10:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800db14:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800db18:	3402      	adds	r4, #2
 800db1a:	46c8      	mov	r8, r9
 800db1c:	eeb0 9a48 	vmov.f32	s18, s16
 800db20:	eef0 9a68 	vmov.f32	s19, s17
 800db24:	e7d7      	b.n	800dad6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800db26:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800db2a:	edd3 8a00 	vldr	s17, [r3]
 800db2e:	ed93 8a01 	vldr	s16, [r3, #4]
 800db32:	eeb0 0a68 	vmov.f32	s0, s17
 800db36:	eef0 0a48 	vmov.f32	s1, s16
 800db3a:	4638      	mov	r0, r7
 800db3c:	f7ff fd7e 	bl	800d63c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800db40:	3402      	adds	r4, #2
 800db42:	e7c8      	b.n	800dad6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800db44:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800db48:	edd3 8a00 	vldr	s17, [r3]
 800db4c:	eef0 0a48 	vmov.f32	s1, s16
 800db50:	eeb0 0a68 	vmov.f32	s0, s17
 800db54:	4638      	mov	r0, r7
 800db56:	f7ff fd71 	bl	800d63c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800db5a:	3401      	adds	r4, #1
 800db5c:	e7bb      	b.n	800dad6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800db5e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800db62:	ed93 8a00 	vldr	s16, [r3]
 800db66:	e7f1      	b.n	800db4c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 800db68:	00a3      	lsls	r3, r4, #2
 800db6a:	f103 0208 	add.w	r2, r3, #8
 800db6e:	f103 090c 	add.w	r9, r3, #12
 800db72:	4432      	add	r2, r6
 800db74:	4433      	add	r3, r6
 800db76:	44b1      	add	r9, r6
 800db78:	ed92 2a00 	vldr	s4, [r2]
 800db7c:	edd9 2a00 	vldr	s5, [r9]
 800db80:	edd3 1a01 	vldr	s3, [r3, #4]
 800db84:	ed93 1a00 	vldr	s2, [r3]
 800db88:	9207      	str	r2, [sp, #28]
 800db8a:	eef0 0a48 	vmov.f32	s1, s16
 800db8e:	eeb0 0a68 	vmov.f32	s0, s17
 800db92:	4638      	mov	r0, r7
 800db94:	f7ff fabc 	bl	800d110 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800db98:	9a07      	ldr	r2, [sp, #28]
 800db9a:	ed99 8a00 	vldr	s16, [r9]
 800db9e:	edd2 8a00 	vldr	s17, [r2]
 800dba2:	3404      	adds	r4, #4
 800dba4:	e797      	b.n	800dad6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800dba6:	00a3      	lsls	r3, r4, #2
 800dba8:	f103 0210 	add.w	r2, r3, #16
 800dbac:	f103 0914 	add.w	r9, r3, #20
 800dbb0:	4432      	add	r2, r6
 800dbb2:	4433      	add	r3, r6
 800dbb4:	44b1      	add	r9, r6
 800dbb6:	ed92 3a00 	vldr	s6, [r2]
 800dbba:	edd9 3a00 	vldr	s7, [r9]
 800dbbe:	edd3 2a03 	vldr	s5, [r3, #12]
 800dbc2:	ed93 2a02 	vldr	s4, [r3, #8]
 800dbc6:	edd3 1a01 	vldr	s3, [r3, #4]
 800dbca:	ed93 1a00 	vldr	s2, [r3]
 800dbce:	9207      	str	r2, [sp, #28]
 800dbd0:	eef0 0a48 	vmov.f32	s1, s16
 800dbd4:	eeb0 0a68 	vmov.f32	s0, s17
 800dbd8:	4638      	mov	r0, r7
 800dbda:	f7ff fab8 	bl	800d14e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800dbde:	9a07      	ldr	r2, [sp, #28]
 800dbe0:	ed99 8a00 	vldr	s16, [r9]
 800dbe4:	edd2 8a00 	vldr	s17, [r2]
 800dbe8:	3406      	adds	r4, #6
 800dbea:	e774      	b.n	800dad6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800dbec:	9b06      	ldr	r3, [sp, #24]
 800dbee:	4543      	cmp	r3, r8
 800dbf0:	af08      	add	r7, sp, #32
 800dbf2:	d90f      	bls.n	800dc14 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800dbf4:	4638      	mov	r0, r7
 800dbf6:	f7ff fdad 	bl	800d754 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800dbfa:	b958      	cbnz	r0, 800dc14 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800dbfc:	2301      	movs	r3, #1
 800dbfe:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800dc02:	9703      	str	r7, [sp, #12]
 800dc04:	f8cd b000 	str.w	fp, [sp]
 800dc08:	4623      	mov	r3, r4
 800dc0a:	9a06      	ldr	r2, [sp, #24]
 800dc0c:	4641      	mov	r1, r8
 800dc0e:	4628      	mov	r0, r5
 800dc10:	f7ff fe02 	bl	800d818 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800dc14:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 800dc18:	4638      	mov	r0, r7
 800dc1a:	f015 f955 	bl	8022ec8 <_ZN8touchgfx6Canvas6renderEh>
 800dc1e:	4604      	mov	r4, r0
 800dc20:	4638      	mov	r0, r7
 800dc22:	f7ff fe99 	bl	800d958 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800dc26:	4620      	mov	r0, r4
 800dc28:	b035      	add	sp, #212	@ 0xd4
 800dc2a:	ecbd 8b04 	vpop	{d8-d9}
 800dc2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc32:	2401      	movs	r4, #1
 800dc34:	e7f7      	b.n	800dc26 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 800dc36:	bf00      	nop
 800dc38:	00000000 	.word	0x00000000
 800dc3c:	08027374 	.word	0x08027374

0800dc40 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 800dc40:	b510      	push	{r4, lr}
 800dc42:	4604      	mov	r4, r0
 800dc44:	f7ff fe88 	bl	800d958 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800dc48:	4620      	mov	r0, r4
 800dc4a:	21b0      	movs	r1, #176	@ 0xb0
 800dc4c:	f015 fd0b 	bl	8023666 <_ZdlPvj>
 800dc50:	4620      	mov	r0, r4
 800dc52:	bd10      	pop	{r4, pc}

0800dc54 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 800dc54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dc58:	ed2d 8b06 	vpush	{d8-d10}
 800dc5c:	b0aa      	sub	sp, #168	@ 0xa8
 800dc5e:	4698      	mov	r8, r3
 800dc60:	23ff      	movs	r3, #255	@ 0xff
 800dc62:	4607      	mov	r7, r0
 800dc64:	9300      	str	r3, [sp, #0]
 800dc66:	4689      	mov	r9, r1
 800dc68:	4692      	mov	sl, r2
 800dc6a:	6981      	ldr	r1, [r0, #24]
 800dc6c:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 800dc6e:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 800de78 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800dc72:	1d02      	adds	r2, r0, #4
 800dc74:	a80d      	add	r0, sp, #52	@ 0x34
 800dc76:	f015 f893 	bl	8022da0 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800dc7a:	7f3b      	ldrb	r3, [r7, #28]
 800dc7c:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 800de78 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800dc80:	1e5a      	subs	r2, r3, #1
 800dc82:	4253      	negs	r3, r2
 800dc84:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 800dc88:	4153      	adcs	r3, r2
 800dc8a:	eeb0 0a60 	vmov.f32	s0, s1
 800dc8e:	4628      	mov	r0, r5
 800dc90:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 800dc94:	f005 f867 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800dc98:	44ca      	add	sl, r9
 800dc9a:	eeb0 9a40 	vmov.f32	s18, s0
 800dc9e:	eef0 9a60 	vmov.f32	s19, s1
 800dca2:	eef0 8a48 	vmov.f32	s17, s16
 800dca6:	2400      	movs	r4, #0
 800dca8:	45ca      	cmp	sl, r9
 800dcaa:	f000 80cd 	beq.w	800de48 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 800dcae:	f819 3b01 	ldrb.w	r3, [r9], #1
 800dcb2:	2b06      	cmp	r3, #6
 800dcb4:	d8f8      	bhi.n	800dca8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800dcb6:	e8df f003 	tbb	[pc, r3]
 800dcba:	0804      	.short	0x0804
 800dcbc:	58533f2a 	.word	0x58533f2a
 800dcc0:	8a          	.byte	0x8a
 800dcc1:	00          	.byte	0x00
 800dcc2:	a80d      	add	r0, sp, #52	@ 0x34
 800dcc4:	f015 f8de 	bl	8022e84 <_ZN8touchgfx6Canvas5closeEv>
 800dcc8:	e7ee      	b.n	800dca8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800dcca:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800dcce:	edd3 8a00 	vldr	s17, [r3]
 800dcd2:	ed93 8a01 	vldr	s16, [r3, #4]
 800dcd6:	eeb0 0a68 	vmov.f32	s0, s17
 800dcda:	eef0 0a48 	vmov.f32	s1, s16
 800dcde:	4628      	mov	r0, r5
 800dce0:	f005 f841 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800dce4:	eef0 7a60 	vmov.f32	s15, s1
 800dce8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800dcec:	a80d      	add	r0, sp, #52	@ 0x34
 800dcee:	ee17 2a90 	vmov	r2, s15
 800dcf2:	eef0 7a40 	vmov.f32	s15, s0
 800dcf6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800dcfa:	eeb0 9a40 	vmov.f32	s18, s0
 800dcfe:	ee17 1a90 	vmov	r1, s15
 800dd02:	eef0 9a60 	vmov.f32	s19, s1
 800dd06:	f015 f997 	bl	8023038 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800dd0a:	3402      	adds	r4, #2
 800dd0c:	e7cc      	b.n	800dca8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800dd0e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800dd12:	edd3 8a00 	vldr	s17, [r3]
 800dd16:	ed93 8a01 	vldr	s16, [r3, #4]
 800dd1a:	eeb0 0a68 	vmov.f32	s0, s17
 800dd1e:	eef0 0a48 	vmov.f32	s1, s16
 800dd22:	4628      	mov	r0, r5
 800dd24:	f005 f81f 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800dd28:	a80d      	add	r0, sp, #52	@ 0x34
 800dd2a:	eeb0 9a40 	vmov.f32	s18, s0
 800dd2e:	eef0 9a60 	vmov.f32	s19, s1
 800dd32:	f7ff fe01 	bl	800d938 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800dd36:	e7e8      	b.n	800dd0a <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 800dd38:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800dd3c:	edd3 8a00 	vldr	s17, [r3]
 800dd40:	eef0 0a48 	vmov.f32	s1, s16
 800dd44:	eeb0 0a68 	vmov.f32	s0, s17
 800dd48:	4628      	mov	r0, r5
 800dd4a:	f005 f80c 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800dd4e:	a80d      	add	r0, sp, #52	@ 0x34
 800dd50:	eeb0 9a40 	vmov.f32	s18, s0
 800dd54:	eef0 9a60 	vmov.f32	s19, s1
 800dd58:	3401      	adds	r4, #1
 800dd5a:	f7ff fded 	bl	800d938 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800dd5e:	e7a3      	b.n	800dca8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800dd60:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800dd64:	ed93 8a00 	vldr	s16, [r3]
 800dd68:	e7ea      	b.n	800dd40 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 800dd6a:	1ca3      	adds	r3, r4, #2
 800dd6c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800dd70:	ed53 0a01 	vldr	s1, [r3, #-4]
 800dd74:	ed13 0a02 	vldr	s0, [r3, #-8]
 800dd78:	edd3 8a00 	vldr	s17, [r3]
 800dd7c:	ed93 8a01 	vldr	s16, [r3, #4]
 800dd80:	4628      	mov	r0, r5
 800dd82:	f004 fff0 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800dd86:	4628      	mov	r0, r5
 800dd88:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800dd8c:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800dd90:	eeb0 0a68 	vmov.f32	s0, s17
 800dd94:	eef0 0a48 	vmov.f32	s1, s16
 800dd98:	f004 ffe5 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800dd9c:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 800dda0:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 800dda4:	eef0 2a60 	vmov.f32	s5, s1
 800dda8:	eeb0 2a40 	vmov.f32	s4, s0
 800ddac:	eeb0 aa40 	vmov.f32	s20, s0
 800ddb0:	eef0 aa60 	vmov.f32	s21, s1
 800ddb4:	eeb0 0a49 	vmov.f32	s0, s18
 800ddb8:	eef0 0a69 	vmov.f32	s1, s19
 800ddbc:	a80d      	add	r0, sp, #52	@ 0x34
 800ddbe:	f7ff f9a7 	bl	800d110 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800ddc2:	3404      	adds	r4, #4
 800ddc4:	eef0 9a6a 	vmov.f32	s19, s21
 800ddc8:	eeb0 9a4a 	vmov.f32	s18, s20
 800ddcc:	e76c      	b.n	800dca8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800ddce:	1d26      	adds	r6, r4, #4
 800ddd0:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800ddd4:	ed56 0a03 	vldr	s1, [r6, #-12]
 800ddd8:	ed16 0a04 	vldr	s0, [r6, #-16]
 800dddc:	edd6 8a00 	vldr	s17, [r6]
 800dde0:	ed96 8a01 	vldr	s16, [r6, #4]
 800dde4:	4628      	mov	r0, r5
 800dde6:	f004 ffbe 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ddea:	4628      	mov	r0, r5
 800ddec:	ed8d 0a07 	vstr	s0, [sp, #28]
 800ddf0:	edcd 0a08 	vstr	s1, [sp, #32]
 800ddf4:	ed16 0a02 	vldr	s0, [r6, #-8]
 800ddf8:	ed56 0a01 	vldr	s1, [r6, #-4]
 800ddfc:	f004 ffb3 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800de00:	4628      	mov	r0, r5
 800de02:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800de06:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800de0a:	eeb0 0a68 	vmov.f32	s0, s17
 800de0e:	eef0 0a48 	vmov.f32	s1, s16
 800de12:	f004 ffa8 	bl	8012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800de16:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 800de1a:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 800de1e:	eddd 1a08 	vldr	s3, [sp, #32]
 800de22:	ed9d 1a07 	vldr	s2, [sp, #28]
 800de26:	eef0 3a60 	vmov.f32	s7, s1
 800de2a:	eeb0 3a40 	vmov.f32	s6, s0
 800de2e:	eeb0 aa40 	vmov.f32	s20, s0
 800de32:	eef0 aa60 	vmov.f32	s21, s1
 800de36:	eeb0 0a49 	vmov.f32	s0, s18
 800de3a:	eef0 0a69 	vmov.f32	s1, s19
 800de3e:	a80d      	add	r0, sp, #52	@ 0x34
 800de40:	f7ff f985 	bl	800d14e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800de44:	3406      	adds	r4, #6
 800de46:	e7bd      	b.n	800ddc4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 800de48:	7f7b      	ldrb	r3, [r7, #29]
 800de4a:	7fb9      	ldrb	r1, [r7, #30]
 800de4c:	4359      	muls	r1, r3
 800de4e:	1c4b      	adds	r3, r1, #1
 800de50:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 800de54:	f3c1 2107 	ubfx	r1, r1, #8, #8
 800de58:	a80d      	add	r0, sp, #52	@ 0x34
 800de5a:	f015 f835 	bl	8022ec8 <_ZN8touchgfx6Canvas6renderEh>
 800de5e:	4b07      	ldr	r3, [pc, #28]	@ (800de7c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 800de60:	930d      	str	r3, [sp, #52]	@ 0x34
 800de62:	4604      	mov	r4, r0
 800de64:	a812      	add	r0, sp, #72	@ 0x48
 800de66:	f000 fe12 	bl	800ea8e <_ZN8touchgfx7OutlineD1Ev>
 800de6a:	4620      	mov	r0, r4
 800de6c:	b02a      	add	sp, #168	@ 0xa8
 800de6e:	ecbd 8b06 	vpop	{d8-d10}
 800de72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800de76:	bf00      	nop
 800de78:	00000000 	.word	0x00000000
 800de7c:	08027a58 	.word	0x08027a58

0800de80 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 800de80:	b410      	push	{r4}
 800de82:	7f04      	ldrb	r4, [r0, #28]
 800de84:	b11c      	cbz	r4, 800de8e <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 800de86:	f85d 4b04 	ldr.w	r4, [sp], #4
 800de8a:	f7ff bee3 	b.w	800dc54 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 800de8e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800de92:	f7ff bd6d 	b.w	800d970 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

0800de98 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 800de98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de9c:	4691      	mov	r9, r2
 800de9e:	4602      	mov	r2, r0
 800dea0:	4605      	mov	r5, r0
 800dea2:	f852 0f26 	ldr.w	r0, [r2, #38]!
 800dea6:	b085      	sub	sp, #20
 800dea8:	4688      	mov	r8, r1
 800deaa:	6851      	ldr	r1, [r2, #4]
 800deac:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 800deb0:	469a      	mov	sl, r3
 800deb2:	ab02      	add	r3, sp, #8
 800deb4:	c303      	stmia	r3!, {r0, r1}
 800deb6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800deba:	2b00      	cmp	r3, #0
 800debc:	af02      	add	r7, sp, #8
 800debe:	dd08      	ble.n	800ded2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800dec0:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 800dec4:	2c00      	cmp	r4, #0
 800dec6:	dd04      	ble.n	800ded2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800dec8:	4a2e      	ldr	r2, [pc, #184]	@ (800df84 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 800deca:	7812      	ldrb	r2, [r2, #0]
 800decc:	b122      	cbz	r2, 800ded8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 800dece:	2a01      	cmp	r2, #1
 800ded0:	d02d      	beq.n	800df2e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 800ded2:	b005      	add	sp, #20
 800ded4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ded8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800dedc:	441c      	add	r4, r3
 800dede:	b2a4      	uxth	r4, r4
 800dee0:	b226      	sxth	r6, r4
 800dee2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800dee6:	42b3      	cmp	r3, r6
 800dee8:	daf3      	bge.n	800ded2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800deea:	e9cd b700 	strd	fp, r7, [sp]
 800deee:	4653      	mov	r3, sl
 800def0:	464a      	mov	r2, r9
 800def2:	4641      	mov	r1, r8
 800def4:	4628      	mov	r0, r5
 800def6:	f7ff ffc3 	bl	800de80 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800defa:	b940      	cbnz	r0, 800df0e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800defc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800df00:	2b01      	cmp	r3, #1
 800df02:	d004      	beq.n	800df0e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800df04:	3301      	adds	r3, #1
 800df06:	105b      	asrs	r3, r3, #1
 800df08:	f8ad 300e 	strh.w	r3, [sp, #14]
 800df0c:	e7ed      	b.n	800deea <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 800df0e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800df12:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800df16:	4413      	add	r3, r2
 800df18:	b29b      	uxth	r3, r3
 800df1a:	441a      	add	r2, r3
 800df1c:	b212      	sxth	r2, r2
 800df1e:	4296      	cmp	r6, r2
 800df20:	f8ad 300a 	strh.w	r3, [sp, #10]
 800df24:	dadd      	bge.n	800dee2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800df26:	1ae3      	subs	r3, r4, r3
 800df28:	f8ad 300e 	strh.w	r3, [sp, #14]
 800df2c:	e7d9      	b.n	800dee2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800df2e:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800df32:	441c      	add	r4, r3
 800df34:	b2a4      	uxth	r4, r4
 800df36:	b226      	sxth	r6, r4
 800df38:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800df3c:	42b3      	cmp	r3, r6
 800df3e:	dac8      	bge.n	800ded2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800df40:	e9cd b700 	strd	fp, r7, [sp]
 800df44:	4653      	mov	r3, sl
 800df46:	464a      	mov	r2, r9
 800df48:	4641      	mov	r1, r8
 800df4a:	4628      	mov	r0, r5
 800df4c:	f7ff ff98 	bl	800de80 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800df50:	b940      	cbnz	r0, 800df64 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800df52:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800df56:	2b01      	cmp	r3, #1
 800df58:	d004      	beq.n	800df64 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800df5a:	3301      	adds	r3, #1
 800df5c:	105b      	asrs	r3, r3, #1
 800df5e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800df62:	e7ed      	b.n	800df40 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 800df64:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800df68:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800df6c:	4413      	add	r3, r2
 800df6e:	b29b      	uxth	r3, r3
 800df70:	441a      	add	r2, r3
 800df72:	b212      	sxth	r2, r2
 800df74:	4296      	cmp	r6, r2
 800df76:	f8ad 3008 	strh.w	r3, [sp, #8]
 800df7a:	dadd      	bge.n	800df38 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800df7c:	1ae3      	subs	r3, r4, r3
 800df7e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800df82:	e7d9      	b.n	800df38 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800df84:	20013b62 	.word	0x20013b62

0800df88 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800df88:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800df8a:	6803      	ldr	r3, [r0, #0]
 800df8c:	460d      	mov	r5, r1
 800df8e:	4604      	mov	r4, r0
 800df90:	4601      	mov	r1, r0
 800df92:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800df94:	a802      	add	r0, sp, #8
 800df96:	4798      	blx	r3
 800df98:	6828      	ldr	r0, [r5, #0]
 800df9a:	6869      	ldr	r1, [r5, #4]
 800df9c:	466b      	mov	r3, sp
 800df9e:	c303      	stmia	r3!, {r0, r1}
 800dfa0:	4668      	mov	r0, sp
 800dfa2:	4619      	mov	r1, r3
 800dfa4:	f7fd fb98 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 800dfa8:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800dfaa:	b188      	cbz	r0, 800dfd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800dfac:	6803      	ldr	r3, [r0, #0]
 800dfae:	1d21      	adds	r1, r4, #4
 800dfb0:	68db      	ldr	r3, [r3, #12]
 800dfb2:	4798      	blx	r3
 800dfb4:	b160      	cbz	r0, 800dfd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800dfb6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800dfba:	2b00      	cmp	r3, #0
 800dfbc:	dd08      	ble.n	800dfd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800dfbe:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800dfc2:	2d00      	cmp	r5, #0
 800dfc4:	dd04      	ble.n	800dfd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800dfc6:	4a2b      	ldr	r2, [pc, #172]	@ (800e074 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800dfc8:	7812      	ldrb	r2, [r2, #0]
 800dfca:	b11a      	cbz	r2, 800dfd4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800dfcc:	2a01      	cmp	r2, #1
 800dfce:	d029      	beq.n	800e024 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800dfd0:	b004      	add	sp, #16
 800dfd2:	bd70      	pop	{r4, r5, r6, pc}
 800dfd4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800dfd8:	441d      	add	r5, r3
 800dfda:	b2ad      	uxth	r5, r5
 800dfdc:	b22e      	sxth	r6, r5
 800dfde:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800dfe2:	42b3      	cmp	r3, r6
 800dfe4:	daf4      	bge.n	800dfd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800dfe6:	6823      	ldr	r3, [r4, #0]
 800dfe8:	4669      	mov	r1, sp
 800dfea:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800dfec:	4620      	mov	r0, r4
 800dfee:	4798      	blx	r3
 800dff0:	b940      	cbnz	r0, 800e004 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800dff2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800dff6:	2b01      	cmp	r3, #1
 800dff8:	d004      	beq.n	800e004 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800dffa:	3301      	adds	r3, #1
 800dffc:	105b      	asrs	r3, r3, #1
 800dffe:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e002:	e7f0      	b.n	800dfe6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800e004:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e008:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e00c:	4413      	add	r3, r2
 800e00e:	b29b      	uxth	r3, r3
 800e010:	441a      	add	r2, r3
 800e012:	b212      	sxth	r2, r2
 800e014:	4296      	cmp	r6, r2
 800e016:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e01a:	dae0      	bge.n	800dfde <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800e01c:	1aeb      	subs	r3, r5, r3
 800e01e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e022:	e7dc      	b.n	800dfde <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800e024:	f8bd 5000 	ldrh.w	r5, [sp]
 800e028:	441d      	add	r5, r3
 800e02a:	b2ad      	uxth	r5, r5
 800e02c:	b22e      	sxth	r6, r5
 800e02e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800e032:	42b3      	cmp	r3, r6
 800e034:	dacc      	bge.n	800dfd0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800e036:	6823      	ldr	r3, [r4, #0]
 800e038:	4669      	mov	r1, sp
 800e03a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800e03c:	4620      	mov	r0, r4
 800e03e:	4798      	blx	r3
 800e040:	b940      	cbnz	r0, 800e054 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800e042:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800e046:	2b01      	cmp	r3, #1
 800e048:	d004      	beq.n	800e054 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800e04a:	3301      	adds	r3, #1
 800e04c:	105b      	asrs	r3, r3, #1
 800e04e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800e052:	e7f0      	b.n	800e036 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800e054:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800e058:	f8bd 3000 	ldrh.w	r3, [sp]
 800e05c:	4413      	add	r3, r2
 800e05e:	b29b      	uxth	r3, r3
 800e060:	441a      	add	r2, r3
 800e062:	b212      	sxth	r2, r2
 800e064:	4296      	cmp	r6, r2
 800e066:	f8ad 3000 	strh.w	r3, [sp]
 800e06a:	dae0      	bge.n	800e02e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800e06c:	1aeb      	subs	r3, r5, r3
 800e06e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800e072:	e7dc      	b.n	800e02e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800e074:	20013b62 	.word	0x20013b62

0800e078 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800e078:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e07a:	6803      	ldr	r3, [r0, #0]
 800e07c:	4604      	mov	r4, r0
 800e07e:	4601      	mov	r1, r0
 800e080:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800e082:	4668      	mov	r0, sp
 800e084:	4798      	blx	r3
 800e086:	2100      	movs	r1, #0
 800e088:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800e08c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e090:	9102      	str	r1, [sp, #8]
 800e092:	4668      	mov	r0, sp
 800e094:	a902      	add	r1, sp, #8
 800e096:	f8ad 200c 	strh.w	r2, [sp, #12]
 800e09a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e09e:	f7fd fb1b 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 800e0a2:	6823      	ldr	r3, [r4, #0]
 800e0a4:	4669      	mov	r1, sp
 800e0a6:	691b      	ldr	r3, [r3, #16]
 800e0a8:	4620      	mov	r0, r4
 800e0aa:	4798      	blx	r3
 800e0ac:	b004      	add	sp, #16
 800e0ae:	bd10      	pop	{r4, pc}

0800e0b0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800e0b0:	2101      	movs	r1, #1
 800e0b2:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800e0b6:	490b      	ldr	r1, [pc, #44]	@ (800e0e4 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800e0b8:	6001      	str	r1, [r0, #0]
 800e0ba:	2200      	movs	r2, #0
 800e0bc:	21ff      	movs	r1, #255	@ 0xff
 800e0be:	8082      	strh	r2, [r0, #4]
 800e0c0:	80c2      	strh	r2, [r0, #6]
 800e0c2:	8102      	strh	r2, [r0, #8]
 800e0c4:	8142      	strh	r2, [r0, #10]
 800e0c6:	8182      	strh	r2, [r0, #12]
 800e0c8:	81c2      	strh	r2, [r0, #14]
 800e0ca:	8202      	strh	r2, [r0, #16]
 800e0cc:	8242      	strh	r2, [r0, #18]
 800e0ce:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e0d2:	61c2      	str	r2, [r0, #28]
 800e0d4:	8402      	strh	r2, [r0, #32]
 800e0d6:	8442      	strh	r2, [r0, #34]	@ 0x22
 800e0d8:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800e0dc:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800e0e0:	6282      	str	r2, [r0, #40]	@ 0x28
 800e0e2:	4770      	bx	lr
 800e0e4:	080273d4 	.word	0x080273d4

0800e0e8 <_ZN8touchgfx8TextArea8setWidthEs>:
 800e0e8:	b530      	push	{r4, r5, lr}
 800e0ea:	b085      	sub	sp, #20
 800e0ec:	6803      	ldr	r3, [r0, #0]
 800e0ee:	8101      	strh	r1, [r0, #8]
 800e0f0:	466d      	mov	r5, sp
 800e0f2:	4601      	mov	r1, r0
 800e0f4:	4604      	mov	r4, r0
 800e0f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800e0fa:	4628      	mov	r0, r5
 800e0fc:	4798      	blx	r3
 800e0fe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e102:	343c      	adds	r4, #60	@ 0x3c
 800e104:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e108:	b005      	add	sp, #20
 800e10a:	bd30      	pop	{r4, r5, pc}

0800e10c <_ZN8touchgfx8TextArea9setHeightEs>:
 800e10c:	b530      	push	{r4, r5, lr}
 800e10e:	b085      	sub	sp, #20
 800e110:	6803      	ldr	r3, [r0, #0]
 800e112:	8141      	strh	r1, [r0, #10]
 800e114:	466d      	mov	r5, sp
 800e116:	4601      	mov	r1, r0
 800e118:	4604      	mov	r4, r0
 800e11a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800e11e:	4628      	mov	r0, r5
 800e120:	4798      	blx	r3
 800e122:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e126:	343c      	adds	r4, #60	@ 0x3c
 800e128:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e12c:	b005      	add	sp, #20
 800e12e:	bd30      	pop	{r4, r5, pc}

0800e130 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800e130:	2200      	movs	r2, #0
 800e132:	8002      	strh	r2, [r0, #0]
 800e134:	8042      	strh	r2, [r0, #2]
 800e136:	8082      	strh	r2, [r0, #4]
 800e138:	80c2      	strh	r2, [r0, #6]
 800e13a:	4770      	bx	lr

0800e13c <_ZN8touchgfx8TextArea8setAlphaEh>:
 800e13c:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
 800e140:	4770      	bx	lr
	...

0800e144 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800e144:	b570      	push	{r4, r5, r6, lr}
 800e146:	6803      	ldr	r3, [r0, #0]
 800e148:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800e14a:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
 800e14c:	4b09      	ldr	r3, [pc, #36]	@ (800e174 <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
 800e14e:	681b      	ldr	r3, [r3, #0]
 800e150:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e154:	4b08      	ldr	r3, [pc, #32]	@ (800e178 <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
 800e156:	681b      	ldr	r3, [r3, #0]
 800e158:	4604      	mov	r4, r0
 800e15a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800e15e:	6803      	ldr	r3, [r0, #0]
 800e160:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e162:	460d      	mov	r5, r1
 800e164:	4798      	blx	r3
 800e166:	1a29      	subs	r1, r5, r0
 800e168:	4633      	mov	r3, r6
 800e16a:	4620      	mov	r0, r4
 800e16c:	b209      	sxth	r1, r1
 800e16e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e172:	4718      	bx	r3
 800e174:	20013bc4 	.word	0x20013bc4
 800e178:	20013bcc 	.word	0x20013bcc

0800e17c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800e17c:	b570      	push	{r4, r5, r6, lr}
 800e17e:	6803      	ldr	r3, [r0, #0]
 800e180:	4604      	mov	r4, r0
 800e182:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e184:	4615      	mov	r5, r2
 800e186:	4798      	blx	r3
 800e188:	6823      	ldr	r3, [r4, #0]
 800e18a:	4629      	mov	r1, r5
 800e18c:	4620      	mov	r0, r4
 800e18e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800e190:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e194:	4718      	bx	r3

0800e196 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800e196:	2000      	movs	r0, #0
 800e198:	4770      	bx	lr

0800e19a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 800e19a:	2000      	movs	r0, #0
 800e19c:	4770      	bx	lr
	...

0800e1a0 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800e1a0:	4b07      	ldr	r3, [pc, #28]	@ (800e1c0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800e1a2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800e1a4:	881b      	ldrh	r3, [r3, #0]
 800e1a6:	4293      	cmp	r3, r2
 800e1a8:	bf81      	itttt	hi
 800e1aa:	4b06      	ldrhi	r3, [pc, #24]	@ (800e1c4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800e1ac:	681b      	ldrhi	r3, [r3, #0]
 800e1ae:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800e1b2:	7858      	ldrbhi	r0, [r3, #1]
 800e1b4:	bf8c      	ite	hi
 800e1b6:	f000 0003 	andhi.w	r0, r0, #3
 800e1ba:	2000      	movls	r0, #0
 800e1bc:	4770      	bx	lr
 800e1be:	bf00      	nop
 800e1c0:	20013bc8 	.word	0x20013bc8
 800e1c4:	20013bc4 	.word	0x20013bc4

0800e1c8 <_ZN8touchgfx8TextAreaD1Ev>:
 800e1c8:	4770      	bx	lr
	...

0800e1cc <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800e1cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e1d0:	4b10      	ldr	r3, [pc, #64]	@ (800e214 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800e1d2:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800e1d4:	881b      	ldrh	r3, [r3, #0]
 800e1d6:	428b      	cmp	r3, r1
 800e1d8:	4604      	mov	r4, r0
 800e1da:	d918      	bls.n	800e20e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800e1dc:	6803      	ldr	r3, [r0, #0]
 800e1de:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800e1e0:	4b0d      	ldr	r3, [pc, #52]	@ (800e218 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800e1e2:	6818      	ldr	r0, [r3, #0]
 800e1e4:	f7f5 fca2 	bl	8003b2c <_ZNK8touchgfx5Texts7getTextEt>
 800e1e8:	6823      	ldr	r3, [r4, #0]
 800e1ea:	4606      	mov	r6, r0
 800e1ec:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e1ee:	4620      	mov	r0, r4
 800e1f0:	4798      	blx	r3
 800e1f2:	6823      	ldr	r3, [r4, #0]
 800e1f4:	4607      	mov	r7, r0
 800e1f6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e1fa:	4620      	mov	r0, r4
 800e1fc:	4798      	blx	r3
 800e1fe:	463a      	mov	r2, r7
 800e200:	4603      	mov	r3, r0
 800e202:	4631      	mov	r1, r6
 800e204:	4620      	mov	r0, r4
 800e206:	46ac      	mov	ip, r5
 800e208:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e20c:	4760      	bx	ip
 800e20e:	2000      	movs	r0, #0
 800e210:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e214:	20013bc8 	.word	0x20013bc8
 800e218:	20013bd0 	.word	0x20013bd0

0800e21c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800e21c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e220:	4b17      	ldr	r3, [pc, #92]	@ (800e280 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800e222:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800e224:	881b      	ldrh	r3, [r3, #0]
 800e226:	428b      	cmp	r3, r1
 800e228:	4604      	mov	r4, r0
 800e22a:	d926      	bls.n	800e27a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800e22c:	4b15      	ldr	r3, [pc, #84]	@ (800e284 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800e22e:	681b      	ldr	r3, [r3, #0]
 800e230:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800e234:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800e238:	4b13      	ldr	r3, [pc, #76]	@ (800e288 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800e23a:	7855      	ldrb	r5, [r2, #1]
 800e23c:	681b      	ldr	r3, [r3, #0]
 800e23e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800e242:	6833      	ldr	r3, [r6, #0]
 800e244:	69df      	ldr	r7, [r3, #28]
 800e246:	4b11      	ldr	r3, [pc, #68]	@ (800e28c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800e248:	6818      	ldr	r0, [r3, #0]
 800e24a:	f7f5 fc6f 	bl	8003b2c <_ZNK8touchgfx5Texts7getTextEt>
 800e24e:	6823      	ldr	r3, [r4, #0]
 800e250:	4680      	mov	r8, r0
 800e252:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e254:	4620      	mov	r0, r4
 800e256:	4798      	blx	r3
 800e258:	6823      	ldr	r3, [r4, #0]
 800e25a:	4681      	mov	r9, r0
 800e25c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e260:	4620      	mov	r0, r4
 800e262:	4798      	blx	r3
 800e264:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800e268:	9000      	str	r0, [sp, #0]
 800e26a:	464b      	mov	r3, r9
 800e26c:	4642      	mov	r2, r8
 800e26e:	4629      	mov	r1, r5
 800e270:	4630      	mov	r0, r6
 800e272:	47b8      	blx	r7
 800e274:	b003      	add	sp, #12
 800e276:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e27a:	2000      	movs	r0, #0
 800e27c:	e7fa      	b.n	800e274 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800e27e:	bf00      	nop
 800e280:	20013bc8 	.word	0x20013bc8
 800e284:	20013bc4 	.word	0x20013bc4
 800e288:	20013bcc 	.word	0x20013bcc
 800e28c:	20013bd0 	.word	0x20013bd0

0800e290 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800e290:	b40e      	push	{r1, r2, r3}
 800e292:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e296:	4b2f      	ldr	r3, [pc, #188]	@ (800e354 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800e298:	881a      	ldrh	r2, [r3, #0]
 800e29a:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800e29c:	429a      	cmp	r2, r3
 800e29e:	b09d      	sub	sp, #116	@ 0x74
 800e2a0:	4604      	mov	r4, r0
 800e2a2:	d954      	bls.n	800e34e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800e2a4:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800e358 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800e2a8:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800e35c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800e2ac:	aa26      	add	r2, sp, #152	@ 0x98
 800e2ae:	9202      	str	r2, [sp, #8]
 800e2b0:	f8d9 2000 	ldr.w	r2, [r9]
 800e2b4:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e2b8:	f8d8 3000 	ldr.w	r3, [r8]
 800e2bc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e2c0:	682b      	ldr	r3, [r5, #0]
 800e2c2:	4628      	mov	r0, r5
 800e2c4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e2c6:	4798      	blx	r3
 800e2c8:	b207      	sxth	r7, r0
 800e2ca:	4606      	mov	r6, r0
 800e2cc:	a803      	add	r0, sp, #12
 800e2ce:	f005 f911 	bl	80134f4 <_ZN8touchgfx12TextProviderC1Ev>
 800e2d2:	682b      	ldr	r3, [r5, #0]
 800e2d4:	4628      	mov	r0, r5
 800e2d6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e2d8:	4798      	blx	r3
 800e2da:	682b      	ldr	r3, [r5, #0]
 800e2dc:	4682      	mov	sl, r0
 800e2de:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e2e0:	4628      	mov	r0, r5
 800e2e2:	4798      	blx	r3
 800e2e4:	4653      	mov	r3, sl
 800e2e6:	9000      	str	r0, [sp, #0]
 800e2e8:	9a02      	ldr	r2, [sp, #8]
 800e2ea:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800e2ec:	a803      	add	r0, sp, #12
 800e2ee:	f005 f95c 	bl	80135aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e2f2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e2f4:	f8d9 3000 	ldr.w	r3, [r9]
 800e2f8:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800e2fc:	8925      	ldrh	r5, [r4, #8]
 800e2fe:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800e302:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800e306:	eba5 050c 	sub.w	r5, r5, ip
 800e30a:	784a      	ldrb	r2, [r1, #1]
 800e30c:	f8d8 3000 	ldr.w	r3, [r8]
 800e310:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800e314:	b22d      	sxth	r5, r5
 800e316:	9500      	str	r5, [sp, #0]
 800e318:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800e31c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e320:	a803      	add	r0, sp, #12
 800e322:	f002 fa9f 	bl	8010864 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800e326:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800e32a:	18b9      	adds	r1, r7, r2
 800e32c:	2900      	cmp	r1, #0
 800e32e:	b203      	sxth	r3, r0
 800e330:	dd0b      	ble.n	800e34a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800e332:	3b01      	subs	r3, #1
 800e334:	fb13 f302 	smulbb	r3, r3, r2
 800e338:	fb16 3300 	smlabb	r3, r6, r0, r3
 800e33c:	b21f      	sxth	r7, r3
 800e33e:	4638      	mov	r0, r7
 800e340:	b01d      	add	sp, #116	@ 0x74
 800e342:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e346:	b003      	add	sp, #12
 800e348:	4770      	bx	lr
 800e34a:	2b00      	cmp	r3, #0
 800e34c:	dcf7      	bgt.n	800e33e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e34e:	2700      	movs	r7, #0
 800e350:	e7f5      	b.n	800e33e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e352:	bf00      	nop
 800e354:	20013bc8 	.word	0x20013bc8
 800e358:	20013bc4 	.word	0x20013bc4
 800e35c:	20013bcc 	.word	0x20013bcc

0800e360 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800e360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e364:	4bbc      	ldr	r3, [pc, #752]	@ (800e658 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800e366:	460c      	mov	r4, r1
 800e368:	881b      	ldrh	r3, [r3, #0]
 800e36a:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 800e36c:	428b      	cmp	r3, r1
 800e36e:	b0a9      	sub	sp, #164	@ 0xa4
 800e370:	4680      	mov	r8, r0
 800e372:	d809      	bhi.n	800e388 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800e374:	2300      	movs	r3, #0
 800e376:	f04f 32ff 	mov.w	r2, #4294967295
 800e37a:	e9c0 3200 	strd	r3, r2, [r0]
 800e37e:	6083      	str	r3, [r0, #8]
 800e380:	4640      	mov	r0, r8
 800e382:	b029      	add	sp, #164	@ 0xa4
 800e384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e388:	4eb4      	ldr	r6, [pc, #720]	@ (800e65c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800e38a:	6833      	ldr	r3, [r6, #0]
 800e38c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e390:	4bb3      	ldr	r3, [pc, #716]	@ (800e660 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800e392:	681b      	ldr	r3, [r3, #0]
 800e394:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e398:	4bb2      	ldr	r3, [pc, #712]	@ (800e664 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800e39a:	6818      	ldr	r0, [r3, #0]
 800e39c:	f7f5 fbc6 	bl	8003b2c <_ZNK8touchgfx5Texts7getTextEt>
 800e3a0:	682b      	ldr	r3, [r5, #0]
 800e3a2:	4681      	mov	r9, r0
 800e3a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e3a6:	4628      	mov	r0, r5
 800e3a8:	4798      	blx	r3
 800e3aa:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 800e3ac:	b203      	sxth	r3, r0
 800e3ae:	4407      	add	r7, r0
 800e3b0:	9304      	str	r3, [sp, #16]
 800e3b2:	b2bb      	uxth	r3, r7
 800e3b4:	9303      	str	r3, [sp, #12]
 800e3b6:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800e3ba:	4682      	mov	sl, r0
 800e3bc:	a80f      	add	r0, sp, #60	@ 0x3c
 800e3be:	2b00      	cmp	r3, #0
 800e3c0:	f040 80a6 	bne.w	800e510 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 800e3c4:	f005 f896 	bl	80134f4 <_ZN8touchgfx12TextProviderC1Ev>
 800e3c8:	682b      	ldr	r3, [r5, #0]
 800e3ca:	4628      	mov	r0, r5
 800e3cc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e3ce:	4798      	blx	r3
 800e3d0:	682b      	ldr	r3, [r5, #0]
 800e3d2:	4606      	mov	r6, r0
 800e3d4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e3d6:	4628      	mov	r0, r5
 800e3d8:	4798      	blx	r3
 800e3da:	6823      	ldr	r3, [r4, #0]
 800e3dc:	4607      	mov	r7, r0
 800e3de:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e3e0:	4620      	mov	r0, r4
 800e3e2:	4798      	blx	r3
 800e3e4:	6823      	ldr	r3, [r4, #0]
 800e3e6:	4683      	mov	fp, r0
 800e3e8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e3ec:	4620      	mov	r0, r4
 800e3ee:	4798      	blx	r3
 800e3f0:	463b      	mov	r3, r7
 800e3f2:	e9cd b000 	strd	fp, r0, [sp]
 800e3f6:	4649      	mov	r1, r9
 800e3f8:	4632      	mov	r2, r6
 800e3fa:	a80f      	add	r0, sp, #60	@ 0x3c
 800e3fc:	f005 f8ea 	bl	80135d4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e400:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e404:	f8df b254 	ldr.w	fp, [pc, #596]	@ 800e65c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800e408:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e40c:	f04f 0600 	mov.w	r6, #0
 800e410:	bf0c      	ite	eq
 800e412:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800e416:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800e41a:	4637      	mov	r7, r6
 800e41c:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e41e:	f8db 3000 	ldr.w	r3, [fp]
 800e422:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e426:	4629      	mov	r1, r5
 800e428:	785b      	ldrb	r3, [r3, #1]
 800e42a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800e42e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e432:	a80f      	add	r0, sp, #60	@ 0x3c
 800e434:	f001 ff1d 	bl	8010272 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800e438:	9b03      	ldr	r3, [sp, #12]
 800e43a:	4286      	cmp	r6, r0
 800e43c:	bfb8      	it	lt
 800e43e:	4606      	movlt	r6, r0
 800e440:	3701      	adds	r7, #1
 800e442:	eba9 0903 	sub.w	r9, r9, r3
 800e446:	a80f      	add	r0, sp, #60	@ 0x3c
 800e448:	b236      	sxth	r6, r6
 800e44a:	b2bf      	uxth	r7, r7
 800e44c:	fa0f f989 	sxth.w	r9, r9
 800e450:	f005 f877 	bl	8013542 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800e454:	b918      	cbnz	r0, 800e45e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e456:	7a2b      	ldrb	r3, [r5, #8]
 800e458:	444b      	add	r3, r9
 800e45a:	2b00      	cmp	r3, #0
 800e45c:	dcde      	bgt.n	800e41c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 800e45e:	9b03      	ldr	r3, [sp, #12]
 800e460:	9a04      	ldr	r2, [sp, #16]
 800e462:	f895 9009 	ldrb.w	r9, [r5, #9]
 800e466:	fb13 f707 	smulbb	r7, r3, r7
 800e46a:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800e46c:	1aff      	subs	r7, r7, r3
 800e46e:	b2bf      	uxth	r7, r7
 800e470:	b23b      	sxth	r3, r7
 800e472:	429a      	cmp	r2, r3
 800e474:	bfa8      	it	ge
 800e476:	4657      	movge	r7, sl
 800e478:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e47c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e480:	6823      	ldr	r3, [r4, #0]
 800e482:	bf08      	it	eq
 800e484:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800e488:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800e48a:	bf18      	it	ne
 800e48c:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800e490:	4620      	mov	r0, r4
 800e492:	4798      	blx	r3
 800e494:	444f      	add	r7, r9
 800e496:	fa1f f987 	uxth.w	r9, r7
 800e49a:	2801      	cmp	r0, #1
 800e49c:	fa0f f789 	sxth.w	r7, r9
 800e4a0:	b2b3      	uxth	r3, r6
 800e4a2:	f000 80e1 	beq.w	800e668 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800e4a6:	2802      	cmp	r0, #2
 800e4a8:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 800e4ac:	f000 80e2 	beq.w	800e674 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800e4b0:	7aea      	ldrb	r2, [r5, #11]
 800e4b2:	7b2d      	ldrb	r5, [r5, #12]
 800e4b4:	b236      	sxth	r6, r6
 800e4b6:	1ab6      	subs	r6, r6, r2
 800e4b8:	442a      	add	r2, r5
 800e4ba:	4413      	add	r3, r2
 800e4bc:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800e4c0:	fa1f fa86 	uxth.w	sl, r6
 800e4c4:	b29b      	uxth	r3, r3
 800e4c6:	2a02      	cmp	r2, #2
 800e4c8:	fa0f fb8a 	sxth.w	fp, sl
 800e4cc:	b21e      	sxth	r6, r3
 800e4ce:	f000 80d5 	beq.w	800e67c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800e4d2:	2a03      	cmp	r2, #3
 800e4d4:	f000 80dd 	beq.w	800e692 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800e4d8:	2a01      	cmp	r2, #1
 800e4da:	f040 80e5 	bne.w	800e6a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800e4de:	8925      	ldrh	r5, [r4, #8]
 800e4e0:	4633      	mov	r3, r6
 800e4e2:	eba5 0909 	sub.w	r9, r5, r9
 800e4e6:	463e      	mov	r6, r7
 800e4e8:	465d      	mov	r5, fp
 800e4ea:	461f      	mov	r7, r3
 800e4ec:	fa0f fb89 	sxth.w	fp, r9
 800e4f0:	4b5c      	ldr	r3, [pc, #368]	@ (800e664 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800e4f2:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800e4f4:	6818      	ldr	r0, [r3, #0]
 800e4f6:	f7f5 fb19 	bl	8003b2c <_ZNK8touchgfx5Texts7getTextEt>
 800e4fa:	f8a8 b000 	strh.w	fp, [r8]
 800e4fe:	f8a8 5002 	strh.w	r5, [r8, #2]
 800e502:	f8a8 6004 	strh.w	r6, [r8, #4]
 800e506:	f8a8 7006 	strh.w	r7, [r8, #6]
 800e50a:	f8c8 0008 	str.w	r0, [r8, #8]
 800e50e:	e737      	b.n	800e380 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800e510:	f004 fff0 	bl	80134f4 <_ZN8touchgfx12TextProviderC1Ev>
 800e514:	682b      	ldr	r3, [r5, #0]
 800e516:	4628      	mov	r0, r5
 800e518:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e51a:	4798      	blx	r3
 800e51c:	682b      	ldr	r3, [r5, #0]
 800e51e:	4607      	mov	r7, r0
 800e520:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e522:	4628      	mov	r0, r5
 800e524:	4798      	blx	r3
 800e526:	6823      	ldr	r3, [r4, #0]
 800e528:	4683      	mov	fp, r0
 800e52a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e52c:	4620      	mov	r0, r4
 800e52e:	4798      	blx	r3
 800e530:	6822      	ldr	r2, [r4, #0]
 800e532:	9005      	str	r0, [sp, #20]
 800e534:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800e538:	4620      	mov	r0, r4
 800e53a:	4790      	blx	r2
 800e53c:	9b05      	ldr	r3, [sp, #20]
 800e53e:	9001      	str	r0, [sp, #4]
 800e540:	463a      	mov	r2, r7
 800e542:	4649      	mov	r1, r9
 800e544:	9300      	str	r3, [sp, #0]
 800e546:	a80f      	add	r0, sp, #60	@ 0x3c
 800e548:	465b      	mov	r3, fp
 800e54a:	f005 f843 	bl	80135d4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e54e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e552:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800e556:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800e558:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 800e55c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e560:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e564:	bf0a      	itet	eq
 800e566:	464a      	moveq	r2, r9
 800e568:	461a      	movne	r2, r3
 800e56a:	4699      	moveq	r9, r3
 800e56c:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800e570:	1ad2      	subs	r2, r2, r3
 800e572:	6833      	ldr	r3, [r6, #0]
 800e574:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 800e578:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e57c:	af0f      	add	r7, sp, #60	@ 0x3c
 800e57e:	7859      	ldrb	r1, [r3, #1]
 800e580:	9707      	str	r7, [sp, #28]
 800e582:	2300      	movs	r3, #0
 800e584:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800e588:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e58c:	f88d 1020 	strb.w	r1, [sp, #32]
 800e590:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800e594:	9509      	str	r5, [sp, #36]	@ 0x24
 800e596:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800e59a:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 800e59e:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 800e5a2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800e5a6:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800e5aa:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800e5ae:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800e5b2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800e5b6:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800e5ba:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800e5be:	b350      	cbz	r0, 800e616 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e5c0:	682b      	ldr	r3, [r5, #0]
 800e5c2:	4628      	mov	r0, r5
 800e5c4:	695b      	ldr	r3, [r3, #20]
 800e5c6:	4798      	blx	r3
 800e5c8:	4607      	mov	r7, r0
 800e5ca:	b320      	cbz	r0, 800e616 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e5cc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e5ce:	6803      	ldr	r3, [r0, #0]
 800e5d0:	4639      	mov	r1, r7
 800e5d2:	68db      	ldr	r3, [r3, #12]
 800e5d4:	4798      	blx	r3
 800e5d6:	4606      	mov	r6, r0
 800e5d8:	b1e8      	cbz	r0, 800e616 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e5da:	7b43      	ldrb	r3, [r0, #13]
 800e5dc:	7a82      	ldrb	r2, [r0, #10]
 800e5de:	005b      	lsls	r3, r3, #1
 800e5e0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e5e4:	4313      	orrs	r3, r2
 800e5e6:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800e5ea:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 800e5ee:	2b06      	cmp	r3, #6
 800e5f0:	d111      	bne.n	800e616 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e5f2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e5f4:	6803      	ldr	r3, [r0, #0]
 800e5f6:	4632      	mov	r2, r6
 800e5f8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e5fa:	4639      	mov	r1, r7
 800e5fc:	4798      	blx	r3
 800e5fe:	7b73      	ldrb	r3, [r6, #13]
 800e600:	005b      	lsls	r3, r3, #1
 800e602:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e606:	7ab3      	ldrb	r3, [r6, #10]
 800e608:	4313      	orrs	r3, r2
 800e60a:	4418      	add	r0, r3
 800e60c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800e610:	4418      	add	r0, r3
 800e612:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 800e616:	2600      	movs	r6, #0
 800e618:	4637      	mov	r7, r6
 800e61a:	a806      	add	r0, sp, #24
 800e61c:	f002 f81e 	bl	801065c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800e620:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 800e624:	9b03      	ldr	r3, [sp, #12]
 800e626:	4286      	cmp	r6, r0
 800e628:	eba9 0903 	sub.w	r9, r9, r3
 800e62c:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800e630:	bfb8      	it	lt
 800e632:	4606      	movlt	r6, r0
 800e634:	3701      	adds	r7, #1
 800e636:	b236      	sxth	r6, r6
 800e638:	b2bf      	uxth	r7, r7
 800e63a:	fa0f f989 	sxth.w	r9, r9
 800e63e:	2b00      	cmp	r3, #0
 800e640:	f43f af0d 	beq.w	800e45e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e644:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 800e648:	2b00      	cmp	r3, #0
 800e64a:	f47f af08 	bne.w	800e45e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e64e:	7a2b      	ldrb	r3, [r5, #8]
 800e650:	444b      	add	r3, r9
 800e652:	2b00      	cmp	r3, #0
 800e654:	dce1      	bgt.n	800e61a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 800e656:	e702      	b.n	800e45e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e658:	20013bc8 	.word	0x20013bc8
 800e65c:	20013bc4 	.word	0x20013bc4
 800e660:	20013bcc 	.word	0x20013bcc
 800e664:	20013bd0 	.word	0x20013bd0
 800e668:	ebaa 0606 	sub.w	r6, sl, r6
 800e66c:	2002      	movs	r0, #2
 800e66e:	fb96 f6f0 	sdiv	r6, r6, r0
 800e672:	e71d      	b.n	800e4b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800e674:	441e      	add	r6, r3
 800e676:	ebaa 0606 	sub.w	r6, sl, r6
 800e67a:	e719      	b.n	800e4b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800e67c:	8925      	ldrh	r5, [r4, #8]
 800e67e:	1aed      	subs	r5, r5, r3
 800e680:	eba5 050a 	sub.w	r5, r5, sl
 800e684:	fa0f fb85 	sxth.w	fp, r5
 800e688:	8965      	ldrh	r5, [r4, #10]
 800e68a:	eba5 0509 	sub.w	r5, r5, r9
 800e68e:	b22d      	sxth	r5, r5
 800e690:	e72e      	b.n	800e4f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800e692:	8965      	ldrh	r5, [r4, #10]
 800e694:	1aed      	subs	r5, r5, r3
 800e696:	eba5 050a 	sub.w	r5, r5, sl
 800e69a:	4633      	mov	r3, r6
 800e69c:	b22d      	sxth	r5, r5
 800e69e:	463e      	mov	r6, r7
 800e6a0:	f04f 0b00 	mov.w	fp, #0
 800e6a4:	461f      	mov	r7, r3
 800e6a6:	e723      	b.n	800e4f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800e6a8:	2500      	movs	r5, #0
 800e6aa:	e721      	b.n	800e4f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0800e6ac <_ZN8touchgfx8TextAreaD0Ev>:
 800e6ac:	b510      	push	{r4, lr}
 800e6ae:	2148      	movs	r1, #72	@ 0x48
 800e6b0:	4604      	mov	r4, r0
 800e6b2:	f014 ffd8 	bl	8023666 <_ZdlPvj>
 800e6b6:	4620      	mov	r0, r4
 800e6b8:	bd10      	pop	{r4, pc}
	...

0800e6bc <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e6bc:	b513      	push	{r0, r1, r4, lr}
 800e6be:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 800e6c2:	4604      	mov	r4, r0
 800e6c4:	b1fb      	cbz	r3, 800e706 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e6c6:	4b16      	ldr	r3, [pc, #88]	@ (800e720 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e6c8:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800e6ca:	881b      	ldrh	r3, [r3, #0]
 800e6cc:	428b      	cmp	r3, r1
 800e6ce:	d91a      	bls.n	800e706 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e6d0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e6d4:	2b00      	cmp	r3, #0
 800e6d6:	dd16      	ble.n	800e706 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e6d8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e6dc:	2b00      	cmp	r3, #0
 800e6de:	dd12      	ble.n	800e706 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e6e0:	4b10      	ldr	r3, [pc, #64]	@ (800e724 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e6e2:	6818      	ldr	r0, [r3, #0]
 800e6e4:	f7f5 fa22 	bl	8003b2c <_ZNK8touchgfx5Texts7getTextEt>
 800e6e8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800e6ec:	6822      	ldr	r2, [r4, #0]
 800e6ee:	2b00      	cmp	r3, #0
 800e6f0:	db06      	blt.n	800e700 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e6f2:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800e6f6:	2b00      	cmp	r3, #0
 800e6f8:	db02      	blt.n	800e700 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e6fa:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e6fc:	4298      	cmp	r0, r3
 800e6fe:	d004      	beq.n	800e70a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e700:	6953      	ldr	r3, [r2, #20]
 800e702:	4620      	mov	r0, r4
 800e704:	4798      	blx	r3
 800e706:	b002      	add	sp, #8
 800e708:	bd10      	pop	{r4, pc}
 800e70a:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 800e70e:	c903      	ldmia	r1, {r0, r1}
 800e710:	466b      	mov	r3, sp
 800e712:	e883 0003 	stmia.w	r3, {r0, r1}
 800e716:	6912      	ldr	r2, [r2, #16]
 800e718:	4619      	mov	r1, r3
 800e71a:	4620      	mov	r0, r4
 800e71c:	4790      	blx	r2
 800e71e:	e7f2      	b.n	800e706 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e720:	20013bc8 	.word	0x20013bc8
 800e724:	20013bd0 	.word	0x20013bd0

0800e728 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e728:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e72c:	4b44      	ldr	r3, [pc, #272]	@ (800e840 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e72e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800e730:	881b      	ldrh	r3, [r3, #0]
 800e732:	4293      	cmp	r3, r2
 800e734:	b08e      	sub	sp, #56	@ 0x38
 800e736:	4604      	mov	r4, r0
 800e738:	d97e      	bls.n	800e838 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e73a:	6808      	ldr	r0, [r1, #0]
 800e73c:	4d41      	ldr	r5, [pc, #260]	@ (800e844 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e73e:	6849      	ldr	r1, [r1, #4]
 800e740:	ab05      	add	r3, sp, #20
 800e742:	c303      	stmia	r3!, {r0, r1}
 800e744:	4611      	mov	r1, r2
 800e746:	6828      	ldr	r0, [r5, #0]
 800e748:	f7f5 f9f0 	bl	8003b2c <_ZNK8touchgfx5Texts7getTextEt>
 800e74c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800e750:	2b00      	cmp	r3, #0
 800e752:	db11      	blt.n	800e778 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e754:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800e758:	2b00      	cmp	r3, #0
 800e75a:	db0d      	blt.n	800e778 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e75c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e75e:	4298      	cmp	r0, r3
 800e760:	d10a      	bne.n	800e778 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e762:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 800e766:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e76a:	ab09      	add	r3, sp, #36	@ 0x24
 800e76c:	e883 0003 	stmia.w	r3, {r0, r1}
 800e770:	4619      	mov	r1, r3
 800e772:	a805      	add	r0, sp, #20
 800e774:	f7fc ffb0 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 800e778:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e77c:	2b00      	cmp	r3, #0
 800e77e:	dd5b      	ble.n	800e838 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e780:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e784:	2b00      	cmp	r3, #0
 800e786:	dd57      	ble.n	800e838 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e788:	4f2f      	ldr	r7, [pc, #188]	@ (800e848 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e78a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e78c:	683b      	ldr	r3, [r7, #0]
 800e78e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e792:	4b2e      	ldr	r3, [pc, #184]	@ (800e84c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e794:	681b      	ldr	r3, [r3, #0]
 800e796:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e79a:	2e00      	cmp	r6, #0
 800e79c:	d04c      	beq.n	800e838 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e79e:	6823      	ldr	r3, [r4, #0]
 800e7a0:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 800e7a4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800e7a6:	4620      	mov	r0, r4
 800e7a8:	4798      	blx	r3
 800e7aa:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e7ac:	683b      	ldr	r3, [r7, #0]
 800e7ae:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 800e7b2:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 800e7b6:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 800e7ba:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800e7bc:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e7c0:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 800e7c4:	785b      	ldrb	r3, [r3, #1]
 800e7c6:	9609      	str	r6, [sp, #36]	@ 0x24
 800e7c8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e7cc:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800e7d0:	4b1f      	ldr	r3, [pc, #124]	@ (800e850 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800e7d2:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 800e7d6:	681b      	ldr	r3, [r3, #0]
 800e7d8:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 800e7dc:	910b      	str	r1, [sp, #44]	@ 0x2c
 800e7de:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 800e7e2:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 800e7e6:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 800e7ea:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 800e7ee:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800e7f2:	b10a      	cbz	r2, 800e7f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800e7f4:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 800e7f6:	b906      	cbnz	r6, 800e7fa <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800e7f8:	689e      	ldr	r6, [r3, #8]
 800e7fa:	af07      	add	r7, sp, #28
 800e7fc:	4621      	mov	r1, r4
 800e7fe:	4638      	mov	r0, r7
 800e800:	f003 ff10 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e804:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800e806:	6828      	ldr	r0, [r5, #0]
 800e808:	f7f5 f990 	bl	8003b2c <_ZNK8touchgfx5Texts7getTextEt>
 800e80c:	6823      	ldr	r3, [r4, #0]
 800e80e:	4605      	mov	r5, r0
 800e810:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e812:	4620      	mov	r0, r4
 800e814:	4798      	blx	r3
 800e816:	6823      	ldr	r3, [r4, #0]
 800e818:	4680      	mov	r8, r0
 800e81a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e81e:	4620      	mov	r0, r4
 800e820:	4798      	blx	r3
 800e822:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800e826:	ab09      	add	r3, sp, #36	@ 0x24
 800e828:	9300      	str	r3, [sp, #0]
 800e82a:	9501      	str	r5, [sp, #4]
 800e82c:	ab05      	add	r3, sp, #20
 800e82e:	e897 0006 	ldmia.w	r7, {r1, r2}
 800e832:	4630      	mov	r0, r6
 800e834:	f7f5 f92c 	bl	8003a90 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e838:	b00e      	add	sp, #56	@ 0x38
 800e83a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e83e:	bf00      	nop
 800e840:	20013bc8 	.word	0x20013bc8
 800e844:	20013bd0 	.word	0x20013bd0
 800e848:	20013bc4 	.word	0x20013bc4
 800e84c:	20013bcc 	.word	0x20013bcc
 800e850:	20013b6c 	.word	0x20013b6c

0800e854 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800e854:	b570      	push	{r4, r5, r6, lr}
 800e856:	6803      	ldr	r3, [r0, #0]
 800e858:	4604      	mov	r4, r0
 800e85a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e85c:	4615      	mov	r5, r2
 800e85e:	4798      	blx	r3
 800e860:	6823      	ldr	r3, [r4, #0]
 800e862:	4629      	mov	r1, r5
 800e864:	4620      	mov	r0, r4
 800e866:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e868:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e86c:	4718      	bx	r3
	...

0800e870 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e870:	b538      	push	{r3, r4, r5, lr}
 800e872:	4b0e      	ldr	r3, [pc, #56]	@ (800e8ac <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800e874:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800e876:	881b      	ldrh	r3, [r3, #0]
 800e878:	429a      	cmp	r2, r3
 800e87a:	4604      	mov	r4, r0
 800e87c:	d214      	bcs.n	800e8a8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e87e:	6803      	ldr	r3, [r0, #0]
 800e880:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800e882:	4798      	blx	r3
 800e884:	6823      	ldr	r3, [r4, #0]
 800e886:	4605      	mov	r5, r0
 800e888:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800e88a:	4620      	mov	r0, r4
 800e88c:	4798      	blx	r3
 800e88e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e892:	b22d      	sxth	r5, r5
 800e894:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e898:	4601      	mov	r1, r0
 800e89a:	bf06      	itte	eq
 800e89c:	4602      	moveq	r2, r0
 800e89e:	4629      	moveq	r1, r5
 800e8a0:	462a      	movne	r2, r5
 800e8a2:	4620      	mov	r0, r4
 800e8a4:	f7ff ffd6 	bl	800e854 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e8a8:	bd38      	pop	{r3, r4, r5, pc}
 800e8aa:	bf00      	nop
 800e8ac:	20013bc8 	.word	0x20013bc8

0800e8b0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e8b0:	b530      	push	{r4, r5, lr}
 800e8b2:	888b      	ldrh	r3, [r1, #4]
 800e8b4:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800e8b6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e8ba:	b085      	sub	sp, #20
 800e8bc:	4604      	mov	r4, r0
 800e8be:	b923      	cbnz	r3, 800e8ca <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e8c0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e8c4:	b90b      	cbnz	r3, 800e8ca <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e8c6:	f7ff ffd3 	bl	800e870 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e8ca:	6823      	ldr	r3, [r4, #0]
 800e8cc:	466d      	mov	r5, sp
 800e8ce:	4621      	mov	r1, r4
 800e8d0:	4628      	mov	r0, r5
 800e8d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800e8d6:	4798      	blx	r3
 800e8d8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e8dc:	343c      	adds	r4, #60	@ 0x3c
 800e8de:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e8e2:	b005      	add	sp, #20
 800e8e4:	bd30      	pop	{r4, r5, pc}

0800e8e6 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e8e6:	2300      	movs	r3, #0
 800e8e8:	8083      	strh	r3, [r0, #4]
 800e8ea:	80c3      	strh	r3, [r0, #6]
 800e8ec:	8003      	strh	r3, [r0, #0]
 800e8ee:	8043      	strh	r3, [r0, #2]
 800e8f0:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800e8f4:	2bff      	cmp	r3, #255	@ 0xff
 800e8f6:	bf01      	itttt	eq
 800e8f8:	890b      	ldrheq	r3, [r1, #8]
 800e8fa:	8083      	strheq	r3, [r0, #4]
 800e8fc:	894b      	ldrheq	r3, [r1, #10]
 800e8fe:	80c3      	strheq	r3, [r0, #6]
 800e900:	4770      	bx	lr
	...

0800e904 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e904:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e906:	4604      	mov	r4, r0
 800e908:	6808      	ldr	r0, [r1, #0]
 800e90a:	6849      	ldr	r1, [r1, #4]
 800e90c:	466b      	mov	r3, sp
 800e90e:	c303      	stmia	r3!, {r0, r1}
 800e910:	6823      	ldr	r3, [r4, #0]
 800e912:	4669      	mov	r1, sp
 800e914:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e916:	4620      	mov	r0, r4
 800e918:	4798      	blx	r3
 800e91a:	4b08      	ldr	r3, [pc, #32]	@ (800e93c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e91c:	681b      	ldr	r3, [r3, #0]
 800e91e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800e922:	b10a      	cbz	r2, 800e928 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e924:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800e926:	b900      	cbnz	r0, 800e92a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e928:	6898      	ldr	r0, [r3, #8]
 800e92a:	6803      	ldr	r3, [r0, #0]
 800e92c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800e92e:	6a1d      	ldr	r5, [r3, #32]
 800e930:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800e934:	4669      	mov	r1, sp
 800e936:	47a8      	blx	r5
 800e938:	b003      	add	sp, #12
 800e93a:	bd30      	pop	{r4, r5, pc}
 800e93c:	20013b6c 	.word	0x20013b6c

0800e940 <_ZN8touchgfx3BoxD1Ev>:
 800e940:	4770      	bx	lr

0800e942 <_ZN8touchgfx3BoxD0Ev>:
 800e942:	b510      	push	{r4, lr}
 800e944:	212c      	movs	r1, #44	@ 0x2c
 800e946:	4604      	mov	r4, r0
 800e948:	f014 fe8d 	bl	8023666 <_ZdlPvj>
 800e94c:	4620      	mov	r0, r4
 800e94e:	bd10      	pop	{r4, pc}

0800e950 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e950:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800e954:	b12a      	cbz	r2, 800e962 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e956:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800e95a:	b112      	cbz	r2, 800e962 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e95c:	6803      	ldr	r3, [r0, #0]
 800e95e:	695b      	ldr	r3, [r3, #20]
 800e960:	4718      	bx	r3
 800e962:	4770      	bx	lr

0800e964 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800e964:	4770      	bx	lr

0800e966 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e966:	b510      	push	{r4, lr}
 800e968:	2134      	movs	r1, #52	@ 0x34
 800e96a:	4604      	mov	r4, r0
 800e96c:	f014 fe7b 	bl	8023666 <_ZdlPvj>
 800e970:	4620      	mov	r0, r4
 800e972:	bd10      	pop	{r4, pc}

0800e974 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800e974:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e978:	4604      	mov	r4, r0
 800e97a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800e97c:	8962      	ldrh	r2, [r4, #10]
 800e97e:	b218      	sxth	r0, r3
 800e980:	460e      	mov	r6, r1
 800e982:	005b      	lsls	r3, r3, #1
 800e984:	8921      	ldrh	r1, [r4, #8]
 800e986:	b29b      	uxth	r3, r3
 800e988:	1ac9      	subs	r1, r1, r3
 800e98a:	b08e      	sub	sp, #56	@ 0x38
 800e98c:	b209      	sxth	r1, r1
 800e98e:	1ad3      	subs	r3, r2, r3
 800e990:	b21b      	sxth	r3, r3
 800e992:	2900      	cmp	r1, #0
 800e994:	f8ad 0000 	strh.w	r0, [sp]
 800e998:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e99c:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e9a0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e9a4:	dd5e      	ble.n	800ea64 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e9a6:	2b00      	cmp	r3, #0
 800e9a8:	dd5c      	ble.n	800ea64 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e9aa:	6830      	ldr	r0, [r6, #0]
 800e9ac:	6871      	ldr	r1, [r6, #4]
 800e9ae:	ab02      	add	r3, sp, #8
 800e9b0:	c303      	stmia	r3!, {r0, r1}
 800e9b2:	4669      	mov	r1, sp
 800e9b4:	a802      	add	r0, sp, #8
 800e9b6:	f7fc fe8f 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 800e9ba:	4620      	mov	r0, r4
 800e9bc:	a902      	add	r1, sp, #8
 800e9be:	f7ff ffa1 	bl	800e904 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800e9c2:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 800e9c4:	2800      	cmp	r0, #0
 800e9c6:	d05f      	beq.n	800ea88 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e9c8:	8963      	ldrh	r3, [r4, #10]
 800e9ca:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e9ce:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e9d2:	1a1f      	subs	r7, r3, r0
 800e9d4:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800e9d8:	b202      	sxth	r2, r0
 800e9da:	2500      	movs	r5, #0
 800e9dc:	b21b      	sxth	r3, r3
 800e9de:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 800e9e2:	1a09      	subs	r1, r1, r0
 800e9e4:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 800e9e8:	9506      	str	r5, [sp, #24]
 800e9ea:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e9ee:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e9f2:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 800e9f6:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 800e9fa:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800e9fe:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800ea02:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800ea06:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 800ea0a:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800ea0e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800ea12:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ea16:	af04      	add	r7, sp, #16
 800ea18:	ab06      	add	r3, sp, #24
 800ea1a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800ea1e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ea22:	e887 0003 	stmia.w	r7, {r0, r1}
 800ea26:	4631      	mov	r1, r6
 800ea28:	4638      	mov	r0, r7
 800ea2a:	f7fc fe55 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 800ea2e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800ea32:	2b00      	cmp	r3, #0
 800ea34:	dd12      	ble.n	800ea5c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800ea36:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800ea3a:	2b00      	cmp	r3, #0
 800ea3c:	dd0e      	ble.n	800ea5c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800ea3e:	6823      	ldr	r3, [r4, #0]
 800ea40:	4639      	mov	r1, r7
 800ea42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ea44:	4620      	mov	r0, r4
 800ea46:	4798      	blx	r3
 800ea48:	f7f4 f864 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 800ea4c:	6803      	ldr	r3, [r0, #0]
 800ea4e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800ea50:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800ea54:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800ea58:	4639      	mov	r1, r7
 800ea5a:	47c0      	blx	r8
 800ea5c:	3501      	adds	r5, #1
 800ea5e:	2d04      	cmp	r5, #4
 800ea60:	d1da      	bne.n	800ea18 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800ea62:	e011      	b.n	800ea88 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800ea64:	6830      	ldr	r0, [r6, #0]
 800ea66:	6871      	ldr	r1, [r6, #4]
 800ea68:	ab06      	add	r3, sp, #24
 800ea6a:	c303      	stmia	r3!, {r0, r1}
 800ea6c:	6823      	ldr	r3, [r4, #0]
 800ea6e:	a906      	add	r1, sp, #24
 800ea70:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ea72:	4620      	mov	r0, r4
 800ea74:	4798      	blx	r3
 800ea76:	f7f4 f84d 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 800ea7a:	6803      	ldr	r3, [r0, #0]
 800ea7c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800ea7e:	6a1d      	ldr	r5, [r3, #32]
 800ea80:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800ea84:	a906      	add	r1, sp, #24
 800ea86:	47a8      	blx	r5
 800ea88:	b00e      	add	sp, #56	@ 0x38
 800ea8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ea8e <_ZN8touchgfx7OutlineD1Ev>:
 800ea8e:	4770      	bx	lr

0800ea90 <_ZN8touchgfx7OutlineD0Ev>:
 800ea90:	b510      	push	{r4, lr}
 800ea92:	2130      	movs	r1, #48	@ 0x30
 800ea94:	4604      	mov	r4, r0
 800ea96:	f014 fde6 	bl	8023666 <_ZdlPvj>
 800ea9a:	4620      	mov	r0, r4
 800ea9c:	bd10      	pop	{r4, pc}

0800ea9e <_ZN8touchgfx7Outline5resetEv>:
 800ea9e:	b510      	push	{r4, lr}
 800eaa0:	4604      	mov	r4, r0
 800eaa2:	f000 fe81 	bl	800f7a8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800eaa6:	60e0      	str	r0, [r4, #12]
 800eaa8:	f000 fe84 	bl	800f7b4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800eaac:	68e3      	ldr	r3, [r4, #12]
 800eaae:	6123      	str	r3, [r4, #16]
 800eab0:	08c0      	lsrs	r0, r0, #3
 800eab2:	2200      	movs	r2, #0
 800eab4:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800eab8:	3801      	subs	r0, #1
 800eaba:	6060      	str	r0, [r4, #4]
 800eabc:	60a2      	str	r2, [r4, #8]
 800eabe:	8019      	strh	r1, [r3, #0]
 800eac0:	8059      	strh	r1, [r3, #2]
 800eac2:	809a      	strh	r2, [r3, #4]
 800eac4:	80da      	strh	r2, [r3, #6]
 800eac6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800eac8:	f023 0301 	bic.w	r3, r3, #1
 800eacc:	f043 0302 	orr.w	r3, r3, #2
 800ead0:	6263      	str	r3, [r4, #36]	@ 0x24
 800ead2:	bd10      	pop	{r4, pc}

0800ead4 <_ZN8touchgfx7OutlineC1Ev>:
 800ead4:	b510      	push	{r4, lr}
 800ead6:	4b0a      	ldr	r3, [pc, #40]	@ (800eb00 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800ead8:	6003      	str	r3, [r0, #0]
 800eada:	2300      	movs	r3, #0
 800eadc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800eae0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800eae4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800eae8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800eaec:	6243      	str	r3, [r0, #36]	@ 0x24
 800eaee:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800eaf2:	4604      	mov	r4, r0
 800eaf4:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800eaf8:	f7ff ffd1 	bl	800ea9e <_ZN8touchgfx7Outline5resetEv>
 800eafc:	4620      	mov	r0, r4
 800eafe:	bd10      	pop	{r4, pc}
 800eb00:	080275ac 	.word	0x080275ac

0800eb04 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800eb04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb08:	b093      	sub	sp, #76	@ 0x4c
 800eb0a:	1156      	asrs	r6, r2, #5
 800eb0c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800eb0e:	9305      	str	r3, [sp, #20]
 800eb10:	f004 051f 	and.w	r5, r4, #31
 800eb14:	1153      	asrs	r3, r2, #5
 800eb16:	9504      	str	r5, [sp, #16]
 800eb18:	1165      	asrs	r5, r4, #5
 800eb1a:	9303      	str	r3, [sp, #12]
 800eb1c:	42ae      	cmp	r6, r5
 800eb1e:	ea4f 1364 	mov.w	r3, r4, asr #5
 800eb22:	9306      	str	r3, [sp, #24]
 800eb24:	f002 031f 	and.w	r3, r2, #31
 800eb28:	f040 80f8 	bne.w	800ed1c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800eb2c:	9c04      	ldr	r4, [sp, #16]
 800eb2e:	9a05      	ldr	r2, [sp, #20]
 800eb30:	42a3      	cmp	r3, r4
 800eb32:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800eb36:	6902      	ldr	r2, [r0, #16]
 800eb38:	d125      	bne.n	800eb86 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800eb3a:	f9b2 3000 	ldrsh.w	r3, [r2]
 800eb3e:	459e      	cmp	lr, r3
 800eb40:	d103      	bne.n	800eb4a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800eb42:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800eb46:	429e      	cmp	r6, r3
 800eb48:	d035      	beq.n	800ebb6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eb4a:	88d1      	ldrh	r1, [r2, #6]
 800eb4c:	8893      	ldrh	r3, [r2, #4]
 800eb4e:	430b      	orrs	r3, r1
 800eb50:	d010      	beq.n	800eb74 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800eb52:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800eb56:	2b00      	cmp	r3, #0
 800eb58:	db0c      	blt.n	800eb74 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800eb5a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800eb5c:	428b      	cmp	r3, r1
 800eb5e:	da09      	bge.n	800eb74 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800eb60:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800eb64:	428b      	cmp	r3, r1
 800eb66:	bf38      	it	cc
 800eb68:	3208      	addcc	r2, #8
 800eb6a:	f103 0301 	add.w	r3, r3, #1
 800eb6e:	bf38      	it	cc
 800eb70:	6102      	strcc	r2, [r0, #16]
 800eb72:	6083      	str	r3, [r0, #8]
 800eb74:	6903      	ldr	r3, [r0, #16]
 800eb76:	9a03      	ldr	r2, [sp, #12]
 800eb78:	f8a3 e000 	strh.w	lr, [r3]
 800eb7c:	805a      	strh	r2, [r3, #2]
 800eb7e:	2200      	movs	r2, #0
 800eb80:	809a      	strh	r2, [r3, #4]
 800eb82:	80da      	strh	r2, [r3, #6]
 800eb84:	e017      	b.n	800ebb6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eb86:	9c05      	ldr	r4, [sp, #20]
 800eb88:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800eb8c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800eb90:	f004 041f 	and.w	r4, r4, #31
 800eb94:	114e      	asrs	r6, r1, #5
 800eb96:	9402      	str	r4, [sp, #8]
 800eb98:	9c04      	ldr	r4, [sp, #16]
 800eb9a:	4576      	cmp	r6, lr
 800eb9c:	f001 0c1f 	and.w	ip, r1, #31
 800eba0:	eba4 0403 	sub.w	r4, r4, r3
 800eba4:	d10a      	bne.n	800ebbc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800eba6:	9b02      	ldr	r3, [sp, #8]
 800eba8:	449c      	add	ip, r3
 800ebaa:	44a0      	add	r8, r4
 800ebac:	fb04 a40c 	mla	r4, r4, ip, sl
 800ebb0:	f8a2 8004 	strh.w	r8, [r2, #4]
 800ebb4:	80d4      	strh	r4, [r2, #6]
 800ebb6:	b013      	add	sp, #76	@ 0x4c
 800ebb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ebbc:	9d05      	ldr	r5, [sp, #20]
 800ebbe:	1a69      	subs	r1, r5, r1
 800ebc0:	bf5b      	ittet	pl
 800ebc2:	f1cc 0520 	rsbpl	r5, ip, #32
 800ebc6:	436c      	mulpl	r4, r5
 800ebc8:	2500      	movmi	r5, #0
 800ebca:	2520      	movpl	r5, #32
 800ebcc:	bf44      	itt	mi
 800ebce:	fb04 f40c 	mulmi.w	r4, r4, ip
 800ebd2:	4249      	negmi	r1, r1
 800ebd4:	9501      	str	r5, [sp, #4]
 800ebd6:	9f01      	ldr	r7, [sp, #4]
 800ebd8:	fb94 f5f1 	sdiv	r5, r4, r1
 800ebdc:	fb01 4415 	mls	r4, r1, r5, r4
 800ebe0:	bf54      	ite	pl
 800ebe2:	f04f 0901 	movpl.w	r9, #1
 800ebe6:	f04f 39ff 	movmi.w	r9, #4294967295
 800ebea:	2c00      	cmp	r4, #0
 800ebec:	bfb8      	it	lt
 800ebee:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800ebf2:	44bc      	add	ip, r7
 800ebf4:	44a8      	add	r8, r5
 800ebf6:	fb05 ac0c 	mla	ip, r5, ip, sl
 800ebfa:	f8a2 8004 	strh.w	r8, [r2, #4]
 800ebfe:	f8a2 c006 	strh.w	ip, [r2, #6]
 800ec02:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ec06:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800ec0a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800ec0e:	bfb8      	it	lt
 800ec10:	1864      	addlt	r4, r4, r1
 800ec12:	ea58 0202 	orrs.w	r2, r8, r2
 800ec16:	444e      	add	r6, r9
 800ec18:	d011      	beq.n	800ec3e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800ec1a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800ec1e:	f1b8 0f00 	cmp.w	r8, #0
 800ec22:	db0c      	blt.n	800ec3e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800ec24:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800ec26:	4590      	cmp	r8, r2
 800ec28:	da09      	bge.n	800ec3e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800ec2a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800ec2e:	4590      	cmp	r8, r2
 800ec30:	bf3c      	itt	cc
 800ec32:	f10c 0208 	addcc.w	r2, ip, #8
 800ec36:	6102      	strcc	r2, [r0, #16]
 800ec38:	f108 0201 	add.w	r2, r8, #1
 800ec3c:	6082      	str	r2, [r0, #8]
 800ec3e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ec42:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800ec46:	f8ac 6000 	strh.w	r6, [ip]
 800ec4a:	2700      	movs	r7, #0
 800ec4c:	45b6      	cmp	lr, r6
 800ec4e:	f8ac 2002 	strh.w	r2, [ip, #2]
 800ec52:	f8ac 7004 	strh.w	r7, [ip, #4]
 800ec56:	f8ac 7006 	strh.w	r7, [ip, #6]
 800ec5a:	442b      	add	r3, r5
 800ec5c:	d04d      	beq.n	800ecfa <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800ec5e:	9f04      	ldr	r7, [sp, #16]
 800ec60:	1aff      	subs	r7, r7, r3
 800ec62:	443d      	add	r5, r7
 800ec64:	016d      	lsls	r5, r5, #5
 800ec66:	fb95 f8f1 	sdiv	r8, r5, r1
 800ec6a:	fb01 5518 	mls	r5, r1, r8, r5
 800ec6e:	2d00      	cmp	r5, #0
 800ec70:	bfb8      	it	lt
 800ec72:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ec76:	f108 0701 	add.w	r7, r8, #1
 800ec7a:	bfb8      	it	lt
 800ec7c:	186d      	addlt	r5, r5, r1
 800ec7e:	1a64      	subs	r4, r4, r1
 800ec80:	9703      	str	r7, [sp, #12]
 800ec82:	f04f 0a00 	mov.w	sl, #0
 800ec86:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ec8a:	1964      	adds	r4, r4, r5
 800ec8c:	bf58      	it	pl
 800ec8e:	9f03      	ldrpl	r7, [sp, #12]
 800ec90:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800ec94:	bf48      	it	mi
 800ec96:	4647      	movmi	r7, r8
 800ec98:	44bb      	add	fp, r7
 800ec9a:	f8ac b004 	strh.w	fp, [ip, #4]
 800ec9e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800eca2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800eca6:	f8ac b006 	strh.w	fp, [ip, #6]
 800ecaa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ecae:	443b      	add	r3, r7
 800ecb0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ecb4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ecb8:	bf58      	it	pl
 800ecba:	1a64      	subpl	r4, r4, r1
 800ecbc:	ea5b 0707 	orrs.w	r7, fp, r7
 800ecc0:	444e      	add	r6, r9
 800ecc2:	d011      	beq.n	800ece8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ecc4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800ecc8:	f1bb 0f00 	cmp.w	fp, #0
 800eccc:	db0c      	blt.n	800ece8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ecce:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ecd0:	45bb      	cmp	fp, r7
 800ecd2:	da09      	bge.n	800ece8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ecd4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ecd8:	45bb      	cmp	fp, r7
 800ecda:	bf3c      	itt	cc
 800ecdc:	f10c 0708 	addcc.w	r7, ip, #8
 800ece0:	6107      	strcc	r7, [r0, #16]
 800ece2:	f10b 0701 	add.w	r7, fp, #1
 800ece6:	6087      	str	r7, [r0, #8]
 800ece8:	6907      	ldr	r7, [r0, #16]
 800ecea:	45b6      	cmp	lr, r6
 800ecec:	803e      	strh	r6, [r7, #0]
 800ecee:	807a      	strh	r2, [r7, #2]
 800ecf0:	f8a7 a004 	strh.w	sl, [r7, #4]
 800ecf4:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ecf8:	d1c5      	bne.n	800ec86 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800ecfa:	9a04      	ldr	r2, [sp, #16]
 800ecfc:	1ad3      	subs	r3, r2, r3
 800ecfe:	6902      	ldr	r2, [r0, #16]
 800ed00:	8891      	ldrh	r1, [r2, #4]
 800ed02:	88d6      	ldrh	r6, [r2, #6]
 800ed04:	4419      	add	r1, r3
 800ed06:	8091      	strh	r1, [r2, #4]
 800ed08:	9902      	ldr	r1, [sp, #8]
 800ed0a:	f101 0c20 	add.w	ip, r1, #32
 800ed0e:	9901      	ldr	r1, [sp, #4]
 800ed10:	ebac 0c01 	sub.w	ip, ip, r1
 800ed14:	fb03 630c 	mla	r3, r3, ip, r6
 800ed18:	80d3      	strh	r3, [r2, #6]
 800ed1a:	e74c      	b.n	800ebb6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ed1c:	9d05      	ldr	r5, [sp, #20]
 800ed1e:	1aa2      	subs	r2, r4, r2
 800ed20:	eba5 0501 	sub.w	r5, r5, r1
 800ed24:	9508      	str	r5, [sp, #32]
 800ed26:	9202      	str	r2, [sp, #8]
 800ed28:	f140 8128 	bpl.w	800ef7c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800ed2c:	9a03      	ldr	r2, [sp, #12]
 800ed2e:	2a00      	cmp	r2, #0
 800ed30:	f6ff af41 	blt.w	800ebb6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ed34:	9a02      	ldr	r2, [sp, #8]
 800ed36:	4252      	negs	r2, r2
 800ed38:	9202      	str	r2, [sp, #8]
 800ed3a:	9a06      	ldr	r2, [sp, #24]
 800ed3c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800ed40:	f04f 34ff 	mov.w	r4, #4294967295
 800ed44:	9206      	str	r2, [sp, #24]
 800ed46:	462a      	mov	r2, r5
 800ed48:	940b      	str	r4, [sp, #44]	@ 0x2c
 800ed4a:	435a      	muls	r2, r3
 800ed4c:	2400      	movs	r4, #0
 800ed4e:	9d02      	ldr	r5, [sp, #8]
 800ed50:	9401      	str	r4, [sp, #4]
 800ed52:	9c02      	ldr	r4, [sp, #8]
 800ed54:	fb92 f4f4 	sdiv	r4, r2, r4
 800ed58:	fb05 2214 	mls	r2, r5, r4, r2
 800ed5c:	2a00      	cmp	r2, #0
 800ed5e:	9207      	str	r2, [sp, #28]
 800ed60:	bfbc      	itt	lt
 800ed62:	1952      	addlt	r2, r2, r5
 800ed64:	9207      	strlt	r2, [sp, #28]
 800ed66:	9a01      	ldr	r2, [sp, #4]
 800ed68:	6905      	ldr	r5, [r0, #16]
 800ed6a:	bfb8      	it	lt
 800ed6c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800ed70:	eb04 0901 	add.w	r9, r4, r1
 800ed74:	429a      	cmp	r2, r3
 800ed76:	ea4f 1669 	mov.w	r6, r9, asr #5
 800ed7a:	f040 8112 	bne.w	800efa2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800ed7e:	f9b5 3000 	ldrsh.w	r3, [r5]
 800ed82:	429e      	cmp	r6, r3
 800ed84:	d104      	bne.n	800ed90 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800ed86:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ed8a:	9a03      	ldr	r2, [sp, #12]
 800ed8c:	429a      	cmp	r2, r3
 800ed8e:	d01b      	beq.n	800edc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ed90:	88ea      	ldrh	r2, [r5, #6]
 800ed92:	88ab      	ldrh	r3, [r5, #4]
 800ed94:	4313      	orrs	r3, r2
 800ed96:	d010      	beq.n	800edba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ed98:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ed9c:	2a00      	cmp	r2, #0
 800ed9e:	db0c      	blt.n	800edba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800eda0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800eda2:	429a      	cmp	r2, r3
 800eda4:	da09      	bge.n	800edba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800eda6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800edaa:	429a      	cmp	r2, r3
 800edac:	bf38      	it	cc
 800edae:	3508      	addcc	r5, #8
 800edb0:	f102 0201 	add.w	r2, r2, #1
 800edb4:	bf38      	it	cc
 800edb6:	6105      	strcc	r5, [r0, #16]
 800edb8:	6082      	str	r2, [r0, #8]
 800edba:	6903      	ldr	r3, [r0, #16]
 800edbc:	9a03      	ldr	r2, [sp, #12]
 800edbe:	805a      	strh	r2, [r3, #2]
 800edc0:	2200      	movs	r2, #0
 800edc2:	801e      	strh	r6, [r3, #0]
 800edc4:	809a      	strh	r2, [r3, #4]
 800edc6:	80da      	strh	r2, [r3, #6]
 800edc8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800edca:	9a03      	ldr	r2, [sp, #12]
 800edcc:	6901      	ldr	r1, [r0, #16]
 800edce:	441a      	add	r2, r3
 800edd0:	f9b1 3000 	ldrsh.w	r3, [r1]
 800edd4:	42b3      	cmp	r3, r6
 800edd6:	d103      	bne.n	800ede0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800edd8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800eddc:	429a      	cmp	r2, r3
 800edde:	d01a      	beq.n	800ee16 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800ede0:	88cc      	ldrh	r4, [r1, #6]
 800ede2:	888b      	ldrh	r3, [r1, #4]
 800ede4:	4323      	orrs	r3, r4
 800ede6:	d010      	beq.n	800ee0a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ede8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800edec:	2c00      	cmp	r4, #0
 800edee:	db0c      	blt.n	800ee0a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800edf0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800edf2:	429c      	cmp	r4, r3
 800edf4:	da09      	bge.n	800ee0a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800edf6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800edfa:	429c      	cmp	r4, r3
 800edfc:	bf38      	it	cc
 800edfe:	3108      	addcc	r1, #8
 800ee00:	f104 0401 	add.w	r4, r4, #1
 800ee04:	bf38      	it	cc
 800ee06:	6101      	strcc	r1, [r0, #16]
 800ee08:	6084      	str	r4, [r0, #8]
 800ee0a:	6903      	ldr	r3, [r0, #16]
 800ee0c:	2100      	movs	r1, #0
 800ee0e:	801e      	strh	r6, [r3, #0]
 800ee10:	805a      	strh	r2, [r3, #2]
 800ee12:	8099      	strh	r1, [r3, #4]
 800ee14:	80d9      	strh	r1, [r3, #6]
 800ee16:	9b06      	ldr	r3, [sp, #24]
 800ee18:	4293      	cmp	r3, r2
 800ee1a:	f000 8082 	beq.w	800ef22 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800ee1e:	9b08      	ldr	r3, [sp, #32]
 800ee20:	9c02      	ldr	r4, [sp, #8]
 800ee22:	9902      	ldr	r1, [sp, #8]
 800ee24:	015b      	lsls	r3, r3, #5
 800ee26:	fb93 f1f1 	sdiv	r1, r3, r1
 800ee2a:	fb04 3311 	mls	r3, r4, r1, r3
 800ee2e:	2b00      	cmp	r3, #0
 800ee30:	9103      	str	r1, [sp, #12]
 800ee32:	9308      	str	r3, [sp, #32]
 800ee34:	da04      	bge.n	800ee40 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800ee36:	1e4b      	subs	r3, r1, #1
 800ee38:	9303      	str	r3, [sp, #12]
 800ee3a:	9b08      	ldr	r3, [sp, #32]
 800ee3c:	4423      	add	r3, r4
 800ee3e:	9308      	str	r3, [sp, #32]
 800ee40:	9b07      	ldr	r3, [sp, #28]
 800ee42:	9902      	ldr	r1, [sp, #8]
 800ee44:	1a5b      	subs	r3, r3, r1
 800ee46:	9307      	str	r3, [sp, #28]
 800ee48:	9b01      	ldr	r3, [sp, #4]
 800ee4a:	f1c3 0320 	rsb	r3, r3, #32
 800ee4e:	930e      	str	r3, [sp, #56]	@ 0x38
 800ee50:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800ee52:	9b01      	ldr	r3, [sp, #4]
 800ee54:	1a5b      	subs	r3, r3, r1
 800ee56:	464f      	mov	r7, r9
 800ee58:	930a      	str	r3, [sp, #40]	@ 0x28
 800ee5a:	2600      	movs	r6, #0
 800ee5c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800ee60:	185b      	adds	r3, r3, r1
 800ee62:	bf58      	it	pl
 800ee64:	9902      	ldrpl	r1, [sp, #8]
 800ee66:	9307      	str	r3, [sp, #28]
 800ee68:	bf5d      	ittte	pl
 800ee6a:	1a5b      	subpl	r3, r3, r1
 800ee6c:	9307      	strpl	r3, [sp, #28]
 800ee6e:	9b03      	ldrpl	r3, [sp, #12]
 800ee70:	9903      	ldrmi	r1, [sp, #12]
 800ee72:	bf58      	it	pl
 800ee74:	1c59      	addpl	r1, r3, #1
 800ee76:	4489      	add	r9, r1
 800ee78:	2a00      	cmp	r2, #0
 800ee7a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800ee7e:	db2e      	blt.n	800eede <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ee80:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800ee82:	4293      	cmp	r3, r2
 800ee84:	dd2b      	ble.n	800eede <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ee86:	9c01      	ldr	r4, [sp, #4]
 800ee88:	6905      	ldr	r5, [r0, #16]
 800ee8a:	46a0      	mov	r8, r4
 800ee8c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800ee8e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800ee92:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800ee96:	45a0      	cmp	r8, r4
 800ee98:	f040 814f 	bne.w	800f13a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800ee9c:	f9b5 1000 	ldrsh.w	r1, [r5]
 800eea0:	4551      	cmp	r1, sl
 800eea2:	d103      	bne.n	800eeac <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800eea4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800eea8:	4291      	cmp	r1, r2
 800eeaa:	d018      	beq.n	800eede <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800eeac:	ea5c 010e 	orrs.w	r1, ip, lr
 800eeb0:	d00f      	beq.n	800eed2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800eeb2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800eeb6:	2900      	cmp	r1, #0
 800eeb8:	db0b      	blt.n	800eed2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800eeba:	428b      	cmp	r3, r1
 800eebc:	dd09      	ble.n	800eed2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800eebe:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800eec2:	4299      	cmp	r1, r3
 800eec4:	bf38      	it	cc
 800eec6:	3508      	addcc	r5, #8
 800eec8:	f101 0101 	add.w	r1, r1, #1
 800eecc:	bf38      	it	cc
 800eece:	6105      	strcc	r5, [r0, #16]
 800eed0:	6081      	str	r1, [r0, #8]
 800eed2:	6903      	ldr	r3, [r0, #16]
 800eed4:	f8a3 a000 	strh.w	sl, [r3]
 800eed8:	805a      	strh	r2, [r3, #2]
 800eeda:	809e      	strh	r6, [r3, #4]
 800eedc:	80de      	strh	r6, [r3, #6]
 800eede:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800eee0:	6901      	ldr	r1, [r0, #16]
 800eee2:	441a      	add	r2, r3
 800eee4:	88cc      	ldrh	r4, [r1, #6]
 800eee6:	888b      	ldrh	r3, [r1, #4]
 800eee8:	4323      	orrs	r3, r4
 800eeea:	d010      	beq.n	800ef0e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800eeec:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800eef0:	2c00      	cmp	r4, #0
 800eef2:	db0c      	blt.n	800ef0e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800eef4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800eef6:	429c      	cmp	r4, r3
 800eef8:	da09      	bge.n	800ef0e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800eefa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800eefe:	429c      	cmp	r4, r3
 800ef00:	bf38      	it	cc
 800ef02:	3108      	addcc	r1, #8
 800ef04:	f104 0401 	add.w	r4, r4, #1
 800ef08:	bf38      	it	cc
 800ef0a:	6101      	strcc	r1, [r0, #16]
 800ef0c:	6084      	str	r4, [r0, #8]
 800ef0e:	6903      	ldr	r3, [r0, #16]
 800ef10:	f8a3 a000 	strh.w	sl, [r3]
 800ef14:	805a      	strh	r2, [r3, #2]
 800ef16:	809e      	strh	r6, [r3, #4]
 800ef18:	80de      	strh	r6, [r3, #6]
 800ef1a:	9b06      	ldr	r3, [sp, #24]
 800ef1c:	4293      	cmp	r3, r2
 800ef1e:	464f      	mov	r7, r9
 800ef20:	d19c      	bne.n	800ee5c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800ef22:	9b01      	ldr	r3, [sp, #4]
 800ef24:	6907      	ldr	r7, [r0, #16]
 800ef26:	f1c3 0620 	rsb	r6, r3, #32
 800ef2a:	9b05      	ldr	r3, [sp, #20]
 800ef2c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800ef30:	9b04      	ldr	r3, [sp, #16]
 800ef32:	429e      	cmp	r6, r3
 800ef34:	f040 81cc 	bne.w	800f2d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800ef38:	f9b7 3000 	ldrsh.w	r3, [r7]
 800ef3c:	459e      	cmp	lr, r3
 800ef3e:	d104      	bne.n	800ef4a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800ef40:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ef44:	429a      	cmp	r2, r3
 800ef46:	f43f ae36 	beq.w	800ebb6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ef4a:	88f9      	ldrh	r1, [r7, #6]
 800ef4c:	88bb      	ldrh	r3, [r7, #4]
 800ef4e:	430b      	orrs	r3, r1
 800ef50:	d010      	beq.n	800ef74 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ef52:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ef56:	2b00      	cmp	r3, #0
 800ef58:	db0c      	blt.n	800ef74 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ef5a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800ef5c:	428b      	cmp	r3, r1
 800ef5e:	da09      	bge.n	800ef74 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ef60:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800ef64:	428b      	cmp	r3, r1
 800ef66:	bf38      	it	cc
 800ef68:	3708      	addcc	r7, #8
 800ef6a:	f103 0301 	add.w	r3, r3, #1
 800ef6e:	bf38      	it	cc
 800ef70:	6107      	strcc	r7, [r0, #16]
 800ef72:	6083      	str	r3, [r0, #8]
 800ef74:	6903      	ldr	r3, [r0, #16]
 800ef76:	f8a3 e000 	strh.w	lr, [r3]
 800ef7a:	e5ff      	b.n	800eb7c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800ef7c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800ef7e:	9c03      	ldr	r4, [sp, #12]
 800ef80:	42a2      	cmp	r2, r4
 800ef82:	f6ff ae18 	blt.w	800ebb6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ef86:	9c06      	ldr	r4, [sp, #24]
 800ef88:	42a2      	cmp	r2, r4
 800ef8a:	bfb8      	it	lt
 800ef8c:	3201      	addlt	r2, #1
 800ef8e:	9c08      	ldr	r4, [sp, #32]
 800ef90:	bfb8      	it	lt
 800ef92:	9206      	strlt	r2, [sp, #24]
 800ef94:	f1c3 0220 	rsb	r2, r3, #32
 800ef98:	4362      	muls	r2, r4
 800ef9a:	2401      	movs	r4, #1
 800ef9c:	940b      	str	r4, [sp, #44]	@ 0x2c
 800ef9e:	2420      	movs	r4, #32
 800efa0:	e6d5      	b.n	800ed4e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800efa2:	f009 021f 	and.w	r2, r9, #31
 800efa6:	ea4f 1861 	mov.w	r8, r1, asr #5
 800efaa:	920c      	str	r2, [sp, #48]	@ 0x30
 800efac:	9a01      	ldr	r2, [sp, #4]
 800efae:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800efb2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800efb6:	45b0      	cmp	r8, r6
 800efb8:	f001 011f 	and.w	r1, r1, #31
 800efbc:	eba2 0203 	sub.w	r2, r2, r3
 800efc0:	d108      	bne.n	800efd4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800efc2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800efc4:	4419      	add	r1, r3
 800efc6:	4496      	add	lr, r2
 800efc8:	fb02 a101 	mla	r1, r2, r1, sl
 800efcc:	f8a5 e004 	strh.w	lr, [r5, #4]
 800efd0:	80e9      	strh	r1, [r5, #6]
 800efd2:	e6f9      	b.n	800edc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800efd4:	2c00      	cmp	r4, #0
 800efd6:	f2c0 80a9 	blt.w	800f12c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800efda:	2701      	movs	r7, #1
 800efdc:	f1c1 0c20 	rsb	ip, r1, #32
 800efe0:	970a      	str	r7, [sp, #40]	@ 0x28
 800efe2:	fb02 f20c 	mul.w	r2, r2, ip
 800efe6:	2720      	movs	r7, #32
 800efe8:	9709      	str	r7, [sp, #36]	@ 0x24
 800efea:	fb92 fcf4 	sdiv	ip, r2, r4
 800efee:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800eff0:	fb04 221c 	mls	r2, r4, ip, r2
 800eff4:	2a00      	cmp	r2, #0
 800eff6:	bfb8      	it	lt
 800eff8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800effc:	4439      	add	r1, r7
 800effe:	fb0c a101 	mla	r1, ip, r1, sl
 800f002:	80e9      	strh	r1, [r5, #6]
 800f004:	44e6      	add	lr, ip
 800f006:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800f008:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f00c:	eb08 0501 	add.w	r5, r8, r1
 800f010:	6901      	ldr	r1, [r0, #16]
 800f012:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800f016:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800f01a:	bfb8      	it	lt
 800f01c:	1912      	addlt	r2, r2, r4
 800f01e:	ea58 070e 	orrs.w	r7, r8, lr
 800f022:	d010      	beq.n	800f046 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f024:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800f028:	f1be 0f00 	cmp.w	lr, #0
 800f02c:	db0b      	blt.n	800f046 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f02e:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800f030:	45be      	cmp	lr, r7
 800f032:	da08      	bge.n	800f046 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f034:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f038:	45be      	cmp	lr, r7
 800f03a:	bf3c      	itt	cc
 800f03c:	3108      	addcc	r1, #8
 800f03e:	6101      	strcc	r1, [r0, #16]
 800f040:	f10e 0101 	add.w	r1, lr, #1
 800f044:	6081      	str	r1, [r0, #8]
 800f046:	6901      	ldr	r1, [r0, #16]
 800f048:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800f04c:	800d      	strh	r5, [r1, #0]
 800f04e:	f04f 0e00 	mov.w	lr, #0
 800f052:	42ae      	cmp	r6, r5
 800f054:	f8a1 8002 	strh.w	r8, [r1, #2]
 800f058:	f8a1 e004 	strh.w	lr, [r1, #4]
 800f05c:	f8a1 e006 	strh.w	lr, [r1, #6]
 800f060:	4463      	add	r3, ip
 800f062:	d054      	beq.n	800f10e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800f064:	9901      	ldr	r1, [sp, #4]
 800f066:	1ac9      	subs	r1, r1, r3
 800f068:	4461      	add	r1, ip
 800f06a:	0149      	lsls	r1, r1, #5
 800f06c:	fb91 fef4 	sdiv	lr, r1, r4
 800f070:	fb04 111e 	mls	r1, r4, lr, r1
 800f074:	2900      	cmp	r1, #0
 800f076:	bfb8      	it	lt
 800f078:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800f07c:	f10e 0701 	add.w	r7, lr, #1
 800f080:	bfb8      	it	lt
 800f082:	1909      	addlt	r1, r1, r4
 800f084:	1b12      	subs	r2, r2, r4
 800f086:	970d      	str	r7, [sp, #52]	@ 0x34
 800f088:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800f08c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800f08e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800f092:	1852      	adds	r2, r2, r1
 800f094:	bf54      	ite	pl
 800f096:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800f09a:	46f4      	movmi	ip, lr
 800f09c:	44e3      	add	fp, ip
 800f09e:	f8aa b004 	strh.w	fp, [sl, #4]
 800f0a2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800f0a6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800f0aa:	f8aa b006 	strh.w	fp, [sl, #6]
 800f0ae:	4463      	add	r3, ip
 800f0b0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f0b4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f0b8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800f0bc:	bf58      	it	pl
 800f0be:	1b12      	subpl	r2, r2, r4
 800f0c0:	443d      	add	r5, r7
 800f0c2:	ea5b 070a 	orrs.w	r7, fp, sl
 800f0c6:	d014      	beq.n	800f0f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f0c8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800f0cc:	f1ba 0f00 	cmp.w	sl, #0
 800f0d0:	db0f      	blt.n	800f0f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f0d2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800f0d4:	45ba      	cmp	sl, r7
 800f0d6:	da0c      	bge.n	800f0f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f0d8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800f0dc:	45ba      	cmp	sl, r7
 800f0de:	bf38      	it	cc
 800f0e0:	f10c 0c08 	addcc.w	ip, ip, #8
 800f0e4:	f10a 0a01 	add.w	sl, sl, #1
 800f0e8:	bf38      	it	cc
 800f0ea:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800f0ee:	f8c0 a008 	str.w	sl, [r0, #8]
 800f0f2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f0f6:	f04f 0700 	mov.w	r7, #0
 800f0fa:	42ae      	cmp	r6, r5
 800f0fc:	f8ac 5000 	strh.w	r5, [ip]
 800f100:	f8ac 8002 	strh.w	r8, [ip, #2]
 800f104:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f108:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f10c:	d1bc      	bne.n	800f088 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800f10e:	6904      	ldr	r4, [r0, #16]
 800f110:	9a01      	ldr	r2, [sp, #4]
 800f112:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f114:	1ad3      	subs	r3, r2, r3
 800f116:	88a2      	ldrh	r2, [r4, #4]
 800f118:	441a      	add	r2, r3
 800f11a:	80a2      	strh	r2, [r4, #4]
 800f11c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800f11e:	3120      	adds	r1, #32
 800f120:	1a89      	subs	r1, r1, r2
 800f122:	88e2      	ldrh	r2, [r4, #6]
 800f124:	fb03 2301 	mla	r3, r3, r1, r2
 800f128:	80e3      	strh	r3, [r4, #6]
 800f12a:	e64d      	b.n	800edc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f12c:	f04f 37ff 	mov.w	r7, #4294967295
 800f130:	970a      	str	r7, [sp, #40]	@ 0x28
 800f132:	434a      	muls	r2, r1
 800f134:	4264      	negs	r4, r4
 800f136:	2700      	movs	r7, #0
 800f138:	e756      	b.n	800efe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800f13a:	ea4f 1867 	mov.w	r8, r7, asr #5
 800f13e:	f009 031f 	and.w	r3, r9, #31
 800f142:	45d0      	cmp	r8, sl
 800f144:	f007 071f 	and.w	r7, r7, #31
 800f148:	930f      	str	r3, [sp, #60]	@ 0x3c
 800f14a:	fa1f fc8c 	uxth.w	ip, ip
 800f14e:	fa1f fe8e 	uxth.w	lr, lr
 800f152:	d10a      	bne.n	800f16a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800f154:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800f156:	449c      	add	ip, r3
 800f158:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f15a:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f15e:	441f      	add	r7, r3
 800f160:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800f162:	fb03 e707 	mla	r7, r3, r7, lr
 800f166:	80ef      	strh	r7, [r5, #6]
 800f168:	e6b9      	b.n	800eede <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f16a:	2900      	cmp	r1, #0
 800f16c:	f2c0 80a8 	blt.w	800f2c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800f170:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800f172:	f1c7 0320 	rsb	r3, r7, #32
 800f176:	4363      	muls	r3, r4
 800f178:	2401      	movs	r4, #1
 800f17a:	940d      	str	r4, [sp, #52]	@ 0x34
 800f17c:	2420      	movs	r4, #32
 800f17e:	940c      	str	r4, [sp, #48]	@ 0x30
 800f180:	fb93 f4f1 	sdiv	r4, r3, r1
 800f184:	fb01 3b14 	mls	fp, r1, r4, r3
 800f188:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f18a:	f1bb 0f00 	cmp.w	fp, #0
 800f18e:	bfb8      	it	lt
 800f190:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f194:	441f      	add	r7, r3
 800f196:	fb04 e707 	mla	r7, r4, r7, lr
 800f19a:	44a4      	add	ip, r4
 800f19c:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f1a0:	80ef      	strh	r7, [r5, #6]
 800f1a2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f1a6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f1a8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800f1ac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f1b0:	bfb8      	it	lt
 800f1b2:	448b      	addlt	fp, r1
 800f1b4:	eb08 0503 	add.w	r5, r8, r3
 800f1b8:	ea5e 0307 	orrs.w	r3, lr, r7
 800f1bc:	d011      	beq.n	800f1e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f1be:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800f1c2:	f1be 0f00 	cmp.w	lr, #0
 800f1c6:	db0c      	blt.n	800f1e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f1c8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800f1ca:	45be      	cmp	lr, r7
 800f1cc:	da09      	bge.n	800f1e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f1ce:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f1d2:	45be      	cmp	lr, r7
 800f1d4:	bf3c      	itt	cc
 800f1d6:	f10c 0708 	addcc.w	r7, ip, #8
 800f1da:	6107      	strcc	r7, [r0, #16]
 800f1dc:	f10e 0701 	add.w	r7, lr, #1
 800f1e0:	6087      	str	r7, [r0, #8]
 800f1e2:	6907      	ldr	r7, [r0, #16]
 800f1e4:	b213      	sxth	r3, r2
 800f1e6:	9310      	str	r3, [sp, #64]	@ 0x40
 800f1e8:	807b      	strh	r3, [r7, #2]
 800f1ea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f1ec:	803d      	strh	r5, [r7, #0]
 800f1ee:	4555      	cmp	r5, sl
 800f1f0:	80be      	strh	r6, [r7, #4]
 800f1f2:	80fe      	strh	r6, [r7, #6]
 800f1f4:	eb04 0c03 	add.w	ip, r4, r3
 800f1f8:	d051      	beq.n	800f29e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800f1fa:	9b01      	ldr	r3, [sp, #4]
 800f1fc:	eba3 070c 	sub.w	r7, r3, ip
 800f200:	443c      	add	r4, r7
 800f202:	0164      	lsls	r4, r4, #5
 800f204:	fb94 f8f1 	sdiv	r8, r4, r1
 800f208:	fb01 4418 	mls	r4, r1, r8, r4
 800f20c:	2c00      	cmp	r4, #0
 800f20e:	bfb8      	it	lt
 800f210:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f214:	ebab 0301 	sub.w	r3, fp, r1
 800f218:	f108 0701 	add.w	r7, r8, #1
 800f21c:	bfb8      	it	lt
 800f21e:	1864      	addlt	r4, r4, r1
 800f220:	9309      	str	r3, [sp, #36]	@ 0x24
 800f222:	9711      	str	r7, [sp, #68]	@ 0x44
 800f224:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f226:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f22a:	191b      	adds	r3, r3, r4
 800f22c:	bf58      	it	pl
 800f22e:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800f230:	f8be b004 	ldrh.w	fp, [lr, #4]
 800f234:	9309      	str	r3, [sp, #36]	@ 0x24
 800f236:	bf48      	it	mi
 800f238:	4647      	movmi	r7, r8
 800f23a:	44bb      	add	fp, r7
 800f23c:	f8ae b004 	strh.w	fp, [lr, #4]
 800f240:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f244:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f248:	f8ae b006 	strh.w	fp, [lr, #6]
 800f24c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f250:	44bc      	add	ip, r7
 800f252:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800f254:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f258:	443d      	add	r5, r7
 800f25a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800f25e:	bf5c      	itt	pl
 800f260:	1a5b      	subpl	r3, r3, r1
 800f262:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800f264:	ea5b 0307 	orrs.w	r3, fp, r7
 800f268:	d011      	beq.n	800f28e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f26a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800f26e:	f1bb 0f00 	cmp.w	fp, #0
 800f272:	db0c      	blt.n	800f28e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f274:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800f276:	45bb      	cmp	fp, r7
 800f278:	da09      	bge.n	800f28e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f27a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f27e:	45bb      	cmp	fp, r7
 800f280:	bf3c      	itt	cc
 800f282:	f10e 0708 	addcc.w	r7, lr, #8
 800f286:	6107      	strcc	r7, [r0, #16]
 800f288:	f10b 0701 	add.w	r7, fp, #1
 800f28c:	6087      	str	r7, [r0, #8]
 800f28e:	6907      	ldr	r7, [r0, #16]
 800f290:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800f292:	803d      	strh	r5, [r7, #0]
 800f294:	4555      	cmp	r5, sl
 800f296:	807b      	strh	r3, [r7, #2]
 800f298:	80be      	strh	r6, [r7, #4]
 800f29a:	80fe      	strh	r6, [r7, #6]
 800f29c:	d1c2      	bne.n	800f224 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800f29e:	9b01      	ldr	r3, [sp, #4]
 800f2a0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800f2a2:	eba3 0c0c 	sub.w	ip, r3, ip
 800f2a6:	6903      	ldr	r3, [r0, #16]
 800f2a8:	8899      	ldrh	r1, [r3, #4]
 800f2aa:	4461      	add	r1, ip
 800f2ac:	8099      	strh	r1, [r3, #4]
 800f2ae:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f2b0:	3720      	adds	r7, #32
 800f2b2:	1a7f      	subs	r7, r7, r1
 800f2b4:	88d9      	ldrh	r1, [r3, #6]
 800f2b6:	fb0c 1c07 	mla	ip, ip, r7, r1
 800f2ba:	f8a3 c006 	strh.w	ip, [r3, #6]
 800f2be:	e60e      	b.n	800eede <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f2c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800f2c2:	f04f 34ff 	mov.w	r4, #4294967295
 800f2c6:	940d      	str	r4, [sp, #52]	@ 0x34
 800f2c8:	437b      	muls	r3, r7
 800f2ca:	4249      	negs	r1, r1
 800f2cc:	2400      	movs	r4, #0
 800f2ce:	e756      	b.n	800f17e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800f2d0:	9905      	ldr	r1, [sp, #20]
 800f2d2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800f2d6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800f2da:	f001 011f 	and.w	r1, r1, #31
 800f2de:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800f2e2:	9102      	str	r1, [sp, #8]
 800f2e4:	9904      	ldr	r1, [sp, #16]
 800f2e6:	45f3      	cmp	fp, lr
 800f2e8:	f009 0c1f 	and.w	ip, r9, #31
 800f2ec:	eba1 0406 	sub.w	r4, r1, r6
 800f2f0:	d108      	bne.n	800f304 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800f2f2:	9b02      	ldr	r3, [sp, #8]
 800f2f4:	449c      	add	ip, r3
 800f2f6:	44a0      	add	r8, r4
 800f2f8:	fb04 a40c 	mla	r4, r4, ip, sl
 800f2fc:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f300:	80fc      	strh	r4, [r7, #6]
 800f302:	e458      	b.n	800ebb6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f304:	9905      	ldr	r1, [sp, #20]
 800f306:	ebb1 0109 	subs.w	r1, r1, r9
 800f30a:	bf5b      	ittet	pl
 800f30c:	f1cc 0520 	rsbpl	r5, ip, #32
 800f310:	436c      	mulpl	r4, r5
 800f312:	2500      	movmi	r5, #0
 800f314:	2520      	movpl	r5, #32
 800f316:	bf44      	itt	mi
 800f318:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f31c:	4249      	negmi	r1, r1
 800f31e:	9501      	str	r5, [sp, #4]
 800f320:	9b01      	ldr	r3, [sp, #4]
 800f322:	fb94 f5f1 	sdiv	r5, r4, r1
 800f326:	fb01 4415 	mls	r4, r1, r5, r4
 800f32a:	bf54      	ite	pl
 800f32c:	f04f 0901 	movpl.w	r9, #1
 800f330:	f04f 39ff 	movmi.w	r9, #4294967295
 800f334:	2c00      	cmp	r4, #0
 800f336:	bfb8      	it	lt
 800f338:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f33c:	449c      	add	ip, r3
 800f33e:	44a8      	add	r8, r5
 800f340:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f344:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f348:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f34c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f350:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f354:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f358:	bfb8      	it	lt
 800f35a:	1864      	addlt	r4, r4, r1
 800f35c:	ea58 0707 	orrs.w	r7, r8, r7
 800f360:	eb0b 0309 	add.w	r3, fp, r9
 800f364:	d011      	beq.n	800f38a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f366:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f36a:	f1b8 0f00 	cmp.w	r8, #0
 800f36e:	db0c      	blt.n	800f38a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f370:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800f372:	45b8      	cmp	r8, r7
 800f374:	da09      	bge.n	800f38a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f376:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800f37a:	45b8      	cmp	r8, r7
 800f37c:	bf3c      	itt	cc
 800f37e:	f10c 0708 	addcc.w	r7, ip, #8
 800f382:	6107      	strcc	r7, [r0, #16]
 800f384:	f108 0701 	add.w	r7, r8, #1
 800f388:	6087      	str	r7, [r0, #8]
 800f38a:	6907      	ldr	r7, [r0, #16]
 800f38c:	f04f 0c00 	mov.w	ip, #0
 800f390:	b212      	sxth	r2, r2
 800f392:	459e      	cmp	lr, r3
 800f394:	803b      	strh	r3, [r7, #0]
 800f396:	807a      	strh	r2, [r7, #2]
 800f398:	f8a7 c004 	strh.w	ip, [r7, #4]
 800f39c:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f3a0:	442e      	add	r6, r5
 800f3a2:	d04d      	beq.n	800f440 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800f3a4:	9f04      	ldr	r7, [sp, #16]
 800f3a6:	1bbf      	subs	r7, r7, r6
 800f3a8:	443d      	add	r5, r7
 800f3aa:	016d      	lsls	r5, r5, #5
 800f3ac:	fb95 f8f1 	sdiv	r8, r5, r1
 800f3b0:	fb01 5518 	mls	r5, r1, r8, r5
 800f3b4:	4565      	cmp	r5, ip
 800f3b6:	bfb8      	it	lt
 800f3b8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f3bc:	f108 0701 	add.w	r7, r8, #1
 800f3c0:	bfb8      	it	lt
 800f3c2:	186d      	addlt	r5, r5, r1
 800f3c4:	1a64      	subs	r4, r4, r1
 800f3c6:	9703      	str	r7, [sp, #12]
 800f3c8:	f04f 0a00 	mov.w	sl, #0
 800f3cc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f3d0:	1964      	adds	r4, r4, r5
 800f3d2:	bf58      	it	pl
 800f3d4:	9f03      	ldrpl	r7, [sp, #12]
 800f3d6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f3da:	bf48      	it	mi
 800f3dc:	4647      	movmi	r7, r8
 800f3de:	44bb      	add	fp, r7
 800f3e0:	f8ac b004 	strh.w	fp, [ip, #4]
 800f3e4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f3e8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f3ec:	f8ac b006 	strh.w	fp, [ip, #6]
 800f3f0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f3f4:	443e      	add	r6, r7
 800f3f6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f3fa:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f3fe:	bf58      	it	pl
 800f400:	1a64      	subpl	r4, r4, r1
 800f402:	ea5b 0707 	orrs.w	r7, fp, r7
 800f406:	444b      	add	r3, r9
 800f408:	d011      	beq.n	800f42e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f40a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f40e:	f1bb 0f00 	cmp.w	fp, #0
 800f412:	db0c      	blt.n	800f42e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f414:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800f416:	45bb      	cmp	fp, r7
 800f418:	da09      	bge.n	800f42e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f41a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f41e:	45bb      	cmp	fp, r7
 800f420:	bf3c      	itt	cc
 800f422:	f10c 0708 	addcc.w	r7, ip, #8
 800f426:	6107      	strcc	r7, [r0, #16]
 800f428:	f10b 0701 	add.w	r7, fp, #1
 800f42c:	6087      	str	r7, [r0, #8]
 800f42e:	6907      	ldr	r7, [r0, #16]
 800f430:	459e      	cmp	lr, r3
 800f432:	803b      	strh	r3, [r7, #0]
 800f434:	807a      	strh	r2, [r7, #2]
 800f436:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f43a:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f43e:	d1c5      	bne.n	800f3cc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800f440:	9b04      	ldr	r3, [sp, #16]
 800f442:	1b9e      	subs	r6, r3, r6
 800f444:	6903      	ldr	r3, [r0, #16]
 800f446:	889a      	ldrh	r2, [r3, #4]
 800f448:	4432      	add	r2, r6
 800f44a:	809a      	strh	r2, [r3, #4]
 800f44c:	9a02      	ldr	r2, [sp, #8]
 800f44e:	f102 0c20 	add.w	ip, r2, #32
 800f452:	9a01      	ldr	r2, [sp, #4]
 800f454:	ebac 0c02 	sub.w	ip, ip, r2
 800f458:	88da      	ldrh	r2, [r3, #6]
 800f45a:	fb06 260c 	mla	r6, r6, ip, r2
 800f45e:	80de      	strh	r6, [r3, #6]
 800f460:	f7ff bba9 	b.w	800ebb6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800f464 <_ZN8touchgfx7Outline6lineToEii>:
 800f464:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800f466:	079b      	lsls	r3, r3, #30
 800f468:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f46a:	460e      	mov	r6, r1
 800f46c:	4615      	mov	r5, r2
 800f46e:	d511      	bpl.n	800f494 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f470:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800f474:	ea86 0701 	eor.w	r7, r6, r1
 800f478:	ea85 0302 	eor.w	r3, r5, r2
 800f47c:	433b      	orrs	r3, r7
 800f47e:	d009      	beq.n	800f494 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f480:	4633      	mov	r3, r6
 800f482:	9500      	str	r5, [sp, #0]
 800f484:	f7ff fb3e 	bl	800eb04 <_ZN8touchgfx7Outline10renderLineEiiii>
 800f488:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800f48a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800f48e:	f043 0301 	orr.w	r3, r3, #1
 800f492:	6243      	str	r3, [r0, #36]	@ 0x24
 800f494:	b003      	add	sp, #12
 800f496:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f498 <_ZN8touchgfx7Outline6moveToEii>:
 800f498:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f49a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800f49c:	4615      	mov	r5, r2
 800f49e:	079a      	lsls	r2, r3, #30
 800f4a0:	4604      	mov	r4, r0
 800f4a2:	460e      	mov	r6, r1
 800f4a4:	d401      	bmi.n	800f4aa <_ZN8touchgfx7Outline6moveToEii+0x12>
 800f4a6:	f7ff fafa 	bl	800ea9e <_ZN8touchgfx7Outline5resetEv>
 800f4aa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800f4ac:	07db      	lsls	r3, r3, #31
 800f4ae:	d504      	bpl.n	800f4ba <_ZN8touchgfx7Outline6moveToEii+0x22>
 800f4b0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800f4b4:	4620      	mov	r0, r4
 800f4b6:	f7ff ffd5 	bl	800f464 <_ZN8touchgfx7Outline6lineToEii>
 800f4ba:	6923      	ldr	r3, [r4, #16]
 800f4bc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f4c0:	1170      	asrs	r0, r6, #5
 800f4c2:	4290      	cmp	r0, r2
 800f4c4:	ea4f 1165 	mov.w	r1, r5, asr #5
 800f4c8:	d103      	bne.n	800f4d2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800f4ca:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f4ce:	4291      	cmp	r1, r2
 800f4d0:	d01a      	beq.n	800f508 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800f4d2:	88df      	ldrh	r7, [r3, #6]
 800f4d4:	889a      	ldrh	r2, [r3, #4]
 800f4d6:	433a      	orrs	r2, r7
 800f4d8:	d010      	beq.n	800f4fc <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f4da:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f4de:	2a00      	cmp	r2, #0
 800f4e0:	db0c      	blt.n	800f4fc <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f4e2:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800f4e4:	42ba      	cmp	r2, r7
 800f4e6:	da09      	bge.n	800f4fc <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f4e8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800f4ec:	42ba      	cmp	r2, r7
 800f4ee:	bf38      	it	cc
 800f4f0:	3308      	addcc	r3, #8
 800f4f2:	f102 0201 	add.w	r2, r2, #1
 800f4f6:	bf38      	it	cc
 800f4f8:	6123      	strcc	r3, [r4, #16]
 800f4fa:	60a2      	str	r2, [r4, #8]
 800f4fc:	6923      	ldr	r3, [r4, #16]
 800f4fe:	2200      	movs	r2, #0
 800f500:	8018      	strh	r0, [r3, #0]
 800f502:	8059      	strh	r1, [r3, #2]
 800f504:	809a      	strh	r2, [r3, #4]
 800f506:	80da      	strh	r2, [r3, #6]
 800f508:	6166      	str	r6, [r4, #20]
 800f50a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800f50e:	6225      	str	r5, [r4, #32]
 800f510:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f512 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800f512:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f516:	b0d0      	sub	sp, #320	@ 0x140
 800f518:	466c      	mov	r4, sp
 800f51a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f51e:	4627      	mov	r7, r4
 800f520:	1a0d      	subs	r5, r1, r0
 800f522:	2d48      	cmp	r5, #72	@ 0x48
 800f524:	f100 0308 	add.w	r3, r0, #8
 800f528:	f340 80d5 	ble.w	800f6d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f52c:	112d      	asrs	r5, r5, #4
 800f52e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800f532:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f536:	6816      	ldr	r6, [r2, #0]
 800f538:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800f53c:	6006      	str	r6, [r0, #0]
 800f53e:	6856      	ldr	r6, [r2, #4]
 800f540:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f544:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f548:	6046      	str	r6, [r0, #4]
 800f54a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f54e:	f8a2 8002 	strh.w	r8, [r2, #2]
 800f552:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f556:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f55a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f55e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800f562:	4565      	cmp	r5, ip
 800f564:	f1a1 0208 	sub.w	r2, r1, #8
 800f568:	db06      	blt.n	800f578 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800f56a:	d119      	bne.n	800f5a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f56c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800f570:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800f574:	42ae      	cmp	r6, r5
 800f576:	dd13      	ble.n	800f5a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f578:	460e      	mov	r6, r1
 800f57a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f57e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f582:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800f586:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800f58a:	601d      	str	r5, [r3, #0]
 800f58c:	6875      	ldr	r5, [r6, #4]
 800f58e:	605d      	str	r5, [r3, #4]
 800f590:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f594:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f598:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f59c:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f5a0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f5a4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f5a8:	42ae      	cmp	r6, r5
 800f5aa:	db06      	blt.n	800f5ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800f5ac:	d116      	bne.n	800f5dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f5ae:	f9b0 c000 	ldrsh.w	ip, [r0]
 800f5b2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800f5b6:	45ac      	cmp	ip, r5
 800f5b8:	da10      	bge.n	800f5dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f5ba:	681d      	ldr	r5, [r3, #0]
 800f5bc:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f5c0:	6005      	str	r5, [r0, #0]
 800f5c2:	685d      	ldr	r5, [r3, #4]
 800f5c4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f5c8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f5cc:	f8a0 8008 	strh.w	r8, [r0, #8]
 800f5d0:	6045      	str	r5, [r0, #4]
 800f5d2:	8146      	strh	r6, [r0, #10]
 800f5d4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800f5d8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800f5dc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f5e0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f5e4:	4565      	cmp	r5, ip
 800f5e6:	db06      	blt.n	800f5f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800f5e8:	d119      	bne.n	800f61e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f5ea:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800f5ee:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f5f2:	42ae      	cmp	r6, r5
 800f5f4:	da13      	bge.n	800f61e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f5f6:	460e      	mov	r6, r1
 800f5f8:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f5fc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f600:	6005      	str	r5, [r0, #0]
 800f602:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800f606:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800f60a:	6875      	ldr	r5, [r6, #4]
 800f60c:	6045      	str	r5, [r0, #4]
 800f60e:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f612:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f616:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f61a:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f61e:	3308      	adds	r3, #8
 800f620:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f624:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800f628:	45e6      	cmp	lr, ip
 800f62a:	dbf8      	blt.n	800f61e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f62c:	d105      	bne.n	800f63a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f62e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f632:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f636:	42ae      	cmp	r6, r5
 800f638:	dbf1      	blt.n	800f61e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f63a:	4615      	mov	r5, r2
 800f63c:	3a08      	subs	r2, #8
 800f63e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800f642:	45b4      	cmp	ip, r6
 800f644:	dbf9      	blt.n	800f63a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f646:	d105      	bne.n	800f654 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800f648:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f64c:	f9b2 6000 	ldrsh.w	r6, [r2]
 800f650:	45b0      	cmp	r8, r6
 800f652:	dbf2      	blt.n	800f63a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f654:	4293      	cmp	r3, r2
 800f656:	f1a5 0608 	sub.w	r6, r5, #8
 800f65a:	d816      	bhi.n	800f68a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800f65c:	f8d6 c000 	ldr.w	ip, [r6]
 800f660:	f9b3 a000 	ldrsh.w	sl, [r3]
 800f664:	f8c3 c000 	str.w	ip, [r3]
 800f668:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800f66c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800f670:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800f674:	f8c3 c004 	str.w	ip, [r3, #4]
 800f678:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f67c:	f825 ec06 	strh.w	lr, [r5, #-6]
 800f680:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f684:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f688:	e7c9      	b.n	800f61e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f68a:	f8d6 e000 	ldr.w	lr, [r6]
 800f68e:	f9b0 a000 	ldrsh.w	sl, [r0]
 800f692:	f8c0 e000 	str.w	lr, [r0]
 800f696:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800f69a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800f69e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800f6a2:	f8c0 e004 	str.w	lr, [r0, #4]
 800f6a6:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f6aa:	f825 cc06 	strh.w	ip, [r5, #-6]
 800f6ae:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f6b2:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f6b6:	1acd      	subs	r5, r1, r3
 800f6b8:	1a16      	subs	r6, r2, r0
 800f6ba:	10ed      	asrs	r5, r5, #3
 800f6bc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800f6c0:	bfb5      	itete	lt
 800f6c2:	e9c4 0200 	strdlt	r0, r2, [r4]
 800f6c6:	e9c4 3100 	strdge	r3, r1, [r4]
 800f6ca:	460a      	movlt	r2, r1
 800f6cc:	4603      	movge	r3, r0
 800f6ce:	3408      	adds	r4, #8
 800f6d0:	4618      	mov	r0, r3
 800f6d2:	4611      	mov	r1, r2
 800f6d4:	e724      	b.n	800f520 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f6d6:	4299      	cmp	r1, r3
 800f6d8:	d928      	bls.n	800f72c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800f6da:	f1a3 0210 	sub.w	r2, r3, #16
 800f6de:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800f6e2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800f6e6:	45ac      	cmp	ip, r5
 800f6e8:	db06      	blt.n	800f6f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800f6ea:	d11d      	bne.n	800f728 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f6ec:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800f6f0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800f6f4:	42ae      	cmp	r6, r5
 800f6f6:	da17      	bge.n	800f728 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f6f8:	4615      	mov	r5, r2
 800f6fa:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800f6fe:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800f702:	6116      	str	r6, [r2, #16]
 800f704:	686e      	ldr	r6, [r5, #4]
 800f706:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800f70a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800f70e:	f8a2 9008 	strh.w	r9, [r2, #8]
 800f712:	42a8      	cmp	r0, r5
 800f714:	6156      	str	r6, [r2, #20]
 800f716:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800f71a:	f8a2 800c 	strh.w	r8, [r2, #12]
 800f71e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800f722:	f1a2 0208 	sub.w	r2, r2, #8
 800f726:	d1da      	bne.n	800f6de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800f728:	3308      	adds	r3, #8
 800f72a:	e7d4      	b.n	800f6d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f72c:	42bc      	cmp	r4, r7
 800f72e:	d903      	bls.n	800f738 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800f730:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800f734:	3c08      	subs	r4, #8
 800f736:	e6f3      	b.n	800f520 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f738:	b050      	add	sp, #320	@ 0x140
 800f73a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800f73e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800f73e:	b510      	push	{r4, lr}
 800f740:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800f742:	07da      	lsls	r2, r3, #31
 800f744:	4604      	mov	r4, r0
 800f746:	d507      	bpl.n	800f758 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800f748:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800f74c:	f7ff fe8a 	bl	800f464 <_ZN8touchgfx7Outline6lineToEii>
 800f750:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800f752:	f023 0301 	bic.w	r3, r3, #1
 800f756:	6243      	str	r3, [r0, #36]	@ 0x24
 800f758:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800f75a:	079b      	lsls	r3, r3, #30
 800f75c:	d521      	bpl.n	800f7a2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800f75e:	6923      	ldr	r3, [r4, #16]
 800f760:	88d9      	ldrh	r1, [r3, #6]
 800f762:	889a      	ldrh	r2, [r3, #4]
 800f764:	430a      	orrs	r2, r1
 800f766:	d010      	beq.n	800f78a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f768:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f76c:	2a00      	cmp	r2, #0
 800f76e:	db0c      	blt.n	800f78a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f770:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800f772:	428a      	cmp	r2, r1
 800f774:	da09      	bge.n	800f78a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f776:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800f77a:	4291      	cmp	r1, r2
 800f77c:	bf88      	it	hi
 800f77e:	3308      	addhi	r3, #8
 800f780:	f102 0201 	add.w	r2, r2, #1
 800f784:	bf88      	it	hi
 800f786:	6123      	strhi	r3, [r4, #16]
 800f788:	60a2      	str	r2, [r4, #8]
 800f78a:	68a1      	ldr	r1, [r4, #8]
 800f78c:	b129      	cbz	r1, 800f79a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f78e:	6863      	ldr	r3, [r4, #4]
 800f790:	4299      	cmp	r1, r3
 800f792:	d802      	bhi.n	800f79a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f794:	68e0      	ldr	r0, [r4, #12]
 800f796:	f7ff febc 	bl	800f512 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800f79a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800f79c:	f023 0302 	bic.w	r3, r3, #2
 800f7a0:	6263      	str	r3, [r4, #36]	@ 0x24
 800f7a2:	68e0      	ldr	r0, [r4, #12]
 800f7a4:	bd10      	pop	{r4, pc}
	...

0800f7a8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800f7a8:	4b01      	ldr	r3, [pc, #4]	@ (800f7b0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800f7aa:	6818      	ldr	r0, [r3, #0]
 800f7ac:	4770      	bx	lr
 800f7ae:	bf00      	nop
 800f7b0:	20013b74 	.word	0x20013b74

0800f7b4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800f7b4:	4b01      	ldr	r3, [pc, #4]	@ (800f7bc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800f7b6:	6818      	ldr	r0, [r3, #0]
 800f7b8:	4770      	bx	lr
 800f7ba:	bf00      	nop
 800f7bc:	20013b78 	.word	0x20013b78

0800f7c0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800f7c0:	b510      	push	{r4, lr}
 800f7c2:	6803      	ldr	r3, [r0, #0]
 800f7c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f7c6:	460c      	mov	r4, r1
 800f7c8:	4798      	blx	r3
 800f7ca:	1b03      	subs	r3, r0, r4
 800f7cc:	4258      	negs	r0, r3
 800f7ce:	4158      	adcs	r0, r3
 800f7d0:	bd10      	pop	{r4, pc}
	...

0800f7d4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800f7d4:	4b01      	ldr	r3, [pc, #4]	@ (800f7dc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800f7d6:	6019      	str	r1, [r3, #0]
 800f7d8:	4770      	bx	lr
 800f7da:	bf00      	nop
 800f7dc:	20013b7c 	.word	0x20013b7c

0800f7e0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f7e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7e4:	4696      	mov	lr, r2
 800f7e6:	4605      	mov	r5, r0
 800f7e8:	4614      	mov	r4, r2
 800f7ea:	460e      	mov	r6, r1
 800f7ec:	461f      	mov	r7, r3
 800f7ee:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f7f2:	b097      	sub	sp, #92	@ 0x5c
 800f7f4:	f10d 0c1c 	add.w	ip, sp, #28
 800f7f8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f7fc:	f8de 3000 	ldr.w	r3, [lr]
 800f800:	f8cc 3000 	str.w	r3, [ip]
 800f804:	f104 0e14 	add.w	lr, r4, #20
 800f808:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f80c:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800f810:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f814:	f8de 3000 	ldr.w	r3, [lr]
 800f818:	f8cc 3000 	str.w	r3, [ip]
 800f81c:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800f820:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f824:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800f828:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f82c:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800f830:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800f834:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800f838:	f8de 3000 	ldr.w	r3, [lr]
 800f83c:	f8cc 3000 	str.w	r3, [ip]
 800f840:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800f842:	682b      	ldr	r3, [r5, #0]
 800f844:	9201      	str	r2, [sp, #4]
 800f846:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f84a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800f84c:	9200      	str	r2, [sp, #0]
 800f84e:	f8cd 8008 	str.w	r8, [sp, #8]
 800f852:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800f856:	aa07      	add	r2, sp, #28
 800f858:	463b      	mov	r3, r7
 800f85a:	4631      	mov	r1, r6
 800f85c:	4628      	mov	r0, r5
 800f85e:	47d8      	blx	fp
 800f860:	46a6      	mov	lr, r4
 800f862:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f866:	f10d 0c1c 	add.w	ip, sp, #28
 800f86a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f86e:	f8de 3000 	ldr.w	r3, [lr]
 800f872:	f8cc 3000 	str.w	r3, [ip]
 800f876:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800f87a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f87e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800f882:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f886:	343c      	adds	r4, #60	@ 0x3c
 800f888:	f8de 3000 	ldr.w	r3, [lr]
 800f88c:	f8cc 3000 	str.w	r3, [ip]
 800f890:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f892:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800f896:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f89a:	6823      	ldr	r3, [r4, #0]
 800f89c:	f8cc 3000 	str.w	r3, [ip]
 800f8a0:	682b      	ldr	r3, [r5, #0]
 800f8a2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f8a6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800f8a8:	9201      	str	r2, [sp, #4]
 800f8aa:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800f8ac:	9200      	str	r2, [sp, #0]
 800f8ae:	f8cd 8008 	str.w	r8, [sp, #8]
 800f8b2:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800f8b4:	aa07      	add	r2, sp, #28
 800f8b6:	463b      	mov	r3, r7
 800f8b8:	4631      	mov	r1, r6
 800f8ba:	4628      	mov	r0, r5
 800f8bc:	47a0      	blx	r4
 800f8be:	b017      	add	sp, #92	@ 0x5c
 800f8c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f8c4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800f8c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f8c8:	b08d      	sub	sp, #52	@ 0x34
 800f8ca:	4688      	mov	r8, r1
 800f8cc:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800f8ce:	f8d3 c000 	ldr.w	ip, [r3]
 800f8d2:	680f      	ldr	r7, [r1, #0]
 800f8d4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800f8d8:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800f8dc:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800f8e0:	edd3 6a07 	vldr	s13, [r3, #28]
 800f8e4:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800f8e6:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800f8ea:	f9b1 9000 	ldrsh.w	r9, [r1]
 800f8ee:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f8f2:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800f8f6:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800f8fa:	eba7 070c 	sub.w	r7, r7, ip
 800f8fe:	42bc      	cmp	r4, r7
 800f900:	bfa8      	it	ge
 800f902:	463c      	movge	r4, r7
 800f904:	ee07 4a90 	vmov	s15, r4
 800f908:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f90c:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800f910:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f914:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f918:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f91c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800f920:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f924:	eb09 0e0c 	add.w	lr, r9, ip
 800f928:	4571      	cmp	r1, lr
 800f92a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f92e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f932:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f936:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f93a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f93e:	f340 808d 	ble.w	800fa5c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f942:	eba1 060e 	sub.w	r6, r1, lr
 800f946:	fb96 f5f4 	sdiv	r5, r6, r4
 800f94a:	ee07 5a10 	vmov	s14, r5
 800f94e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f952:	2d00      	cmp	r5, #0
 800f954:	fb04 6615 	mls	r6, r4, r5, r6
 800f958:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f95c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f960:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f964:	dd13      	ble.n	800f98e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f966:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f96a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f96e:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f972:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f976:	bf18      	it	ne
 800f978:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f97c:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f980:	bf08      	it	eq
 800f982:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f986:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f98a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f98e:	fb05 f204 	mul.w	r2, r5, r4
 800f992:	1abf      	subs	r7, r7, r2
 800f994:	4494      	add	ip, r2
 800f996:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f99a:	4411      	add	r1, r2
 800f99c:	eb09 020c 	add.w	r2, r9, ip
 800f9a0:	443a      	add	r2, r7
 800f9a2:	b209      	sxth	r1, r1
 800f9a4:	428a      	cmp	r2, r1
 800f9a6:	bfc4      	itt	gt
 800f9a8:	eba1 0209 	subgt.w	r2, r1, r9
 800f9ac:	eba2 070c 	subgt.w	r7, r2, ip
 800f9b0:	2f00      	cmp	r7, #0
 800f9b2:	dd50      	ble.n	800fa56 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800f9b4:	fb97 f1f4 	sdiv	r1, r7, r4
 800f9b8:	fb04 7211 	mls	r2, r4, r1, r7
 800f9bc:	b90a      	cbnz	r2, 800f9c2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800f9be:	3901      	subs	r1, #1
 800f9c0:	4622      	mov	r2, r4
 800f9c2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f9c6:	6840      	ldr	r0, [r0, #4]
 800f9c8:	900b      	str	r0, [sp, #44]	@ 0x2c
 800f9ca:	f8d0 a000 	ldr.w	sl, [r0]
 800f9ce:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800f9d0:	9008      	str	r0, [sp, #32]
 800f9d2:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800f9d6:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800f9d8:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800f9dc:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f9e0:	695b      	ldr	r3, [r3, #20]
 800f9e2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800f9e4:	445b      	add	r3, fp
 800f9e6:	eef0 6a42 	vmov.f32	s13, s4
 800f9ea:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f9ee:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f9f2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f9f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f9fa:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f9fe:	9307      	str	r3, [sp, #28]
 800fa00:	ee17 7a90 	vmov	r7, s15
 800fa04:	ee73 7a42 	vsub.f32	s15, s6, s4
 800fa08:	eeb0 7a61 	vmov.f32	s14, s3
 800fa0c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800fa10:	ee16 3a90 	vmov	r3, s13
 800fa14:	fb97 f7f4 	sdiv	r7, r7, r4
 800fa18:	ee17 ca90 	vmov	ip, s15
 800fa1c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800fa20:	fb9c fcf4 	sdiv	ip, ip, r4
 800fa24:	fb0c 3306 	mla	r3, ip, r6, r3
 800fa28:	9302      	str	r3, [sp, #8]
 800fa2a:	ee17 3a10 	vmov	r3, s14
 800fa2e:	44b6      	add	lr, r6
 800fa30:	fb04 e505 	mla	r5, r4, r5, lr
 800fa34:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800fa38:	fb07 3706 	mla	r7, r7, r6, r3
 800fa3c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800fa40:	e9cd 4700 	strd	r4, r7, [sp]
 800fa44:	2900      	cmp	r1, #0
 800fa46:	bfcc      	ite	gt
 800fa48:	46a1      	movgt	r9, r4
 800fa4a:	4691      	movle	r9, r2
 800fa4c:	eba9 0306 	sub.w	r3, r9, r6
 800fa50:	f8da 4008 	ldr.w	r4, [sl, #8]
 800fa54:	47a0      	blx	r4
 800fa56:	b00d      	add	sp, #52	@ 0x34
 800fa58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa5c:	2500      	movs	r5, #0
 800fa5e:	462e      	mov	r6, r5
 800fa60:	e799      	b.n	800f996 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800fa64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800fa64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa68:	b0db      	sub	sp, #364	@ 0x16c
 800fa6a:	461d      	mov	r5, r3
 800fa6c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800fa70:	930a      	str	r3, [sp, #40]	@ 0x28
 800fa72:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800fa76:	930b      	str	r3, [sp, #44]	@ 0x2c
 800fa78:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800fa7c:	9310      	str	r3, [sp, #64]	@ 0x40
 800fa7e:	6803      	ldr	r3, [r0, #0]
 800fa80:	910f      	str	r1, [sp, #60]	@ 0x3c
 800fa82:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800fa84:	9009      	str	r0, [sp, #36]	@ 0x24
 800fa86:	4614      	mov	r4, r2
 800fa88:	4629      	mov	r1, r5
 800fa8a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800fa8e:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800fa92:	47b8      	blx	r7
 800fa94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800fa96:	6058      	str	r0, [r3, #4]
 800fa98:	2800      	cmp	r0, #0
 800fa9a:	f000 83a1 	beq.w	80101e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa9e:	682b      	ldr	r3, [r5, #0]
 800faa0:	9314      	str	r3, [sp, #80]	@ 0x50
 800faa2:	686b      	ldr	r3, [r5, #4]
 800faa4:	9315      	str	r3, [sp, #84]	@ 0x54
 800faa6:	4bc4      	ldr	r3, [pc, #784]	@ (800fdb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800faa8:	ed94 7a02 	vldr	s14, [r4, #8]
 800faac:	7819      	ldrb	r1, [r3, #0]
 800faae:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800fab2:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800fab6:	2900      	cmp	r1, #0
 800fab8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fabc:	bf16      	itet	ne
 800fabe:	4619      	movne	r1, r3
 800fac0:	4611      	moveq	r1, r2
 800fac2:	4613      	movne	r3, r2
 800fac4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fac8:	9116      	str	r1, [sp, #88]	@ 0x58
 800faca:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800face:	f240 8387 	bls.w	80101e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fad2:	ed94 7a07 	vldr	s14, [r4, #28]
 800fad6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fada:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fade:	f240 837f 	bls.w	80101e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fae2:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800fae6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800faea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800faee:	f240 8377 	bls.w	80101e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800faf2:	6822      	ldr	r2, [r4, #0]
 800faf4:	4bb1      	ldr	r3, [pc, #708]	@ (800fdbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800faf6:	429a      	cmp	r2, r3
 800faf8:	f2c0 8372 	blt.w	80101e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fafc:	49b0      	ldr	r1, [pc, #704]	@ (800fdc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800fafe:	6963      	ldr	r3, [r4, #20]
 800fb00:	428a      	cmp	r2, r1
 800fb02:	f300 836d 	bgt.w	80101e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb06:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800fb0a:	48ae      	ldr	r0, [pc, #696]	@ (800fdc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800fb0c:	33ff      	adds	r3, #255	@ 0xff
 800fb0e:	4283      	cmp	r3, r0
 800fb10:	f200 8366 	bhi.w	80101e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb14:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800fb16:	4dac      	ldr	r5, [pc, #688]	@ (800fdc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800fb18:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800fb1c:	33ff      	adds	r3, #255	@ 0xff
 800fb1e:	42ab      	cmp	r3, r5
 800fb20:	f200 835e 	bhi.w	80101e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb24:	6862      	ldr	r2, [r4, #4]
 800fb26:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800fb2a:	33ff      	adds	r3, #255	@ 0xff
 800fb2c:	4283      	cmp	r3, r0
 800fb2e:	f200 8357 	bhi.w	80101e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb32:	69a1      	ldr	r1, [r4, #24]
 800fb34:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800fb38:	33ff      	adds	r3, #255	@ 0xff
 800fb3a:	4283      	cmp	r3, r0
 800fb3c:	f200 8350 	bhi.w	80101e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb40:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800fb42:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800fb46:	30ff      	adds	r0, #255	@ 0xff
 800fb48:	42a8      	cmp	r0, r5
 800fb4a:	f200 8349 	bhi.w	80101e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb4e:	428a      	cmp	r2, r1
 800fb50:	f280 8110 	bge.w	800fd74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800fb54:	429a      	cmp	r2, r3
 800fb56:	f300 8119 	bgt.w	800fd8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800fb5a:	4299      	cmp	r1, r3
 800fb5c:	f280 811d 	bge.w	800fd9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800fb60:	2502      	movs	r5, #2
 800fb62:	2701      	movs	r7, #1
 800fb64:	46a9      	mov	r9, r5
 800fb66:	46b8      	mov	r8, r7
 800fb68:	f04f 0a00 	mov.w	sl, #0
 800fb6c:	4621      	mov	r1, r4
 800fb6e:	a849      	add	r0, sp, #292	@ 0x124
 800fb70:	f004 fa32 	bl	8013fd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800fb74:	4622      	mov	r2, r4
 800fb76:	4653      	mov	r3, sl
 800fb78:	a949      	add	r1, sp, #292	@ 0x124
 800fb7a:	f8cd 9000 	str.w	r9, [sp]
 800fb7e:	a819      	add	r0, sp, #100	@ 0x64
 800fb80:	f004 fb5a 	bl	8014238 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fb84:	4622      	mov	r2, r4
 800fb86:	4653      	mov	r3, sl
 800fb88:	a949      	add	r1, sp, #292	@ 0x124
 800fb8a:	f8cd 8000 	str.w	r8, [sp]
 800fb8e:	a829      	add	r0, sp, #164	@ 0xa4
 800fb90:	f004 fb52 	bl	8014238 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fb94:	4643      	mov	r3, r8
 800fb96:	4622      	mov	r2, r4
 800fb98:	a949      	add	r1, sp, #292	@ 0x124
 800fb9a:	f8cd 9000 	str.w	r9, [sp]
 800fb9e:	a839      	add	r0, sp, #228	@ 0xe4
 800fba0:	f004 fb4a 	bl	8014238 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fba4:	42af      	cmp	r7, r5
 800fba6:	bfb5      	itete	lt
 800fba8:	2300      	movlt	r3, #0
 800fbaa:	2301      	movge	r3, #1
 800fbac:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800fbae:	930e      	strge	r3, [sp, #56]	@ 0x38
 800fbb0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800fbb2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800fbb6:	af12      	add	r7, sp, #72	@ 0x48
 800fbb8:	bfb9      	ittee	lt
 800fbba:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800fbbc:	ac19      	addlt	r4, sp, #100	@ 0x64
 800fbbe:	ad19      	addge	r5, sp, #100	@ 0x64
 800fbc0:	ac29      	addge	r4, sp, #164	@ 0xa4
 800fbc2:	e887 0003 	stmia.w	r7, {r0, r1}
 800fbc6:	b928      	cbnz	r0, 800fbd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800fbc8:	4b80      	ldr	r3, [pc, #512]	@ (800fdcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800fbca:	6818      	ldr	r0, [r3, #0]
 800fbcc:	6803      	ldr	r3, [r0, #0]
 800fbce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fbd0:	4798      	blx	r3
 800fbd2:	6038      	str	r0, [r7, #0]
 800fbd4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800fbd6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fbda:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fbde:	930c      	str	r3, [sp, #48]	@ 0x30
 800fbe0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800fbe2:	6963      	ldr	r3, [r4, #20]
 800fbe4:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800fbe6:	440b      	add	r3, r1
 800fbe8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fbec:	4408      	add	r0, r1
 800fbee:	b200      	sxth	r0, r0
 800fbf0:	4283      	cmp	r3, r0
 800fbf2:	900d      	str	r0, [sp, #52]	@ 0x34
 800fbf4:	f280 80dd 	bge.w	800fdb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800fbf8:	428b      	cmp	r3, r1
 800fbfa:	da08      	bge.n	800fc0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fbfc:	2a00      	cmp	r2, #0
 800fbfe:	dd06      	ble.n	800fc0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fc00:	1acb      	subs	r3, r1, r3
 800fc02:	429a      	cmp	r2, r3
 800fc04:	f2c0 80e4 	blt.w	800fdd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800fc08:	2b00      	cmp	r3, #0
 800fc0a:	f300 80e2 	bgt.w	800fdd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800fc0e:	6967      	ldr	r7, [r4, #20]
 800fc10:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fc12:	443b      	add	r3, r7
 800fc14:	461f      	mov	r7, r3
 800fc16:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fc18:	1bdf      	subs	r7, r3, r7
 800fc1a:	4297      	cmp	r7, r2
 800fc1c:	bfa8      	it	ge
 800fc1e:	4617      	movge	r7, r2
 800fc20:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800fc24:	2f00      	cmp	r7, #0
 800fc26:	f340 8166 	ble.w	800fef6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800fc2a:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800fc2c:	6829      	ldr	r1, [r5, #0]
 800fc2e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fc32:	f9bb 3000 	ldrsh.w	r3, [fp]
 800fc36:	6820      	ldr	r0, [r4, #0]
 800fc38:	4411      	add	r1, r2
 800fc3a:	4299      	cmp	r1, r3
 800fc3c:	dd1a      	ble.n	800fc74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fc3e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800fc42:	440b      	add	r3, r1
 800fc44:	4402      	add	r2, r0
 800fc46:	b21b      	sxth	r3, r3
 800fc48:	429a      	cmp	r2, r3
 800fc4a:	dc13      	bgt.n	800fc74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fc4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800fc4e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800fc50:	681b      	ldr	r3, [r3, #0]
 800fc52:	9206      	str	r2, [sp, #24]
 800fc54:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800fc56:	9205      	str	r2, [sp, #20]
 800fc58:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800fc5a:	9500      	str	r5, [sp, #0]
 800fc5c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800fc60:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800fc62:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800fc64:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fc68:	a912      	add	r1, sp, #72	@ 0x48
 800fc6a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800fc6e:	aa49      	add	r2, sp, #292	@ 0x124
 800fc70:	4623      	mov	r3, r4
 800fc72:	47c8      	blx	r9
 800fc74:	e9d4 2300 	ldrd	r2, r3, [r4]
 800fc78:	441a      	add	r2, r3
 800fc7a:	6963      	ldr	r3, [r4, #20]
 800fc7c:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800fc80:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800fc84:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800fc88:	68a1      	ldr	r1, [r4, #8]
 800fc8a:	ed94 6a08 	vldr	s12, [r4, #32]
 800fc8e:	6022      	str	r2, [r4, #0]
 800fc90:	3301      	adds	r3, #1
 800fc92:	6163      	str	r3, [r4, #20]
 800fc94:	69a3      	ldr	r3, [r4, #24]
 800fc96:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fc9a:	3b01      	subs	r3, #1
 800fc9c:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800fca0:	61a3      	str	r3, [r4, #24]
 800fca2:	6923      	ldr	r3, [r4, #16]
 800fca4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800fca8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fcac:	edd4 6a07 	vldr	s13, [r4, #28]
 800fcb0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800fcb4:	440b      	add	r3, r1
 800fcb6:	68e1      	ldr	r1, [r4, #12]
 800fcb8:	6123      	str	r3, [r4, #16]
 800fcba:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fcbe:	428b      	cmp	r3, r1
 800fcc0:	edc4 6a07 	vstr	s13, [r4, #28]
 800fcc4:	db15      	blt.n	800fcf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800fcc6:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800fcca:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fcce:	3201      	adds	r2, #1
 800fcd0:	edc4 6a07 	vstr	s13, [r4, #28]
 800fcd4:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800fcd8:	6022      	str	r2, [r4, #0]
 800fcda:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fcde:	1a5b      	subs	r3, r3, r1
 800fce0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800fce4:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800fce8:	6123      	str	r3, [r4, #16]
 800fcea:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fcee:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800fcf2:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fcf6:	441a      	add	r2, r3
 800fcf8:	696b      	ldr	r3, [r5, #20]
 800fcfa:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800fcfe:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800fd02:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800fd06:	68a9      	ldr	r1, [r5, #8]
 800fd08:	ed95 6a08 	vldr	s12, [r5, #32]
 800fd0c:	602a      	str	r2, [r5, #0]
 800fd0e:	3301      	adds	r3, #1
 800fd10:	616b      	str	r3, [r5, #20]
 800fd12:	69ab      	ldr	r3, [r5, #24]
 800fd14:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fd18:	3b01      	subs	r3, #1
 800fd1a:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800fd1e:	61ab      	str	r3, [r5, #24]
 800fd20:	692b      	ldr	r3, [r5, #16]
 800fd22:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800fd26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fd2a:	edd5 6a07 	vldr	s13, [r5, #28]
 800fd2e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800fd32:	440b      	add	r3, r1
 800fd34:	68e9      	ldr	r1, [r5, #12]
 800fd36:	612b      	str	r3, [r5, #16]
 800fd38:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fd3c:	428b      	cmp	r3, r1
 800fd3e:	edc5 6a07 	vstr	s13, [r5, #28]
 800fd42:	db15      	blt.n	800fd70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800fd44:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800fd48:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fd4c:	3201      	adds	r2, #1
 800fd4e:	edc5 6a07 	vstr	s13, [r5, #28]
 800fd52:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800fd56:	602a      	str	r2, [r5, #0]
 800fd58:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fd5c:	1a5b      	subs	r3, r3, r1
 800fd5e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800fd62:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800fd66:	612b      	str	r3, [r5, #16]
 800fd68:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fd6c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800fd70:	3f01      	subs	r7, #1
 800fd72:	e757      	b.n	800fc24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800fd74:	4299      	cmp	r1, r3
 800fd76:	dc13      	bgt.n	800fda0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800fd78:	429a      	cmp	r2, r3
 800fd7a:	da14      	bge.n	800fda6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800fd7c:	2502      	movs	r5, #2
 800fd7e:	2703      	movs	r7, #3
 800fd80:	46a9      	mov	r9, r5
 800fd82:	f04f 0800 	mov.w	r8, #0
 800fd86:	f04f 0a01 	mov.w	sl, #1
 800fd8a:	e6ef      	b.n	800fb6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fd8c:	2501      	movs	r5, #1
 800fd8e:	2700      	movs	r7, #0
 800fd90:	46a9      	mov	r9, r5
 800fd92:	46b8      	mov	r8, r7
 800fd94:	f04f 0a02 	mov.w	sl, #2
 800fd98:	e6e8      	b.n	800fb6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fd9a:	2501      	movs	r5, #1
 800fd9c:	2702      	movs	r7, #2
 800fd9e:	e6e1      	b.n	800fb64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800fda0:	2500      	movs	r5, #0
 800fda2:	2701      	movs	r7, #1
 800fda4:	e7f4      	b.n	800fd90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800fda6:	2702      	movs	r7, #2
 800fda8:	2503      	movs	r5, #3
 800fdaa:	f04f 0900 	mov.w	r9, #0
 800fdae:	46b8      	mov	r8, r7
 800fdb0:	e7e9      	b.n	800fd86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800fdb2:	4613      	mov	r3, r2
 800fdb4:	e728      	b.n	800fc08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800fdb6:	bf00      	nop
 800fdb8:	20013b62 	.word	0x20013b62
 800fdbc:	fffd8f01 	.word	0xfffd8f01
 800fdc0:	00027100 	.word	0x00027100
 800fdc4:	0004e1ff 	.word	0x0004e1ff
 800fdc8:	0004e1fe 	.word	0x0004e1fe
 800fdcc:	20013b6c 	.word	0x20013b6c
 800fdd0:	4613      	mov	r3, r2
 800fdd2:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800fdd4:	9111      	str	r1, [sp, #68]	@ 0x44
 800fdd6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800fdda:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800fdde:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800fde0:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800fde4:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800fde8:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800fdec:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800fdf0:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800fdf4:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800fdf8:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800fdfc:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800fe00:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800fe04:	469e      	mov	lr, r3
 800fe06:	469c      	mov	ip, r3
 800fe08:	f04f 0900 	mov.w	r9, #0
 800fe0c:	f1bc 0f00 	cmp.w	ip, #0
 800fe10:	d147      	bne.n	800fea2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800fe12:	eb03 0c07 	add.w	ip, r3, r7
 800fe16:	1ad7      	subs	r7, r2, r3
 800fe18:	f1b9 0f00 	cmp.w	r9, #0
 800fe1c:	d009      	beq.n	800fe32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800fe1e:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800fe22:	9029      	str	r0, [sp, #164]	@ 0xa4
 800fe24:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800fe28:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800fe2c:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800fe30:	912d      	str	r1, [sp, #180]	@ 0xb4
 800fe32:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800fe34:	9111      	str	r1, [sp, #68]	@ 0x44
 800fe36:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800fe3a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800fe3e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800fe42:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800fe46:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800fe4a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800fe4e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800fe52:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800fe56:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800fe5a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800fe5e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800fe62:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800fe66:	f04f 0800 	mov.w	r8, #0
 800fe6a:	f1be 0f00 	cmp.w	lr, #0
 800fe6e:	d031      	beq.n	800fed4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800fe70:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800fe72:	4431      	add	r1, r6
 800fe74:	4549      	cmp	r1, r9
 800fe76:	4450      	add	r0, sl
 800fe78:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fe7c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fe80:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fe84:	db08      	blt.n	800fe98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800fe86:	ee77 7a85 	vadd.f32	s15, s15, s10
 800fe8a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800fe8e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800fe92:	3001      	adds	r0, #1
 800fe94:	eba1 0109 	sub.w	r1, r1, r9
 800fe98:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fe9c:	f04f 0801 	mov.w	r8, #1
 800fea0:	e7e3      	b.n	800fe6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800fea2:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800fea4:	4431      	add	r1, r6
 800fea6:	4541      	cmp	r1, r8
 800fea8:	4450      	add	r0, sl
 800feaa:	ee37 7a24 	vadd.f32	s14, s14, s9
 800feae:	ee77 7a84 	vadd.f32	s15, s15, s8
 800feb2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800feb6:	db08      	blt.n	800feca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800feb8:	ee76 6a85 	vadd.f32	s13, s13, s10
 800febc:	ee37 7a25 	vadd.f32	s14, s14, s11
 800fec0:	ee77 7a86 	vadd.f32	s15, s15, s12
 800fec4:	3001      	adds	r0, #1
 800fec6:	eba1 0108 	sub.w	r1, r1, r8
 800feca:	f10c 3cff 	add.w	ip, ip, #4294967295
 800fece:	f04f 0901 	mov.w	r9, #1
 800fed2:	e79b      	b.n	800fe0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800fed4:	449c      	add	ip, r3
 800fed6:	1aff      	subs	r7, r7, r3
 800fed8:	f1b8 0f00 	cmp.w	r8, #0
 800fedc:	d009      	beq.n	800fef2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800fede:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800fee2:	9019      	str	r0, [sp, #100]	@ 0x64
 800fee4:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800fee8:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800feec:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800fef0:	911d      	str	r1, [sp, #116]	@ 0x74
 800fef2:	1ad2      	subs	r2, r2, r3
 800fef4:	e68b      	b.n	800fc0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fef6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fef8:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800fefa:	2b00      	cmp	r3, #0
 800fefc:	f000 80d1 	beq.w	80100a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ff00:	ad19      	add	r5, sp, #100	@ 0x64
 800ff02:	ac39      	add	r4, sp, #228	@ 0xe4
 800ff04:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ff06:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ff0a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ff0e:	930c      	str	r3, [sp, #48]	@ 0x30
 800ff10:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800ff12:	6963      	ldr	r3, [r4, #20]
 800ff14:	440b      	add	r3, r1
 800ff16:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ff1a:	4408      	add	r0, r1
 800ff1c:	b200      	sxth	r0, r0
 800ff1e:	4283      	cmp	r3, r0
 800ff20:	900d      	str	r0, [sp, #52]	@ 0x34
 800ff22:	f280 80c1 	bge.w	80100a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ff26:	428b      	cmp	r3, r1
 800ff28:	da08      	bge.n	800ff3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ff2a:	2a00      	cmp	r2, #0
 800ff2c:	dd06      	ble.n	800ff3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ff2e:	1acb      	subs	r3, r1, r3
 800ff30:	429a      	cmp	r2, r3
 800ff32:	f2c0 80bb 	blt.w	80100ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ff36:	2b00      	cmp	r3, #0
 800ff38:	f300 80b9 	bgt.w	80100ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ff3c:	6967      	ldr	r7, [r4, #20]
 800ff3e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ff40:	443b      	add	r3, r7
 800ff42:	461f      	mov	r7, r3
 800ff44:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ff46:	1bdf      	subs	r7, r3, r7
 800ff48:	4297      	cmp	r7, r2
 800ff4a:	bfa8      	it	ge
 800ff4c:	4617      	movge	r7, r2
 800ff4e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800ff52:	2f00      	cmp	r7, #0
 800ff54:	f340 813c 	ble.w	80101d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ff58:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ff5a:	6829      	ldr	r1, [r5, #0]
 800ff5c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ff60:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ff64:	6820      	ldr	r0, [r4, #0]
 800ff66:	4411      	add	r1, r2
 800ff68:	4299      	cmp	r1, r3
 800ff6a:	dd1a      	ble.n	800ffa2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ff6c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ff70:	440b      	add	r3, r1
 800ff72:	4402      	add	r2, r0
 800ff74:	b21b      	sxth	r3, r3
 800ff76:	429a      	cmp	r2, r3
 800ff78:	dc13      	bgt.n	800ffa2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ff7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ff7c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ff7e:	681b      	ldr	r3, [r3, #0]
 800ff80:	9206      	str	r2, [sp, #24]
 800ff82:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ff84:	9205      	str	r2, [sp, #20]
 800ff86:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ff88:	9500      	str	r5, [sp, #0]
 800ff8a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ff8e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ff90:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ff92:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ff96:	a912      	add	r1, sp, #72	@ 0x48
 800ff98:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ff9c:	aa49      	add	r2, sp, #292	@ 0x124
 800ff9e:	4623      	mov	r3, r4
 800ffa0:	47c8      	blx	r9
 800ffa2:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ffa6:	441a      	add	r2, r3
 800ffa8:	6963      	ldr	r3, [r4, #20]
 800ffaa:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ffae:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ffb2:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ffb6:	68a1      	ldr	r1, [r4, #8]
 800ffb8:	ed94 6a08 	vldr	s12, [r4, #32]
 800ffbc:	6022      	str	r2, [r4, #0]
 800ffbe:	3301      	adds	r3, #1
 800ffc0:	6163      	str	r3, [r4, #20]
 800ffc2:	69a3      	ldr	r3, [r4, #24]
 800ffc4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ffc8:	3b01      	subs	r3, #1
 800ffca:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ffce:	61a3      	str	r3, [r4, #24]
 800ffd0:	6923      	ldr	r3, [r4, #16]
 800ffd2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ffd6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ffda:	edd4 6a07 	vldr	s13, [r4, #28]
 800ffde:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ffe2:	440b      	add	r3, r1
 800ffe4:	68e1      	ldr	r1, [r4, #12]
 800ffe6:	6123      	str	r3, [r4, #16]
 800ffe8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ffec:	428b      	cmp	r3, r1
 800ffee:	edc4 6a07 	vstr	s13, [r4, #28]
 800fff2:	db15      	blt.n	8010020 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800fff4:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800fff8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fffc:	3201      	adds	r2, #1
 800fffe:	edc4 6a07 	vstr	s13, [r4, #28]
 8010002:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8010006:	6022      	str	r2, [r4, #0]
 8010008:	ee36 7a87 	vadd.f32	s14, s13, s14
 801000c:	1a5b      	subs	r3, r3, r1
 801000e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8010012:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8010016:	6123      	str	r3, [r4, #16]
 8010018:	ee77 7a27 	vadd.f32	s15, s14, s15
 801001c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8010020:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010024:	441a      	add	r2, r3
 8010026:	696b      	ldr	r3, [r5, #20]
 8010028:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 801002c:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8010030:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8010034:	68a9      	ldr	r1, [r5, #8]
 8010036:	ed95 6a08 	vldr	s12, [r5, #32]
 801003a:	602a      	str	r2, [r5, #0]
 801003c:	3301      	adds	r3, #1
 801003e:	616b      	str	r3, [r5, #20]
 8010040:	69ab      	ldr	r3, [r5, #24]
 8010042:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010046:	3b01      	subs	r3, #1
 8010048:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 801004c:	61ab      	str	r3, [r5, #24]
 801004e:	692b      	ldr	r3, [r5, #16]
 8010050:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8010054:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010058:	edd5 6a07 	vldr	s13, [r5, #28]
 801005c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8010060:	440b      	add	r3, r1
 8010062:	68e9      	ldr	r1, [r5, #12]
 8010064:	612b      	str	r3, [r5, #16]
 8010066:	ee76 6a86 	vadd.f32	s13, s13, s12
 801006a:	428b      	cmp	r3, r1
 801006c:	edc5 6a07 	vstr	s13, [r5, #28]
 8010070:	db15      	blt.n	801009e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8010072:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8010076:	ee76 6a26 	vadd.f32	s13, s12, s13
 801007a:	3201      	adds	r2, #1
 801007c:	edc5 6a07 	vstr	s13, [r5, #28]
 8010080:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8010084:	602a      	str	r2, [r5, #0]
 8010086:	ee36 7a87 	vadd.f32	s14, s13, s14
 801008a:	1a5b      	subs	r3, r3, r1
 801008c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8010090:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8010094:	612b      	str	r3, [r5, #16]
 8010096:	ee77 7a27 	vadd.f32	s15, s14, s15
 801009a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801009e:	3f01      	subs	r7, #1
 80100a0:	e757      	b.n	800ff52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80100a2:	ad39      	add	r5, sp, #228	@ 0xe4
 80100a4:	ac19      	add	r4, sp, #100	@ 0x64
 80100a6:	e72d      	b.n	800ff04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80100a8:	4613      	mov	r3, r2
 80100aa:	e744      	b.n	800ff36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80100ac:	4613      	mov	r3, r2
 80100ae:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 80100b2:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 80100b4:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 80100b8:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 80100bc:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 80100c0:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 80100c4:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 80100c8:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 80100cc:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 80100d0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 80100d2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 80100d6:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 80100da:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 80100de:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 80100e2:	960e      	str	r6, [sp, #56]	@ 0x38
 80100e4:	469e      	mov	lr, r3
 80100e6:	461f      	mov	r7, r3
 80100e8:	f04f 0900 	mov.w	r9, #0
 80100ec:	2f00      	cmp	r7, #0
 80100ee:	d146      	bne.n	801017e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80100f0:	449c      	add	ip, r3
 80100f2:	1ad7      	subs	r7, r2, r3
 80100f4:	f1b9 0f00 	cmp.w	r9, #0
 80100f8:	d009      	beq.n	801010e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80100fa:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 80100fe:	9039      	str	r0, [sp, #228]	@ 0xe4
 8010100:	913d      	str	r1, [sp, #244]	@ 0xf4
 8010102:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 8010106:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 801010a:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 801010e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8010110:	910e      	str	r1, [sp, #56]	@ 0x38
 8010112:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8010116:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 801011a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 801011e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8010122:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8010126:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 801012a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 801012e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8010132:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8010136:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 801013a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 801013e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8010142:	f04f 0800 	mov.w	r8, #0
 8010146:	f1be 0f00 	cmp.w	lr, #0
 801014a:	d030      	beq.n	80101ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 801014c:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 801014e:	4431      	add	r1, r6
 8010150:	4549      	cmp	r1, r9
 8010152:	4450      	add	r0, sl
 8010154:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010158:	ee37 7a04 	vadd.f32	s14, s14, s8
 801015c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010160:	db08      	blt.n	8010174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8010162:	ee77 7a85 	vadd.f32	s15, s15, s10
 8010166:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801016a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801016e:	3001      	adds	r0, #1
 8010170:	eba1 0109 	sub.w	r1, r1, r9
 8010174:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010178:	f04f 0801 	mov.w	r8, #1
 801017c:	e7e3      	b.n	8010146 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801017e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8010180:	4431      	add	r1, r6
 8010182:	4541      	cmp	r1, r8
 8010184:	4450      	add	r0, sl
 8010186:	ee37 7a24 	vadd.f32	s14, s14, s9
 801018a:	ee77 7a84 	vadd.f32	s15, s15, s8
 801018e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010192:	db08      	blt.n	80101a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8010194:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010198:	ee37 7a25 	vadd.f32	s14, s14, s11
 801019c:	ee77 7a86 	vadd.f32	s15, s15, s12
 80101a0:	3001      	adds	r0, #1
 80101a2:	eba1 0108 	sub.w	r1, r1, r8
 80101a6:	3f01      	subs	r7, #1
 80101a8:	f04f 0901 	mov.w	r9, #1
 80101ac:	e79e      	b.n	80100ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80101ae:	449c      	add	ip, r3
 80101b0:	1aff      	subs	r7, r7, r3
 80101b2:	f1b8 0f00 	cmp.w	r8, #0
 80101b6:	d009      	beq.n	80101cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80101b8:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 80101bc:	9019      	str	r0, [sp, #100]	@ 0x64
 80101be:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 80101c2:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 80101c6:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 80101ca:	911d      	str	r1, [sp, #116]	@ 0x74
 80101cc:	1ad2      	subs	r2, r2, r3
 80101ce:	e6b5      	b.n	800ff3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80101d0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80101d2:	681b      	ldr	r3, [r3, #0]
 80101d4:	b923      	cbnz	r3, 80101e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80101d6:	4b04      	ldr	r3, [pc, #16]	@ (80101e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80101d8:	6818      	ldr	r0, [r3, #0]
 80101da:	6803      	ldr	r3, [r0, #0]
 80101dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80101de:	4798      	blx	r3
 80101e0:	b05b      	add	sp, #364	@ 0x16c
 80101e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80101e6:	bf00      	nop
 80101e8:	20013b6c 	.word	0x20013b6c

080101ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80101ec:	b570      	push	{r4, r5, r6, lr}
 80101ee:	4604      	mov	r4, r0
 80101f0:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80101f4:	9805      	ldr	r0, [sp, #20]
 80101f6:	6061      	str	r1, [r4, #4]
 80101f8:	2500      	movs	r5, #0
 80101fa:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80101fe:	8263      	strh	r3, [r4, #18]
 8010200:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010204:	8025      	strh	r5, [r4, #0]
 8010206:	7221      	strb	r1, [r4, #8]
 8010208:	7266      	strb	r6, [r4, #9]
 801020a:	60e0      	str	r0, [r4, #12]
 801020c:	8222      	strh	r2, [r4, #16]
 801020e:	82a3      	strh	r3, [r4, #20]
 8010210:	82e5      	strh	r5, [r4, #22]
 8010212:	8325      	strh	r5, [r4, #24]
 8010214:	8365      	strh	r5, [r4, #26]
 8010216:	83a5      	strh	r5, [r4, #28]
 8010218:	83e5      	strh	r5, [r4, #30]
 801021a:	8425      	strh	r5, [r4, #32]
 801021c:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 8010220:	b32e      	cbz	r6, 801026e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8010222:	6803      	ldr	r3, [r0, #0]
 8010224:	695b      	ldr	r3, [r3, #20]
 8010226:	4798      	blx	r3
 8010228:	4606      	mov	r6, r0
 801022a:	b300      	cbz	r0, 801026e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801022c:	68e0      	ldr	r0, [r4, #12]
 801022e:	6803      	ldr	r3, [r0, #0]
 8010230:	4631      	mov	r1, r6
 8010232:	68db      	ldr	r3, [r3, #12]
 8010234:	4798      	blx	r3
 8010236:	4605      	mov	r5, r0
 8010238:	b1c8      	cbz	r0, 801026e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801023a:	7b43      	ldrb	r3, [r0, #13]
 801023c:	7a82      	ldrb	r2, [r0, #10]
 801023e:	005b      	lsls	r3, r3, #1
 8010240:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010244:	4313      	orrs	r3, r2
 8010246:	8423      	strh	r3, [r4, #32]
 8010248:	7a63      	ldrb	r3, [r4, #9]
 801024a:	2b06      	cmp	r3, #6
 801024c:	d10f      	bne.n	801026e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801024e:	68e0      	ldr	r0, [r4, #12]
 8010250:	6803      	ldr	r3, [r0, #0]
 8010252:	462a      	mov	r2, r5
 8010254:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010256:	4631      	mov	r1, r6
 8010258:	4798      	blx	r3
 801025a:	7b6b      	ldrb	r3, [r5, #13]
 801025c:	005b      	lsls	r3, r3, #1
 801025e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010262:	7aab      	ldrb	r3, [r5, #10]
 8010264:	4313      	orrs	r3, r2
 8010266:	4418      	add	r0, r3
 8010268:	8c23      	ldrh	r3, [r4, #32]
 801026a:	4418      	add	r0, r3
 801026c:	8420      	strh	r0, [r4, #32]
 801026e:	4620      	mov	r0, r4
 8010270:	bd70      	pop	{r4, r5, r6, pc}

08010272 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8010272:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010276:	2400      	movs	r4, #0
 8010278:	b085      	sub	sp, #20
 801027a:	4681      	mov	r9, r0
 801027c:	4688      	mov	r8, r1
 801027e:	4692      	mov	sl, r2
 8010280:	469b      	mov	fp, r3
 8010282:	4627      	mov	r7, r4
 8010284:	4625      	mov	r5, r4
 8010286:	4626      	mov	r6, r4
 8010288:	4554      	cmp	r4, sl
 801028a:	da2a      	bge.n	80102e2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801028c:	2300      	movs	r3, #0
 801028e:	9303      	str	r3, [sp, #12]
 8010290:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010294:	429d      	cmp	r5, r3
 8010296:	d004      	beq.n	80102a2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8010298:	f242 030b 	movw	r3, #8203	@ 0x200b
 801029c:	429d      	cmp	r5, r3
 801029e:	bf18      	it	ne
 80102a0:	462f      	movne	r7, r5
 80102a2:	ab03      	add	r3, sp, #12
 80102a4:	4642      	mov	r2, r8
 80102a6:	4659      	mov	r1, fp
 80102a8:	4648      	mov	r0, r9
 80102aa:	f003 fcab 	bl	8013c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80102ae:	4605      	mov	r5, r0
 80102b0:	b1b8      	cbz	r0, 80102e2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80102b2:	280a      	cmp	r0, #10
 80102b4:	d015      	beq.n	80102e2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80102b6:	9a03      	ldr	r2, [sp, #12]
 80102b8:	b18a      	cbz	r2, 80102de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80102ba:	7b50      	ldrb	r0, [r2, #13]
 80102bc:	7a93      	ldrb	r3, [r2, #10]
 80102be:	8895      	ldrh	r5, [r2, #4]
 80102c0:	0040      	lsls	r0, r0, #1
 80102c2:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80102c6:	4303      	orrs	r3, r0
 80102c8:	9301      	str	r3, [sp, #4]
 80102ca:	f8d8 3000 	ldr.w	r3, [r8]
 80102ce:	4639      	mov	r1, r7
 80102d0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80102d2:	4640      	mov	r0, r8
 80102d4:	4798      	blx	r3
 80102d6:	9b01      	ldr	r3, [sp, #4]
 80102d8:	4418      	add	r0, r3
 80102da:	4406      	add	r6, r0
 80102dc:	b2b6      	uxth	r6, r6
 80102de:	3401      	adds	r4, #1
 80102e0:	e7d2      	b.n	8010288 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80102e2:	4630      	mov	r0, r6
 80102e4:	b005      	add	sp, #20
 80102e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080102ea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80102ea:	2a02      	cmp	r2, #2
 80102ec:	b530      	push	{r4, r5, lr}
 80102ee:	d011      	beq.n	8010314 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80102f0:	2a03      	cmp	r2, #3
 80102f2:	d01c      	beq.n	801032e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80102f4:	2a01      	cmp	r2, #1
 80102f6:	d10c      	bne.n	8010312 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80102f8:	888b      	ldrh	r3, [r1, #4]
 80102fa:	8801      	ldrh	r1, [r0, #0]
 80102fc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8010300:	8844      	ldrh	r4, [r0, #2]
 8010302:	8004      	strh	r4, [r0, #0]
 8010304:	1a5b      	subs	r3, r3, r1
 8010306:	1a9b      	subs	r3, r3, r2
 8010308:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801030c:	8043      	strh	r3, [r0, #2]
 801030e:	8081      	strh	r1, [r0, #4]
 8010310:	80c2      	strh	r2, [r0, #6]
 8010312:	bd30      	pop	{r4, r5, pc}
 8010314:	88cb      	ldrh	r3, [r1, #6]
 8010316:	8842      	ldrh	r2, [r0, #2]
 8010318:	1a9b      	subs	r3, r3, r2
 801031a:	88c2      	ldrh	r2, [r0, #6]
 801031c:	1a9b      	subs	r3, r3, r2
 801031e:	888a      	ldrh	r2, [r1, #4]
 8010320:	8801      	ldrh	r1, [r0, #0]
 8010322:	8043      	strh	r3, [r0, #2]
 8010324:	1a52      	subs	r2, r2, r1
 8010326:	8881      	ldrh	r1, [r0, #4]
 8010328:	1a52      	subs	r2, r2, r1
 801032a:	8002      	strh	r2, [r0, #0]
 801032c:	e7f1      	b.n	8010312 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801032e:	88cb      	ldrh	r3, [r1, #6]
 8010330:	8841      	ldrh	r1, [r0, #2]
 8010332:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8010336:	f9b0 5000 	ldrsh.w	r5, [r0]
 801033a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801033e:	8045      	strh	r5, [r0, #2]
 8010340:	1a5b      	subs	r3, r3, r1
 8010342:	1a9b      	subs	r3, r3, r2
 8010344:	8003      	strh	r3, [r0, #0]
 8010346:	8082      	strh	r2, [r0, #4]
 8010348:	80c4      	strh	r4, [r0, #6]
 801034a:	e7e2      	b.n	8010312 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801034c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801034c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010350:	b09f      	sub	sp, #124	@ 0x7c
 8010352:	920f      	str	r2, [sp, #60]	@ 0x3c
 8010354:	9312      	str	r3, [sp, #72]	@ 0x48
 8010356:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8010358:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801035a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801035c:	8812      	ldrh	r2, [r2, #0]
 801035e:	889b      	ldrh	r3, [r3, #4]
 8010360:	900e      	str	r0, [sp, #56]	@ 0x38
 8010362:	4413      	add	r3, r2
 8010364:	6828      	ldr	r0, [r5, #0]
 8010366:	9117      	str	r1, [sp, #92]	@ 0x5c
 8010368:	b21b      	sxth	r3, r3
 801036a:	9311      	str	r3, [sp, #68]	@ 0x44
 801036c:	6803      	ldr	r3, [r0, #0]
 801036e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 8010372:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010374:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 8010378:	4798      	blx	r3
 801037a:	682b      	ldr	r3, [r5, #0]
 801037c:	9013      	str	r0, [sp, #76]	@ 0x4c
 801037e:	7b1a      	ldrb	r2, [r3, #12]
 8010380:	7adb      	ldrb	r3, [r3, #11]
 8010382:	9215      	str	r2, [sp, #84]	@ 0x54
 8010384:	9316      	str	r3, [sp, #88]	@ 0x58
 8010386:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 801038a:	2c00      	cmp	r4, #0
 801038c:	d067      	beq.n	801045e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 801038e:	7c2b      	ldrb	r3, [r5, #16]
 8010390:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8010392:	2b06      	cmp	r3, #6
 8010394:	bf14      	ite	ne
 8010396:	2301      	movne	r3, #1
 8010398:	2302      	moveq	r3, #2
 801039a:	4413      	add	r3, r2
 801039c:	f04f 0900 	mov.w	r9, #0
 80103a0:	9310      	str	r3, [sp, #64]	@ 0x40
 80103a2:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 80103a6:	464c      	mov	r4, r9
 80103a8:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 80103ac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80103ae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80103b0:	4293      	cmp	r3, r2
 80103b2:	f280 808b 	bge.w	80104cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 80103b6:	2300      	movs	r3, #0
 80103b8:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 80103bc:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 80103c0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80103c4:	429c      	cmp	r4, r3
 80103c6:	d006      	beq.n	80103d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 80103c8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80103ca:	f242 020b 	movw	r2, #8203	@ 0x200b
 80103ce:	4294      	cmp	r4, r2
 80103d0:	bf18      	it	ne
 80103d2:	4623      	movne	r3, r4
 80103d4:	930c      	str	r3, [sp, #48]	@ 0x30
 80103d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80103d8:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 80103da:	682a      	ldr	r2, [r5, #0]
 80103dc:	428b      	cmp	r3, r1
 80103de:	db40      	blt.n	8010462 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80103e0:	6813      	ldr	r3, [r2, #0]
 80103e2:	4610      	mov	r0, r2
 80103e4:	695b      	ldr	r3, [r3, #20]
 80103e6:	4798      	blx	r3
 80103e8:	4604      	mov	r4, r0
 80103ea:	6828      	ldr	r0, [r5, #0]
 80103ec:	6803      	ldr	r3, [r0, #0]
 80103ee:	aa1d      	add	r2, sp, #116	@ 0x74
 80103f0:	689f      	ldr	r7, [r3, #8]
 80103f2:	4621      	mov	r1, r4
 80103f4:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 80103f8:	47b8      	blx	r7
 80103fa:	901c      	str	r0, [sp, #112]	@ 0x70
 80103fc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010400:	429c      	cmp	r4, r3
 8010402:	f000 80ea 	beq.w	80105da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010406:	f242 030b 	movw	r3, #8203	@ 0x200b
 801040a:	429c      	cmp	r4, r3
 801040c:	f000 80e5 	beq.w	80105da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010410:	2c00      	cmp	r4, #0
 8010412:	f000 810c 	beq.w	801062e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8010416:	2c0a      	cmp	r4, #10
 8010418:	d05e      	beq.n	80104d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801041a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801041c:	b36a      	cbz	r2, 801047a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801041e:	8894      	ldrh	r4, [r2, #4]
 8010420:	f1bb 0f00 	cmp.w	fp, #0
 8010424:	d03a      	beq.n	801049c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8010426:	f892 900d 	ldrb.w	r9, [r2, #13]
 801042a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801042e:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8010432:	f892 900a 	ldrb.w	r9, [r2, #10]
 8010436:	f1bb 0f01 	cmp.w	fp, #1
 801043a:	ea49 0903 	orr.w	r9, r9, r3
 801043e:	d133      	bne.n	80104a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 8010440:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010442:	eba6 0609 	sub.w	r6, r6, r9
 8010446:	2b00      	cmp	r3, #0
 8010448:	d14d      	bne.n	80104e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 801044a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801044c:	eb09 0306 	add.w	r3, r9, r6
 8010450:	4413      	add	r3, r2
 8010452:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8010454:	f9b2 2000 	ldrsh.w	r2, [r2]
 8010458:	4293      	cmp	r3, r2
 801045a:	da4e      	bge.n	80104fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 801045c:	e036      	b.n	80104cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 801045e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8010460:	e79c      	b.n	801039c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 8010462:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8010466:	9301      	str	r3, [sp, #4]
 8010468:	ab1d      	add	r3, sp, #116	@ 0x74
 801046a:	9300      	str	r3, [sp, #0]
 801046c:	4659      	mov	r1, fp
 801046e:	ab1c      	add	r3, sp, #112	@ 0x70
 8010470:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8010472:	f003 fc10 	bl	8013c96 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8010476:	4604      	mov	r4, r0
 8010478:	e7c0      	b.n	80103fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 801047a:	6828      	ldr	r0, [r5, #0]
 801047c:	6803      	ldr	r3, [r0, #0]
 801047e:	691b      	ldr	r3, [r3, #16]
 8010480:	4798      	blx	r3
 8010482:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010486:	4298      	cmp	r0, r3
 8010488:	f000 80a7 	beq.w	80105da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801048c:	f242 030b 	movw	r3, #8203	@ 0x200b
 8010490:	4298      	cmp	r0, r3
 8010492:	f000 80a2 	beq.w	80105da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010496:	f1bb 0f00 	cmp.w	fp, #0
 801049a:	d100      	bne.n	801049e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801049c:	444e      	add	r6, r9
 801049e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80104a0:	2a00      	cmp	r2, #0
 80104a2:	d1c0      	bne.n	8010426 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80104a4:	4691      	mov	r9, r2
 80104a6:	e098      	b.n	80105da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80104a8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80104aa:	2b00      	cmp	r3, #0
 80104ac:	f000 80c1 	beq.w	8010632 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 80104b0:	f1bb 0f00 	cmp.w	fp, #0
 80104b4:	d117      	bne.n	80104e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 80104b6:	6828      	ldr	r0, [r5, #0]
 80104b8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80104ba:	6803      	ldr	r3, [r0, #0]
 80104bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80104be:	4798      	blx	r3
 80104c0:	4406      	add	r6, r0
 80104c2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80104c4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80104c6:	1af3      	subs	r3, r6, r3
 80104c8:	4293      	cmp	r3, r2
 80104ca:	dd16      	ble.n	80104fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80104cc:	2c00      	cmp	r4, #0
 80104ce:	f000 80ae 	beq.w	801062e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 80104d2:	2c0a      	cmp	r4, #10
 80104d4:	f040 809c 	bne.w	8010610 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 80104d8:	240a      	movs	r4, #10
 80104da:	fab4 f084 	clz	r0, r4
 80104de:	0940      	lsrs	r0, r0, #5
 80104e0:	b01f      	add	sp, #124	@ 0x7c
 80104e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104e6:	6828      	ldr	r0, [r5, #0]
 80104e8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80104ea:	6803      	ldr	r3, [r0, #0]
 80104ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80104ee:	4798      	blx	r3
 80104f0:	f1bb 0f01 	cmp.w	fp, #1
 80104f4:	eba6 0600 	sub.w	r6, r6, r0
 80104f8:	d0a7      	beq.n	801044a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80104fa:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80104fc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80104fe:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010502:	f9b3 8000 	ldrsh.w	r8, [r3]
 8010506:	7b43      	ldrb	r3, [r0, #13]
 8010508:	015b      	lsls	r3, r3, #5
 801050a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801050e:	7983      	ldrb	r3, [r0, #6]
 8010510:	4431      	add	r1, r6
 8010512:	4313      	orrs	r3, r2
 8010514:	440b      	add	r3, r1
 8010516:	4543      	cmp	r3, r8
 8010518:	db5f      	blt.n	80105da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801051a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801051c:	4299      	cmp	r1, r3
 801051e:	da5c      	bge.n	80105da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010520:	6828      	ldr	r0, [r5, #0]
 8010522:	6803      	ldr	r3, [r0, #0]
 8010524:	45b0      	cmp	r8, r6
 8010526:	bfc8      	it	gt
 8010528:	eba8 0806 	subgt.w	r8, r8, r6
 801052c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801052e:	bfcc      	ite	gt
 8010530:	fa1f f888 	uxthgt.w	r8, r8
 8010534:	f04f 0800 	movle.w	r8, #0
 8010538:	4798      	blx	r3
 801053a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801053c:	7b53      	ldrb	r3, [r2, #13]
 801053e:	00d9      	lsls	r1, r3, #3
 8010540:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 8010544:	7a11      	ldrb	r1, [r2, #8]
 8010546:	4339      	orrs	r1, r7
 8010548:	065f      	lsls	r7, r3, #25
 801054a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801054c:	bf44      	itt	mi
 801054e:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 8010552:	b209      	sxthmi	r1, r1
 8010554:	19c7      	adds	r7, r0, r7
 8010556:	1a7f      	subs	r7, r7, r1
 8010558:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 801055a:	b2bf      	uxth	r7, r7
 801055c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8010560:	fa0f fa87 	sxth.w	sl, r7
 8010564:	4551      	cmp	r1, sl
 8010566:	dd3c      	ble.n	80105e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8010568:	011b      	lsls	r3, r3, #4
 801056a:	79d0      	ldrb	r0, [r2, #7]
 801056c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010570:	4303      	orrs	r3, r0
 8010572:	449a      	add	sl, r3
 8010574:	4551      	cmp	r1, sl
 8010576:	dc30      	bgt.n	80105da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010578:	1bcf      	subs	r7, r1, r7
 801057a:	b23f      	sxth	r7, r7
 801057c:	468a      	mov	sl, r1
 801057e:	9219      	str	r2, [sp, #100]	@ 0x64
 8010580:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8010582:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8010584:	6828      	ldr	r0, [r5, #0]
 8010586:	2a00      	cmp	r2, #0
 8010588:	d12d      	bne.n	80105e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801058a:	9318      	str	r3, [sp, #96]	@ 0x60
 801058c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801058e:	6819      	ldr	r1, [r3, #0]
 8010590:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 8010592:	6801      	ldr	r1, [r0, #0]
 8010594:	9314      	str	r3, [sp, #80]	@ 0x50
 8010596:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8010598:	4788      	blx	r1
 801059a:	79a9      	ldrb	r1, [r5, #6]
 801059c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801059e:	7ba9      	ldrb	r1, [r5, #14]
 80105a0:	910a      	str	r1, [sp, #40]	@ 0x28
 80105a2:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 80105a6:	9109      	str	r1, [sp, #36]	@ 0x24
 80105a8:	68a9      	ldr	r1, [r5, #8]
 80105aa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80105ac:	9306      	str	r3, [sp, #24]
 80105ae:	b2bf      	uxth	r7, r7
 80105b0:	e9cd 8702 	strd	r8, r7, [sp, #8]
 80105b4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80105b6:	9304      	str	r3, [sp, #16]
 80105b8:	44b0      	add	r8, r6
 80105ba:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80105be:	fa0f f388 	sxth.w	r3, r8
 80105c2:	9300      	str	r3, [sp, #0]
 80105c4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80105c6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80105c8:	9205      	str	r2, [sp, #20]
 80105ca:	f8cd a004 	str.w	sl, [sp, #4]
 80105ce:	681a      	ldr	r2, [r3, #0]
 80105d0:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80105d2:	685b      	ldr	r3, [r3, #4]
 80105d4:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80105d6:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 80105d8:	47b8      	blx	r7
 80105da:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80105dc:	3301      	adds	r3, #1
 80105de:	930d      	str	r3, [sp, #52]	@ 0x34
 80105e0:	e6e4      	b.n	80103ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 80105e2:	2700      	movs	r7, #0
 80105e4:	e7cb      	b.n	801057e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 80105e6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80105e8:	f8d2 c008 	ldr.w	ip, [r2, #8]
 80105ec:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80105ee:	f8dc 1000 	ldr.w	r1, [ip]
 80105f2:	e9cd 6204 	strd	r6, r2, [sp, #16]
 80105f6:	79aa      	ldrb	r2, [r5, #6]
 80105f8:	9203      	str	r2, [sp, #12]
 80105fa:	7baa      	ldrb	r2, [r5, #14]
 80105fc:	9202      	str	r2, [sp, #8]
 80105fe:	68aa      	ldr	r2, [r5, #8]
 8010600:	e9cd 0200 	strd	r0, r2, [sp]
 8010604:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8010606:	688f      	ldr	r7, [r1, #8]
 8010608:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801060a:	4660      	mov	r0, ip
 801060c:	47b8      	blx	r7
 801060e:	e7e4      	b.n	80105da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8010610:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8010612:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8010614:	3501      	adds	r5, #1
 8010616:	429d      	cmp	r5, r3
 8010618:	f6bf af5f 	bge.w	80104da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801061c:	4659      	mov	r1, fp
 801061e:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8010620:	f7f3 f9f2 	bl	8003a08 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010624:	4604      	mov	r4, r0
 8010626:	b110      	cbz	r0, 801062e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8010628:	280a      	cmp	r0, #10
 801062a:	d1f2      	bne.n	8010612 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 801062c:	e754      	b.n	80104d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801062e:	2400      	movs	r4, #0
 8010630:	e753      	b.n	80104da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8010632:	f1bb 0f00 	cmp.w	fp, #0
 8010636:	f43f af44 	beq.w	80104c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 801063a:	e75e      	b.n	80104fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0801063c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801063c:	b530      	push	{r4, r5, lr}
 801063e:	8ac4      	ldrh	r4, [r0, #22]
 8010640:	8b45      	ldrh	r5, [r0, #26]
 8010642:	8343      	strh	r3, [r0, #26]
 8010644:	442c      	add	r4, r5
 8010646:	1ae4      	subs	r4, r4, r3
 8010648:	82c4      	strh	r4, [r0, #22]
 801064a:	8b83      	ldrh	r3, [r0, #28]
 801064c:	8b04      	ldrh	r4, [r0, #24]
 801064e:	4422      	add	r2, r4
 8010650:	440c      	add	r4, r1
 8010652:	1a59      	subs	r1, r3, r1
 8010654:	83c2      	strh	r2, [r0, #30]
 8010656:	8304      	strh	r4, [r0, #24]
 8010658:	8381      	strh	r1, [r0, #28]
 801065a:	bd30      	pop	{r4, r5, pc}

0801065c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801065c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010660:	4604      	mov	r4, r0
 8010662:	8a47      	ldrh	r7, [r0, #18]
 8010664:	68c0      	ldr	r0, [r0, #12]
 8010666:	6803      	ldr	r3, [r0, #0]
 8010668:	b085      	sub	sp, #20
 801066a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801066c:	4798      	blx	r3
 801066e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8010672:	7a63      	ldrb	r3, [r4, #9]
 8010674:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8010678:	42b7      	cmp	r7, r6
 801067a:	f103 33ff 	add.w	r3, r3, #4294967295
 801067e:	bfac      	ite	ge
 8010680:	f04f 0900 	movge.w	r9, #0
 8010684:	f04f 0901 	movlt.w	r9, #1
 8010688:	2b05      	cmp	r3, #5
 801068a:	d804      	bhi.n	8010696 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801068c:	e8df f003 	tbb	[pc, r3]
 8010690:	470e0854 	.word	0x470e0854
 8010694:	4c4c      	.short	0x4c4c
 8010696:	2500      	movs	r5, #0
 8010698:	46a9      	mov	r9, r5
 801069a:	462e      	mov	r6, r5
 801069c:	462f      	mov	r7, r5
 801069e:	e00d      	b.n	80106bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80106a0:	42b7      	cmp	r7, r6
 80106a2:	bfb4      	ite	lt
 80106a4:	2600      	movlt	r6, #0
 80106a6:	2601      	movge	r6, #1
 80106a8:	2500      	movs	r5, #0
 80106aa:	e7f7      	b.n	801069c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80106ac:	42b7      	cmp	r7, r6
 80106ae:	464d      	mov	r5, r9
 80106b0:	f04f 0900 	mov.w	r9, #0
 80106b4:	bfb4      	ite	lt
 80106b6:	2600      	movlt	r6, #0
 80106b8:	2601      	movge	r6, #1
 80106ba:	464f      	mov	r7, r9
 80106bc:	f04f 0800 	mov.w	r8, #0
 80106c0:	f8a4 8016 	strh.w	r8, [r4, #22]
 80106c4:	f8a4 8018 	strh.w	r8, [r4, #24]
 80106c8:	f8cd 8004 	str.w	r8, [sp, #4]
 80106cc:	2300      	movs	r3, #0
 80106ce:	9303      	str	r3, [sp, #12]
 80106d0:	8823      	ldrh	r3, [r4, #0]
 80106d2:	2b20      	cmp	r3, #32
 80106d4:	d034      	beq.n	8010740 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80106d6:	f242 010b 	movw	r1, #8203	@ 0x200b
 80106da:	1a5a      	subs	r2, r3, r1
 80106dc:	f1d2 0a00 	rsbs	sl, r2, #0
 80106e0:	eb4a 0a02 	adc.w	sl, sl, r2
 80106e4:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 80106e8:	4293      	cmp	r3, r2
 80106ea:	d009      	beq.n	8010700 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80106ec:	428b      	cmp	r3, r1
 80106ee:	9a01      	ldr	r2, [sp, #4]
 80106f0:	bf18      	it	ne
 80106f2:	461a      	movne	r2, r3
 80106f4:	9201      	str	r2, [sp, #4]
 80106f6:	bf0c      	ite	eq
 80106f8:	f04f 0a01 	moveq.w	sl, #1
 80106fc:	f04f 0a00 	movne.w	sl, #0
 8010700:	ab03      	add	r3, sp, #12
 8010702:	68e2      	ldr	r2, [r4, #12]
 8010704:	7a21      	ldrb	r1, [r4, #8]
 8010706:	6860      	ldr	r0, [r4, #4]
 8010708:	f003 fa7c 	bl	8013c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801070c:	8020      	strh	r0, [r4, #0]
 801070e:	b9d8      	cbnz	r0, 8010748 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8010710:	8ba2      	ldrh	r2, [r4, #28]
 8010712:	2300      	movs	r3, #0
 8010714:	4611      	mov	r1, r2
 8010716:	4620      	mov	r0, r4
 8010718:	f7ff ff90 	bl	801063c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801071c:	e06e      	b.n	80107fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801071e:	2500      	movs	r5, #0
 8010720:	46a9      	mov	r9, r5
 8010722:	462e      	mov	r6, r5
 8010724:	2701      	movs	r7, #1
 8010726:	e7c9      	b.n	80106bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010728:	42b7      	cmp	r7, r6
 801072a:	f04f 0500 	mov.w	r5, #0
 801072e:	bfb4      	ite	lt
 8010730:	2700      	movlt	r7, #0
 8010732:	2701      	movge	r7, #1
 8010734:	462e      	mov	r6, r5
 8010736:	e7c1      	b.n	80106bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010738:	2500      	movs	r5, #0
 801073a:	46a9      	mov	r9, r5
 801073c:	2601      	movs	r6, #1
 801073e:	e7ad      	b.n	801069c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8010740:	9301      	str	r3, [sp, #4]
 8010742:	f04f 0a01 	mov.w	sl, #1
 8010746:	e7db      	b.n	8010700 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8010748:	8b63      	ldrh	r3, [r4, #26]
 801074a:	280a      	cmp	r0, #10
 801074c:	f103 0301 	add.w	r3, r3, #1
 8010750:	8363      	strh	r3, [r4, #26]
 8010752:	d0dd      	beq.n	8010710 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8010754:	9a03      	ldr	r2, [sp, #12]
 8010756:	bb62      	cbnz	r2, 80107b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8010758:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801075c:	4298      	cmp	r0, r3
 801075e:	d003      	beq.n	8010768 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8010760:	f242 030b 	movw	r3, #8203	@ 0x200b
 8010764:	4298      	cmp	r0, r3
 8010766:	d1b1      	bne.n	80106cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010768:	8823      	ldrh	r3, [r4, #0]
 801076a:	8ba1      	ldrh	r1, [r4, #28]
 801076c:	2b20      	cmp	r3, #32
 801076e:	d003      	beq.n	8010778 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8010770:	f242 000b 	movw	r0, #8203	@ 0x200b
 8010774:	4283      	cmp	r3, r0
 8010776:	d131      	bne.n	80107dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8010778:	f1ba 0f00 	cmp.w	sl, #0
 801077c:	bf0a      	itet	eq
 801077e:	4688      	moveq	r8, r1
 8010780:	4650      	movne	r0, sl
 8010782:	2001      	moveq	r0, #1
 8010784:	440a      	add	r2, r1
 8010786:	8b23      	ldrh	r3, [r4, #24]
 8010788:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801078c:	b292      	uxth	r2, r2
 801078e:	83a2      	strh	r2, [r4, #28]
 8010790:	4413      	add	r3, r2
 8010792:	f1b9 0f00 	cmp.w	r9, #0
 8010796:	d102      	bne.n	801079e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8010798:	2d00      	cmp	r5, #0
 801079a:	d042      	beq.n	8010822 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801079c:	b300      	cbz	r0, 80107e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801079e:	8c21      	ldrh	r1, [r4, #32]
 80107a0:	4419      	add	r1, r3
 80107a2:	458c      	cmp	ip, r1
 80107a4:	da37      	bge.n	8010816 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80107a6:	8ae1      	ldrh	r1, [r4, #22]
 80107a8:	2900      	cmp	r1, #0
 80107aa:	d034      	beq.n	8010816 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80107ac:	4563      	cmp	r3, ip
 80107ae:	dd8d      	ble.n	80106cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80107b0:	e01d      	b.n	80107ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80107b2:	8893      	ldrh	r3, [r2, #4]
 80107b4:	8023      	strh	r3, [r4, #0]
 80107b6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80107ba:	9901      	ldr	r1, [sp, #4]
 80107bc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80107c0:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 80107c4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80107c8:	ea4b 0b00 	orr.w	fp, fp, r0
 80107cc:	68e0      	ldr	r0, [r4, #12]
 80107ce:	6803      	ldr	r3, [r0, #0]
 80107d0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80107d2:	4798      	blx	r3
 80107d4:	eb0b 0200 	add.w	r2, fp, r0
 80107d8:	b292      	uxth	r2, r2
 80107da:	e7c5      	b.n	8010768 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80107dc:	2000      	movs	r0, #0
 80107de:	e7d1      	b.n	8010784 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80107e0:	4563      	cmp	r3, ip
 80107e2:	f77f af73 	ble.w	80106cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80107e6:	8ae3      	ldrh	r3, [r4, #22]
 80107e8:	2b00      	cmp	r3, #0
 80107ea:	f43f af6f 	beq.w	80106cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80107ee:	2301      	movs	r3, #1
 80107f0:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 80107f4:	8c22      	ldrh	r2, [r4, #32]
 80107f6:	8be3      	ldrh	r3, [r4, #30]
 80107f8:	4413      	add	r3, r2
 80107fa:	83e3      	strh	r3, [r4, #30]
 80107fc:	68e0      	ldr	r0, [r4, #12]
 80107fe:	6803      	ldr	r3, [r0, #0]
 8010800:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010802:	4798      	blx	r3
 8010804:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8010808:	4418      	add	r0, r3
 801080a:	8a63      	ldrh	r3, [r4, #18]
 801080c:	1a18      	subs	r0, r3, r0
 801080e:	8260      	strh	r0, [r4, #18]
 8010810:	b005      	add	sp, #20
 8010812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010816:	2300      	movs	r3, #0
 8010818:	4611      	mov	r1, r2
 801081a:	4620      	mov	r0, r4
 801081c:	f7ff ff0e 	bl	801063c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010820:	e754      	b.n	80106cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010822:	4563      	cmp	r3, ip
 8010824:	dd14      	ble.n	8010850 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8010826:	b117      	cbz	r7, 801082e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8010828:	2301      	movs	r3, #1
 801082a:	460a      	mov	r2, r1
 801082c:	e772      	b.n	8010714 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801082e:	2e00      	cmp	r6, #0
 8010830:	f43f af4c 	beq.w	80106cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010834:	2800      	cmp	r0, #0
 8010836:	f47f af49 	bne.w	80106cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801083a:	f1ba 0f00 	cmp.w	sl, #0
 801083e:	d002      	beq.n	8010846 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8010840:	2301      	movs	r3, #1
 8010842:	4642      	mov	r2, r8
 8010844:	e767      	b.n	8010716 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8010846:	8ae3      	ldrh	r3, [r4, #22]
 8010848:	2b00      	cmp	r3, #0
 801084a:	f43f af3f 	beq.w	80106cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801084e:	e7d5      	b.n	80107fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8010850:	2800      	cmp	r0, #0
 8010852:	f47f af3b 	bne.w	80106cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010856:	f1ba 0f00 	cmp.w	sl, #0
 801085a:	f43f af37 	beq.w	80106cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801085e:	2301      	movs	r3, #1
 8010860:	4642      	mov	r2, r8
 8010862:	e7da      	b.n	801081a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08010864 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8010864:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010866:	4605      	mov	r5, r0
 8010868:	b08f      	sub	sp, #60	@ 0x3c
 801086a:	4617      	mov	r7, r2
 801086c:	461c      	mov	r4, r3
 801086e:	460e      	mov	r6, r1
 8010870:	b1d1      	cbz	r1, 80108a8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010872:	681b      	ldr	r3, [r3, #0]
 8010874:	4620      	mov	r0, r4
 8010876:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010878:	4798      	blx	r3
 801087a:	4240      	negs	r0, r0
 801087c:	b200      	sxth	r0, r0
 801087e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8010882:	9603      	str	r6, [sp, #12]
 8010884:	9700      	str	r7, [sp, #0]
 8010886:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801088a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801088e:	4629      	mov	r1, r5
 8010890:	a805      	add	r0, sp, #20
 8010892:	f7ff fcab 	bl	80101ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8010896:	2401      	movs	r4, #1
 8010898:	a805      	add	r0, sp, #20
 801089a:	f7ff fedf 	bl	801065c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801089e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80108a2:	b163      	cbz	r3, 80108be <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80108a4:	3401      	adds	r4, #1
 80108a6:	e7f7      	b.n	8010898 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80108a8:	f003 fa7a 	bl	8013da0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80108ac:	2401      	movs	r4, #1
 80108ae:	280a      	cmp	r0, #10
 80108b0:	4628      	mov	r0, r5
 80108b2:	bf08      	it	eq
 80108b4:	3401      	addeq	r4, #1
 80108b6:	f003 fa73 	bl	8013da0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80108ba:	2800      	cmp	r0, #0
 80108bc:	d1f7      	bne.n	80108ae <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80108be:	b2a0      	uxth	r0, r4
 80108c0:	b00f      	add	sp, #60	@ 0x3c
 80108c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080108c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80108c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108c8:	b0e3      	sub	sp, #396	@ 0x18c
 80108ca:	461c      	mov	r4, r3
 80108cc:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 80108ce:	4683      	mov	fp, r0
 80108d0:	4688      	mov	r8, r1
 80108d2:	2b00      	cmp	r3, #0
 80108d4:	f000 8112 	beq.w	8010afc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80108d8:	6823      	ldr	r3, [r4, #0]
 80108da:	2b00      	cmp	r3, #0
 80108dc:	f000 810e 	beq.w	8010afc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80108e0:	7ba3      	ldrb	r3, [r4, #14]
 80108e2:	2b00      	cmp	r3, #0
 80108e4:	f000 810a 	beq.w	8010afc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80108e8:	6810      	ldr	r0, [r2, #0]
 80108ea:	6851      	ldr	r1, [r2, #4]
 80108ec:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80108f0:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80108f4:	ad0a      	add	r5, sp, #40	@ 0x28
 80108f6:	462b      	mov	r3, r5
 80108f8:	c303      	stmia	r3!, {r0, r1}
 80108fa:	2100      	movs	r1, #0
 80108fc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8010900:	910c      	str	r1, [sp, #48]	@ 0x30
 8010902:	79a2      	ldrb	r2, [r4, #6]
 8010904:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8010908:	a90c      	add	r1, sp, #48	@ 0x30
 801090a:	4628      	mov	r0, r5
 801090c:	f7ff fced 	bl	80102ea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8010910:	a90c      	add	r1, sp, #48	@ 0x30
 8010912:	4608      	mov	r0, r1
 8010914:	79a2      	ldrb	r2, [r4, #6]
 8010916:	f7ff fce8 	bl	80102ea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801091a:	a817      	add	r0, sp, #92	@ 0x5c
 801091c:	f002 fdea 	bl	80134f4 <_ZN8touchgfx12TextProviderC1Ev>
 8010920:	6820      	ldr	r0, [r4, #0]
 8010922:	6803      	ldr	r3, [r0, #0]
 8010924:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010926:	4798      	blx	r3
 8010928:	4606      	mov	r6, r0
 801092a:	6820      	ldr	r0, [r4, #0]
 801092c:	6803      	ldr	r3, [r0, #0]
 801092e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010930:	4798      	blx	r3
 8010932:	4633      	mov	r3, r6
 8010934:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8010936:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8010938:	9000      	str	r0, [sp, #0]
 801093a:	a817      	add	r0, sp, #92	@ 0x5c
 801093c:	f002 fe35 	bl	80135aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010940:	6820      	ldr	r0, [r4, #0]
 8010942:	f894 a004 	ldrb.w	sl, [r4, #4]
 8010946:	6803      	ldr	r3, [r0, #0]
 8010948:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801094a:	4798      	blx	r3
 801094c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8010950:	6823      	ldr	r3, [r4, #0]
 8010952:	4607      	mov	r7, r0
 8010954:	4406      	add	r6, r0
 8010956:	a830      	add	r0, sp, #192	@ 0xc0
 8010958:	f893 9009 	ldrb.w	r9, [r3, #9]
 801095c:	f002 fdca 	bl	80134f4 <_ZN8touchgfx12TextProviderC1Ev>
 8010960:	7c23      	ldrb	r3, [r4, #16]
 8010962:	b17b      	cbz	r3, 8010984 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8010964:	6820      	ldr	r0, [r4, #0]
 8010966:	6803      	ldr	r3, [r0, #0]
 8010968:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801096a:	4798      	blx	r3
 801096c:	9009      	str	r0, [sp, #36]	@ 0x24
 801096e:	6820      	ldr	r0, [r4, #0]
 8010970:	6802      	ldr	r2, [r0, #0]
 8010972:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8010974:	4790      	blx	r2
 8010976:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010978:	9000      	str	r0, [sp, #0]
 801097a:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 801097c:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801097e:	a830      	add	r0, sp, #192	@ 0xc0
 8010980:	f002 fe13 	bl	80135aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010984:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010988:	7be2      	ldrb	r2, [r4, #15]
 801098a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801098e:	1a8a      	subs	r2, r1, r2
 8010990:	7c21      	ldrb	r1, [r4, #16]
 8010992:	9103      	str	r1, [sp, #12]
 8010994:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8010998:	9102      	str	r1, [sp, #8]
 801099a:	6821      	ldr	r1, [r4, #0]
 801099c:	9101      	str	r1, [sp, #4]
 801099e:	7961      	ldrb	r1, [r4, #5]
 80109a0:	9100      	str	r1, [sp, #0]
 80109a2:	b292      	uxth	r2, r2
 80109a4:	a930      	add	r1, sp, #192	@ 0xc0
 80109a6:	a80e      	add	r0, sp, #56	@ 0x38
 80109a8:	f7ff fc20 	bl	80101ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80109ac:	2e00      	cmp	r6, #0
 80109ae:	dc5b      	bgt.n	8010a68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80109b0:	af17      	add	r7, sp, #92	@ 0x5c
 80109b2:	f04f 0900 	mov.w	r9, #0
 80109b6:	7c23      	ldrb	r3, [r4, #16]
 80109b8:	2b00      	cmp	r3, #0
 80109ba:	f000 80b1 	beq.w	8010b20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80109be:	a80e      	add	r0, sp, #56	@ 0x38
 80109c0:	f7ff fe4c 	bl	801065c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80109c4:	f1ba 0f00 	cmp.w	sl, #0
 80109c8:	f000 80a5 	beq.w	8010b16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80109cc:	7c23      	ldrb	r3, [r4, #16]
 80109ce:	9309      	str	r3, [sp, #36]	@ 0x24
 80109d0:	2264      	movs	r2, #100	@ 0x64
 80109d2:	4639      	mov	r1, r7
 80109d4:	a849      	add	r0, sp, #292	@ 0x124
 80109d6:	f014 f890 	bl	8024afa <memcpy>
 80109da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80109dc:	2b00      	cmp	r3, #0
 80109de:	f000 80a7 	beq.w	8010b30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80109e2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 80109e6:	7922      	ldrb	r2, [r4, #4]
 80109e8:	2a01      	cmp	r2, #1
 80109ea:	f040 808a 	bne.w	8010b02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80109ee:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 80109f2:	1ac0      	subs	r0, r0, r3
 80109f4:	2302      	movs	r3, #2
 80109f6:	fb90 f0f3 	sdiv	r0, r0, r3
 80109fa:	b200      	sxth	r0, r0
 80109fc:	7c23      	ldrb	r3, [r4, #16]
 80109fe:	2b00      	cmp	r3, #0
 8010a00:	f000 808b 	beq.w	8010b1a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010a04:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 8010a08:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 8010a0c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8010a10:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010a14:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8010a18:	4410      	add	r0, r2
 8010a1a:	b200      	sxth	r0, r0
 8010a1c:	9000      	str	r0, [sp, #0]
 8010a1e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8010a22:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8010a26:	4642      	mov	r2, r8
 8010a28:	2100      	movs	r1, #0
 8010a2a:	4658      	mov	r0, fp
 8010a2c:	f7ff fc8e 	bl	801034c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8010a30:	2800      	cmp	r0, #0
 8010a32:	d163      	bne.n	8010afc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010a34:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010a38:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8010a3c:	b2b2      	uxth	r2, r6
 8010a3e:	4413      	add	r3, r2
 8010a40:	1a8a      	subs	r2, r1, r2
 8010a42:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8010a46:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 8010a4a:	b21b      	sxth	r3, r3
 8010a4c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010a50:	2a00      	cmp	r2, #0
 8010a52:	d153      	bne.n	8010afc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010a54:	6822      	ldr	r2, [r4, #0]
 8010a56:	8869      	ldrh	r1, [r5, #2]
 8010a58:	7a12      	ldrb	r2, [r2, #8]
 8010a5a:	1a9b      	subs	r3, r3, r2
 8010a5c:	88ea      	ldrh	r2, [r5, #6]
 8010a5e:	440a      	add	r2, r1
 8010a60:	b212      	sxth	r2, r2
 8010a62:	4293      	cmp	r3, r2
 8010a64:	dda7      	ble.n	80109b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8010a66:	e049      	b.n	8010afc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010a68:	7c23      	ldrb	r3, [r4, #16]
 8010a6a:	444f      	add	r7, r9
 8010a6c:	b1c3      	cbz	r3, 8010aa0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8010a6e:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 8010a72:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8010a76:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010a7a:	443b      	add	r3, r7
 8010a7c:	4293      	cmp	r3, r2
 8010a7e:	da97      	bge.n	80109b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8010a80:	a80e      	add	r0, sp, #56	@ 0x38
 8010a82:	f7ff fdeb 	bl	801065c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010a86:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 8010a8a:	3b01      	subs	r3, #1
 8010a8c:	b29b      	uxth	r3, r3
 8010a8e:	454b      	cmp	r3, r9
 8010a90:	9309      	str	r3, [sp, #36]	@ 0x24
 8010a92:	d021      	beq.n	8010ad8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8010a94:	7961      	ldrb	r1, [r4, #5]
 8010a96:	a817      	add	r0, sp, #92	@ 0x5c
 8010a98:	f7f2 ffb6 	bl	8003a08 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010a9c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010a9e:	e7f4      	b.n	8010a8a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8010aa0:	fa1f f986 	uxth.w	r9, r6
 8010aa4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8010aa8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010aac:	443b      	add	r3, r7
 8010aae:	4293      	cmp	r3, r2
 8010ab0:	f6bf af7e 	bge.w	80109b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8010ab4:	a817      	add	r0, sp, #92	@ 0x5c
 8010ab6:	f003 f973 	bl	8013da0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010aba:	b1f8      	cbz	r0, 8010afc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010abc:	280a      	cmp	r0, #10
 8010abe:	d1f1      	bne.n	8010aa4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8010ac0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010ac4:	444b      	add	r3, r9
 8010ac6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010aca:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8010ace:	eba3 0309 	sub.w	r3, r3, r9
 8010ad2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8010ad6:	e7e5      	b.n	8010aa4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8010ad8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8010adc:	b2b3      	uxth	r3, r6
 8010ade:	441a      	add	r2, r3
 8010ae0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8010ae4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8010ae8:	1ad3      	subs	r3, r2, r3
 8010aea:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8010aee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8010af2:	b11b      	cbz	r3, 8010afc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010af4:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8010af8:	2b00      	cmp	r3, #0
 8010afa:	d0ba      	beq.n	8010a72 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8010afc:	b063      	add	sp, #396	@ 0x18c
 8010afe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b02:	2a02      	cmp	r2, #2
 8010b04:	d105      	bne.n	8010b12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8010b06:	7be2      	ldrb	r2, [r4, #15]
 8010b08:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8010b0c:	1a80      	subs	r0, r0, r2
 8010b0e:	1ac0      	subs	r0, r0, r3
 8010b10:	e773      	b.n	80109fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8010b12:	2000      	movs	r0, #0
 8010b14:	e772      	b.n	80109fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8010b16:	7be0      	ldrb	r0, [r4, #15]
 8010b18:	e770      	b.n	80109fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8010b1a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8010b1e:	e773      	b.n	8010a08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8010b20:	f1ba 0f00 	cmp.w	sl, #0
 8010b24:	d0f7      	beq.n	8010b16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8010b26:	2264      	movs	r2, #100	@ 0x64
 8010b28:	4639      	mov	r1, r7
 8010b2a:	a849      	add	r0, sp, #292	@ 0x124
 8010b2c:	f013 ffe5 	bl	8024afa <memcpy>
 8010b30:	2300      	movs	r3, #0
 8010b32:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8010b36:	6821      	ldr	r1, [r4, #0]
 8010b38:	a849      	add	r0, sp, #292	@ 0x124
 8010b3a:	f7ff fb9a 	bl	8010272 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010b3e:	b203      	sxth	r3, r0
 8010b40:	e751      	b.n	80109e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08010b42 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8010b42:	2b03      	cmp	r3, #3
 8010b44:	d818      	bhi.n	8010b78 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8010b46:	e8df f003 	tbb	[pc, r3]
 8010b4a:	0602      	.short	0x0602
 8010b4c:	130d      	.short	0x130d
 8010b4e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010b52:	1850      	adds	r0, r2, r1
 8010b54:	4770      	bx	lr
 8010b56:	8803      	ldrh	r3, [r0, #0]
 8010b58:	8880      	ldrh	r0, [r0, #4]
 8010b5a:	4418      	add	r0, r3
 8010b5c:	b200      	sxth	r0, r0
 8010b5e:	1a80      	subs	r0, r0, r2
 8010b60:	3801      	subs	r0, #1
 8010b62:	4770      	bx	lr
 8010b64:	8803      	ldrh	r3, [r0, #0]
 8010b66:	8880      	ldrh	r0, [r0, #4]
 8010b68:	4418      	add	r0, r3
 8010b6a:	b200      	sxth	r0, r0
 8010b6c:	1a40      	subs	r0, r0, r1
 8010b6e:	e7f7      	b.n	8010b60 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010b70:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010b74:	4410      	add	r0, r2
 8010b76:	4770      	bx	lr
 8010b78:	2000      	movs	r0, #0
 8010b7a:	4770      	bx	lr

08010b7c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010b7c:	2b03      	cmp	r3, #3
 8010b7e:	d817      	bhi.n	8010bb0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010b80:	e8df f003 	tbb	[pc, r3]
 8010b84:	10090602 	.word	0x10090602
 8010b88:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010b8c:	1850      	adds	r0, r2, r1
 8010b8e:	4770      	bx	lr
 8010b90:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010b94:	e7fa      	b.n	8010b8c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010b96:	8843      	ldrh	r3, [r0, #2]
 8010b98:	88c0      	ldrh	r0, [r0, #6]
 8010b9a:	4418      	add	r0, r3
 8010b9c:	b200      	sxth	r0, r0
 8010b9e:	1a80      	subs	r0, r0, r2
 8010ba0:	3801      	subs	r0, #1
 8010ba2:	4770      	bx	lr
 8010ba4:	8843      	ldrh	r3, [r0, #2]
 8010ba6:	88c0      	ldrh	r0, [r0, #6]
 8010ba8:	4418      	add	r0, r3
 8010baa:	b200      	sxth	r0, r0
 8010bac:	1a40      	subs	r0, r0, r1
 8010bae:	e7f7      	b.n	8010ba0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010bb0:	2000      	movs	r0, #0
 8010bb2:	4770      	bx	lr

08010bb4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010bb4:	4b01      	ldr	r3, [pc, #4]	@ (8010bbc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8010bb6:	2200      	movs	r2, #0
 8010bb8:	601a      	str	r2, [r3, #0]
 8010bba:	4770      	bx	lr
 8010bbc:	20013b7c 	.word	0x20013b7c

08010bc0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010bc0:	4603      	mov	r3, r0
 8010bc2:	b1c8      	cbz	r0, 8010bf8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010bc4:	0c02      	lsrs	r2, r0, #16
 8010bc6:	0412      	lsls	r2, r2, #16
 8010bc8:	b9a2      	cbnz	r2, 8010bf4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8010bca:	0403      	lsls	r3, r0, #16
 8010bcc:	2010      	movs	r0, #16
 8010bce:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8010bd2:	bf04      	itt	eq
 8010bd4:	021b      	lsleq	r3, r3, #8
 8010bd6:	3008      	addeq	r0, #8
 8010bd8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8010bdc:	bf04      	itt	eq
 8010bde:	011b      	lsleq	r3, r3, #4
 8010be0:	3004      	addeq	r0, #4
 8010be2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8010be6:	bf04      	itt	eq
 8010be8:	009b      	lsleq	r3, r3, #2
 8010bea:	3002      	addeq	r0, #2
 8010bec:	2b00      	cmp	r3, #0
 8010bee:	db04      	blt.n	8010bfa <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010bf0:	3001      	adds	r0, #1
 8010bf2:	4770      	bx	lr
 8010bf4:	2000      	movs	r0, #0
 8010bf6:	e7ea      	b.n	8010bce <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8010bf8:	2020      	movs	r0, #32
 8010bfa:	4770      	bx	lr

08010bfc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010bfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c00:	b087      	sub	sp, #28
 8010c02:	460d      	mov	r5, r1
 8010c04:	4616      	mov	r6, r2
 8010c06:	4698      	mov	r8, r3
 8010c08:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 8010c0c:	4601      	mov	r1, r0
 8010c0e:	b120      	cbz	r0, 8010c1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8010c10:	b11a      	cbz	r2, 8010c1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8010c12:	2d1f      	cmp	r5, #31
 8010c14:	d801      	bhi.n	8010c1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8010c16:	2b1f      	cmp	r3, #31
 8010c18:	d904      	bls.n	8010c24 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8010c1a:	2000      	movs	r0, #0
 8010c1c:	6038      	str	r0, [r7, #0]
 8010c1e:	b007      	add	sp, #28
 8010c20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c24:	b97d      	cbnz	r5, 8010c46 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8010c26:	b143      	cbz	r3, 8010c3a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8010c28:	4602      	mov	r2, r0
 8010c2a:	e9cd 4700 	strd	r4, r7, [sp]
 8010c2e:	462b      	mov	r3, r5
 8010c30:	4641      	mov	r1, r8
 8010c32:	4630      	mov	r0, r6
 8010c34:	f7ff ffe2 	bl	8010bfc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010c38:	e7f1      	b.n	8010c1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8010c3a:	f04f 33ff 	mov.w	r3, #4294967295
 8010c3e:	603b      	str	r3, [r7, #0]
 8010c40:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8010c44:	e7eb      	b.n	8010c1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8010c46:	fa32 fa05 	lsrs.w	sl, r2, r5
 8010c4a:	d106      	bne.n	8010c5a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8010c4c:	4346      	muls	r6, r0
 8010c4e:	fbb6 f0f4 	udiv	r0, r6, r4
 8010c52:	fb04 6610 	mls	r6, r4, r0, r6
 8010c56:	603e      	str	r6, [r7, #0]
 8010c58:	e7e1      	b.n	8010c1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8010c5a:	2201      	movs	r2, #1
 8010c5c:	40aa      	lsls	r2, r5
 8010c5e:	3a01      	subs	r2, #1
 8010c60:	4016      	ands	r6, r2
 8010c62:	fa00 fb05 	lsl.w	fp, r0, r5
 8010c66:	4630      	mov	r0, r6
 8010c68:	fbbb f9f4 	udiv	r9, fp, r4
 8010c6c:	fb0a f309 	mul.w	r3, sl, r9
 8010c70:	9303      	str	r3, [sp, #12]
 8010c72:	f7ff ffa5 	bl	8010bc0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010c76:	462b      	mov	r3, r5
 8010c78:	460a      	mov	r2, r1
 8010c7a:	e9cd 4700 	strd	r4, r7, [sp]
 8010c7e:	4601      	mov	r1, r0
 8010c80:	4630      	mov	r0, r6
 8010c82:	f7ff ffbb 	bl	8010bfc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010c86:	fb04 b919 	mls	r9, r4, r9, fp
 8010c8a:	4606      	mov	r6, r0
 8010c8c:	4648      	mov	r0, r9
 8010c8e:	eb05 0108 	add.w	r1, r5, r8
 8010c92:	f7ff ff95 	bl	8010bc0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010c96:	ab05      	add	r3, sp, #20
 8010c98:	e9cd 4300 	strd	r4, r3, [sp]
 8010c9c:	464a      	mov	r2, r9
 8010c9e:	4603      	mov	r3, r0
 8010ca0:	4650      	mov	r0, sl
 8010ca2:	f7ff ffab 	bl	8010bfc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010ca6:	6839      	ldr	r1, [r7, #0]
 8010ca8:	9a05      	ldr	r2, [sp, #20]
 8010caa:	9b03      	ldr	r3, [sp, #12]
 8010cac:	4411      	add	r1, r2
 8010cae:	fbb1 f2f4 	udiv	r2, r1, r4
 8010cb2:	18d3      	adds	r3, r2, r3
 8010cb4:	441e      	add	r6, r3
 8010cb6:	fb04 1412 	mls	r4, r4, r2, r1
 8010cba:	4430      	add	r0, r6
 8010cbc:	603c      	str	r4, [r7, #0]
 8010cbe:	e7ae      	b.n	8010c1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08010cc0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010cc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010cc4:	b085      	sub	sp, #20
 8010cc6:	f1b0 0900 	subs.w	r9, r0, #0
 8010cca:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8010ccc:	461d      	mov	r5, r3
 8010cce:	bfbf      	itttt	lt
 8010cd0:	6823      	ldrlt	r3, [r4, #0]
 8010cd2:	425b      	neglt	r3, r3
 8010cd4:	f1c9 0900 	rsblt	r9, r9, #0
 8010cd8:	6023      	strlt	r3, [r4, #0]
 8010cda:	bfb4      	ite	lt
 8010cdc:	f04f 36ff 	movlt.w	r6, #4294967295
 8010ce0:	2601      	movge	r6, #1
 8010ce2:	2a00      	cmp	r2, #0
 8010ce4:	4617      	mov	r7, r2
 8010ce6:	da04      	bge.n	8010cf2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8010ce8:	6823      	ldr	r3, [r4, #0]
 8010cea:	425b      	negs	r3, r3
 8010cec:	4257      	negs	r7, r2
 8010cee:	4276      	negs	r6, r6
 8010cf0:	6023      	str	r3, [r4, #0]
 8010cf2:	2d00      	cmp	r5, #0
 8010cf4:	4638      	mov	r0, r7
 8010cf6:	bfba      	itte	lt
 8010cf8:	426d      	neglt	r5, r5
 8010cfa:	f04f 38ff 	movlt.w	r8, #4294967295
 8010cfe:	f04f 0801 	movge.w	r8, #1
 8010d02:	f7ff ff5d 	bl	8010bc0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010d06:	ab03      	add	r3, sp, #12
 8010d08:	e9cd 5300 	strd	r5, r3, [sp]
 8010d0c:	463a      	mov	r2, r7
 8010d0e:	4603      	mov	r3, r0
 8010d10:	4648      	mov	r0, r9
 8010d12:	f7ff ff73 	bl	8010bfc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010d16:	6823      	ldr	r3, [r4, #0]
 8010d18:	9a03      	ldr	r2, [sp, #12]
 8010d1a:	4546      	cmp	r6, r8
 8010d1c:	441a      	add	r2, r3
 8010d1e:	fb92 f3f5 	sdiv	r3, r2, r5
 8010d22:	4418      	add	r0, r3
 8010d24:	bf18      	it	ne
 8010d26:	4240      	negne	r0, r0
 8010d28:	fb05 2313 	mls	r3, r5, r3, r2
 8010d2c:	1c72      	adds	r2, r6, #1
 8010d2e:	6023      	str	r3, [r4, #0]
 8010d30:	d105      	bne.n	8010d3e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8010d32:	2b00      	cmp	r3, #0
 8010d34:	f1c3 0200 	rsb	r2, r3, #0
 8010d38:	db0b      	blt.n	8010d52 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8010d3a:	6022      	str	r2, [r4, #0]
 8010d3c:	e006      	b.n	8010d4c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010d3e:	2e01      	cmp	r6, #1
 8010d40:	d104      	bne.n	8010d4c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010d42:	2b00      	cmp	r3, #0
 8010d44:	da02      	bge.n	8010d4c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010d46:	442b      	add	r3, r5
 8010d48:	3801      	subs	r0, #1
 8010d4a:	6023      	str	r3, [r4, #0]
 8010d4c:	b005      	add	sp, #20
 8010d4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010d52:	3801      	subs	r0, #1
 8010d54:	1b52      	subs	r2, r2, r5
 8010d56:	e7f0      	b.n	8010d3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08010d58 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010d58:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010d5c:	4c1c      	ldr	r4, [pc, #112]	@ (8010dd0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010d5e:	6807      	ldr	r7, [r0, #0]
 8010d60:	69a3      	ldr	r3, [r4, #24]
 8010d62:	4605      	mov	r5, r0
 8010d64:	b92b      	cbnz	r3, 8010d72 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8010d66:	6840      	ldr	r0, [r0, #4]
 8010d68:	e9c5 7000 	strd	r7, r0, [r5]
 8010d6c:	b004      	add	sp, #16
 8010d6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010d72:	68a2      	ldr	r2, [r4, #8]
 8010d74:	6820      	ldr	r0, [r4, #0]
 8010d76:	ae04      	add	r6, sp, #16
 8010d78:	f04f 0802 	mov.w	r8, #2
 8010d7c:	fb93 f1f8 	sdiv	r1, r3, r8
 8010d80:	440a      	add	r2, r1
 8010d82:	f846 2d04 	str.w	r2, [r6, #-4]!
 8010d86:	69e1      	ldr	r1, [r4, #28]
 8010d88:	9600      	str	r6, [sp, #0]
 8010d8a:	463a      	mov	r2, r7
 8010d8c:	f7ff ff98 	bl	8010cc0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010d90:	69a3      	ldr	r3, [r4, #24]
 8010d92:	686a      	ldr	r2, [r5, #4]
 8010d94:	6a21      	ldr	r1, [r4, #32]
 8010d96:	9600      	str	r6, [sp, #0]
 8010d98:	4607      	mov	r7, r0
 8010d9a:	6860      	ldr	r0, [r4, #4]
 8010d9c:	f7ff ff90 	bl	8010cc0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010da0:	6962      	ldr	r2, [r4, #20]
 8010da2:	69a3      	ldr	r3, [r4, #24]
 8010da4:	fb93 f8f8 	sdiv	r8, r3, r8
 8010da8:	4442      	add	r2, r8
 8010daa:	9203      	str	r2, [sp, #12]
 8010dac:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8010dae:	682a      	ldr	r2, [r5, #0]
 8010db0:	9600      	str	r6, [sp, #0]
 8010db2:	4407      	add	r7, r0
 8010db4:	68e0      	ldr	r0, [r4, #12]
 8010db6:	f7ff ff83 	bl	8010cc0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010dba:	9600      	str	r6, [sp, #0]
 8010dbc:	4680      	mov	r8, r0
 8010dbe:	69a3      	ldr	r3, [r4, #24]
 8010dc0:	686a      	ldr	r2, [r5, #4]
 8010dc2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8010dc4:	6920      	ldr	r0, [r4, #16]
 8010dc6:	f7ff ff7b 	bl	8010cc0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010dca:	4440      	add	r0, r8
 8010dcc:	e7cc      	b.n	8010d68 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010dce:	bf00      	nop
 8010dd0:	20013b80 	.word	0x20013b80

08010dd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8010dd4:	4b07      	ldr	r3, [pc, #28]	@ (8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8010dd6:	781b      	ldrb	r3, [r3, #0]
 8010dd8:	2b01      	cmp	r3, #1
 8010dda:	d109      	bne.n	8010df0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8010ddc:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010de0:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010de4:	8003      	strh	r3, [r0, #0]
 8010de6:	4b04      	ldr	r3, [pc, #16]	@ (8010df8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8010de8:	881b      	ldrh	r3, [r3, #0]
 8010dea:	3b01      	subs	r3, #1
 8010dec:	1a9b      	subs	r3, r3, r2
 8010dee:	800b      	strh	r3, [r1, #0]
 8010df0:	4770      	bx	lr
 8010df2:	bf00      	nop
 8010df4:	20013b62 	.word	0x20013b62
 8010df8:	20013b5e 	.word	0x20013b5e

08010dfc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8010dfc:	b510      	push	{r4, lr}
 8010dfe:	4b07      	ldr	r3, [pc, #28]	@ (8010e1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8010e00:	781b      	ldrb	r3, [r3, #0]
 8010e02:	2b01      	cmp	r3, #1
 8010e04:	d108      	bne.n	8010e18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8010e06:	4b06      	ldr	r3, [pc, #24]	@ (8010e20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8010e08:	880c      	ldrh	r4, [r1, #0]
 8010e0a:	881b      	ldrh	r3, [r3, #0]
 8010e0c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010e10:	3b01      	subs	r3, #1
 8010e12:	1b1b      	subs	r3, r3, r4
 8010e14:	8003      	strh	r3, [r0, #0]
 8010e16:	800a      	strh	r2, [r1, #0]
 8010e18:	bd10      	pop	{r4, pc}
 8010e1a:	bf00      	nop
 8010e1c:	20013b62 	.word	0x20013b62
 8010e20:	20013b5e 	.word	0x20013b5e

08010e24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8010e24:	b510      	push	{r4, lr}
 8010e26:	4b0a      	ldr	r3, [pc, #40]	@ (8010e50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010e28:	781b      	ldrb	r3, [r3, #0]
 8010e2a:	2b01      	cmp	r3, #1
 8010e2c:	d10e      	bne.n	8010e4c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8010e2e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010e32:	8843      	ldrh	r3, [r0, #2]
 8010e34:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010e38:	8044      	strh	r4, [r0, #2]
 8010e3a:	18ca      	adds	r2, r1, r3
 8010e3c:	4b05      	ldr	r3, [pc, #20]	@ (8010e54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010e3e:	881b      	ldrh	r3, [r3, #0]
 8010e40:	1a9b      	subs	r3, r3, r2
 8010e42:	8003      	strh	r3, [r0, #0]
 8010e44:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010e48:	80c3      	strh	r3, [r0, #6]
 8010e4a:	8081      	strh	r1, [r0, #4]
 8010e4c:	bd10      	pop	{r4, pc}
 8010e4e:	bf00      	nop
 8010e50:	20013b62 	.word	0x20013b62
 8010e54:	20013b5e 	.word	0x20013b5e

08010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010e58:	4b08      	ldr	r3, [pc, #32]	@ (8010e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010e5a:	781b      	ldrb	r3, [r3, #0]
 8010e5c:	2b01      	cmp	r3, #1
 8010e5e:	d10c      	bne.n	8010e7a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010e60:	8803      	ldrh	r3, [r0, #0]
 8010e62:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8010e66:	8842      	ldrh	r2, [r0, #2]
 8010e68:	8002      	strh	r2, [r0, #0]
 8010e6a:	185a      	adds	r2, r3, r1
 8010e6c:	4b04      	ldr	r3, [pc, #16]	@ (8010e80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010e6e:	881b      	ldrh	r3, [r3, #0]
 8010e70:	1a9b      	subs	r3, r3, r2
 8010e72:	8043      	strh	r3, [r0, #2]
 8010e74:	88c3      	ldrh	r3, [r0, #6]
 8010e76:	8083      	strh	r3, [r0, #4]
 8010e78:	80c1      	strh	r1, [r0, #6]
 8010e7a:	4770      	bx	lr
 8010e7c:	20013b62 	.word	0x20013b62
 8010e80:	20013b5e 	.word	0x20013b5e

08010e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010e84:	b510      	push	{r4, lr}
 8010e86:	4b07      	ldr	r3, [pc, #28]	@ (8010ea4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010e88:	781b      	ldrb	r3, [r3, #0]
 8010e8a:	2b01      	cmp	r3, #1
 8010e8c:	d108      	bne.n	8010ea0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010e8e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010e92:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010e96:	8003      	strh	r3, [r0, #0]
 8010e98:	8893      	ldrh	r3, [r2, #4]
 8010e9a:	3b01      	subs	r3, #1
 8010e9c:	1b1b      	subs	r3, r3, r4
 8010e9e:	800b      	strh	r3, [r1, #0]
 8010ea0:	bd10      	pop	{r4, pc}
 8010ea2:	bf00      	nop
 8010ea4:	20013b62 	.word	0x20013b62

08010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010ea8:	b510      	push	{r4, lr}
 8010eaa:	4b0a      	ldr	r3, [pc, #40]	@ (8010ed4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010eac:	781b      	ldrb	r3, [r3, #0]
 8010eae:	2b01      	cmp	r3, #1
 8010eb0:	460a      	mov	r2, r1
 8010eb2:	d10d      	bne.n	8010ed0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010eb4:	8881      	ldrh	r1, [r0, #4]
 8010eb6:	8803      	ldrh	r3, [r0, #0]
 8010eb8:	440b      	add	r3, r1
 8010eba:	4601      	mov	r1, r0
 8010ebc:	3b01      	subs	r3, #1
 8010ebe:	f821 3b02 	strh.w	r3, [r1], #2
 8010ec2:	f7ff ffdf 	bl	8010e84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010ec6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010eca:	88c2      	ldrh	r2, [r0, #6]
 8010ecc:	8082      	strh	r2, [r0, #4]
 8010ece:	80c3      	strh	r3, [r0, #6]
 8010ed0:	bd10      	pop	{r4, pc}
 8010ed2:	bf00      	nop
 8010ed4:	20013b62 	.word	0x20013b62

08010ed8 <_ZN8touchgfx11Application13requestRedrawEv>:
 8010ed8:	4b06      	ldr	r3, [pc, #24]	@ (8010ef4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8010eda:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010ede:	4b06      	ldr	r3, [pc, #24]	@ (8010ef8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8010ee0:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 8010ee4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010ee8:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8010eec:	2100      	movs	r1, #0
 8010eee:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 8010ef2:	4770      	bx	lr
 8010ef4:	20013b5e 	.word	0x20013b5e
 8010ef8:	20013b60 	.word	0x20013b60

08010efc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010efc:	4b03      	ldr	r3, [pc, #12]	@ (8010f0c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8010efe:	6818      	ldr	r0, [r3, #0]
 8010f00:	b110      	cbz	r0, 8010f08 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8010f02:	6803      	ldr	r3, [r0, #0]
 8010f04:	699b      	ldr	r3, [r3, #24]
 8010f06:	4718      	bx	r3
 8010f08:	4770      	bx	lr
 8010f0a:	bf00      	nop
 8010f0c:	20013bb0 	.word	0x20013bb0

08010f10 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8010f10:	4770      	bx	lr
	...

08010f14 <_ZN8touchgfx11Application4drawEv>:
 8010f14:	b507      	push	{r0, r1, r2, lr}
 8010f16:	4b09      	ldr	r3, [pc, #36]	@ (8010f3c <_ZN8touchgfx11Application4drawEv+0x28>)
 8010f18:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010f1c:	4b08      	ldr	r3, [pc, #32]	@ (8010f40 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8010f1e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010f22:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010f26:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010f2a:	6803      	ldr	r3, [r0, #0]
 8010f2c:	2100      	movs	r1, #0
 8010f2e:	9100      	str	r1, [sp, #0]
 8010f30:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010f32:	4669      	mov	r1, sp
 8010f34:	4798      	blx	r3
 8010f36:	b003      	add	sp, #12
 8010f38:	f85d fb04 	ldr.w	pc, [sp], #4
 8010f3c:	20013b5e 	.word	0x20013b5e
 8010f40:	20013b60 	.word	0x20013b60

08010f44 <_ZN8touchgfx11Application10invalidateEv>:
 8010f44:	4b09      	ldr	r3, [pc, #36]	@ (8010f6c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8010f46:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010f4a:	4b09      	ldr	r3, [pc, #36]	@ (8010f70 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8010f4c:	b082      	sub	sp, #8
 8010f4e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010f52:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010f56:	2100      	movs	r1, #0
 8010f58:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010f5c:	9100      	str	r1, [sp, #0]
 8010f5e:	6803      	ldr	r3, [r0, #0]
 8010f60:	aa02      	add	r2, sp, #8
 8010f62:	e912 0006 	ldmdb	r2, {r1, r2}
 8010f66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010f68:	b002      	add	sp, #8
 8010f6a:	4718      	bx	r3
 8010f6c:	20013b5e 	.word	0x20013b5e
 8010f70:	20013b60 	.word	0x20013b60

08010f74 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010f74:	4b03      	ldr	r3, [pc, #12]	@ (8010f84 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010f76:	6818      	ldr	r0, [r3, #0]
 8010f78:	b110      	cbz	r0, 8010f80 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010f7a:	6803      	ldr	r3, [r0, #0]
 8010f7c:	69db      	ldr	r3, [r3, #28]
 8010f7e:	4718      	bx	r3
 8010f80:	4770      	bx	lr
 8010f82:	bf00      	nop
 8010f84:	20013bb0 	.word	0x20013bb0

08010f88 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010f88:	4b03      	ldr	r3, [pc, #12]	@ (8010f98 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010f8a:	6818      	ldr	r0, [r3, #0]
 8010f8c:	b110      	cbz	r0, 8010f94 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8010f8e:	6803      	ldr	r3, [r0, #0]
 8010f90:	6a1b      	ldr	r3, [r3, #32]
 8010f92:	4718      	bx	r3
 8010f94:	4770      	bx	lr
 8010f96:	bf00      	nop
 8010f98:	20013bb0 	.word	0x20013bb0

08010f9c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010f9c:	2300      	movs	r3, #0
 8010f9e:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 8010fa2:	4770      	bx	lr

08010fa4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8010fa4:	4b03      	ldr	r3, [pc, #12]	@ (8010fb4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8010fa6:	6818      	ldr	r0, [r3, #0]
 8010fa8:	b110      	cbz	r0, 8010fb0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010faa:	6803      	ldr	r3, [r0, #0]
 8010fac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010fae:	4718      	bx	r3
 8010fb0:	4770      	bx	lr
 8010fb2:	bf00      	nop
 8010fb4:	20013bb0 	.word	0x20013bb0

08010fb8 <_ZN8touchgfx11ApplicationD1Ev>:
 8010fb8:	4770      	bx	lr

08010fba <_ZN8touchgfx11ApplicationD0Ev>:
 8010fba:	b510      	push	{r4, lr}
 8010fbc:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 8010fc0:	4604      	mov	r4, r0
 8010fc2:	f012 fb50 	bl	8023666 <_ZdlPvj>
 8010fc6:	4620      	mov	r0, r4
 8010fc8:	bd10      	pop	{r4, pc}

08010fca <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8010fca:	b510      	push	{r4, lr}
 8010fcc:	f9b1 4000 	ldrsh.w	r4, [r1]
 8010fd0:	888a      	ldrh	r2, [r1, #4]
 8010fd2:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010fd6:	4422      	add	r2, r4
 8010fd8:	b212      	sxth	r2, r2
 8010fda:	4293      	cmp	r3, r2
 8010fdc:	da15      	bge.n	801100a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010fde:	8882      	ldrh	r2, [r0, #4]
 8010fe0:	4413      	add	r3, r2
 8010fe2:	b21b      	sxth	r3, r3
 8010fe4:	429c      	cmp	r4, r3
 8010fe6:	da10      	bge.n	801100a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010fe8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8010fec:	88c9      	ldrh	r1, [r1, #6]
 8010fee:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010ff2:	4419      	add	r1, r3
 8010ff4:	b209      	sxth	r1, r1
 8010ff6:	428a      	cmp	r2, r1
 8010ff8:	da07      	bge.n	801100a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010ffa:	88c0      	ldrh	r0, [r0, #6]
 8010ffc:	4410      	add	r0, r2
 8010ffe:	b200      	sxth	r0, r0
 8011000:	4283      	cmp	r3, r0
 8011002:	bfac      	ite	ge
 8011004:	2000      	movge	r0, #0
 8011006:	2001      	movlt	r0, #1
 8011008:	bd10      	pop	{r4, pc}
 801100a:	2000      	movs	r0, #0
 801100c:	e7fc      	b.n	8011008 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801100e <_ZN8touchgfx4Rect10restrictToEss>:
 801100e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011012:	2b00      	cmp	r3, #0
 8011014:	b510      	push	{r4, lr}
 8011016:	da04      	bge.n	8011022 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8011018:	8884      	ldrh	r4, [r0, #4]
 801101a:	4423      	add	r3, r4
 801101c:	8083      	strh	r3, [r0, #4]
 801101e:	2300      	movs	r3, #0
 8011020:	8003      	strh	r3, [r0, #0]
 8011022:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011026:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801102a:	1b09      	subs	r1, r1, r4
 801102c:	428b      	cmp	r3, r1
 801102e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8011032:	bfc8      	it	gt
 8011034:	8081      	strhgt	r1, [r0, #4]
 8011036:	2b00      	cmp	r3, #0
 8011038:	da04      	bge.n	8011044 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 801103a:	88c1      	ldrh	r1, [r0, #6]
 801103c:	440b      	add	r3, r1
 801103e:	80c3      	strh	r3, [r0, #6]
 8011040:	2300      	movs	r3, #0
 8011042:	8043      	strh	r3, [r0, #2]
 8011044:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8011048:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801104c:	1a52      	subs	r2, r2, r1
 801104e:	4293      	cmp	r3, r2
 8011050:	bfc8      	it	gt
 8011052:	80c2      	strhgt	r2, [r0, #6]
 8011054:	bd10      	pop	{r4, pc}
	...

08011058 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8011058:	b510      	push	{r4, lr}
 801105a:	4b10      	ldr	r3, [pc, #64]	@ (801109c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801105c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011060:	4b0f      	ldr	r3, [pc, #60]	@ (80110a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8011062:	460c      	mov	r4, r1
 8011064:	4620      	mov	r0, r4
 8011066:	f9b3 1000 	ldrsh.w	r1, [r3]
 801106a:	f7ff ffd0 	bl	801100e <_ZN8touchgfx4Rect10restrictToEss>
 801106e:	4b0d      	ldr	r3, [pc, #52]	@ (80110a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8011070:	6818      	ldr	r0, [r3, #0]
 8011072:	b190      	cbz	r0, 801109a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8011074:	6803      	ldr	r3, [r0, #0]
 8011076:	4621      	mov	r1, r4
 8011078:	689b      	ldr	r3, [r3, #8]
 801107a:	4798      	blx	r3
 801107c:	4b0a      	ldr	r3, [pc, #40]	@ (80110a8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801107e:	6818      	ldr	r0, [r3, #0]
 8011080:	b118      	cbz	r0, 801108a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8011082:	6803      	ldr	r3, [r0, #0]
 8011084:	4621      	mov	r1, r4
 8011086:	689b      	ldr	r3, [r3, #8]
 8011088:	4798      	blx	r3
 801108a:	4b08      	ldr	r3, [pc, #32]	@ (80110ac <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 801108c:	6818      	ldr	r0, [r3, #0]
 801108e:	6803      	ldr	r3, [r0, #0]
 8011090:	4621      	mov	r1, r4
 8011092:	69db      	ldr	r3, [r3, #28]
 8011094:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011098:	4718      	bx	r3
 801109a:	bd10      	pop	{r4, pc}
 801109c:	20013b60 	.word	0x20013b60
 80110a0:	20013b5e 	.word	0x20013b5e
 80110a4:	20013bb0 	.word	0x20013bb0
 80110a8:	20013bac 	.word	0x20013bac
 80110ac:	20013b6c 	.word	0x20013b6c

080110b0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80110b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80110b2:	4606      	mov	r6, r0
 80110b4:	4608      	mov	r0, r1
 80110b6:	460f      	mov	r7, r1
 80110b8:	f7fa fb51 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 80110bc:	b9e8      	cbnz	r0, 80110fa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80110be:	f9b7 5000 	ldrsh.w	r5, [r7]
 80110c2:	f9b6 4000 	ldrsh.w	r4, [r6]
 80110c6:	42a5      	cmp	r5, r4
 80110c8:	db17      	blt.n	80110fa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80110ca:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80110ce:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80110d2:	429a      	cmp	r2, r3
 80110d4:	db11      	blt.n	80110fa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80110d6:	88b9      	ldrh	r1, [r7, #4]
 80110d8:	440d      	add	r5, r1
 80110da:	88b1      	ldrh	r1, [r6, #4]
 80110dc:	440c      	add	r4, r1
 80110de:	b22d      	sxth	r5, r5
 80110e0:	b224      	sxth	r4, r4
 80110e2:	42a5      	cmp	r5, r4
 80110e4:	dc09      	bgt.n	80110fa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80110e6:	88f8      	ldrh	r0, [r7, #6]
 80110e8:	4410      	add	r0, r2
 80110ea:	88f2      	ldrh	r2, [r6, #6]
 80110ec:	4413      	add	r3, r2
 80110ee:	b200      	sxth	r0, r0
 80110f0:	b21b      	sxth	r3, r3
 80110f2:	4298      	cmp	r0, r3
 80110f4:	bfcc      	ite	gt
 80110f6:	2000      	movgt	r0, #0
 80110f8:	2001      	movle	r0, #1
 80110fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080110fc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80110fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80110fe:	4604      	mov	r4, r0
 8011100:	4608      	mov	r0, r1
 8011102:	460d      	mov	r5, r1
 8011104:	f7fa fb2b 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 8011108:	b978      	cbnz	r0, 801112a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801110a:	4620      	mov	r0, r4
 801110c:	f7fa fb27 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 8011110:	f9b5 6000 	ldrsh.w	r6, [r5]
 8011114:	b150      	cbz	r0, 801112c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8011116:	8026      	strh	r6, [r4, #0]
 8011118:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801111c:	8063      	strh	r3, [r4, #2]
 801111e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8011122:	80a3      	strh	r3, [r4, #4]
 8011124:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8011128:	80e3      	strh	r3, [r4, #6]
 801112a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801112c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011130:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8011134:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8011138:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 801113c:	88ed      	ldrh	r5, [r5, #6]
 801113e:	42b1      	cmp	r1, r6
 8011140:	460f      	mov	r7, r1
 8011142:	bfa8      	it	ge
 8011144:	4637      	movge	r7, r6
 8011146:	4293      	cmp	r3, r2
 8011148:	4618      	mov	r0, r3
 801114a:	4466      	add	r6, ip
 801114c:	bfa8      	it	ge
 801114e:	4610      	movge	r0, r2
 8011150:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8011154:	8027      	strh	r7, [r4, #0]
 8011156:	442a      	add	r2, r5
 8011158:	88e5      	ldrh	r5, [r4, #6]
 801115a:	8060      	strh	r0, [r4, #2]
 801115c:	4461      	add	r1, ip
 801115e:	442b      	add	r3, r5
 8011160:	b236      	sxth	r6, r6
 8011162:	b209      	sxth	r1, r1
 8011164:	b212      	sxth	r2, r2
 8011166:	b21b      	sxth	r3, r3
 8011168:	428e      	cmp	r6, r1
 801116a:	bfac      	ite	ge
 801116c:	ebc7 0106 	rsbge	r1, r7, r6
 8011170:	ebc7 0101 	rsblt	r1, r7, r1
 8011174:	429a      	cmp	r2, r3
 8011176:	bfac      	ite	ge
 8011178:	ebc0 0202 	rsbge	r2, r0, r2
 801117c:	ebc0 0203 	rsblt	r2, r0, r3
 8011180:	80a1      	strh	r1, [r4, #4]
 8011182:	80e2      	strh	r2, [r4, #6]
 8011184:	e7d1      	b.n	801112a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08011188 <_ZN8touchgfx11Application11getInstanceEv>:
 8011188:	4b01      	ldr	r3, [pc, #4]	@ (8011190 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801118a:	6818      	ldr	r0, [r3, #0]
 801118c:	4770      	bx	lr
 801118e:	bf00      	nop
 8011190:	20013bc0 	.word	0x20013bc0

08011194 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8011194:	b510      	push	{r4, lr}
 8011196:	2300      	movs	r3, #0
 8011198:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 801119c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80111a0:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 80111a4:	4604      	mov	r4, r0
 80111a6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80111aa:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 80111ae:	429a      	cmp	r2, r3
 80111b0:	d90e      	bls.n	80111d0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80111b2:	18e2      	adds	r2, r4, r3
 80111b4:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 80111b8:	b122      	cbz	r2, 80111c4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80111ba:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80111be:	6803      	ldr	r3, [r0, #0]
 80111c0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80111c2:	4798      	blx	r3
 80111c4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80111c8:	3301      	adds	r3, #1
 80111ca:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80111ce:	e7ea      	b.n	80111a6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80111d0:	bd10      	pop	{r4, pc}

080111d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80111d2:	2300      	movs	r3, #0
 80111d4:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 80111d8:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 80111dc:	30a4      	adds	r0, #164	@ 0xa4
 80111de:	f802 3b01 	strb.w	r3, [r2], #1
 80111e2:	4282      	cmp	r2, r0
 80111e4:	d1fb      	bne.n	80111de <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80111e6:	4770      	bx	lr

080111e8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80111e8:	b570      	push	{r4, r5, r6, lr}
 80111ea:	4c0b      	ldr	r4, [pc, #44]	@ (8011218 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80111ec:	4605      	mov	r5, r0
 80111ee:	6820      	ldr	r0, [r4, #0]
 80111f0:	460e      	mov	r6, r1
 80111f2:	b110      	cbz	r0, 80111fa <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80111f4:	6803      	ldr	r3, [r0, #0]
 80111f6:	695b      	ldr	r3, [r3, #20]
 80111f8:	4798      	blx	r3
 80111fa:	1d28      	adds	r0, r5, #4
 80111fc:	f7ff ffe9 	bl	80111d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8011200:	6026      	str	r6, [r4, #0]
 8011202:	6833      	ldr	r3, [r6, #0]
 8011204:	4630      	mov	r0, r6
 8011206:	68db      	ldr	r3, [r3, #12]
 8011208:	4798      	blx	r3
 801120a:	682b      	ldr	r3, [r5, #0]
 801120c:	4628      	mov	r0, r5
 801120e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011210:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011214:	4718      	bx	r3
 8011216:	bf00      	nop
 8011218:	20013bb0 	.word	0x20013bb0

0801121c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 801121c:	2300      	movs	r3, #0
 801121e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 8011222:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 8011226:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011228:	461a      	mov	r2, r3
 801122a:	461c      	mov	r4, r3
 801122c:	461d      	mov	r5, r3
 801122e:	459c      	cmp	ip, r3
 8011230:	dd1a      	ble.n	8011268 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8011232:	18c6      	adds	r6, r0, r3
 8011234:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8011238:	b16e      	cbz	r6, 8011256 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801123a:	429a      	cmp	r2, r3
 801123c:	d008      	beq.n	8011250 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801123e:	fa1f fe82 	uxth.w	lr, r2
 8011242:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8011246:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801124a:	1887      	adds	r7, r0, r2
 801124c:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8011250:	3201      	adds	r2, #1
 8011252:	3301      	adds	r3, #1
 8011254:	e7eb      	b.n	801122e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8011256:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 801125a:	4299      	cmp	r1, r3
 801125c:	bfa8      	it	ge
 801125e:	3501      	addge	r5, #1
 8011260:	429e      	cmp	r6, r3
 8011262:	bfc8      	it	gt
 8011264:	3401      	addgt	r4, #1
 8011266:	e7f4      	b.n	8011252 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8011268:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 801126c:	1b49      	subs	r1, r1, r5
 801126e:	1b1b      	subs	r3, r3, r4
 8011270:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 8011274:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8011278:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801127c:	4293      	cmp	r3, r2
 801127e:	dd03      	ble.n	8011288 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8011280:	3b01      	subs	r3, #1
 8011282:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8011286:	e7f7      	b.n	8011278 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8011288:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801128c <_ZN8touchgfx11Application15handleTickEventEv>:
 801128c:	b570      	push	{r4, r5, r6, lr}
 801128e:	4d16      	ldr	r5, [pc, #88]	@ (80112e8 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8011290:	4604      	mov	r4, r0
 8011292:	6828      	ldr	r0, [r5, #0]
 8011294:	b140      	cbz	r0, 80112a8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8011296:	7a03      	ldrb	r3, [r0, #8]
 8011298:	b933      	cbnz	r3, 80112a8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801129a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801129e:	6803      	ldr	r3, [r0, #0]
 80112a0:	689b      	ldr	r3, [r3, #8]
 80112a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80112a6:	4718      	bx	r3
 80112a8:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 80112ac:	4e0f      	ldr	r6, [pc, #60]	@ (80112ec <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80112ae:	b973      	cbnz	r3, 80112ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80112b0:	b168      	cbz	r0, 80112ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80112b2:	7a03      	ldrb	r3, [r0, #8]
 80112b4:	b15b      	cbz	r3, 80112ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80112b6:	6830      	ldr	r0, [r6, #0]
 80112b8:	b110      	cbz	r0, 80112c0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80112ba:	6803      	ldr	r3, [r0, #0]
 80112bc:	691b      	ldr	r3, [r3, #16]
 80112be:	4798      	blx	r3
 80112c0:	6828      	ldr	r0, [r5, #0]
 80112c2:	6803      	ldr	r3, [r0, #0]
 80112c4:	68db      	ldr	r3, [r3, #12]
 80112c6:	4798      	blx	r3
 80112c8:	2301      	movs	r3, #1
 80112ca:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80112ce:	3404      	adds	r4, #4
 80112d0:	4620      	mov	r0, r4
 80112d2:	f7ff ff5f 	bl	8011194 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80112d6:	4620      	mov	r0, r4
 80112d8:	f7ff ffa0 	bl	801121c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80112dc:	6830      	ldr	r0, [r6, #0]
 80112de:	b110      	cbz	r0, 80112e6 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80112e0:	6803      	ldr	r3, [r0, #0]
 80112e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80112e4:	e7dd      	b.n	80112a2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80112e6:	bd70      	pop	{r4, r5, r6, pc}
 80112e8:	20013bb4 	.word	0x20013bb4
 80112ec:	20013bb0 	.word	0x20013bb0

080112f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80112f0:	4603      	mov	r3, r0
 80112f2:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 80112f6:	2200      	movs	r2, #0
 80112f8:	801a      	strh	r2, [r3, #0]
 80112fa:	805a      	strh	r2, [r3, #2]
 80112fc:	809a      	strh	r2, [r3, #4]
 80112fe:	80da      	strh	r2, [r3, #6]
 8011300:	3308      	adds	r3, #8
 8011302:	428b      	cmp	r3, r1
 8011304:	d1f8      	bne.n	80112f8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8011306:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 801130a:	4770      	bx	lr

0801130c <_ZN8touchgfx11ApplicationC1Ev>:
 801130c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801130e:	4606      	mov	r6, r0
 8011310:	4b1c      	ldr	r3, [pc, #112]	@ (8011384 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8011312:	f846 3b04 	str.w	r3, [r6], #4
 8011316:	4604      	mov	r4, r0
 8011318:	2500      	movs	r5, #0
 801131a:	22a8      	movs	r2, #168	@ 0xa8
 801131c:	2100      	movs	r1, #0
 801131e:	4630      	mov	r0, r6
 8011320:	f013 fb1b 	bl	802495a <memset>
 8011324:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8011328:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801132c:	f7ff ffe0 	bl	80112f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011330:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8011334:	f7ff ffdc 	bl	80112f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011338:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 801133c:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 8011340:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 8011344:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8011348:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 801134c:	490e      	ldr	r1, [pc, #56]	@ (8011388 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801134e:	480f      	ldr	r0, [pc, #60]	@ (801138c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8011350:	4f0f      	ldr	r7, [pc, #60]	@ (8011390 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8011352:	f011 fb13 	bl	802297c <CRC_Lock>
 8011356:	4b0f      	ldr	r3, [pc, #60]	@ (8011394 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8011358:	b158      	cbz	r0, 8011372 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801135a:	801d      	strh	r5, [r3, #0]
 801135c:	4a0e      	ldr	r2, [pc, #56]	@ (8011398 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801135e:	2300      	movs	r3, #0
 8011360:	6013      	str	r3, [r2, #0]
 8011362:	4a0e      	ldr	r2, [pc, #56]	@ (801139c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8011364:	603b      	str	r3, [r7, #0]
 8011366:	4630      	mov	r0, r6
 8011368:	6013      	str	r3, [r2, #0]
 801136a:	f7ff ff32 	bl	80111d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801136e:	4620      	mov	r0, r4
 8011370:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011372:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8011376:	2002      	movs	r0, #2
 8011378:	801a      	strh	r2, [r3, #0]
 801137a:	6038      	str	r0, [r7, #0]
 801137c:	f001 ff40 	bl	8013200 <_ZN8touchgfx6Screen4drawEv>
 8011380:	e7ec      	b.n	801135c <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8011382:	bf00      	nop
 8011384:	080275bc 	.word	0x080275bc
 8011388:	b5e8b5cd 	.word	0xb5e8b5cd
 801138c:	f407a5c2 	.word	0xf407a5c2
 8011390:	20013bb0 	.word	0x20013bb0
 8011394:	2000019c 	.word	0x2000019c
 8011398:	20013bc0 	.word	0x20013bc0
 801139c:	20013bb4 	.word	0x20013bb4

080113a0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80113a0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 80113a4:	3b01      	subs	r3, #1
 80113a6:	b29b      	uxth	r3, r3
 80113a8:	428b      	cmp	r3, r1
 80113aa:	b510      	push	{r4, lr}
 80113ac:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 80113b0:	d908      	bls.n	80113c4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80113b2:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80113b6:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80113ba:	681a      	ldr	r2, [r3, #0]
 80113bc:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80113c0:	685a      	ldr	r2, [r3, #4]
 80113c2:	6062      	str	r2, [r4, #4]
 80113c4:	bd10      	pop	{r4, pc}
	...

080113c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80113c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113cc:	4b92      	ldr	r3, [pc, #584]	@ (8011618 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 80113ce:	b08f      	sub	sp, #60	@ 0x3c
 80113d0:	ac0a      	add	r4, sp, #40	@ 0x28
 80113d2:	e884 0006 	stmia.w	r4, {r1, r2}
 80113d6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80113da:	4b90      	ldr	r3, [pc, #576]	@ (801161c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 80113dc:	4683      	mov	fp, r0
 80113de:	f9b3 1000 	ldrsh.w	r1, [r3]
 80113e2:	4620      	mov	r0, r4
 80113e4:	f7ff fe13 	bl	801100e <_ZN8touchgfx4Rect10restrictToEss>
 80113e8:	4620      	mov	r0, r4
 80113ea:	f7fa f9b8 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 80113ee:	2800      	cmp	r0, #0
 80113f0:	d170      	bne.n	80114d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80113f2:	4b8b      	ldr	r3, [pc, #556]	@ (8011620 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 80113f4:	681b      	ldr	r3, [r3, #0]
 80113f6:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 80113fa:	2b02      	cmp	r3, #2
 80113fc:	d06a      	beq.n	80114d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80113fe:	9403      	str	r4, [sp, #12]
 8011400:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8011404:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8011408:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801140c:	35a4      	adds	r5, #164	@ 0xa4
 801140e:	9301      	str	r3, [sp, #4]
 8011410:	b15c      	cbz	r4, 801142a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 8011412:	4629      	mov	r1, r5
 8011414:	9803      	ldr	r0, [sp, #12]
 8011416:	f7ff fe4b 	bl	80110b0 <_ZNK8touchgfx4Rect8includesERKS0_>
 801141a:	3c01      	subs	r4, #1
 801141c:	b118      	cbz	r0, 8011426 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 801141e:	b2a1      	uxth	r1, r4
 8011420:	9801      	ldr	r0, [sp, #4]
 8011422:	f7ff ffbd 	bl	80113a0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011426:	3d08      	subs	r5, #8
 8011428:	e7f2      	b.n	8011410 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 801142a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 801142e:	f8cd a010 	str.w	sl, [sp, #16]
 8011432:	f10a 33ff 	add.w	r3, sl, #4294967295
 8011436:	9302      	str	r3, [sp, #8]
 8011438:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801143c:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8011440:	9306      	str	r3, [sp, #24]
 8011442:	445c      	add	r4, fp
 8011444:	2500      	movs	r5, #0
 8011446:	4626      	mov	r6, r4
 8011448:	f8cd a014 	str.w	sl, [sp, #20]
 801144c:	462f      	mov	r7, r5
 801144e:	9b05      	ldr	r3, [sp, #20]
 8011450:	2b00      	cmp	r3, #0
 8011452:	d073      	beq.n	801153c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 8011454:	9903      	ldr	r1, [sp, #12]
 8011456:	4630      	mov	r0, r6
 8011458:	f7ff fdb7 	bl	8010fca <_ZNK8touchgfx4Rect9intersectERKS0_>
 801145c:	b350      	cbz	r0, 80114b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 801145e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 8011462:	f9b6 c000 	ldrsh.w	ip, [r6]
 8011466:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 801146a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801146e:	45e6      	cmp	lr, ip
 8011470:	db33      	blt.n	80114da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 8011472:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8011476:	88b3      	ldrh	r3, [r6, #4]
 8011478:	4472      	add	r2, lr
 801147a:	4463      	add	r3, ip
 801147c:	b212      	sxth	r2, r2
 801147e:	b21b      	sxth	r3, r3
 8011480:	429a      	cmp	r2, r3
 8011482:	dc2a      	bgt.n	80114da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 8011484:	88f3      	ldrh	r3, [r6, #6]
 8011486:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801148a:	fa1f f289 	uxth.w	r2, r9
 801148e:	4413      	add	r3, r2
 8011490:	b29b      	uxth	r3, r3
 8011492:	45c8      	cmp	r8, r9
 8011494:	fa1f fc88 	uxth.w	ip, r8
 8011498:	fa0f fe83 	sxth.w	lr, r3
 801149c:	db0f      	blt.n	80114be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 801149e:	eba3 030c 	sub.w	r3, r3, ip
 80114a2:	1ac9      	subs	r1, r1, r3
 80114a4:	b209      	sxth	r1, r1
 80114a6:	2900      	cmp	r1, #0
 80114a8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80114ac:	dd12      	ble.n	80114d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80114ae:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 80114b2:	4605      	mov	r5, r0
 80114b4:	9b05      	ldr	r3, [sp, #20]
 80114b6:	3b01      	subs	r3, #1
 80114b8:	9305      	str	r3, [sp, #20]
 80114ba:	3e08      	subs	r6, #8
 80114bc:	e7c7      	b.n	801144e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 80114be:	4461      	add	r1, ip
 80114c0:	b209      	sxth	r1, r1
 80114c2:	4571      	cmp	r1, lr
 80114c4:	dc38      	bgt.n	8011538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 80114c6:	eba2 020c 	sub.w	r2, r2, ip
 80114ca:	b212      	sxth	r2, r2
 80114cc:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80114d0:	2a00      	cmp	r2, #0
 80114d2:	dcee      	bgt.n	80114b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80114d4:	b00f      	add	sp, #60	@ 0x3c
 80114d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114da:	45c8      	cmp	r8, r9
 80114dc:	db2c      	blt.n	8011538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 80114de:	88f3      	ldrh	r3, [r6, #6]
 80114e0:	4499      	add	r9, r3
 80114e2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 80114e6:	4498      	add	r8, r3
 80114e8:	fa0f f989 	sxth.w	r9, r9
 80114ec:	fa0f f888 	sxth.w	r8, r8
 80114f0:	45c1      	cmp	r9, r8
 80114f2:	db21      	blt.n	8011538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 80114f4:	88b3      	ldrh	r3, [r6, #4]
 80114f6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80114fa:	fa1f f28c 	uxth.w	r2, ip
 80114fe:	4413      	add	r3, r2
 8011500:	b29b      	uxth	r3, r3
 8011502:	45e6      	cmp	lr, ip
 8011504:	fa1f f88e 	uxth.w	r8, lr
 8011508:	fa0f f983 	sxth.w	r9, r3
 801150c:	db0a      	blt.n	8011524 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 801150e:	eba3 0308 	sub.w	r3, r3, r8
 8011512:	1ac9      	subs	r1, r1, r3
 8011514:	b209      	sxth	r1, r1
 8011516:	2900      	cmp	r1, #0
 8011518:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801151c:	ddda      	ble.n	80114d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801151e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8011522:	e7c6      	b.n	80114b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011524:	4441      	add	r1, r8
 8011526:	b209      	sxth	r1, r1
 8011528:	4549      	cmp	r1, r9
 801152a:	dc05      	bgt.n	8011538 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801152c:	eba2 0208 	sub.w	r2, r2, r8
 8011530:	b212      	sxth	r2, r2
 8011532:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8011536:	e7cb      	b.n	80114d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 8011538:	4607      	mov	r7, r0
 801153a:	e7bb      	b.n	80114b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 801153c:	2d00      	cmp	r5, #0
 801153e:	d181      	bne.n	8011444 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 8011540:	2f00      	cmp	r7, #0
 8011542:	f000 81df 	beq.w	8011904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8011546:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 801154a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 801154e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 8011552:	b2b3      	uxth	r3, r6
 8011554:	9305      	str	r3, [sp, #20]
 8011556:	9a05      	ldr	r2, [sp, #20]
 8011558:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801155c:	4413      	add	r3, r2
 801155e:	b2ba      	uxth	r2, r7
 8011560:	4492      	add	sl, r2
 8011562:	b29b      	uxth	r3, r3
 8011564:	fa1f fa8a 	uxth.w	sl, sl
 8011568:	fa0f f883 	sxth.w	r8, r3
 801156c:	fa0f f98a 	sxth.w	r9, sl
 8011570:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8011574:	9b04      	ldr	r3, [sp, #16]
 8011576:	2b00      	cmp	r3, #0
 8011578:	d054      	beq.n	8011624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 801157a:	9903      	ldr	r1, [sp, #12]
 801157c:	4620      	mov	r0, r4
 801157e:	f7ff fd24 	bl	8010fca <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011582:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011586:	b1c0      	cbz	r0, 80115ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8011588:	f9b4 e000 	ldrsh.w	lr, [r4]
 801158c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8011590:	4576      	cmp	r6, lr
 8011592:	dc22      	bgt.n	80115da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 8011594:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8011598:	44f4      	add	ip, lr
 801159a:	fa0f fc8c 	sxth.w	ip, ip
 801159e:	45e0      	cmp	r8, ip
 80115a0:	db1b      	blt.n	80115da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 80115a2:	428f      	cmp	r7, r1
 80115a4:	fa1f fc81 	uxth.w	ip, r1
 80115a8:	88e1      	ldrh	r1, [r4, #6]
 80115aa:	dc0d      	bgt.n	80115c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 80115ac:	ebaa 0c0c 	sub.w	ip, sl, ip
 80115b0:	eba1 010c 	sub.w	r1, r1, ip
 80115b4:	f8a4 9002 	strh.w	r9, [r4, #2]
 80115b8:	80e1      	strh	r1, [r4, #6]
 80115ba:	4628      	mov	r0, r5
 80115bc:	9904      	ldr	r1, [sp, #16]
 80115be:	3901      	subs	r1, #1
 80115c0:	9104      	str	r1, [sp, #16]
 80115c2:	3c08      	subs	r4, #8
 80115c4:	4605      	mov	r5, r0
 80115c6:	e7d3      	b.n	8011570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 80115c8:	4461      	add	r1, ip
 80115ca:	b209      	sxth	r1, r1
 80115cc:	4549      	cmp	r1, r9
 80115ce:	dcf5      	bgt.n	80115bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80115d0:	eba2 0c0c 	sub.w	ip, r2, ip
 80115d4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80115d8:	e7ef      	b.n	80115ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 80115da:	428f      	cmp	r7, r1
 80115dc:	dcee      	bgt.n	80115bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80115de:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80115e2:	4461      	add	r1, ip
 80115e4:	b209      	sxth	r1, r1
 80115e6:	4589      	cmp	r9, r1
 80115e8:	dbe8      	blt.n	80115bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80115ea:	4576      	cmp	r6, lr
 80115ec:	fa1f fc8e 	uxth.w	ip, lr
 80115f0:	88a1      	ldrh	r1, [r4, #4]
 80115f2:	dc07      	bgt.n	8011604 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 80115f4:	eba3 0c0c 	sub.w	ip, r3, ip
 80115f8:	eba1 010c 	sub.w	r1, r1, ip
 80115fc:	f8a4 8000 	strh.w	r8, [r4]
 8011600:	80a1      	strh	r1, [r4, #4]
 8011602:	e7da      	b.n	80115ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8011604:	4461      	add	r1, ip
 8011606:	b209      	sxth	r1, r1
 8011608:	4588      	cmp	r8, r1
 801160a:	dbd7      	blt.n	80115bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801160c:	9905      	ldr	r1, [sp, #20]
 801160e:	eba1 0c0c 	sub.w	ip, r1, ip
 8011612:	f8a4 c004 	strh.w	ip, [r4, #4]
 8011616:	e7d0      	b.n	80115ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8011618:	20013b60 	.word	0x20013b60
 801161c:	20013b5e 	.word	0x20013b5e
 8011620:	20013b6c 	.word	0x20013b6c
 8011624:	2d00      	cmp	r5, #0
 8011626:	f000 816d 	beq.w	8011904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 801162a:	9b06      	ldr	r3, [sp, #24]
 801162c:	445b      	add	r3, fp
 801162e:	461c      	mov	r4, r3
 8011630:	9b02      	ldr	r3, [sp, #8]
 8011632:	3301      	adds	r3, #1
 8011634:	f000 8166 	beq.w	8011904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8011638:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 801163c:	4629      	mov	r1, r5
 801163e:	9803      	ldr	r0, [sp, #12]
 8011640:	f7ff fd36 	bl	80110b0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011644:	b120      	cbz	r0, 8011650 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 8011646:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801164a:	9801      	ldr	r0, [sp, #4]
 801164c:	f7ff fea8 	bl	80113a0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011650:	9903      	ldr	r1, [sp, #12]
 8011652:	4628      	mov	r0, r5
 8011654:	f7ff fcb9 	bl	8010fca <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011658:	2800      	cmp	r0, #0
 801165a:	f000 809c 	beq.w	8011796 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 801165e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 8011662:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8011666:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 801166a:	9309      	str	r3, [sp, #36]	@ 0x24
 801166c:	fa1f f189 	uxth.w	r1, r9
 8011670:	eb01 0c03 	add.w	ip, r1, r3
 8011674:	fa1f fa8c 	uxth.w	sl, ip
 8011678:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801167c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8011680:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8011684:	b283      	uxth	r3, r0
 8011686:	eb03 050c 	add.w	r5, r3, ip
 801168a:	b2ad      	uxth	r5, r5
 801168c:	9505      	str	r5, [sp, #20]
 801168e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8011692:	9504      	str	r5, [sp, #16]
 8011694:	4548      	cmp	r0, r9
 8011696:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 801169a:	f340 8099 	ble.w	80117d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 801169e:	1a5b      	subs	r3, r3, r1
 80116a0:	b29b      	uxth	r3, r3
 80116a2:	4596      	cmp	lr, r2
 80116a4:	fa0f f08a 	sxth.w	r0, sl
 80116a8:	b21e      	sxth	r6, r3
 80116aa:	dd2e      	ble.n	801170a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 80116ac:	9f02      	ldr	r7, [sp, #8]
 80116ae:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 80116b2:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80116b6:	9f04      	ldr	r7, [sp, #16]
 80116b8:	1a3f      	subs	r7, r7, r0
 80116ba:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 80116be:	fa1f fe8e 	uxth.w	lr, lr
 80116c2:	b292      	uxth	r2, r2
 80116c4:	ebae 0102 	sub.w	r1, lr, r2
 80116c8:	44a6      	add	lr, r4
 80116ca:	4402      	add	r2, r0
 80116cc:	b289      	uxth	r1, r1
 80116ce:	fa0f fe8e 	sxth.w	lr, lr
 80116d2:	b212      	sxth	r2, r2
 80116d4:	b20d      	sxth	r5, r1
 80116d6:	ebae 0202 	sub.w	r2, lr, r2
 80116da:	436f      	muls	r7, r5
 80116dc:	4372      	muls	r2, r6
 80116de:	4297      	cmp	r7, r2
 80116e0:	db09      	blt.n	80116f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 80116e2:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 80116e6:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 80116ea:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80116ee:	449c      	add	ip, r3
 80116f0:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 80116f4:	e684      	b.n	8011400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80116f6:	4421      	add	r1, r4
 80116f8:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 80116fc:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8011700:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8011704:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8011708:	e67a      	b.n	8011400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801170a:	9f04      	ldr	r7, [sp, #16]
 801170c:	42b8      	cmp	r0, r7
 801170e:	da27      	bge.n	8011760 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 8011710:	9902      	ldr	r1, [sp, #8]
 8011712:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8011716:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801171a:	eb05 010e 	add.w	r1, r5, lr
 801171e:	fa1f f881 	uxth.w	r8, r1
 8011722:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8011726:	4411      	add	r1, r2
 8011728:	eba1 0108 	sub.w	r1, r1, r8
 801172c:	b289      	uxth	r1, r1
 801172e:	fa0f f988 	sxth.w	r9, r8
 8011732:	eba2 020e 	sub.w	r2, r2, lr
 8011736:	fa0f f881 	sxth.w	r8, r1
 801173a:	1a3f      	subs	r7, r7, r0
 801173c:	4372      	muls	r2, r6
 801173e:	fb08 f707 	mul.w	r7, r8, r7
 8011742:	42ba      	cmp	r2, r7
 8011744:	dc06      	bgt.n	8011754 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 8011746:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 801174a:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 801174e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 8011752:	e7ca      	b.n	80116ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 8011754:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8011758:	4429      	add	r1, r5
 801175a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801175e:	e64f      	b.n	8011400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8011760:	9805      	ldr	r0, [sp, #20]
 8011762:	ebaa 0000 	sub.w	r0, sl, r0
 8011766:	b280      	uxth	r0, r0
 8011768:	2d06      	cmp	r5, #6
 801176a:	fa0f fe80 	sxth.w	lr, r0
 801176e:	d817      	bhi.n	80117a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 8011770:	9b04      	ldr	r3, [sp, #16]
 8011772:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8011776:	1c6b      	adds	r3, r5, #1
 8011778:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 801177c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8011780:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8011784:	9b01      	ldr	r3, [sp, #4]
 8011786:	9801      	ldr	r0, [sp, #4]
 8011788:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801178c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8011790:	805a      	strh	r2, [r3, #2]
 8011792:	809e      	strh	r6, [r3, #4]
 8011794:	80d9      	strh	r1, [r3, #6]
 8011796:	9b02      	ldr	r3, [sp, #8]
 8011798:	3b01      	subs	r3, #1
 801179a:	9302      	str	r3, [sp, #8]
 801179c:	3c08      	subs	r4, #8
 801179e:	e747      	b.n	8011630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 80117a0:	9a02      	ldr	r2, [sp, #8]
 80117a2:	45b6      	cmp	lr, r6
 80117a4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80117a8:	db0d      	blt.n	80117c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 80117aa:	449c      	add	ip, r3
 80117ac:	fa1f fc8c 	uxth.w	ip, ip
 80117b0:	445a      	add	r2, fp
 80117b2:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 80117b6:	448c      	add	ip, r1
 80117b8:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 80117bc:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 80117c0:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 80117c4:	e61c      	b.n	8011400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80117c6:	445a      	add	r2, fp
 80117c8:	4484      	add	ip, r0
 80117ca:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 80117ce:	e78f      	b.n	80116f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 80117d0:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 80117d4:	fa1f f18e 	uxth.w	r1, lr
 80117d8:	eb01 0806 	add.w	r8, r1, r6
 80117dc:	b293      	uxth	r3, r2
 80117de:	fa1f f888 	uxth.w	r8, r8
 80117e2:	9306      	str	r3, [sp, #24]
 80117e4:	fa0f f388 	sxth.w	r3, r8
 80117e8:	9307      	str	r3, [sp, #28]
 80117ea:	9f06      	ldr	r7, [sp, #24]
 80117ec:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 80117f0:	443b      	add	r3, r7
 80117f2:	b29b      	uxth	r3, r3
 80117f4:	4596      	cmp	lr, r2
 80117f6:	9308      	str	r3, [sp, #32]
 80117f8:	da24      	bge.n	8011844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 80117fa:	9905      	ldr	r1, [sp, #20]
 80117fc:	eba3 0308 	sub.w	r3, r3, r8
 8011800:	ebaa 0401 	sub.w	r4, sl, r1
 8011804:	b2a4      	uxth	r4, r4
 8011806:	b29b      	uxth	r3, r3
 8011808:	b225      	sxth	r5, r4
 801180a:	b219      	sxth	r1, r3
 801180c:	eba2 020e 	sub.w	r2, r2, lr
 8011810:	eba9 0000 	sub.w	r0, r9, r0
 8011814:	436a      	muls	r2, r5
 8011816:	4348      	muls	r0, r1
 8011818:	4282      	cmp	r2, r0
 801181a:	9a02      	ldr	r2, [sp, #8]
 801181c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011820:	445a      	add	r2, fp
 8011822:	dc06      	bgt.n	8011832 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8011824:	9b07      	ldr	r3, [sp, #28]
 8011826:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 801182a:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 801182e:	44a4      	add	ip, r4
 8011830:	e75e      	b.n	80116f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8011832:	9904      	ldr	r1, [sp, #16]
 8011834:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8011838:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 801183c:	4433      	add	r3, r6
 801183e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8011842:	e5dd      	b.n	8011400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8011844:	9f06      	ldr	r7, [sp, #24]
 8011846:	9b04      	ldr	r3, [sp, #16]
 8011848:	1bc9      	subs	r1, r1, r7
 801184a:	fa0f f78a 	sxth.w	r7, sl
 801184e:	b289      	uxth	r1, r1
 8011850:	429f      	cmp	r7, r3
 8011852:	fa0f fe81 	sxth.w	lr, r1
 8011856:	dd23      	ble.n	80118a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 8011858:	9a05      	ldr	r2, [sp, #20]
 801185a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801185e:	9d07      	ldr	r5, [sp, #28]
 8011860:	ebaa 0202 	sub.w	r2, sl, r2
 8011864:	b292      	uxth	r2, r2
 8011866:	eba5 0a03 	sub.w	sl, r5, r3
 801186a:	b214      	sxth	r4, r2
 801186c:	eba9 0000 	sub.w	r0, r9, r0
 8011870:	9b02      	ldr	r3, [sp, #8]
 8011872:	fb0e f000 	mul.w	r0, lr, r0
 8011876:	fb04 fa0a 	mul.w	sl, r4, sl
 801187a:	00db      	lsls	r3, r3, #3
 801187c:	4550      	cmp	r0, sl
 801187e:	445b      	add	r3, fp
 8011880:	db03      	blt.n	801188a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 8011882:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8011886:	4494      	add	ip, r2
 8011888:	e732      	b.n	80116f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801188a:	9a04      	ldr	r2, [sp, #16]
 801188c:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8011890:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8011894:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8011898:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801189c:	4431      	add	r1, r6
 801189e:	e75c      	b.n	801175a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 80118a0:	9b08      	ldr	r3, [sp, #32]
 80118a2:	eba3 0308 	sub.w	r3, r3, r8
 80118a6:	b29b      	uxth	r3, r3
 80118a8:	2d06      	cmp	r5, #6
 80118aa:	b218      	sxth	r0, r3
 80118ac:	d813      	bhi.n	80118d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 80118ae:	9b07      	ldr	r3, [sp, #28]
 80118b0:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 80118b4:	1c6b      	adds	r3, r5, #1
 80118b6:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 80118ba:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 80118be:	9b01      	ldr	r3, [sp, #4]
 80118c0:	9901      	ldr	r1, [sp, #4]
 80118c2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80118c6:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80118ca:	805a      	strh	r2, [r3, #2]
 80118cc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80118ce:	809a      	strh	r2, [r3, #4]
 80118d0:	f8a3 e006 	strh.w	lr, [r3, #6]
 80118d4:	e75f      	b.n	8011796 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 80118d6:	9c02      	ldr	r4, [sp, #8]
 80118d8:	4570      	cmp	r0, lr
 80118da:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80118de:	db0d      	blt.n	80118fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 80118e0:	4431      	add	r1, r6
 80118e2:	9b06      	ldr	r3, [sp, #24]
 80118e4:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80118e8:	b289      	uxth	r1, r1
 80118ea:	445c      	add	r4, fp
 80118ec:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80118f0:	4419      	add	r1, r3
 80118f2:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 80118f6:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 80118fa:	e581      	b.n	8011400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80118fc:	445c      	add	r4, fp
 80118fe:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8011902:	e79b      	b.n	801183c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8011904:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8011908:	1e65      	subs	r5, r4, #1
 801190a:	b2ad      	uxth	r5, r5
 801190c:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8011910:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8011914:	42b5      	cmp	r5, r6
 8011916:	d044      	beq.n	80119a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 8011918:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801191c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8011920:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8011924:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8011928:	4282      	cmp	r2, r0
 801192a:	d11f      	bne.n	801196c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 801192c:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8011930:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8011934:	459c      	cmp	ip, r3
 8011936:	d119      	bne.n	801196c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 8011938:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 801193c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8011940:	19d8      	adds	r0, r3, r7
 8011942:	b200      	sxth	r0, r0
 8011944:	4288      	cmp	r0, r1
 8011946:	d109      	bne.n	801195c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011948:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 801194c:	4413      	add	r3, r2
 801194e:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8011952:	4629      	mov	r1, r5
 8011954:	9801      	ldr	r0, [sp, #4]
 8011956:	f7ff fd23 	bl	80113a0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801195a:	e003      	b.n	8011964 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801195c:	4411      	add	r1, r2
 801195e:	b209      	sxth	r1, r1
 8011960:	42b9      	cmp	r1, r7
 8011962:	d0f3      	beq.n	801194c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8011964:	3d01      	subs	r5, #1
 8011966:	b2ad      	uxth	r5, r5
 8011968:	3c08      	subs	r4, #8
 801196a:	e7d3      	b.n	8011914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 801196c:	42b9      	cmp	r1, r7
 801196e:	d1f9      	bne.n	8011964 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8011970:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8011974:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8011978:	4299      	cmp	r1, r3
 801197a:	d1f3      	bne.n	8011964 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 801197c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8011980:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8011984:	181f      	adds	r7, r3, r0
 8011986:	b23f      	sxth	r7, r7
 8011988:	42ba      	cmp	r2, r7
 801198a:	d105      	bne.n	8011998 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 801198c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8011990:	440b      	add	r3, r1
 8011992:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8011996:	e7dc      	b.n	8011952 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 8011998:	440a      	add	r2, r1
 801199a:	b212      	sxth	r2, r2
 801199c:	4290      	cmp	r0, r2
 801199e:	d1e1      	bne.n	8011964 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 80119a0:	e7f6      	b.n	8011990 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 80119a2:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 80119a6:	2e07      	cmp	r6, #7
 80119a8:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80119ac:	d812      	bhi.n	80119d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 80119ae:	1c75      	adds	r5, r6, #1
 80119b0:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 80119b4:	9d01      	ldr	r5, [sp, #4]
 80119b6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80119ba:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80119be:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80119c2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80119c6:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80119ca:	442c      	add	r4, r5
 80119cc:	8061      	strh	r1, [r4, #2]
 80119ce:	80a2      	strh	r2, [r4, #4]
 80119d0:	80e3      	strh	r3, [r4, #6]
 80119d2:	e57f      	b.n	80114d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80119d4:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80119d8:	3e01      	subs	r6, #1
 80119da:	445c      	add	r4, fp
 80119dc:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 80119e0:	f04f 37ff 	mov.w	r7, #4294967295
 80119e4:	2500      	movs	r5, #0
 80119e6:	9305      	str	r3, [sp, #20]
 80119e8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80119ec:	9302      	str	r3, [sp, #8]
 80119ee:	1e72      	subs	r2, r6, #1
 80119f0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80119f4:	9304      	str	r3, [sp, #16]
 80119f6:	4691      	mov	r9, r2
 80119f8:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 80119fc:	f1b9 3fff 	cmp.w	r9, #4294967295
 8011a00:	bf14      	ite	ne
 8011a02:	9905      	ldrne	r1, [sp, #20]
 8011a04:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8011a08:	6818      	ldr	r0, [r3, #0]
 8011a0a:	9207      	str	r2, [sp, #28]
 8011a0c:	bf18      	it	ne
 8011a0e:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8011a12:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8011a16:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8011a1a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8011a1e:	9306      	str	r3, [sp, #24]
 8011a20:	fb18 f801 	smulbb	r8, r8, r1
 8011a24:	6859      	ldr	r1, [r3, #4]
 8011a26:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011a2a:	4671      	mov	r1, lr
 8011a2c:	a80c      	add	r0, sp, #48	@ 0x30
 8011a2e:	f7ff fb65 	bl	80110fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011a32:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8011a36:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8011a3a:	9b04      	ldr	r3, [sp, #16]
 8011a3c:	9a02      	ldr	r2, [sp, #8]
 8011a3e:	fb10 f001 	smulbb	r0, r0, r1
 8011a42:	fb02 8803 	mla	r8, r2, r3, r8
 8011a46:	eba0 0108 	sub.w	r1, r0, r8
 8011a4a:	f04f 0c08 	mov.w	ip, #8
 8011a4e:	fb90 f0fc 	sdiv	r0, r0, ip
 8011a52:	4288      	cmp	r0, r1
 8011a54:	dc20      	bgt.n	8011a98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 8011a56:	4551      	cmp	r1, sl
 8011a58:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011a5c:	da03      	bge.n	8011a66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 8011a5e:	b1d9      	cbz	r1, 8011a98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 8011a60:	468a      	mov	sl, r1
 8011a62:	464f      	mov	r7, r9
 8011a64:	4635      	mov	r5, r6
 8011a66:	f109 39ff 	add.w	r9, r9, #4294967295
 8011a6a:	f119 0f02 	cmn.w	r9, #2
 8011a6e:	d1c5      	bne.n	80119fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 8011a70:	4616      	mov	r6, r2
 8011a72:	3201      	adds	r2, #1
 8011a74:	f1a4 0408 	sub.w	r4, r4, #8
 8011a78:	d1b6      	bne.n	80119e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 8011a7a:	9b01      	ldr	r3, [sp, #4]
 8011a7c:	b2ac      	uxth	r4, r5
 8011a7e:	00ed      	lsls	r5, r5, #3
 8011a80:	1958      	adds	r0, r3, r5
 8011a82:	1c7b      	adds	r3, r7, #1
 8011a84:	d10b      	bne.n	8011a9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 8011a86:	4601      	mov	r1, r0
 8011a88:	9803      	ldr	r0, [sp, #12]
 8011a8a:	f7ff fb37 	bl	80110fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011a8e:	4621      	mov	r1, r4
 8011a90:	9801      	ldr	r0, [sp, #4]
 8011a92:	f7ff fc85 	bl	80113a0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011a96:	e4b3      	b.n	8011400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8011a98:	464f      	mov	r7, r9
 8011a9a:	4635      	mov	r5, r6
 8011a9c:	e7ed      	b.n	8011a7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 8011a9e:	9b01      	ldr	r3, [sp, #4]
 8011aa0:	00ff      	lsls	r7, r7, #3
 8011aa2:	19d9      	adds	r1, r3, r7
 8011aa4:	f7ff fb2a 	bl	80110fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011aa8:	9b03      	ldr	r3, [sp, #12]
 8011aaa:	cb03      	ldmia	r3!, {r0, r1}
 8011aac:	445f      	add	r7, fp
 8011aae:	445d      	add	r5, fp
 8011ab0:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8011ab4:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8011ab8:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8011abc:	9b03      	ldr	r3, [sp, #12]
 8011abe:	6869      	ldr	r1, [r5, #4]
 8011ac0:	c303      	stmia	r3!, {r0, r1}
 8011ac2:	e7e4      	b.n	8011a8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

08011ac4 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8011ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ac8:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8011acc:	b0a1      	sub	sp, #132	@ 0x84
 8011ace:	4604      	mov	r4, r0
 8011ad0:	4630      	mov	r0, r6
 8011ad2:	f7f9 fe44 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 8011ad6:	4605      	mov	r5, r0
 8011ad8:	b948      	cbnz	r0, 8011aee <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8011ada:	6823      	ldr	r3, [r4, #0]
 8011adc:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011ae0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011ae2:	4620      	mov	r0, r4
 8011ae4:	4798      	blx	r3
 8011ae6:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8011aea:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8011aee:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8011af2:	2b00      	cmp	r3, #0
 8011af4:	d149      	bne.n	8011b8a <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 8011af6:	4bb1      	ldr	r3, [pc, #708]	@ (8011dbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 8011af8:	681b      	ldr	r3, [r3, #0]
 8011afa:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 8011afe:	1ebb      	subs	r3, r7, #2
 8011b00:	425f      	negs	r7, r3
 8011b02:	415f      	adcs	r7, r3
 8011b04:	4bae      	ldr	r3, [pc, #696]	@ (8011dc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 8011b06:	681b      	ldr	r3, [r3, #0]
 8011b08:	2b00      	cmp	r3, #0
 8011b0a:	d040      	beq.n	8011b8e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8011b0c:	4dad      	ldr	r5, [pc, #692]	@ (8011dc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 8011b0e:	4628      	mov	r0, r5
 8011b10:	f7f9 fe25 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 8011b14:	4606      	mov	r6, r0
 8011b16:	2800      	cmp	r0, #0
 8011b18:	d139      	bne.n	8011b8e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8011b1a:	4628      	mov	r0, r5
 8011b1c:	f7ff f982 	bl	8010e24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011b20:	6823      	ldr	r3, [r4, #0]
 8011b22:	6829      	ldr	r1, [r5, #0]
 8011b24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011b26:	686a      	ldr	r2, [r5, #4]
 8011b28:	4620      	mov	r0, r4
 8011b2a:	4798      	blx	r3
 8011b2c:	802e      	strh	r6, [r5, #0]
 8011b2e:	806e      	strh	r6, [r5, #2]
 8011b30:	80ae      	strh	r6, [r5, #4]
 8011b32:	80ee      	strh	r6, [r5, #6]
 8011b34:	af0f      	add	r7, sp, #60	@ 0x3c
 8011b36:	4ea4      	ldr	r6, [pc, #656]	@ (8011dc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 8011b38:	4638      	mov	r0, r7
 8011b3a:	f7ff fbd9 	bl	80112f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011b3e:	8835      	ldrh	r5, [r6, #0]
 8011b40:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 8011b44:	462b      	mov	r3, r5
 8011b46:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8011b4a:	4563      	cmp	r3, ip
 8011b4c:	d224      	bcs.n	8011b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 8011b4e:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 8011b52:	2907      	cmp	r1, #7
 8011b54:	d816      	bhi.n	8011b84 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8011b56:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011b5a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8011b5e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8011b62:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 8011b66:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 8011b6a:	1c4a      	adds	r2, r1, #1
 8011b6c:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 8011b70:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 8011b74:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 8011b78:	f8a2 a002 	strh.w	sl, [r2, #2]
 8011b7c:	f8a2 8004 	strh.w	r8, [r2, #4]
 8011b80:	f8a2 e006 	strh.w	lr, [r2, #6]
 8011b84:	3301      	adds	r3, #1
 8011b86:	b29b      	uxth	r3, r3
 8011b88:	e7df      	b.n	8011b4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8011b8a:	2701      	movs	r7, #1
 8011b8c:	e7ba      	b.n	8011b04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 8011b8e:	2f00      	cmp	r7, #0
 8011b90:	d1d0      	bne.n	8011b34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 8011b92:	b021      	add	sp, #132	@ 0x84
 8011b94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b98:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8011b9c:	42ab      	cmp	r3, r5
 8011b9e:	d90c      	bls.n	8011bba <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 8011ba0:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8011ba4:	6822      	ldr	r2, [r4, #0]
 8011ba6:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8011baa:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8011bac:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8011bb0:	4620      	mov	r0, r4
 8011bb2:	3501      	adds	r5, #1
 8011bb4:	47b8      	blx	r7
 8011bb6:	b2ad      	uxth	r5, r5
 8011bb8:	e7ee      	b.n	8011b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 8011bba:	4d80      	ldr	r5, [pc, #512]	@ (8011dbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 8011bbc:	6828      	ldr	r0, [r5, #0]
 8011bbe:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 8011bc2:	2b01      	cmp	r3, #1
 8011bc4:	f040 813b 	bne.w	8011e3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 8011bc8:	4a80      	ldr	r2, [pc, #512]	@ (8011dcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 8011bca:	8833      	ldrh	r3, [r6, #0]
 8011bcc:	7812      	ldrb	r2, [r2, #0]
 8011bce:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 8011bd2:	2a01      	cmp	r2, #1
 8011bd4:	d014      	beq.n	8011c00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8011bd6:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 8011bda:	32ae      	adds	r2, #174	@ 0xae
 8011bdc:	f04f 0900 	mov.w	r9, #0
 8011be0:	4283      	cmp	r3, r0
 8011be2:	f102 0208 	add.w	r2, r2, #8
 8011be6:	f280 8082 	bge.w	8011cee <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 8011bea:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 8011bee:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 8011bf2:	4439      	add	r1, r7
 8011bf4:	b209      	sxth	r1, r1
 8011bf6:	4589      	cmp	r9, r1
 8011bf8:	bfb8      	it	lt
 8011bfa:	4689      	movlt	r9, r1
 8011bfc:	3301      	adds	r3, #1
 8011bfe:	e7ef      	b.n	8011be0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 8011c00:	4f73      	ldr	r7, [pc, #460]	@ (8011dd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 8011c02:	883a      	ldrh	r2, [r7, #0]
 8011c04:	4693      	mov	fp, r2
 8011c06:	4283      	cmp	r3, r0
 8011c08:	da08      	bge.n	8011c1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 8011c0a:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 8011c0e:	3301      	adds	r3, #1
 8011c10:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 8011c14:	458b      	cmp	fp, r1
 8011c16:	bfa8      	it	ge
 8011c18:	468b      	movge	fp, r1
 8011c1a:	e7f4      	b.n	8011c06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 8011c1c:	2300      	movs	r3, #0
 8011c1e:	2a0f      	cmp	r2, #15
 8011c20:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 8011dd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 8011c24:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8011c28:	bf8c      	ite	hi
 8011c2a:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 8011c2e:	f04f 0801 	movls.w	r8, #1
 8011c32:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8011c36:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8011c3a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8011c3e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8011c42:	6828      	ldr	r0, [r5, #0]
 8011c44:	455b      	cmp	r3, fp
 8011c46:	f340 80c7 	ble.w	8011dd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 8011c4a:	6803      	ldr	r3, [r0, #0]
 8011c4c:	f8b7 a000 	ldrh.w	sl, [r7]
 8011c50:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8011c54:	4798      	blx	r3
 8011c56:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8011c5a:	682b      	ldr	r3, [r5, #0]
 8011c5c:	ebaa 0000 	sub.w	r0, sl, r0
 8011c60:	b280      	uxth	r0, r0
 8011c62:	ebac 0e08 	sub.w	lr, ip, r8
 8011c66:	4570      	cmp	r0, lr
 8011c68:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 8011c6c:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 8011c70:	dd05      	ble.n	8011c7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8011c72:	4558      	cmp	r0, fp
 8011c74:	dd03      	ble.n	8011c7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 8011c76:	b901      	cbnz	r1, 8011c7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8011c78:	b392      	cbz	r2, 8011ce0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 8011c7a:	4658      	mov	r0, fp
 8011c7c:	e006      	b.n	8011c8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 8011c7e:	2900      	cmp	r1, #0
 8011c80:	d1fb      	bne.n	8011c7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8011c82:	2a00      	cmp	r2, #0
 8011c84:	d1f9      	bne.n	8011c7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8011c86:	4558      	cmp	r0, fp
 8011c88:	bfb8      	it	lt
 8011c8a:	4658      	movlt	r0, fp
 8011c8c:	f9b9 3000 	ldrsh.w	r3, [r9]
 8011c90:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 8011c94:	2200      	movs	r2, #0
 8011c96:	ebac 0000 	sub.w	r0, ip, r0
 8011c9a:	f8b6 a000 	ldrh.w	sl, [r6]
 8011c9e:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8011ca2:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8011ca6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8011caa:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8011cae:	4553      	cmp	r3, sl
 8011cb0:	ddc5      	ble.n	8011c3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011cb2:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8011cb6:	ab0d      	add	r3, sp, #52	@ 0x34
 8011cb8:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8011cbc:	6851      	ldr	r1, [r2, #4]
 8011cbe:	c303      	stmia	r3!, {r0, r1}
 8011cc0:	a80d      	add	r0, sp, #52	@ 0x34
 8011cc2:	a90b      	add	r1, sp, #44	@ 0x2c
 8011cc4:	f7f9 fd08 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 8011cc8:	a80d      	add	r0, sp, #52	@ 0x34
 8011cca:	f7f9 fd48 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 8011cce:	b920      	cbnz	r0, 8011cda <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 8011cd0:	6823      	ldr	r3, [r4, #0]
 8011cd2:	a90d      	add	r1, sp, #52	@ 0x34
 8011cd4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011cd6:	4620      	mov	r0, r4
 8011cd8:	4798      	blx	r3
 8011cda:	f10a 0a01 	add.w	sl, sl, #1
 8011cde:	e7e4      	b.n	8011caa <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 8011ce0:	681a      	ldr	r2, [r3, #0]
 8011ce2:	2101      	movs	r1, #1
 8011ce4:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 8011ce8:	4618      	mov	r0, r3
 8011cea:	4790      	blx	r2
 8011cec:	e7a7      	b.n	8011c3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011cee:	4b39      	ldr	r3, [pc, #228]	@ (8011dd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 8011cf0:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 8011dd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 8011cf4:	881f      	ldrh	r7, [r3, #0]
 8011cf6:	2300      	movs	r3, #0
 8011cf8:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 8011cfc:	2f0f      	cmp	r7, #15
 8011cfe:	bf8c      	ite	hi
 8011d00:	08ff      	lsrhi	r7, r7, #3
 8011d02:	2701      	movls	r7, #1
 8011d04:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8011d08:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 8011d0c:	6828      	ldr	r0, [r5, #0]
 8011d0e:	4413      	add	r3, r2
 8011d10:	b21b      	sxth	r3, r3
 8011d12:	454b      	cmp	r3, r9
 8011d14:	da60      	bge.n	8011dd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 8011d16:	6803      	ldr	r3, [r0, #0]
 8011d18:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8011d1c:	4798      	blx	r3
 8011d1e:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 8011d22:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8011d26:	682a      	ldr	r2, [r5, #0]
 8011d28:	4473      	add	r3, lr
 8011d2a:	b21b      	sxth	r3, r3
 8011d2c:	eb03 0e07 	add.w	lr, r3, r7
 8011d30:	4570      	cmp	r0, lr
 8011d32:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 8011d36:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 8011d3a:	da0d      	bge.n	8011d58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8011d3c:	4548      	cmp	r0, r9
 8011d3e:	da0b      	bge.n	8011d58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8011d40:	f1bc 0f00 	cmp.w	ip, #0
 8011d44:	d138      	bne.n	8011db8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8011d46:	2900      	cmp	r1, #0
 8011d48:	d136      	bne.n	8011db8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8011d4a:	6813      	ldr	r3, [r2, #0]
 8011d4c:	2101      	movs	r1, #1
 8011d4e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8011d52:	4610      	mov	r0, r2
 8011d54:	4798      	blx	r3
 8011d56:	e7d5      	b.n	8011d04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8011d58:	f1bc 0f00 	cmp.w	ip, #0
 8011d5c:	d12c      	bne.n	8011db8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8011d5e:	bb59      	cbnz	r1, 8011db8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8011d60:	4548      	cmp	r0, r9
 8011d62:	bfa8      	it	ge
 8011d64:	4648      	movge	r0, r9
 8011d66:	f9b8 2000 	ldrsh.w	r2, [r8]
 8011d6a:	f8b6 a000 	ldrh.w	sl, [r6]
 8011d6e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8011d72:	2100      	movs	r1, #0
 8011d74:	1ac0      	subs	r0, r0, r3
 8011d76:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8011d7a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8011d7e:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8011d82:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8011d86:	4553      	cmp	r3, sl
 8011d88:	ddbc      	ble.n	8011d04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8011d8a:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8011d8e:	ab0d      	add	r3, sp, #52	@ 0x34
 8011d90:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8011d94:	6851      	ldr	r1, [r2, #4]
 8011d96:	c303      	stmia	r3!, {r0, r1}
 8011d98:	a80d      	add	r0, sp, #52	@ 0x34
 8011d9a:	a90b      	add	r1, sp, #44	@ 0x2c
 8011d9c:	f7f9 fc9c 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 8011da0:	a80d      	add	r0, sp, #52	@ 0x34
 8011da2:	f7f9 fcdc 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 8011da6:	b920      	cbnz	r0, 8011db2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 8011da8:	6823      	ldr	r3, [r4, #0]
 8011daa:	a90d      	add	r1, sp, #52	@ 0x34
 8011dac:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011dae:	4620      	mov	r0, r4
 8011db0:	4798      	blx	r3
 8011db2:	f10a 0a01 	add.w	sl, sl, #1
 8011db6:	e7e4      	b.n	8011d82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 8011db8:	4648      	mov	r0, r9
 8011dba:	e7d4      	b.n	8011d66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 8011dbc:	20013b6c 	.word	0x20013b6c
 8011dc0:	20013bac 	.word	0x20013bac
 8011dc4:	20013bb8 	.word	0x20013bb8
 8011dc8:	2000019c 	.word	0x2000019c
 8011dcc:	20013b62 	.word	0x20013b62
 8011dd0:	20013b5e 	.word	0x20013b5e
 8011dd4:	20013b60 	.word	0x20013b60
 8011dd8:	6828      	ldr	r0, [r5, #0]
 8011dda:	6803      	ldr	r3, [r0, #0]
 8011ddc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011dde:	4798      	blx	r3
 8011de0:	4ba5      	ldr	r3, [pc, #660]	@ (8012078 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 8011de2:	781b      	ldrb	r3, [r3, #0]
 8011de4:	2b00      	cmp	r3, #0
 8011de6:	f43f aed4 	beq.w	8011b92 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8011dea:	2300      	movs	r3, #0
 8011dec:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8011df0:	4ba2      	ldr	r3, [pc, #648]	@ (801207c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 8011df2:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 8011df6:	881b      	ldrh	r3, [r3, #0]
 8011df8:	a80f      	add	r0, sp, #60	@ 0x3c
 8011dfa:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 8011dfe:	42b3      	cmp	r3, r6
 8011e00:	f4bf aec7 	bcs.w	8011b92 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8011e04:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8011e08:	2907      	cmp	r1, #7
 8011e0a:	d815      	bhi.n	8011e38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 8011e0c:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011e10:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8011e14:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011e18:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8011e1c:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8011e20:	1c4a      	adds	r2, r1, #1
 8011e22:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8011e26:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 8011e2a:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 8011e2e:	f8a2 e002 	strh.w	lr, [r2, #2]
 8011e32:	f8a2 c004 	strh.w	ip, [r2, #4]
 8011e36:	80d7      	strh	r7, [r2, #6]
 8011e38:	3301      	adds	r3, #1
 8011e3a:	b29b      	uxth	r3, r3
 8011e3c:	e7df      	b.n	8011dfe <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8011e3e:	2b02      	cmp	r3, #2
 8011e40:	f040 80d1 	bne.w	8011fe6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8011e44:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8011e48:	9308      	str	r3, [sp, #32]
 8011e4a:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 8011e4e:	9307      	str	r3, [sp, #28]
 8011e50:	6803      	ldr	r3, [r0, #0]
 8011e52:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 8011e56:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8011e5a:	4798      	blx	r3
 8011e5c:	4b88      	ldr	r3, [pc, #544]	@ (8012080 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 8011e5e:	881b      	ldrh	r3, [r3, #0]
 8011e60:	9302      	str	r3, [sp, #8]
 8011e62:	4b88      	ldr	r3, [pc, #544]	@ (8012084 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 8011e64:	881e      	ldrh	r6, [r3, #0]
 8011e66:	4b88      	ldr	r3, [pc, #544]	@ (8012088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8011e68:	781b      	ldrb	r3, [r3, #0]
 8011e6a:	f10b 37ff 	add.w	r7, fp, #4294967295
 8011e6e:	2b01      	cmp	r3, #1
 8011e70:	bf1c      	itt	ne
 8011e72:	9b02      	ldrne	r3, [sp, #8]
 8011e74:	9602      	strne	r6, [sp, #8]
 8011e76:	b2bf      	uxth	r7, r7
 8011e78:	fa0f f887 	sxth.w	r8, r7
 8011e7c:	4682      	mov	sl, r0
 8011e7e:	f04f 0000 	mov.w	r0, #0
 8011e82:	bf18      	it	ne
 8011e84:	461e      	movne	r6, r3
 8011e86:	f7ee fce7 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011e8a:	fb96 fbfb 	sdiv	fp, r6, fp
 8011e8e:	fb0b f808 	mul.w	r8, fp, r8
 8011e92:	45c2      	cmp	sl, r8
 8011e94:	da0c      	bge.n	8011eb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 8011e96:	6828      	ldr	r0, [r5, #0]
 8011e98:	6803      	ldr	r3, [r0, #0]
 8011e9a:	210a      	movs	r1, #10
 8011e9c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8011ea0:	4798      	blx	r3
 8011ea2:	6828      	ldr	r0, [r5, #0]
 8011ea4:	6803      	ldr	r3, [r0, #0]
 8011ea6:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8011eaa:	4798      	blx	r3
 8011eac:	4682      	mov	sl, r0
 8011eae:	e7f0      	b.n	8011e92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 8011eb0:	2000      	movs	r0, #0
 8011eb2:	f7ee fcfb 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011eb6:	fa1f f38b 	uxth.w	r3, fp
 8011eba:	fb17 f703 	smulbb	r7, r7, r3
 8011ebe:	9304      	str	r3, [sp, #16]
 8011ec0:	b2bb      	uxth	r3, r7
 8011ec2:	9305      	str	r3, [sp, #20]
 8011ec4:	f04f 0800 	mov.w	r8, #0
 8011ec8:	0973      	lsrs	r3, r6, #5
 8011eca:	4f70      	ldr	r7, [pc, #448]	@ (801208c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 8011ecc:	9306      	str	r3, [sp, #24]
 8011ece:	4645      	mov	r5, r8
 8011ed0:	42b5      	cmp	r5, r6
 8011ed2:	d085      	beq.n	8011de0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8011ed4:	6838      	ldr	r0, [r7, #0]
 8011ed6:	6803      	ldr	r3, [r0, #0]
 8011ed8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8011edc:	4798      	blx	r3
 8011ede:	4582      	cmp	sl, r0
 8011ee0:	4681      	mov	r9, r0
 8011ee2:	d907      	bls.n	8011ef4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 8011ee4:	f1b8 0f00 	cmp.w	r8, #0
 8011ee8:	d007      	beq.n	8011efa <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 8011eea:	6838      	ldr	r0, [r7, #0]
 8011eec:	6803      	ldr	r3, [r0, #0]
 8011eee:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8011ef2:	e774      	b.n	8011dde <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8011ef4:	f1b8 0f00 	cmp.w	r8, #0
 8011ef8:	d003      	beq.n	8011f02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 8011efa:	454d      	cmp	r5, r9
 8011efc:	d3f5      	bcc.n	8011eea <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 8011efe:	f04f 0801 	mov.w	r8, #1
 8011f02:	9a04      	ldr	r2, [sp, #16]
 8011f04:	fb95 f3fb 	sdiv	r3, r5, fp
 8011f08:	9303      	str	r3, [sp, #12]
 8011f0a:	3301      	adds	r3, #1
 8011f0c:	fb13 f302 	smulbb	r3, r3, r2
 8011f10:	b299      	uxth	r1, r3
 8011f12:	f1b8 0f00 	cmp.w	r8, #0
 8011f16:	d04e      	beq.n	8011fb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 8011f18:	eb09 030b 	add.w	r3, r9, fp
 8011f1c:	42b3      	cmp	r3, r6
 8011f1e:	bfa8      	it	ge
 8011f20:	4633      	movge	r3, r6
 8011f22:	9807      	ldr	r0, [sp, #28]
 8011f24:	b29b      	uxth	r3, r3
 8011f26:	428b      	cmp	r3, r1
 8011f28:	bf94      	ite	ls
 8011f2a:	ebc5 0203 	rsbls	r2, r5, r3
 8011f2e:	ebc5 0201 	rsbhi	r2, r5, r1
 8011f32:	4282      	cmp	r2, r0
 8011f34:	bfa8      	it	ge
 8011f36:	4602      	movge	r2, r0
 8011f38:	9808      	ldr	r0, [sp, #32]
 8011f3a:	fa1f fa82 	uxth.w	sl, r2
 8011f3e:	4582      	cmp	sl, r0
 8011f40:	d205      	bcs.n	8011f4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8011f42:	fa15 f082 	uxtah	r0, r5, r2
 8011f46:	4286      	cmp	r6, r0
 8011f48:	d001      	beq.n	8011f4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8011f4a:	4299      	cmp	r1, r3
 8011f4c:	d240      	bcs.n	8011fd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 8011f4e:	2001      	movs	r0, #1
 8011f50:	9209      	str	r2, [sp, #36]	@ 0x24
 8011f52:	f7ee fc81 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011f56:	6838      	ldr	r0, [r7, #0]
 8011f58:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8011f5c:	6803      	ldr	r3, [r0, #0]
 8011f5e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8011f62:	4798      	blx	r3
 8011f64:	4b48      	ldr	r3, [pc, #288]	@ (8012088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8011f66:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011f68:	781b      	ldrb	r3, [r3, #0]
 8011f6a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8011f6e:	2b01      	cmp	r3, #1
 8011f70:	b212      	sxth	r2, r2
 8011f72:	f04f 0000 	mov.w	r0, #0
 8011f76:	d122      	bne.n	8011fbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 8011f78:	1b73      	subs	r3, r6, r5
 8011f7a:	eba3 030a 	sub.w	r3, r3, sl
 8011f7e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8011f82:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 8011f86:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8011f8a:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 8011f8e:	6823      	ldr	r3, [r4, #0]
 8011f90:	a90d      	add	r1, sp, #52	@ 0x34
 8011f92:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011f94:	4620      	mov	r0, r4
 8011f96:	4798      	blx	r3
 8011f98:	6838      	ldr	r0, [r7, #0]
 8011f9a:	9b03      	ldr	r3, [sp, #12]
 8011f9c:	4259      	negs	r1, r3
 8011f9e:	6803      	ldr	r3, [r0, #0]
 8011fa0:	b209      	sxth	r1, r1
 8011fa2:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8011fa6:	4798      	blx	r3
 8011fa8:	4455      	add	r5, sl
 8011faa:	2001      	movs	r0, #1
 8011fac:	b2ad      	uxth	r5, r5
 8011fae:	f7ee fc7d 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011fb2:	46ca      	mov	sl, r9
 8011fb4:	e78c      	b.n	8011ed0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 8011fb6:	9b05      	ldr	r3, [sp, #20]
 8011fb8:	eba9 0303 	sub.w	r3, r9, r3
 8011fbc:	e7b1      	b.n	8011f22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8011fbe:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8011fc2:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 8011fc6:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 8011fca:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8011fce:	e7de      	b.n	8011f8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 8011fd0:	6838      	ldr	r0, [r7, #0]
 8011fd2:	6803      	ldr	r3, [r0, #0]
 8011fd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011fd6:	4798      	blx	r3
 8011fd8:	6838      	ldr	r0, [r7, #0]
 8011fda:	9906      	ldr	r1, [sp, #24]
 8011fdc:	6803      	ldr	r3, [r0, #0]
 8011fde:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8011fe2:	4798      	blx	r3
 8011fe4:	e7e5      	b.n	8011fb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 8011fe6:	2b03      	cmp	r3, #3
 8011fe8:	f040 8130 	bne.w	801224c <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 8011fec:	4b26      	ldr	r3, [pc, #152]	@ (8012088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8011fee:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 8011ff2:	781b      	ldrb	r3, [r3, #0]
 8011ff4:	2b01      	cmp	r3, #1
 8011ff6:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8011ffa:	f000 8093 	beq.w	8012124 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8011ffe:	8832      	ldrh	r2, [r6, #0]
 8012000:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8012004:	3201      	adds	r2, #1
 8012006:	b292      	uxth	r2, r2
 8012008:	2900      	cmp	r1, #0
 801200a:	f43f aee9 	beq.w	8011de0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801200e:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 8012012:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 8012016:	441d      	add	r5, r3
 8012018:	b22d      	sxth	r5, r5
 801201a:	4694      	mov	ip, r2
 801201c:	f04f 0800 	mov.w	r8, #0
 8012020:	fa1f f38c 	uxth.w	r3, ip
 8012024:	4299      	cmp	r1, r3
 8012026:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801202a:	f240 80ba 	bls.w	80121a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 801202e:	4427      	add	r7, r4
 8012030:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8012034:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8012038:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 801203c:	4283      	cmp	r3, r0
 801203e:	f340 809c 	ble.w	801217a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 8012042:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 8012046:	4405      	add	r5, r0
 8012048:	b22d      	sxth	r5, r5
 801204a:	429d      	cmp	r5, r3
 801204c:	bfa8      	it	ge
 801204e:	461d      	movge	r5, r3
 8012050:	46e0      	mov	r8, ip
 8012052:	f10c 0c01 	add.w	ip, ip, #1
 8012056:	e7e3      	b.n	8012020 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 8012058:	d10a      	bne.n	8012070 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 801205a:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 801205e:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8012062:	4562      	cmp	r2, ip
 8012064:	bfb8      	it	lt
 8012066:	4662      	movlt	r2, ip
 8012068:	4288      	cmp	r0, r1
 801206a:	bfb8      	it	lt
 801206c:	4698      	movlt	r8, r3
 801206e:	e082      	b.n	8012176 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8012070:	428a      	cmp	r2, r1
 8012072:	bfb8      	it	lt
 8012074:	460a      	movlt	r2, r1
 8012076:	e07e      	b.n	8012176 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8012078:	20013b68 	.word	0x20013b68
 801207c:	2000019c 	.word	0x2000019c
 8012080:	20013b60 	.word	0x20013b60
 8012084:	20013b5e 	.word	0x20013b5e
 8012088:	20013b62 	.word	0x20013b62
 801208c:	20013b6c 	.word	0x20013b6c
 8012090:	19e1      	adds	r1, r4, r7
 8012092:	ab0d      	add	r3, sp, #52	@ 0x34
 8012094:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8012098:	6849      	ldr	r1, [r1, #4]
 801209a:	c303      	stmia	r3!, {r0, r1}
 801209c:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 80120a0:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80120a4:	454b      	cmp	r3, r9
 80120a6:	bfb8      	it	lt
 80120a8:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 80120ac:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80120b0:	440b      	add	r3, r1
 80120b2:	1a9b      	subs	r3, r3, r2
 80120b4:	a80d      	add	r0, sp, #52	@ 0x34
 80120b6:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80120ba:	f7fe fecd 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80120be:	a80d      	add	r0, sp, #52	@ 0x34
 80120c0:	f7f9 fb4d 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 80120c4:	bb70      	cbnz	r0, 8012124 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 80120c6:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 80120ca:	6828      	ldr	r0, [r5, #0]
 80120cc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80120d0:	f8d0 e000 	ldr.w	lr, [r0]
 80120d4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 80120d8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80120dc:	45cc      	cmp	ip, r9
 80120de:	bfd4      	ite	le
 80120e0:	fa1f fc8c 	uxthle.w	ip, ip
 80120e4:	fa1f fc89 	uxthgt.w	ip, r9
 80120e8:	f8cd c000 	str.w	ip, [sp]
 80120ec:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 80120f0:	47d8      	blx	fp
 80120f2:	4683      	mov	fp, r0
 80120f4:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 80120f8:	a80d      	add	r0, sp, #52	@ 0x34
 80120fa:	f7fe fe93 	bl	8010e24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80120fe:	6823      	ldr	r3, [r4, #0]
 8012100:	4427      	add	r7, r4
 8012102:	4620      	mov	r0, r4
 8012104:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012106:	a90d      	add	r1, sp, #52	@ 0x34
 8012108:	4798      	blx	r3
 801210a:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 801210e:	eba0 000b 	sub.w	r0, r0, fp
 8012112:	b200      	sxth	r0, r0
 8012114:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 8012118:	b920      	cbnz	r0, 8012124 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801211a:	fa1f f188 	uxth.w	r1, r8
 801211e:	4650      	mov	r0, sl
 8012120:	f7ff f93e 	bl	80113a0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012124:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8012128:	f1bb 0f00 	cmp.w	fp, #0
 801212c:	f43f ae58 	beq.w	8011de0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8012130:	8833      	ldrh	r3, [r6, #0]
 8012132:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8012136:	3301      	adds	r3, #1
 8012138:	b29b      	uxth	r3, r3
 801213a:	f04f 0800 	mov.w	r8, #0
 801213e:	b299      	uxth	r1, r3
 8012140:	458b      	cmp	fp, r1
 8012142:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8012146:	d9a3      	bls.n	8012090 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 8012148:	4427      	add	r7, r4
 801214a:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801214e:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 8012152:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 8012156:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 801215a:	4408      	add	r0, r1
 801215c:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8012160:	4461      	add	r1, ip
 8012162:	b200      	sxth	r0, r0
 8012164:	b209      	sxth	r1, r1
 8012166:	4288      	cmp	r0, r1
 8012168:	f6bf af76 	bge.w	8012058 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 801216c:	4584      	cmp	ip, r0
 801216e:	4662      	mov	r2, ip
 8012170:	4698      	mov	r8, r3
 8012172:	bfb8      	it	lt
 8012174:	4602      	movlt	r2, r0
 8012176:	3301      	adds	r3, #1
 8012178:	e7e1      	b.n	801213e <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 801217a:	d10e      	bne.n	801219a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 801217c:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8012180:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8012184:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8012188:	4473      	add	r3, lr
 801218a:	b21b      	sxth	r3, r3
 801218c:	429d      	cmp	r5, r3
 801218e:	bfa8      	it	ge
 8012190:	461d      	movge	r5, r3
 8012192:	4287      	cmp	r7, r0
 8012194:	bfb8      	it	lt
 8012196:	46e0      	movlt	r8, ip
 8012198:	e75b      	b.n	8012052 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 801219a:	4285      	cmp	r5, r0
 801219c:	bfa8      	it	ge
 801219e:	4605      	movge	r5, r0
 80121a0:	e757      	b.n	8012052 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 80121a2:	eb0a 0007 	add.w	r0, sl, r7
 80121a6:	4427      	add	r7, r4
 80121a8:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80121ac:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 80121b0:	45cb      	cmp	fp, r9
 80121b2:	bfbe      	ittt	lt
 80121b4:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 80121b8:	445d      	addlt	r5, fp
 80121ba:	b22d      	sxthlt	r5, r5
 80121bc:	f7f9 facf 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 80121c0:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80121c4:	2800      	cmp	r0, #0
 80121c6:	f47f af1f 	bne.w	8012008 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 80121ca:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 80121ce:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 80121d2:	482b      	ldr	r0, [pc, #172]	@ (8012280 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 80121d4:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 80121d8:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 80121dc:	6800      	ldr	r0, [r0, #0]
 80121de:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 80121e2:	1aad      	subs	r5, r5, r2
 80121e4:	454d      	cmp	r5, r9
 80121e6:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 80121ea:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80121ee:	bfa8      	it	ge
 80121f0:	464d      	movge	r5, r9
 80121f2:	f8d0 c000 	ldr.w	ip, [r0]
 80121f6:	b2ad      	uxth	r5, r5
 80121f8:	fa1f fb8b 	uxth.w	fp, fp
 80121fc:	455d      	cmp	r5, fp
 80121fe:	bf94      	ite	ls
 8012200:	9500      	strls	r5, [sp, #0]
 8012202:	f8cd b000 	strhi.w	fp, [sp]
 8012206:	b292      	uxth	r2, r2
 8012208:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 801220c:	b29b      	uxth	r3, r3
 801220e:	b289      	uxth	r1, r1
 8012210:	47a8      	blx	r5
 8012212:	6823      	ldr	r3, [r4, #0]
 8012214:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8012218:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801221a:	a90d      	add	r1, sp, #52	@ 0x34
 801221c:	4620      	mov	r0, r4
 801221e:	4798      	blx	r3
 8012220:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8012224:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8012228:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 801222c:	1a5b      	subs	r3, r3, r1
 801222e:	440a      	add	r2, r1
 8012230:	b21b      	sxth	r3, r3
 8012232:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8012236:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 801223a:	2b00      	cmp	r3, #0
 801223c:	f47f aedf 	bne.w	8011ffe <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8012240:	fa1f f188 	uxth.w	r1, r8
 8012244:	4650      	mov	r0, sl
 8012246:	f7ff f8ab 	bl	80113a0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801224a:	e6d8      	b.n	8011ffe <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 801224c:	8835      	ldrh	r5, [r6, #0]
 801224e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8012252:	42ab      	cmp	r3, r5
 8012254:	f67f adc4 	bls.w	8011de0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8012258:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801225c:	ab0d      	add	r3, sp, #52	@ 0x34
 801225e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8012262:	6851      	ldr	r1, [r2, #4]
 8012264:	c303      	stmia	r3!, {r0, r1}
 8012266:	a80d      	add	r0, sp, #52	@ 0x34
 8012268:	f7f9 fa79 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 801226c:	b920      	cbnz	r0, 8012278 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 801226e:	6823      	ldr	r3, [r4, #0]
 8012270:	a90d      	add	r1, sp, #52	@ 0x34
 8012272:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012274:	4620      	mov	r0, r4
 8012276:	4798      	blx	r3
 8012278:	3501      	adds	r5, #1
 801227a:	b2ad      	uxth	r5, r5
 801227c:	e7e7      	b.n	801224e <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 801227e:	bf00      	nop
 8012280:	20013b6c 	.word	0x20013b6c

08012284 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8012284:	4b03      	ldr	r3, [pc, #12]	@ (8012294 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8012286:	2200      	movs	r2, #0
 8012288:	801a      	strh	r2, [r3, #0]
 801228a:	805a      	strh	r2, [r3, #2]
 801228c:	809a      	strh	r2, [r3, #4]
 801228e:	80da      	strh	r2, [r3, #6]
 8012290:	4770      	bx	lr
 8012292:	bf00      	nop
 8012294:	20013bb8 	.word	0x20013bb8

08012298 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8012298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801229c:	4606      	mov	r6, r0
 801229e:	b09d      	sub	sp, #116	@ 0x74
 80122a0:	a803      	add	r0, sp, #12
 80122a2:	4614      	mov	r4, r2
 80122a4:	468a      	mov	sl, r1
 80122a6:	461d      	mov	r5, r3
 80122a8:	f001 f924 	bl	80134f4 <_ZN8touchgfx12TextProviderC1Ev>
 80122ac:	6833      	ldr	r3, [r6, #0]
 80122ae:	4630      	mov	r0, r6
 80122b0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80122b2:	4798      	blx	r3
 80122b4:	6833      	ldr	r3, [r6, #0]
 80122b6:	4607      	mov	r7, r0
 80122b8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80122ba:	4630      	mov	r0, r6
 80122bc:	4798      	blx	r3
 80122be:	462a      	mov	r2, r5
 80122c0:	9000      	str	r0, [sp, #0]
 80122c2:	4621      	mov	r1, r4
 80122c4:	463b      	mov	r3, r7
 80122c6:	a803      	add	r0, sp, #12
 80122c8:	f001 f96f 	bl	80135aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80122cc:	2500      	movs	r5, #0
 80122ce:	462c      	mov	r4, r5
 80122d0:	46a9      	mov	r9, r5
 80122d2:	46a8      	mov	r8, r5
 80122d4:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 80122d8:	2300      	movs	r3, #0
 80122da:	9302      	str	r3, [sp, #8]
 80122dc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80122e0:	429c      	cmp	r4, r3
 80122e2:	d002      	beq.n	80122ea <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80122e4:	455c      	cmp	r4, fp
 80122e6:	bf18      	it	ne
 80122e8:	4625      	movne	r5, r4
 80122ea:	ab02      	add	r3, sp, #8
 80122ec:	4632      	mov	r2, r6
 80122ee:	4651      	mov	r1, sl
 80122f0:	a803      	add	r0, sp, #12
 80122f2:	f001 fc87 	bl	8013c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80122f6:	4604      	mov	r4, r0
 80122f8:	b108      	cbz	r0, 80122fe <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80122fa:	280a      	cmp	r0, #10
 80122fc:	d10a      	bne.n	8012314 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80122fe:	45c1      	cmp	r9, r8
 8012300:	bf38      	it	cc
 8012302:	46c1      	movcc	r9, r8
 8012304:	f04f 0800 	mov.w	r8, #0
 8012308:	2c00      	cmp	r4, #0
 801230a:	d1e5      	bne.n	80122d8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801230c:	4648      	mov	r0, r9
 801230e:	b01d      	add	sp, #116	@ 0x74
 8012310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012314:	9a02      	ldr	r2, [sp, #8]
 8012316:	2a00      	cmp	r2, #0
 8012318:	d0de      	beq.n	80122d8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801231a:	7b57      	ldrb	r7, [r2, #13]
 801231c:	6833      	ldr	r3, [r6, #0]
 801231e:	8894      	ldrh	r4, [r2, #4]
 8012320:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8012322:	007f      	lsls	r7, r7, #1
 8012324:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8012328:	7a97      	ldrb	r7, [r2, #10]
 801232a:	4629      	mov	r1, r5
 801232c:	4307      	orrs	r7, r0
 801232e:	4630      	mov	r0, r6
 8012330:	4798      	blx	r3
 8012332:	4438      	add	r0, r7
 8012334:	4480      	add	r8, r0
 8012336:	fa1f f888 	uxth.w	r8, r8
 801233a:	e7e5      	b.n	8012308 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801233c <_ZNK8touchgfx4Font12getCharWidthEt>:
 801233c:	b508      	push	{r3, lr}
 801233e:	6803      	ldr	r3, [r0, #0]
 8012340:	68db      	ldr	r3, [r3, #12]
 8012342:	4798      	blx	r3
 8012344:	b128      	cbz	r0, 8012352 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8012346:	7b43      	ldrb	r3, [r0, #13]
 8012348:	7a80      	ldrb	r0, [r0, #10]
 801234a:	005b      	lsls	r3, r3, #1
 801234c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012350:	4318      	orrs	r0, r3
 8012352:	bd08      	pop	{r3, pc}

08012354 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8012354:	b40e      	push	{r1, r2, r3}
 8012356:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012358:	b09e      	sub	sp, #120	@ 0x78
 801235a:	ab23      	add	r3, sp, #140	@ 0x8c
 801235c:	4605      	mov	r5, r0
 801235e:	f853 4b04 	ldr.w	r4, [r3], #4
 8012362:	9303      	str	r3, [sp, #12]
 8012364:	a805      	add	r0, sp, #20
 8012366:	f001 f8c5 	bl	80134f4 <_ZN8touchgfx12TextProviderC1Ev>
 801236a:	682b      	ldr	r3, [r5, #0]
 801236c:	4628      	mov	r0, r5
 801236e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8012370:	4798      	blx	r3
 8012372:	682b      	ldr	r3, [r5, #0]
 8012374:	4606      	mov	r6, r0
 8012376:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8012378:	4628      	mov	r0, r5
 801237a:	4798      	blx	r3
 801237c:	4633      	mov	r3, r6
 801237e:	ae1e      	add	r6, sp, #120	@ 0x78
 8012380:	4621      	mov	r1, r4
 8012382:	9000      	str	r0, [sp, #0]
 8012384:	9a03      	ldr	r2, [sp, #12]
 8012386:	2400      	movs	r4, #0
 8012388:	a805      	add	r0, sp, #20
 801238a:	f001 f90e 	bl	80135aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801238e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8012392:	462a      	mov	r2, r5
 8012394:	4633      	mov	r3, r6
 8012396:	4621      	mov	r1, r4
 8012398:	a805      	add	r0, sp, #20
 801239a:	f001 fc33 	bl	8013c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801239e:	b1f0      	cbz	r0, 80123de <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80123a0:	280a      	cmp	r0, #10
 80123a2:	d018      	beq.n	80123d6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80123a4:	9f04      	ldr	r7, [sp, #16]
 80123a6:	b1b7      	cbz	r7, 80123d6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80123a8:	7b78      	ldrb	r0, [r7, #13]
 80123aa:	7a3b      	ldrb	r3, [r7, #8]
 80123ac:	88ea      	ldrh	r2, [r5, #6]
 80123ae:	00c1      	lsls	r1, r0, #3
 80123b0:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80123b4:	4319      	orrs	r1, r3
 80123b6:	0643      	lsls	r3, r0, #25
 80123b8:	bf44      	itt	mi
 80123ba:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 80123be:	b219      	sxthmi	r1, r3
 80123c0:	0100      	lsls	r0, r0, #4
 80123c2:	79fb      	ldrb	r3, [r7, #7]
 80123c4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80123c8:	4303      	orrs	r3, r0
 80123ca:	4413      	add	r3, r2
 80123cc:	1a5b      	subs	r3, r3, r1
 80123ce:	b21b      	sxth	r3, r3
 80123d0:	429c      	cmp	r4, r3
 80123d2:	bfb8      	it	lt
 80123d4:	461c      	movlt	r4, r3
 80123d6:	4633      	mov	r3, r6
 80123d8:	462a      	mov	r2, r5
 80123da:	2100      	movs	r1, #0
 80123dc:	e7dc      	b.n	8012398 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80123de:	b2a0      	uxth	r0, r4
 80123e0:	b01e      	add	sp, #120	@ 0x78
 80123e2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80123e6:	b003      	add	sp, #12
 80123e8:	4770      	bx	lr

080123ea <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80123ea:	7a43      	ldrb	r3, [r0, #9]
 80123ec:	8880      	ldrh	r0, [r0, #4]
 80123ee:	4418      	add	r0, r3
 80123f0:	b280      	uxth	r0, r0
 80123f2:	4770      	bx	lr

080123f4 <_ZNK8touchgfx4Font13getFontHeightEv>:
 80123f4:	6803      	ldr	r3, [r0, #0]
 80123f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80123f8:	4718      	bx	r3

080123fa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80123fa:	b40e      	push	{r1, r2, r3}
 80123fc:	b570      	push	{r4, r5, r6, lr}
 80123fe:	b09d      	sub	sp, #116	@ 0x74
 8012400:	ab21      	add	r3, sp, #132	@ 0x84
 8012402:	4604      	mov	r4, r0
 8012404:	f853 5b04 	ldr.w	r5, [r3], #4
 8012408:	9302      	str	r3, [sp, #8]
 801240a:	a803      	add	r0, sp, #12
 801240c:	f001 f872 	bl	80134f4 <_ZN8touchgfx12TextProviderC1Ev>
 8012410:	6823      	ldr	r3, [r4, #0]
 8012412:	4620      	mov	r0, r4
 8012414:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8012416:	4798      	blx	r3
 8012418:	6823      	ldr	r3, [r4, #0]
 801241a:	4606      	mov	r6, r0
 801241c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801241e:	4620      	mov	r0, r4
 8012420:	4798      	blx	r3
 8012422:	4633      	mov	r3, r6
 8012424:	9000      	str	r0, [sp, #0]
 8012426:	9a02      	ldr	r2, [sp, #8]
 8012428:	4629      	mov	r1, r5
 801242a:	a803      	add	r0, sp, #12
 801242c:	f001 f8bd 	bl	80135aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012430:	a803      	add	r0, sp, #12
 8012432:	f001 fcb5 	bl	8013da0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012436:	2401      	movs	r4, #1
 8012438:	b2a3      	uxth	r3, r4
 801243a:	b140      	cbz	r0, 801244e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801243c:	280a      	cmp	r0, #10
 801243e:	bf08      	it	eq
 8012440:	3301      	addeq	r3, #1
 8012442:	a803      	add	r0, sp, #12
 8012444:	bf08      	it	eq
 8012446:	b21c      	sxtheq	r4, r3
 8012448:	f001 fcaa 	bl	8013da0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801244c:	e7f4      	b.n	8012438 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801244e:	4618      	mov	r0, r3
 8012450:	b01d      	add	sp, #116	@ 0x74
 8012452:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012456:	b003      	add	sp, #12
 8012458:	4770      	bx	lr

0801245a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801245a:	b40e      	push	{r1, r2, r3}
 801245c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801245e:	b09e      	sub	sp, #120	@ 0x78
 8012460:	ab23      	add	r3, sp, #140	@ 0x8c
 8012462:	4604      	mov	r4, r0
 8012464:	f853 5b04 	ldr.w	r5, [r3], #4
 8012468:	9303      	str	r3, [sp, #12]
 801246a:	a805      	add	r0, sp, #20
 801246c:	f001 f842 	bl	80134f4 <_ZN8touchgfx12TextProviderC1Ev>
 8012470:	6823      	ldr	r3, [r4, #0]
 8012472:	4620      	mov	r0, r4
 8012474:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8012476:	4798      	blx	r3
 8012478:	6823      	ldr	r3, [r4, #0]
 801247a:	4606      	mov	r6, r0
 801247c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801247e:	4620      	mov	r0, r4
 8012480:	4798      	blx	r3
 8012482:	4633      	mov	r3, r6
 8012484:	4629      	mov	r1, r5
 8012486:	9000      	str	r0, [sp, #0]
 8012488:	9a03      	ldr	r2, [sp, #12]
 801248a:	a805      	add	r0, sp, #20
 801248c:	ad1e      	add	r5, sp, #120	@ 0x78
 801248e:	f001 f88c 	bl	80135aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012492:	2100      	movs	r1, #0
 8012494:	f845 1d68 	str.w	r1, [r5, #-104]!
 8012498:	4622      	mov	r2, r4
 801249a:	462b      	mov	r3, r5
 801249c:	a805      	add	r0, sp, #20
 801249e:	f001 fbb1 	bl	8013c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80124a2:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 80124a6:	b1d8      	cbz	r0, 80124e0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80124a8:	280a      	cmp	r0, #10
 80124aa:	d012      	beq.n	80124d2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80124ac:	9804      	ldr	r0, [sp, #16]
 80124ae:	b180      	cbz	r0, 80124d2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80124b0:	7b47      	ldrb	r7, [r0, #13]
 80124b2:	88e2      	ldrh	r2, [r4, #6]
 80124b4:	00fb      	lsls	r3, r7, #3
 80124b6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80124ba:	7a03      	ldrb	r3, [r0, #8]
 80124bc:	430b      	orrs	r3, r1
 80124be:	0679      	lsls	r1, r7, #25
 80124c0:	bf44      	itt	mi
 80124c2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80124c6:	b21b      	sxthmi	r3, r3
 80124c8:	1ad3      	subs	r3, r2, r3
 80124ca:	b21b      	sxth	r3, r3
 80124cc:	429e      	cmp	r6, r3
 80124ce:	bfa8      	it	ge
 80124d0:	461e      	movge	r6, r3
 80124d2:	462b      	mov	r3, r5
 80124d4:	4622      	mov	r2, r4
 80124d6:	2100      	movs	r1, #0
 80124d8:	a805      	add	r0, sp, #20
 80124da:	f001 fb93 	bl	8013c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80124de:	e7e2      	b.n	80124a6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80124e0:	4630      	mov	r0, r6
 80124e2:	b01e      	add	sp, #120	@ 0x78
 80124e4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80124e8:	b003      	add	sp, #12
 80124ea:	4770      	bx	lr

080124ec <_ZNK8touchgfx8Drawable10invalidateEv>:
 80124ec:	b513      	push	{r0, r1, r4, lr}
 80124ee:	6803      	ldr	r3, [r0, #0]
 80124f0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80124f4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80124f8:	f8ad 1004 	strh.w	r1, [sp, #4]
 80124fc:	2400      	movs	r4, #0
 80124fe:	9400      	str	r4, [sp, #0]
 8012500:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012504:	691b      	ldr	r3, [r3, #16]
 8012506:	4669      	mov	r1, sp
 8012508:	4798      	blx	r3
 801250a:	b002      	add	sp, #8
 801250c:	bd10      	pop	{r4, pc}

0801250e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801250e:	b538      	push	{r3, r4, r5, lr}
 8012510:	680b      	ldr	r3, [r1, #0]
 8012512:	460c      	mov	r4, r1
 8012514:	68db      	ldr	r3, [r3, #12]
 8012516:	4605      	mov	r5, r0
 8012518:	4798      	blx	r3
 801251a:	6823      	ldr	r3, [r4, #0]
 801251c:	4620      	mov	r0, r4
 801251e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012520:	4629      	mov	r1, r5
 8012522:	4798      	blx	r3
 8012524:	4628      	mov	r0, r5
 8012526:	bd38      	pop	{r3, r4, r5, pc}

08012528 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8012528:	b410      	push	{r4}
 801252a:	880a      	ldrh	r2, [r1, #0]
 801252c:	8884      	ldrh	r4, [r0, #4]
 801252e:	4422      	add	r2, r4
 8012530:	800a      	strh	r2, [r1, #0]
 8012532:	88c4      	ldrh	r4, [r0, #6]
 8012534:	884a      	ldrh	r2, [r1, #2]
 8012536:	4422      	add	r2, r4
 8012538:	804a      	strh	r2, [r1, #2]
 801253a:	6940      	ldr	r0, [r0, #20]
 801253c:	b120      	cbz	r0, 8012548 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801253e:	6803      	ldr	r3, [r0, #0]
 8012540:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012544:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012546:	4718      	bx	r3
 8012548:	f85d 4b04 	ldr.w	r4, [sp], #4
 801254c:	4770      	bx	lr

0801254e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801254e:	b570      	push	{r4, r5, r6, lr}
 8012550:	8882      	ldrh	r2, [r0, #4]
 8012552:	880b      	ldrh	r3, [r1, #0]
 8012554:	4413      	add	r3, r2
 8012556:	800b      	strh	r3, [r1, #0]
 8012558:	88c2      	ldrh	r2, [r0, #6]
 801255a:	884b      	ldrh	r3, [r1, #2]
 801255c:	460c      	mov	r4, r1
 801255e:	4413      	add	r3, r2
 8012560:	804b      	strh	r3, [r1, #2]
 8012562:	4605      	mov	r5, r0
 8012564:	1d01      	adds	r1, r0, #4
 8012566:	4620      	mov	r0, r4
 8012568:	f7f9 f8b6 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 801256c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012570:	2b00      	cmp	r3, #0
 8012572:	dd0b      	ble.n	801258c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012574:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012578:	2b00      	cmp	r3, #0
 801257a:	dd07      	ble.n	801258c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801257c:	6968      	ldr	r0, [r5, #20]
 801257e:	b128      	cbz	r0, 801258c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012580:	6803      	ldr	r3, [r0, #0]
 8012582:	4621      	mov	r1, r4
 8012584:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012586:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801258a:	4718      	bx	r3
 801258c:	bd70      	pop	{r4, r5, r6, pc}
	...

08012590 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012590:	b570      	push	{r4, r5, r6, lr}
 8012592:	8882      	ldrh	r2, [r0, #4]
 8012594:	880b      	ldrh	r3, [r1, #0]
 8012596:	4413      	add	r3, r2
 8012598:	800b      	strh	r3, [r1, #0]
 801259a:	88c2      	ldrh	r2, [r0, #6]
 801259c:	884b      	ldrh	r3, [r1, #2]
 801259e:	460c      	mov	r4, r1
 80125a0:	4413      	add	r3, r2
 80125a2:	804b      	strh	r3, [r1, #2]
 80125a4:	4605      	mov	r5, r0
 80125a6:	1d01      	adds	r1, r0, #4
 80125a8:	4620      	mov	r0, r4
 80125aa:	f7f9 f895 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 80125ae:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80125b2:	2b00      	cmp	r3, #0
 80125b4:	dd19      	ble.n	80125ea <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80125b6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80125ba:	2b00      	cmp	r3, #0
 80125bc:	dd15      	ble.n	80125ea <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80125be:	6968      	ldr	r0, [r5, #20]
 80125c0:	b128      	cbz	r0, 80125ce <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80125c2:	6803      	ldr	r3, [r0, #0]
 80125c4:	4621      	mov	r1, r4
 80125c6:	691b      	ldr	r3, [r3, #16]
 80125c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80125cc:	4718      	bx	r3
 80125ce:	4b07      	ldr	r3, [pc, #28]	@ (80125ec <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80125d0:	681b      	ldr	r3, [r3, #0]
 80125d2:	3304      	adds	r3, #4
 80125d4:	429d      	cmp	r5, r3
 80125d6:	d108      	bne.n	80125ea <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80125d8:	f7fe fdd6 	bl	8011188 <_ZN8touchgfx11Application11getInstanceEv>
 80125dc:	6803      	ldr	r3, [r0, #0]
 80125de:	6821      	ldr	r1, [r4, #0]
 80125e0:	6862      	ldr	r2, [r4, #4]
 80125e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80125e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80125e8:	4718      	bx	r3
 80125ea:	bd70      	pop	{r4, r5, r6, pc}
 80125ec:	20013bb0 	.word	0x20013bb0

080125f0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80125f0:	b570      	push	{r4, r5, r6, lr}
 80125f2:	4604      	mov	r4, r0
 80125f4:	4616      	mov	r6, r2
 80125f6:	460d      	mov	r5, r1
 80125f8:	b901      	cbnz	r1, 80125fc <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80125fa:	b192      	cbz	r2, 8012622 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80125fc:	6823      	ldr	r3, [r4, #0]
 80125fe:	4620      	mov	r0, r4
 8012600:	699b      	ldr	r3, [r3, #24]
 8012602:	4798      	blx	r3
 8012604:	88e2      	ldrh	r2, [r4, #6]
 8012606:	88a1      	ldrh	r1, [r4, #4]
 8012608:	4432      	add	r2, r6
 801260a:	4429      	add	r1, r5
 801260c:	4620      	mov	r0, r4
 801260e:	b212      	sxth	r2, r2
 8012610:	b209      	sxth	r1, r1
 8012612:	f7f0 fc51 	bl	8002eb8 <_ZN8touchgfx8Drawable5setXYEss>
 8012616:	6823      	ldr	r3, [r4, #0]
 8012618:	4620      	mov	r0, r4
 801261a:	699b      	ldr	r3, [r3, #24]
 801261c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012620:	4718      	bx	r3
 8012622:	bd70      	pop	{r4, r5, r6, pc}

08012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8012624:	b510      	push	{r4, lr}
 8012626:	4604      	mov	r4, r0
 8012628:	4608      	mov	r0, r1
 801262a:	2300      	movs	r3, #0
 801262c:	8023      	strh	r3, [r4, #0]
 801262e:	8063      	strh	r3, [r4, #2]
 8012630:	6803      	ldr	r3, [r0, #0]
 8012632:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012636:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801263a:	80a1      	strh	r1, [r4, #4]
 801263c:	80e2      	strh	r2, [r4, #6]
 801263e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012640:	4621      	mov	r1, r4
 8012642:	4798      	blx	r3
 8012644:	4620      	mov	r0, r4
 8012646:	bd10      	pop	{r4, pc}

08012648 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 8012648:	4770      	bx	lr

0801264a <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 801264a:	b510      	push	{r4, lr}
 801264c:	211c      	movs	r1, #28
 801264e:	4604      	mov	r4, r0
 8012650:	f011 f809 	bl	8023666 <_ZdlPvj>
 8012654:	4620      	mov	r0, r4
 8012656:	bd10      	pop	{r4, pc}

08012658 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 8012658:	4a04      	ldr	r2, [pc, #16]	@ (801266c <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 801265a:	6002      	str	r2, [r0, #0]
 801265c:	2200      	movs	r2, #0
 801265e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8012662:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8012666:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801266a:	4770      	bx	lr
 801266c:	08027678 	.word	0x08027678

08012670 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 8012670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012674:	4604      	mov	r4, r0
 8012676:	b087      	sub	sp, #28
 8012678:	8b45      	ldrh	r5, [r0, #26]
 801267a:	f8b2 c000 	ldrh.w	ip, [r2]
 801267e:	9105      	str	r1, [sp, #20]
 8012680:	68e1      	ldr	r1, [r4, #12]
 8012682:	9203      	str	r2, [sp, #12]
 8012684:	1c68      	adds	r0, r5, #1
 8012686:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801268a:	f01c 0501 	ands.w	r5, ip, #1
 801268e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012692:	9502      	str	r5, [sp, #8]
 8012694:	b280      	uxth	r0, r0
 8012696:	d07d      	beq.n	8012794 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 8012698:	ee07 2a90 	vmov	s15, r2
 801269c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80126a0:	8360      	strh	r0, [r4, #26]
 80126a2:	edc1 6a00 	vstr	s13, [r1]
 80126a6:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80126aa:	8b61      	ldrh	r1, [r4, #26]
 80126ac:	ee07 2a10 	vmov	s14, r2
 80126b0:	68e2      	ldr	r2, [r4, #12]
 80126b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80126b6:	f04f 0e00 	mov.w	lr, #0
 80126ba:	1c48      	adds	r0, r1, #1
 80126bc:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80126c0:	ee06 ea10 	vmov	s12, lr
 80126c4:	8360      	strh	r0, [r4, #26]
 80126c6:	ed82 7a00 	vstr	s14, [r2]
 80126ca:	8b21      	ldrh	r1, [r4, #24]
 80126cc:	68a2      	ldr	r2, [r4, #8]
 80126ce:	2501      	movs	r5, #1
 80126d0:	1c48      	adds	r0, r1, #1
 80126d2:	8320      	strh	r0, [r4, #24]
 80126d4:	5455      	strb	r5, [r2, r1]
 80126d6:	2200      	movs	r2, #0
 80126d8:	3304      	adds	r3, #4
 80126da:	ee07 2a90 	vmov	s15, r2
 80126de:	9300      	str	r3, [sp, #0]
 80126e0:	46aa      	mov	sl, r5
 80126e2:	4613      	mov	r3, r2
 80126e4:	4611      	mov	r1, r2
 80126e6:	462e      	mov	r6, r5
 80126e8:	9201      	str	r2, [sp, #4]
 80126ea:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 80126ee:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 80126f2:	9805      	ldr	r0, [sp, #20]
 80126f4:	f8d4 b008 	ldr.w	fp, [r4, #8]
 80126f8:	f108 0701 	add.w	r7, r8, #1
 80126fc:	42a8      	cmp	r0, r5
 80126fe:	b2bf      	uxth	r7, r7
 8012700:	eb0b 0908 	add.w	r9, fp, r8
 8012704:	f340 80db 	ble.w	80128be <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 8012708:	fa4c f906 	asr.w	r9, ip, r6
 801270c:	f009 0901 	and.w	r9, r9, #1
 8012710:	fa5f f389 	uxtb.w	r3, r9
 8012714:	9304      	str	r3, [sp, #16]
 8012716:	9b00      	ldr	r3, [sp, #0]
 8012718:	f9b3 1000 	ldrsh.w	r1, [r3]
 801271c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012720:	f1b9 0f00 	cmp.w	r9, #0
 8012724:	d07d      	beq.n	8012822 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 8012726:	ee05 1a10 	vmov	s10, r1
 801272a:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 801272e:	ee05 3a10 	vmov	s10, r3
 8012732:	8327      	strh	r7, [r4, #24]
 8012734:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8012738:	f1ba 0f00 	cmp.w	sl, #0
 801273c:	d050      	beq.n	80127e0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 801273e:	f04f 0002 	mov.w	r0, #2
 8012742:	f80b 0008 	strb.w	r0, [fp, r8]
 8012746:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801274a:	68e7      	ldr	r7, [r4, #12]
 801274c:	f108 0901 	add.w	r9, r8, #1
 8012750:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8012754:	f8a4 901a 	strh.w	r9, [r4, #26]
 8012758:	edc7 4a00 	vstr	s9, [r7]
 801275c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012760:	68e7      	ldr	r7, [r4, #12]
 8012762:	f108 0901 	add.w	r9, r8, #1
 8012766:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801276a:	f8a4 901a 	strh.w	r9, [r4, #26]
 801276e:	ed87 5a00 	vstr	s10, [r7]
 8012772:	3601      	adds	r6, #1
 8012774:	2e10      	cmp	r6, #16
 8012776:	d106      	bne.n	8012786 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 8012778:	9e01      	ldr	r6, [sp, #4]
 801277a:	9803      	ldr	r0, [sp, #12]
 801277c:	3601      	adds	r6, #1
 801277e:	9601      	str	r6, [sp, #4]
 8012780:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 8012784:	2600      	movs	r6, #0
 8012786:	9800      	ldr	r0, [sp, #0]
 8012788:	f8dd a010 	ldr.w	sl, [sp, #16]
 801278c:	3004      	adds	r0, #4
 801278e:	3501      	adds	r5, #1
 8012790:	9000      	str	r0, [sp, #0]
 8012792:	e7ac      	b.n	80126ee <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 8012794:	ee06 2a10 	vmov	s12, r2
 8012798:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 801279c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80127a0:	ee16 5a10 	vmov	r5, s12
 80127a4:	442a      	add	r2, r5
 80127a6:	ee06 2a90 	vmov	s13, r2
 80127aa:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 80127ae:	8360      	strh	r0, [r4, #26]
 80127b0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80127b4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80127b8:	4472      	add	r2, lr
 80127ba:	ee07 2a10 	vmov	s14, r2
 80127be:	ee66 6aa7 	vmul.f32	s13, s13, s15
 80127c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80127c6:	edc1 6a00 	vstr	s13, [r1]
 80127ca:	8b61      	ldrh	r1, [r4, #26]
 80127cc:	68e2      	ldr	r2, [r4, #12]
 80127ce:	ee27 7a27 	vmul.f32	s14, s14, s15
 80127d2:	1c48      	adds	r0, r1, #1
 80127d4:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80127d8:	8360      	strh	r0, [r4, #26]
 80127da:	ed82 7a00 	vstr	s14, [r2]
 80127de:	e774      	b.n	80126ca <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 80127e0:	f04f 0005 	mov.w	r0, #5
 80127e4:	f80b 0008 	strb.w	r0, [fp, r8]
 80127e8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80127ec:	68e7      	ldr	r7, [r4, #12]
 80127ee:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 80127f2:	f108 0901 	add.w	r9, r8, #1
 80127f6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80127fa:	f8a4 901a 	strh.w	r9, [r4, #26]
 80127fe:	ed87 4a00 	vstr	s8, [r7]
 8012802:	ee04 2a10 	vmov	s8, r2
 8012806:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801280a:	68e7      	ldr	r7, [r4, #12]
 801280c:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 8012810:	f108 0901 	add.w	r9, r8, #1
 8012814:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8012818:	f8a4 901a 	strh.w	r9, [r4, #26]
 801281c:	ed87 4a00 	vstr	s8, [r7]
 8012820:	e791      	b.n	8012746 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 8012822:	f1ba 0f00 	cmp.w	sl, #0
 8012826:	d146      	bne.n	80128b6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 8012828:	f04f 0005 	mov.w	r0, #5
 801282c:	8327      	strh	r7, [r4, #24]
 801282e:	f80b 0008 	strb.w	r0, [fp, r8]
 8012832:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012836:	68e7      	ldr	r7, [r4, #12]
 8012838:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801283c:	f108 0901 	add.w	r9, r8, #1
 8012840:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8012844:	ee17 0a90 	vmov	r0, s15
 8012848:	f8a4 901a 	strh.w	r9, [r4, #26]
 801284c:	ed87 5a00 	vstr	s10, [r7]
 8012850:	ee05 2a10 	vmov	s10, r2
 8012854:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8012858:	68e7      	ldr	r7, [r4, #12]
 801285a:	4408      	add	r0, r1
 801285c:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8012860:	ee07 0a90 	vmov	s15, r0
 8012864:	f108 0901 	add.w	r9, r8, #1
 8012868:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801286c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8012870:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012874:	ed87 5a00 	vstr	s10, [r7]
 8012878:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801287c:	68e7      	ldr	r7, [r4, #12]
 801287e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8012882:	f108 0901 	add.w	r9, r8, #1
 8012886:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801288a:	441a      	add	r2, r3
 801288c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8012890:	edc7 7a00 	vstr	s15, [r7]
 8012894:	ee07 2a90 	vmov	s15, r2
 8012898:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801289c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80128a0:	68e7      	ldr	r7, [r4, #12]
 80128a2:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80128a6:	f108 0901 	add.w	r9, r8, #1
 80128aa:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80128ae:	f8a4 901a 	strh.w	r9, [r4, #26]
 80128b2:	edc7 7a00 	vstr	s15, [r7]
 80128b6:	461a      	mov	r2, r3
 80128b8:	ee07 1a90 	vmov	s15, r1
 80128bc:	e759      	b.n	8012772 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 80128be:	f1ba 0f00 	cmp.w	sl, #0
 80128c2:	d045      	beq.n	8012950 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 80128c4:	ee05 1a90 	vmov	s11, r1
 80128c8:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80128cc:	eef4 5a66 	vcmp.f32	s11, s13
 80128d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128d4:	d108      	bne.n	80128e8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 80128d6:	ee05 3a90 	vmov	s11, r3
 80128da:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80128de:	eef4 5a47 	vcmp.f32	s11, s14
 80128e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128e6:	d033      	beq.n	8012950 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 80128e8:	9b02      	ldr	r3, [sp, #8]
 80128ea:	8327      	strh	r7, [r4, #24]
 80128ec:	b1b3      	cbz	r3, 801291c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 80128ee:	2302      	movs	r3, #2
 80128f0:	f889 3000 	strb.w	r3, [r9]
 80128f4:	8b62      	ldrh	r2, [r4, #26]
 80128f6:	68e3      	ldr	r3, [r4, #12]
 80128f8:	1c51      	adds	r1, r2, #1
 80128fa:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80128fe:	8361      	strh	r1, [r4, #26]
 8012900:	edc3 6a00 	vstr	s13, [r3]
 8012904:	8b62      	ldrh	r2, [r4, #26]
 8012906:	68e3      	ldr	r3, [r4, #12]
 8012908:	1c51      	adds	r1, r2, #1
 801290a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801290e:	8361      	strh	r1, [r4, #26]
 8012910:	ed83 7a00 	vstr	s14, [r3]
 8012914:	9800      	ldr	r0, [sp, #0]
 8012916:	b007      	add	sp, #28
 8012918:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801291c:	2305      	movs	r3, #5
 801291e:	f889 3000 	strb.w	r3, [r9]
 8012922:	8b62      	ldrh	r2, [r4, #26]
 8012924:	68e3      	ldr	r3, [r4, #12]
 8012926:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 801292a:	1c51      	adds	r1, r2, #1
 801292c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8012930:	8361      	strh	r1, [r4, #26]
 8012932:	ee07 ea90 	vmov	s15, lr
 8012936:	ed83 6a00 	vstr	s12, [r3]
 801293a:	8b62      	ldrh	r2, [r4, #26]
 801293c:	68e3      	ldr	r3, [r4, #12]
 801293e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012942:	1c51      	adds	r1, r2, #1
 8012944:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8012948:	8361      	strh	r1, [r4, #26]
 801294a:	edc3 7a00 	vstr	s15, [r3]
 801294e:	e7d1      	b.n	80128f4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8012950:	ee05 2a90 	vmov	s11, r2
 8012954:	9902      	ldr	r1, [sp, #8]
 8012956:	8327      	strh	r7, [r4, #24]
 8012958:	2305      	movs	r3, #5
 801295a:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801295e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8012962:	f889 3000 	strb.w	r3, [r9]
 8012966:	b181      	cbz	r1, 801298a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 8012968:	8b62      	ldrh	r2, [r4, #26]
 801296a:	68e3      	ldr	r3, [r4, #12]
 801296c:	1c51      	adds	r1, r2, #1
 801296e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8012972:	8361      	strh	r1, [r4, #26]
 8012974:	ed83 5a00 	vstr	s10, [r3]
 8012978:	8b62      	ldrh	r2, [r4, #26]
 801297a:	68e3      	ldr	r3, [r4, #12]
 801297c:	1c51      	adds	r1, r2, #1
 801297e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8012982:	8361      	strh	r1, [r4, #26]
 8012984:	edc3 5a00 	vstr	s11, [r3]
 8012988:	e7b4      	b.n	80128f4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 801298a:	8b65      	ldrh	r5, [r4, #26]
 801298c:	68e1      	ldr	r1, [r4, #12]
 801298e:	1c6e      	adds	r6, r5, #1
 8012990:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8012994:	8366      	strh	r6, [r4, #26]
 8012996:	ed81 5a00 	vstr	s10, [r1]
 801299a:	8b65      	ldrh	r5, [r4, #26]
 801299c:	68e1      	ldr	r1, [r4, #12]
 801299e:	1c6e      	adds	r6, r5, #1
 80129a0:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 80129a4:	8366      	strh	r6, [r4, #26]
 80129a6:	edc1 5a00 	vstr	s11, [r1]
 80129aa:	8b65      	ldrh	r5, [r4, #26]
 80129ac:	68e1      	ldr	r1, [r4, #12]
 80129ae:	1c6e      	adds	r6, r5, #1
 80129b0:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 80129b4:	ee17 0a90 	vmov	r0, s15
 80129b8:	ee16 5a10 	vmov	r5, s12
 80129bc:	4428      	add	r0, r5
 80129be:	ee07 0a90 	vmov	s15, r0
 80129c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80129c6:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 80129ca:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80129ce:	4472      	add	r2, lr
 80129d0:	8366      	strh	r6, [r4, #26]
 80129d2:	edc1 7a00 	vstr	s15, [r1]
 80129d6:	ee07 2a90 	vmov	s15, r2
 80129da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80129de:	8b61      	ldrh	r1, [r4, #26]
 80129e0:	68e5      	ldr	r5, [r4, #12]
 80129e2:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80129e6:	1c4e      	adds	r6, r1, #1
 80129e8:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 80129ec:	8366      	strh	r6, [r4, #26]
 80129ee:	edc1 7a00 	vstr	s15, [r1]
 80129f2:	8b22      	ldrh	r2, [r4, #24]
 80129f4:	68a1      	ldr	r1, [r4, #8]
 80129f6:	1c55      	adds	r5, r2, #1
 80129f8:	8325      	strh	r5, [r4, #24]
 80129fa:	548b      	strb	r3, [r1, r2]
 80129fc:	e791      	b.n	8012922 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

08012a00 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 8012a00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012a04:	b08e      	sub	sp, #56	@ 0x38
 8012a06:	4604      	mov	r4, r0
 8012a08:	4688      	mov	r8, r1
 8012a0a:	4615      	mov	r5, r2
 8012a0c:	4699      	mov	r9, r3
 8012a0e:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8012a10:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 8012a14:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 8012a16:	f7ee fdab 	bl	8001570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 8012a1a:	6060      	str	r0, [r4, #4]
 8012a1c:	f1b9 0f00 	cmp.w	r9, #0
 8012a20:	f000 80e8 	beq.w	8012bf4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8012a24:	2800      	cmp	r0, #0
 8012a26:	f000 80e5 	beq.w	8012bf4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8012a2a:	a805      	add	r0, sp, #20
 8012a2c:	f000 f8f9 	bl	8012c22 <_ZN8touchgfx9Matrix3x3C1Ev>
 8012a30:	6833      	ldr	r3, [r6, #0]
 8012a32:	4630      	mov	r0, r6
 8012a34:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8012a36:	4798      	blx	r3
 8012a38:	a805      	add	r0, sp, #20
 8012a3a:	eef0 0a40 	vmov.f32	s1, s0
 8012a3e:	f000 f8f4 	bl	8012c2a <_ZN8touchgfx9Matrix3x35scaleEff>
 8012a42:	6860      	ldr	r0, [r4, #4]
 8012a44:	f1ba 0f03 	cmp.w	sl, #3
 8012a48:	d83b      	bhi.n	8012ac2 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 8012a4a:	e8df f00a 	tbb	[pc, sl]
 8012a4e:	1002      	.short	0x1002
 8012a50:	9f71      	.short	0x9f71
 8012a52:	6803      	ldr	r3, [r0, #0]
 8012a54:	462a      	mov	r2, r5
 8012a56:	689b      	ldr	r3, [r3, #8]
 8012a58:	4641      	mov	r1, r8
 8012a5a:	4798      	blx	r3
 8012a5c:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8012a60:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8012a64:	ee07 7a90 	vmov	s15, r7
 8012a68:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8012a6c:	e026      	b.n	8012abc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 8012a6e:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8012a72:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8012a76:	8869      	ldrh	r1, [r5, #2]
 8012a78:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012a7c:	1a9b      	subs	r3, r3, r2
 8012a7e:	1a5b      	subs	r3, r3, r1
 8012a80:	f8ad 300c 	strh.w	r3, [sp, #12]
 8012a84:	882b      	ldrh	r3, [r5, #0]
 8012a86:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012a8a:	88ab      	ldrh	r3, [r5, #4]
 8012a8c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012a90:	6803      	ldr	r3, [r0, #0]
 8012a92:	aa03      	add	r2, sp, #12
 8012a94:	689b      	ldr	r3, [r3, #8]
 8012a96:	4641      	mov	r1, r8
 8012a98:	4798      	blx	r3
 8012a9a:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 8012bfc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 8012a9e:	a805      	add	r0, sp, #20
 8012aa0:	f000 f8e8 	bl	8012c74 <_ZN8touchgfx9Matrix3x36rotateEf>
 8012aa4:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8012aa8:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8012aaa:	ee07 7a90 	vmov	s15, r7
 8012aae:	1a9b      	subs	r3, r3, r2
 8012ab0:	ee00 3a10 	vmov	s0, r3
 8012ab4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8012ab8:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8012abc:	a805      	add	r0, sp, #20
 8012abe:	f000 f927 	bl	8012d10 <_ZN8touchgfx9Matrix3x39translateEff>
 8012ac2:	6860      	ldr	r0, [r4, #4]
 8012ac4:	6803      	ldr	r3, [r0, #0]
 8012ac6:	a905      	add	r1, sp, #20
 8012ac8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012aca:	4798      	blx	r3
 8012acc:	6860      	ldr	r0, [r4, #4]
 8012ace:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8012ad0:	6803      	ldr	r3, [r0, #0]
 8012ad2:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 8012ad6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012ad8:	4798      	blx	r3
 8012ada:	6860      	ldr	r0, [r4, #4]
 8012adc:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 8012ae0:	6803      	ldr	r3, [r0, #0]
 8012ae2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012ae4:	4798      	blx	r3
 8012ae6:	6860      	ldr	r0, [r4, #4]
 8012ae8:	6803      	ldr	r3, [r0, #0]
 8012aea:	2101      	movs	r1, #1
 8012aec:	68db      	ldr	r3, [r3, #12]
 8012aee:	2500      	movs	r5, #0
 8012af0:	4798      	blx	r3
 8012af2:	f8b9 7000 	ldrh.w	r7, [r9]
 8012af6:	61a5      	str	r5, [r4, #24]
 8012af8:	f104 0310 	add.w	r3, r4, #16
 8012afc:	f104 0208 	add.w	r2, r4, #8
 8012b00:	f104 0114 	add.w	r1, r4, #20
 8012b04:	f104 000c 	add.w	r0, r4, #12
 8012b08:	f109 0602 	add.w	r6, r9, #2
 8012b0c:	f7f1 f834 	bl	8003b78 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 8012b10:	42af      	cmp	r7, r5
 8012b12:	dd60      	ble.n	8012bd6 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 8012b14:	8831      	ldrh	r1, [r6, #0]
 8012b16:	f101 030f 	add.w	r3, r1, #15
 8012b1a:	1cb2      	adds	r2, r6, #2
 8012b1c:	f3c3 1307 	ubfx	r3, r3, #4, #8
 8012b20:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012b24:	4620      	mov	r0, r4
 8012b26:	f7ff fda3 	bl	8012670 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 8012b2a:	3501      	adds	r5, #1
 8012b2c:	4606      	mov	r6, r0
 8012b2e:	e7ef      	b.n	8012b10 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 8012b30:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8012b34:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8012b38:	8829      	ldrh	r1, [r5, #0]
 8012b3a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012b3e:	1a9b      	subs	r3, r3, r2
 8012b40:	1a5b      	subs	r3, r3, r1
 8012b42:	f8ad 300c 	strh.w	r3, [sp, #12]
 8012b46:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8012b4a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012b4e:	886d      	ldrh	r5, [r5, #2]
 8012b50:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012b54:	1a5b      	subs	r3, r3, r1
 8012b56:	1b5b      	subs	r3, r3, r5
 8012b58:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012b5c:	6803      	ldr	r3, [r0, #0]
 8012b5e:	aa03      	add	r2, sp, #12
 8012b60:	689b      	ldr	r3, [r3, #8]
 8012b62:	4641      	mov	r1, r8
 8012b64:	4798      	blx	r3
 8012b66:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 8012c00 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 8012b6a:	a805      	add	r0, sp, #20
 8012b6c:	f000 f882 	bl	8012c74 <_ZN8touchgfx9Matrix3x36rotateEf>
 8012b70:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8012b74:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8012b76:	1a9b      	subs	r3, r3, r2
 8012b78:	ee00 3a90 	vmov	s1, r3
 8012b7c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8012b80:	1bdb      	subs	r3, r3, r7
 8012b82:	ee00 3a10 	vmov	s0, r3
 8012b86:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8012b8a:	e795      	b.n	8012ab8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 8012b8c:	886b      	ldrh	r3, [r5, #2]
 8012b8e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8012b92:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8012b96:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012b9a:	8829      	ldrh	r1, [r5, #0]
 8012b9c:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012ba0:	1a9b      	subs	r3, r3, r2
 8012ba2:	1a5b      	subs	r3, r3, r1
 8012ba4:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012ba8:	88eb      	ldrh	r3, [r5, #6]
 8012baa:	f8ad 3010 	strh.w	r3, [sp, #16]
 8012bae:	6803      	ldr	r3, [r0, #0]
 8012bb0:	aa03      	add	r2, sp, #12
 8012bb2:	689b      	ldr	r3, [r3, #8]
 8012bb4:	4641      	mov	r1, r8
 8012bb6:	4798      	blx	r3
 8012bb8:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 8012c04 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 8012bbc:	a805      	add	r0, sp, #20
 8012bbe:	f000 f859 	bl	8012c74 <_ZN8touchgfx9Matrix3x36rotateEf>
 8012bc2:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8012bc6:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8012bca:	1bdb      	subs	r3, r3, r7
 8012bcc:	ee00 3a90 	vmov	s1, r3
 8012bd0:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8012bd4:	e748      	b.n	8012a68 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 8012bd6:	6860      	ldr	r0, [r4, #4]
 8012bd8:	8b22      	ldrh	r2, [r4, #24]
 8012bda:	6803      	ldr	r3, [r0, #0]
 8012bdc:	2100      	movs	r1, #0
 8012bde:	9101      	str	r1, [sp, #4]
 8012be0:	8b61      	ldrh	r1, [r4, #26]
 8012be2:	9100      	str	r1, [sp, #0]
 8012be4:	6a1d      	ldr	r5, [r3, #32]
 8012be6:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 8012bea:	47a8      	blx	r5
 8012bec:	6860      	ldr	r0, [r4, #4]
 8012bee:	6803      	ldr	r3, [r0, #0]
 8012bf0:	69db      	ldr	r3, [r3, #28]
 8012bf2:	4798      	blx	r3
 8012bf4:	b00e      	add	sp, #56	@ 0x38
 8012bf6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012bfa:	bf00      	nop
 8012bfc:	42b40000 	.word	0x42b40000
 8012c00:	43340000 	.word	0x43340000
 8012c04:	43870000 	.word	0x43870000

08012c08 <_ZN8touchgfx9Matrix3x35resetEv>:
 8012c08:	2300      	movs	r3, #0
 8012c0a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8012c0e:	6002      	str	r2, [r0, #0]
 8012c10:	6043      	str	r3, [r0, #4]
 8012c12:	6083      	str	r3, [r0, #8]
 8012c14:	60c3      	str	r3, [r0, #12]
 8012c16:	6102      	str	r2, [r0, #16]
 8012c18:	6143      	str	r3, [r0, #20]
 8012c1a:	6183      	str	r3, [r0, #24]
 8012c1c:	61c3      	str	r3, [r0, #28]
 8012c1e:	6202      	str	r2, [r0, #32]
 8012c20:	4770      	bx	lr

08012c22 <_ZN8touchgfx9Matrix3x3C1Ev>:
 8012c22:	b508      	push	{r3, lr}
 8012c24:	f7ff fff0 	bl	8012c08 <_ZN8touchgfx9Matrix3x35resetEv>
 8012c28:	bd08      	pop	{r3, pc}

08012c2a <_ZN8touchgfx9Matrix3x35scaleEff>:
 8012c2a:	edd0 7a00 	vldr	s15, [r0]
 8012c2e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8012c32:	edc0 7a00 	vstr	s15, [r0]
 8012c36:	edd0 7a01 	vldr	s15, [r0, #4]
 8012c3a:	ee67 7a80 	vmul.f32	s15, s15, s0
 8012c3e:	edc0 7a01 	vstr	s15, [r0, #4]
 8012c42:	edd0 7a02 	vldr	s15, [r0, #8]
 8012c46:	ee27 0a80 	vmul.f32	s0, s15, s0
 8012c4a:	edd0 7a03 	vldr	s15, [r0, #12]
 8012c4e:	ed80 0a02 	vstr	s0, [r0, #8]
 8012c52:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8012c56:	edc0 7a03 	vstr	s15, [r0, #12]
 8012c5a:	edd0 7a04 	vldr	s15, [r0, #16]
 8012c5e:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8012c62:	edc0 7a04 	vstr	s15, [r0, #16]
 8012c66:	edd0 7a05 	vldr	s15, [r0, #20]
 8012c6a:	ee67 0aa0 	vmul.f32	s1, s15, s1
 8012c6e:	edc0 0a05 	vstr	s1, [r0, #20]
 8012c72:	4770      	bx	lr

08012c74 <_ZN8touchgfx9Matrix3x36rotateEf>:
 8012c74:	b510      	push	{r4, lr}
 8012c76:	eddf 7a24 	vldr	s15, [pc, #144]	@ 8012d08 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 8012c7a:	ee20 0a27 	vmul.f32	s0, s0, s15
 8012c7e:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8012d0c <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 8012c82:	ed2d 8b02 	vpush	{d8}
 8012c86:	eec0 8a27 	vdiv.f32	s17, s0, s15
 8012c8a:	4604      	mov	r4, r0
 8012c8c:	eeb0 0a68 	vmov.f32	s0, s17
 8012c90:	f010 fd32 	bl	80236f8 <cosf>
 8012c94:	eeb0 8a40 	vmov.f32	s16, s0
 8012c98:	eeb0 0a68 	vmov.f32	s0, s17
 8012c9c:	f010 fd70 	bl	8023780 <sinf>
 8012ca0:	edd4 6a03 	vldr	s13, [r4, #12]
 8012ca4:	edd4 4a00 	vldr	s9, [r4]
 8012ca8:	ed94 7a04 	vldr	s14, [r4, #16]
 8012cac:	ed94 5a01 	vldr	s10, [r4, #4]
 8012cb0:	edd4 5a02 	vldr	s11, [r4, #8]
 8012cb4:	ee60 7a66 	vnmul.f32	s15, s0, s13
 8012cb8:	ee66 6a88 	vmul.f32	s13, s13, s16
 8012cbc:	eee8 7a24 	vfma.f32	s15, s16, s9
 8012cc0:	eee0 6a24 	vfma.f32	s13, s0, s9
 8012cc4:	edc4 7a00 	vstr	s15, [r4]
 8012cc8:	ee60 7a47 	vnmul.f32	s15, s0, s14
 8012ccc:	ee27 7a08 	vmul.f32	s14, s14, s16
 8012cd0:	eee8 7a05 	vfma.f32	s15, s16, s10
 8012cd4:	eea0 7a05 	vfma.f32	s14, s0, s10
 8012cd8:	edc4 7a01 	vstr	s15, [r4, #4]
 8012cdc:	edd4 7a05 	vldr	s15, [r4, #20]
 8012ce0:	edc4 6a03 	vstr	s13, [r4, #12]
 8012ce4:	ee20 6a67 	vnmul.f32	s12, s0, s15
 8012ce8:	ee67 7a88 	vmul.f32	s15, s15, s16
 8012cec:	eea8 6a25 	vfma.f32	s12, s16, s11
 8012cf0:	ecbd 8b02 	vpop	{d8}
 8012cf4:	eee0 7a25 	vfma.f32	s15, s0, s11
 8012cf8:	ed84 6a02 	vstr	s12, [r4, #8]
 8012cfc:	ed84 7a04 	vstr	s14, [r4, #16]
 8012d00:	edc4 7a05 	vstr	s15, [r4, #20]
 8012d04:	bd10      	pop	{r4, pc}
 8012d06:	bf00      	nop
 8012d08:	40490fdb 	.word	0x40490fdb
 8012d0c:	43340000 	.word	0x43340000

08012d10 <_ZN8touchgfx9Matrix3x39translateEff>:
 8012d10:	ed90 6a06 	vldr	s12, [r0, #24]
 8012d14:	edd0 7a00 	vldr	s15, [r0]
 8012d18:	edd0 6a07 	vldr	s13, [r0, #28]
 8012d1c:	ed90 7a08 	vldr	s14, [r0, #32]
 8012d20:	eee6 7a00 	vfma.f32	s15, s12, s0
 8012d24:	edc0 7a00 	vstr	s15, [r0]
 8012d28:	edd0 7a01 	vldr	s15, [r0, #4]
 8012d2c:	eee6 7a80 	vfma.f32	s15, s13, s0
 8012d30:	edc0 7a01 	vstr	s15, [r0, #4]
 8012d34:	edd0 7a02 	vldr	s15, [r0, #8]
 8012d38:	eee7 7a00 	vfma.f32	s15, s14, s0
 8012d3c:	edc0 7a02 	vstr	s15, [r0, #8]
 8012d40:	edd0 7a03 	vldr	s15, [r0, #12]
 8012d44:	eee6 7a20 	vfma.f32	s15, s12, s1
 8012d48:	edc0 7a03 	vstr	s15, [r0, #12]
 8012d4c:	edd0 7a04 	vldr	s15, [r0, #16]
 8012d50:	eee6 7aa0 	vfma.f32	s15, s13, s1
 8012d54:	edc0 7a04 	vstr	s15, [r0, #16]
 8012d58:	edd0 7a05 	vldr	s15, [r0, #20]
 8012d5c:	eee7 7a20 	vfma.f32	s15, s14, s1
 8012d60:	edc0 7a05 	vstr	s15, [r0, #20]
 8012d64:	4770      	bx	lr

08012d66 <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 8012d66:	edd0 6a01 	vldr	s13, [r0, #4]
 8012d6a:	edd0 7a04 	vldr	s15, [r0, #16]
 8012d6e:	ed90 7a03 	vldr	s14, [r0, #12]
 8012d72:	ee60 7aa7 	vmul.f32	s15, s1, s15
 8012d76:	ee60 0aa6 	vmul.f32	s1, s1, s13
 8012d7a:	edd0 6a00 	vldr	s13, [r0]
 8012d7e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8012d82:	b084      	sub	sp, #16
 8012d84:	eee6 0a80 	vfma.f32	s1, s13, s0
 8012d88:	ed90 7a05 	vldr	s14, [r0, #20]
 8012d8c:	ed90 0a02 	vldr	s0, [r0, #8]
 8012d90:	ee30 0a80 	vadd.f32	s0, s1, s0
 8012d94:	ee77 0a87 	vadd.f32	s1, s15, s14
 8012d98:	b004      	add	sp, #16
 8012d9a:	4770      	bx	lr

08012d9c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8012d9c:	b530      	push	{r4, r5, lr}
 8012d9e:	8083      	strh	r3, [r0, #4]
 8012da0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8012da4:	80c3      	strh	r3, [r0, #6]
 8012da6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8012daa:	7203      	strb	r3, [r0, #8]
 8012dac:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012db0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8012db4:	7243      	strb	r3, [r0, #9]
 8012db6:	7a83      	ldrb	r3, [r0, #10]
 8012db8:	6141      	str	r1, [r0, #20]
 8012dba:	f365 0306 	bfi	r3, r5, #0, #7
 8012dbe:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8012dc2:	8302      	strh	r2, [r0, #24]
 8012dc4:	f365 13c7 	bfi	r3, r5, #7, #1
 8012dc8:	7283      	strb	r3, [r0, #10]
 8012dca:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8012dce:	72c3      	strb	r3, [r0, #11]
 8012dd0:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8012dd4:	7303      	strb	r3, [r0, #12]
 8012dd6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8012dda:	81c3      	strh	r3, [r0, #14]
 8012ddc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8012de0:	8203      	strh	r3, [r0, #16]
 8012de2:	4b01      	ldr	r3, [pc, #4]	@ (8012de8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8012de4:	6003      	str	r3, [r0, #0]
 8012de6:	bd30      	pop	{r4, r5, pc}
 8012de8:	0802768c 	.word	0x0802768c

08012dec <_ZNK8touchgfx9ConstFont4findEt>:
 8012dec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012dee:	6944      	ldr	r4, [r0, #20]
 8012df0:	b3bc      	cbz	r4, 8012e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012df2:	88a3      	ldrh	r3, [r4, #4]
 8012df4:	8b02      	ldrh	r2, [r0, #24]
 8012df6:	1acb      	subs	r3, r1, r3
 8012df8:	f102 32ff 	add.w	r2, r2, #4294967295
 8012dfc:	d431      	bmi.n	8012e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012dfe:	4293      	cmp	r3, r2
 8012e00:	dd0c      	ble.n	8012e1c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8012e02:	230e      	movs	r3, #14
 8012e04:	fb03 4302 	mla	r3, r3, r2, r4
 8012e08:	889b      	ldrh	r3, [r3, #4]
 8012e0a:	1a5b      	subs	r3, r3, r1
 8012e0c:	1ad3      	subs	r3, r2, r3
 8012e0e:	429a      	cmp	r2, r3
 8012e10:	db27      	blt.n	8012e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012e12:	2b00      	cmp	r3, #0
 8012e14:	bfbc      	itt	lt
 8012e16:	2302      	movlt	r3, #2
 8012e18:	fb92 f3f3 	sdivlt	r3, r2, r3
 8012e1c:	2500      	movs	r5, #0
 8012e1e:	260e      	movs	r6, #14
 8012e20:	4295      	cmp	r5, r2
 8012e22:	dc1e      	bgt.n	8012e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012e24:	fb06 4003 	mla	r0, r6, r3, r4
 8012e28:	8887      	ldrh	r7, [r0, #4]
 8012e2a:	42b9      	cmp	r1, r7
 8012e2c:	d01a      	beq.n	8012e64 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8012e2e:	d20d      	bcs.n	8012e4c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8012e30:	1e5a      	subs	r2, r3, #1
 8012e32:	4295      	cmp	r5, r2
 8012e34:	dc15      	bgt.n	8012e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012e36:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8012e3a:	1a5b      	subs	r3, r3, r1
 8012e3c:	1ad3      	subs	r3, r2, r3
 8012e3e:	429a      	cmp	r2, r3
 8012e40:	db0f      	blt.n	8012e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012e42:	429d      	cmp	r5, r3
 8012e44:	ddec      	ble.n	8012e20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012e46:	1953      	adds	r3, r2, r5
 8012e48:	105b      	asrs	r3, r3, #1
 8012e4a:	e7e9      	b.n	8012e20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012e4c:	1c5d      	adds	r5, r3, #1
 8012e4e:	42aa      	cmp	r2, r5
 8012e50:	db07      	blt.n	8012e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012e52:	8a43      	ldrh	r3, [r0, #18]
 8012e54:	1acb      	subs	r3, r1, r3
 8012e56:	442b      	add	r3, r5
 8012e58:	429d      	cmp	r5, r3
 8012e5a:	dc02      	bgt.n	8012e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012e5c:	429a      	cmp	r2, r3
 8012e5e:	dadf      	bge.n	8012e20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012e60:	e7f1      	b.n	8012e46 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8012e62:	2000      	movs	r0, #0
 8012e64:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012e66 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8012e66:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012e68:	4604      	mov	r4, r0
 8012e6a:	4617      	mov	r7, r2
 8012e6c:	461e      	mov	r6, r3
 8012e6e:	b911      	cbnz	r1, 8012e76 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8012e70:	2500      	movs	r5, #0
 8012e72:	4628      	mov	r0, r5
 8012e74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012e76:	290a      	cmp	r1, #10
 8012e78:	d0fa      	beq.n	8012e70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012e7a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8012e7e:	4291      	cmp	r1, r2
 8012e80:	d0f6      	beq.n	8012e70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012e82:	f242 020b 	movw	r2, #8203	@ 0x200b
 8012e86:	4291      	cmp	r1, r2
 8012e88:	d0f2      	beq.n	8012e70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012e8a:	f7ff ffaf 	bl	8012dec <_ZNK8touchgfx9ConstFont4findEt>
 8012e8e:	4605      	mov	r5, r0
 8012e90:	b950      	cbnz	r0, 8012ea8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8012e92:	6823      	ldr	r3, [r4, #0]
 8012e94:	4620      	mov	r0, r4
 8012e96:	691b      	ldr	r3, [r3, #16]
 8012e98:	4798      	blx	r3
 8012e9a:	4601      	mov	r1, r0
 8012e9c:	4620      	mov	r0, r4
 8012e9e:	f7ff ffa5 	bl	8012dec <_ZNK8touchgfx9ConstFont4findEt>
 8012ea2:	4605      	mov	r5, r0
 8012ea4:	2800      	cmp	r0, #0
 8012ea6:	d0e3      	beq.n	8012e70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012ea8:	6823      	ldr	r3, [r4, #0]
 8012eaa:	4629      	mov	r1, r5
 8012eac:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8012eae:	4620      	mov	r0, r4
 8012eb0:	4798      	blx	r3
 8012eb2:	6038      	str	r0, [r7, #0]
 8012eb4:	6823      	ldr	r3, [r4, #0]
 8012eb6:	4620      	mov	r0, r4
 8012eb8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8012eba:	4798      	blx	r3
 8012ebc:	7030      	strb	r0, [r6, #0]
 8012ebe:	e7d8      	b.n	8012e72 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08012ec0 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8012ec0:	2000      	movs	r0, #0
 8012ec2:	4770      	bx	lr

08012ec4 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8012ec4:	2001      	movs	r0, #1
 8012ec6:	4770      	bx	lr

08012ec8 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8012ec8:	2002      	movs	r0, #2
 8012eca:	4770      	bx	lr

08012ecc <_ZN8touchgfx6ScreenD1Ev>:
 8012ecc:	4770      	bx	lr

08012ece <_ZN8touchgfx12GestureEventD1Ev>:
 8012ece:	4770      	bx	lr

08012ed0 <_ZN8touchgfx9DragEventD1Ev>:
 8012ed0:	4770      	bx	lr

08012ed2 <_ZN8touchgfx10ClickEventD1Ev>:
 8012ed2:	4770      	bx	lr

08012ed4 <_ZN8touchgfx10ClickEventD0Ev>:
 8012ed4:	b510      	push	{r4, lr}
 8012ed6:	210c      	movs	r1, #12
 8012ed8:	4604      	mov	r4, r0
 8012eda:	f010 fbc4 	bl	8023666 <_ZdlPvj>
 8012ede:	4620      	mov	r0, r4
 8012ee0:	bd10      	pop	{r4, pc}

08012ee2 <_ZN8touchgfx9DragEventD0Ev>:
 8012ee2:	b510      	push	{r4, lr}
 8012ee4:	2110      	movs	r1, #16
 8012ee6:	4604      	mov	r4, r0
 8012ee8:	f010 fbbd 	bl	8023666 <_ZdlPvj>
 8012eec:	4620      	mov	r0, r4
 8012eee:	bd10      	pop	{r4, pc}

08012ef0 <_ZN8touchgfx12GestureEventD0Ev>:
 8012ef0:	b510      	push	{r4, lr}
 8012ef2:	210c      	movs	r1, #12
 8012ef4:	4604      	mov	r4, r0
 8012ef6:	f010 fbb6 	bl	8023666 <_ZdlPvj>
 8012efa:	4620      	mov	r0, r4
 8012efc:	bd10      	pop	{r4, pc}

08012efe <_ZN8touchgfx6ScreenD0Ev>:
 8012efe:	b510      	push	{r4, lr}
 8012f00:	213c      	movs	r1, #60	@ 0x3c
 8012f02:	4604      	mov	r4, r0
 8012f04:	f010 fbaf 	bl	8023666 <_ZdlPvj>
 8012f08:	4620      	mov	r0, r4
 8012f0a:	bd10      	pop	{r4, pc}

08012f0c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8012f0c:	b530      	push	{r4, r5, lr}
 8012f0e:	460d      	mov	r5, r1
 8012f10:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8012f12:	b087      	sub	sp, #28
 8012f14:	4604      	mov	r4, r0
 8012f16:	b301      	cbz	r1, 8012f5a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8012f18:	a801      	add	r0, sp, #4
 8012f1a:	f7ff fb83 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012f1e:	892a      	ldrh	r2, [r5, #8]
 8012f20:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012f24:	7928      	ldrb	r0, [r5, #4]
 8012f26:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8012f2a:	f88d 0010 	strb.w	r0, [sp, #16]
 8012f2e:	1ad2      	subs	r2, r2, r3
 8012f30:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8012f32:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8012f34:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012f38:	441a      	add	r2, r3
 8012f3a:	896b      	ldrh	r3, [r5, #10]
 8012f3c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012f40:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012f44:	1b5b      	subs	r3, r3, r5
 8012f46:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8012f48:	442b      	add	r3, r5
 8012f4a:	4d05      	ldr	r5, [pc, #20]	@ (8012f60 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012f4c:	9503      	str	r5, [sp, #12]
 8012f4e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012f52:	6803      	ldr	r3, [r0, #0]
 8012f54:	a903      	add	r1, sp, #12
 8012f56:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012f58:	4798      	blx	r3
 8012f5a:	b007      	add	sp, #28
 8012f5c:	bd30      	pop	{r4, r5, pc}
 8012f5e:	bf00      	nop
 8012f60:	0802771c 	.word	0x0802771c

08012f64 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012f64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f68:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8012f6a:	b08a      	sub	sp, #40	@ 0x28
 8012f6c:	4604      	mov	r4, r0
 8012f6e:	460d      	mov	r5, r1
 8012f70:	b113      	cbz	r3, 8012f78 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012f72:	790b      	ldrb	r3, [r1, #4]
 8012f74:	2b00      	cmp	r3, #0
 8012f76:	d044      	beq.n	8013002 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012f78:	f104 0804 	add.w	r8, r4, #4
 8012f7c:	4641      	mov	r1, r8
 8012f7e:	a803      	add	r0, sp, #12
 8012f80:	f7ff fb50 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012f84:	792b      	ldrb	r3, [r5, #4]
 8012f86:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8012f8a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8012f8e:	b983      	cbnz	r3, 8012fb2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012f90:	892a      	ldrh	r2, [r5, #8]
 8012f92:	88e9      	ldrh	r1, [r5, #6]
 8012f94:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8012f98:	1b92      	subs	r2, r2, r6
 8012f9a:	1bc9      	subs	r1, r1, r7
 8012f9c:	9301      	str	r3, [sp, #4]
 8012f9e:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8012fa2:	9300      	str	r3, [sp, #0]
 8012fa4:	b212      	sxth	r2, r2
 8012fa6:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8012faa:	b209      	sxth	r1, r1
 8012fac:	4640      	mov	r0, r8
 8012fae:	f7f8 faaf 	bl	800b510 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8012fb2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8012fb4:	b329      	cbz	r1, 8013002 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012fb6:	a805      	add	r0, sp, #20
 8012fb8:	f7ff fb34 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012fbc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012fc0:	792b      	ldrb	r3, [r5, #4]
 8012fc2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8012fc4:	f88d 3020 	strb.w	r3, [sp, #32]
 8012fc8:	1abf      	subs	r7, r7, r2
 8012fca:	88ea      	ldrh	r2, [r5, #6]
 8012fcc:	4417      	add	r7, r2
 8012fce:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8012fd0:	4417      	add	r7, r2
 8012fd2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8012fd6:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8012fda:	1ab6      	subs	r6, r6, r2
 8012fdc:	892a      	ldrh	r2, [r5, #8]
 8012fde:	4416      	add	r6, r2
 8012fe0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012fe2:	4416      	add	r6, r2
 8012fe4:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8012fe8:	4a07      	ldr	r2, [pc, #28]	@ (8013008 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8012fea:	9207      	str	r2, [sp, #28]
 8012fec:	2600      	movs	r6, #0
 8012fee:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8012ff2:	6803      	ldr	r3, [r0, #0]
 8012ff4:	a907      	add	r1, sp, #28
 8012ff6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8012ff8:	4798      	blx	r3
 8012ffa:	792b      	ldrb	r3, [r5, #4]
 8012ffc:	b10b      	cbz	r3, 8013002 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012ffe:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8013002:	b00a      	add	sp, #40	@ 0x28
 8013004:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013008:	080276f4 	.word	0x080276f4

0801300c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801300c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013010:	460c      	mov	r4, r1
 8013012:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8013014:	b088      	sub	sp, #32
 8013016:	4605      	mov	r5, r0
 8013018:	2900      	cmp	r1, #0
 801301a:	d06d      	beq.n	80130f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801301c:	4668      	mov	r0, sp
 801301e:	f7ff fb01 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013022:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8013024:	88e3      	ldrh	r3, [r4, #6]
 8013026:	f9bd 8000 	ldrsh.w	r8, [sp]
 801302a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801302e:	440b      	add	r3, r1
 8013030:	b21b      	sxth	r3, r3
 8013032:	4543      	cmp	r3, r8
 8013034:	db31      	blt.n	801309a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013036:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801303a:	44c4      	add	ip, r8
 801303c:	fa0f fc8c 	sxth.w	ip, ip
 8013040:	4563      	cmp	r3, ip
 8013042:	da2a      	bge.n	801309a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013044:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8013046:	8926      	ldrh	r6, [r4, #8]
 8013048:	4416      	add	r6, r2
 801304a:	b236      	sxth	r6, r6
 801304c:	42be      	cmp	r6, r7
 801304e:	db24      	blt.n	801309a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013050:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8013054:	4438      	add	r0, r7
 8013056:	b200      	sxth	r0, r0
 8013058:	4286      	cmp	r6, r0
 801305a:	da1e      	bge.n	801309a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801305c:	8963      	ldrh	r3, [r4, #10]
 801305e:	4419      	add	r1, r3
 8013060:	b209      	sxth	r1, r1
 8013062:	4541      	cmp	r1, r8
 8013064:	db08      	blt.n	8013078 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013066:	4561      	cmp	r1, ip
 8013068:	da06      	bge.n	8013078 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801306a:	89a3      	ldrh	r3, [r4, #12]
 801306c:	441a      	add	r2, r3
 801306e:	b212      	sxth	r2, r2
 8013070:	42ba      	cmp	r2, r7
 8013072:	db01      	blt.n	8013078 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013074:	4282      	cmp	r2, r0
 8013076:	db10      	blt.n	801309a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013078:	4b21      	ldr	r3, [pc, #132]	@ (8013100 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801307a:	9304      	str	r3, [sp, #16]
 801307c:	2302      	movs	r3, #2
 801307e:	f88d 3014 	strb.w	r3, [sp, #20]
 8013082:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8013084:	2300      	movs	r3, #0
 8013086:	f8ad 3016 	strh.w	r3, [sp, #22]
 801308a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801308e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013092:	6803      	ldr	r3, [r0, #0]
 8013094:	a904      	add	r1, sp, #16
 8013096:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013098:	4798      	blx	r3
 801309a:	1d29      	adds	r1, r5, #4
 801309c:	a802      	add	r0, sp, #8
 801309e:	f7ff fac1 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80130a2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80130a6:	88e0      	ldrh	r0, [r4, #6]
 80130a8:	7921      	ldrb	r1, [r4, #4]
 80130aa:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 80130ae:	8922      	ldrh	r2, [r4, #8]
 80130b0:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 80130b2:	f88d 1014 	strb.w	r1, [sp, #20]
 80130b6:	eba3 0808 	sub.w	r8, r3, r8
 80130ba:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80130be:	1bdf      	subs	r7, r3, r7
 80130c0:	b2bb      	uxth	r3, r7
 80130c2:	fa1f f888 	uxth.w	r8, r8
 80130c6:	8967      	ldrh	r7, [r4, #10]
 80130c8:	89a4      	ldrh	r4, [r4, #12]
 80130ca:	4440      	add	r0, r8
 80130cc:	4460      	add	r0, ip
 80130ce:	441a      	add	r2, r3
 80130d0:	44b8      	add	r8, r7
 80130d2:	4423      	add	r3, r4
 80130d4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80130d8:	4433      	add	r3, r6
 80130da:	4432      	add	r2, r6
 80130dc:	44e0      	add	r8, ip
 80130de:	4c09      	ldr	r4, [pc, #36]	@ (8013104 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80130e0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80130e2:	9404      	str	r4, [sp, #16]
 80130e4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80130e8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80130ec:	f8ad 301c 	strh.w	r3, [sp, #28]
 80130f0:	6803      	ldr	r3, [r0, #0]
 80130f2:	a904      	add	r1, sp, #16
 80130f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80130f6:	4798      	blx	r3
 80130f8:	b008      	add	sp, #32
 80130fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80130fe:	bf00      	nop
 8013100:	080276f4 	.word	0x080276f4
 8013104:	08027708 	.word	0x08027708

08013108 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8013108:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801310a:	4604      	mov	r4, r0
 801310c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8013110:	3201      	adds	r2, #1
 8013112:	d112      	bne.n	801313a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8013114:	6803      	ldr	r3, [r0, #0]
 8013116:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801311a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801311e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8013122:	2500      	movs	r5, #0
 8013124:	9500      	str	r5, [sp, #0]
 8013126:	466d      	mov	r5, sp
 8013128:	4629      	mov	r1, r5
 801312a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801312e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013130:	4798      	blx	r3
 8013132:	e895 0003 	ldmia.w	r5, {r0, r1}
 8013136:	e884 0003 	stmia.w	r4, {r0, r1}
 801313a:	4620      	mov	r0, r4
 801313c:	b003      	add	sp, #12
 801313e:	bd30      	pop	{r4, r5, pc}

08013140 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8013140:	b513      	push	{r0, r1, r4, lr}
 8013142:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8013146:	3301      	adds	r3, #1
 8013148:	4604      	mov	r4, r0
 801314a:	d109      	bne.n	8013160 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801314c:	4601      	mov	r1, r0
 801314e:	4668      	mov	r0, sp
 8013150:	f7ff fa68 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013154:	f8bd 3000 	ldrh.w	r3, [sp]
 8013158:	8423      	strh	r3, [r4, #32]
 801315a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801315e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8013160:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8013164:	b002      	add	sp, #8
 8013166:	bd10      	pop	{r4, pc}

08013168 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8013168:	b513      	push	{r0, r1, r4, lr}
 801316a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801316e:	3301      	adds	r3, #1
 8013170:	4604      	mov	r4, r0
 8013172:	d109      	bne.n	8013188 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8013174:	4601      	mov	r1, r0
 8013176:	4668      	mov	r0, sp
 8013178:	f7ff fa54 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801317c:	f8bd 3000 	ldrh.w	r3, [sp]
 8013180:	8423      	strh	r3, [r4, #32]
 8013182:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013186:	8463      	strh	r3, [r4, #34]	@ 0x22
 8013188:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 801318c:	b002      	add	sp, #8
 801318e:	bd10      	pop	{r4, pc}

08013190 <_ZN8touchgfx6ScreenC1Ev>:
 8013190:	b570      	push	{r4, r5, r6, lr}
 8013192:	4605      	mov	r5, r0
 8013194:	4b16      	ldr	r3, [pc, #88]	@ (80131f0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8013196:	f845 3b04 	str.w	r3, [r5], #4
 801319a:	2300      	movs	r3, #0
 801319c:	8103      	strh	r3, [r0, #8]
 801319e:	8143      	strh	r3, [r0, #10]
 80131a0:	8183      	strh	r3, [r0, #12]
 80131a2:	81c3      	strh	r3, [r0, #14]
 80131a4:	8203      	strh	r3, [r0, #16]
 80131a6:	8243      	strh	r3, [r0, #18]
 80131a8:	8283      	strh	r3, [r0, #20]
 80131aa:	82c3      	strh	r3, [r0, #22]
 80131ac:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80131b0:	6203      	str	r3, [r0, #32]
 80131b2:	8483      	strh	r3, [r0, #36]	@ 0x24
 80131b4:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80131b6:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 80131ba:	4a0e      	ldr	r2, [pc, #56]	@ (80131f4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80131bc:	6343      	str	r3, [r0, #52]	@ 0x34
 80131be:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 80131c2:	4b0d      	ldr	r3, [pc, #52]	@ (80131f8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80131c4:	6042      	str	r2, [r0, #4]
 80131c6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80131ca:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80131cc:	4a0b      	ldr	r2, [pc, #44]	@ (80131fc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80131ce:	4604      	mov	r4, r0
 80131d0:	2101      	movs	r1, #1
 80131d2:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 80131d6:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 80131da:	f9b2 1000 	ldrsh.w	r1, [r2]
 80131de:	4628      	mov	r0, r5
 80131e0:	4798      	blx	r3
 80131e2:	6863      	ldr	r3, [r4, #4]
 80131e4:	4628      	mov	r0, r5
 80131e6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80131e8:	4631      	mov	r1, r6
 80131ea:	4798      	blx	r3
 80131ec:	4620      	mov	r0, r4
 80131ee:	bd70      	pop	{r4, r5, r6, pc}
 80131f0:	08027730 	.word	0x08027730
 80131f4:	0802725c 	.word	0x0802725c
 80131f8:	20013b60 	.word	0x20013b60
 80131fc:	20013b5e 	.word	0x20013b5e

08013200 <_ZN8touchgfx6Screen4drawEv>:
 8013200:	b507      	push	{r0, r1, r2, lr}
 8013202:	4b09      	ldr	r3, [pc, #36]	@ (8013228 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8013204:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013208:	4b08      	ldr	r3, [pc, #32]	@ (801322c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801320a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801320e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013212:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013216:	6803      	ldr	r3, [r0, #0]
 8013218:	2100      	movs	r1, #0
 801321a:	9100      	str	r1, [sp, #0]
 801321c:	689b      	ldr	r3, [r3, #8]
 801321e:	4669      	mov	r1, sp
 8013220:	4798      	blx	r3
 8013222:	b003      	add	sp, #12
 8013224:	f85d fb04 	ldr.w	pc, [sp], #4
 8013228:	20013b5e 	.word	0x20013b5e
 801322c:	20013b60 	.word	0x20013b60

08013230 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8013230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013234:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8013238:	2b00      	cmp	r3, #0
 801323a:	b089      	sub	sp, #36	@ 0x24
 801323c:	4680      	mov	r8, r0
 801323e:	460c      	mov	r4, r1
 8013240:	4615      	mov	r5, r2
 8013242:	dd0e      	ble.n	8013262 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013244:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8013248:	2b00      	cmp	r3, #0
 801324a:	dd0a      	ble.n	8013262 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801324c:	4628      	mov	r0, r5
 801324e:	f7ff ff5b 	bl	8013108 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013252:	4621      	mov	r1, r4
 8013254:	f7fd feb9 	bl	8010fca <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013258:	69eb      	ldr	r3, [r5, #28]
 801325a:	b928      	cbnz	r0, 8013268 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801325c:	461d      	mov	r5, r3
 801325e:	2b00      	cmp	r3, #0
 8013260:	d1f4      	bne.n	801324c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8013262:	b009      	add	sp, #36	@ 0x24
 8013264:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013268:	ae04      	add	r6, sp, #16
 801326a:	2b00      	cmp	r3, #0
 801326c:	f000 80b5 	beq.w	80133da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013270:	682b      	ldr	r3, [r5, #0]
 8013272:	4629      	mov	r1, r5
 8013274:	68db      	ldr	r3, [r3, #12]
 8013276:	a802      	add	r0, sp, #8
 8013278:	4798      	blx	r3
 801327a:	4628      	mov	r0, r5
 801327c:	f7ff ff60 	bl	8013140 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013280:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8013284:	4407      	add	r7, r0
 8013286:	4628      	mov	r0, r5
 8013288:	f7ff ff6e 	bl	8013168 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801328c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013290:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013294:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013298:	4418      	add	r0, r3
 801329a:	4621      	mov	r1, r4
 801329c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80132a0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80132a4:	b23f      	sxth	r7, r7
 80132a6:	4630      	mov	r0, r6
 80132a8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80132ac:	f8ad 7010 	strh.w	r7, [sp, #16]
 80132b0:	f7f8 fa12 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 80132b4:	4628      	mov	r0, r5
 80132b6:	f7ff ff27 	bl	8013108 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80132ba:	4602      	mov	r2, r0
 80132bc:	e896 0003 	ldmia.w	r6, {r0, r1}
 80132c0:	ab06      	add	r3, sp, #24
 80132c2:	e883 0003 	stmia.w	r3, {r0, r1}
 80132c6:	4611      	mov	r1, r2
 80132c8:	4618      	mov	r0, r3
 80132ca:	f7f8 fa05 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 80132ce:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80132d2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80132d6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80132da:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80132de:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80132e2:	4299      	cmp	r1, r3
 80132e4:	d10b      	bne.n	80132fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80132e6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80132ea:	4552      	cmp	r2, sl
 80132ec:	d107      	bne.n	80132fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80132ee:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80132f2:	455a      	cmp	r2, fp
 80132f4:	d103      	bne.n	80132fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80132f6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80132fa:	454a      	cmp	r2, r9
 80132fc:	d06d      	beq.n	80133da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80132fe:	f1bb 0f00 	cmp.w	fp, #0
 8013302:	dd65      	ble.n	80133d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013304:	f1b9 0f00 	cmp.w	r9, #0
 8013308:	dd62      	ble.n	80133d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801330a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801330e:	fa1f f08a 	uxth.w	r0, sl
 8013312:	4552      	cmp	r2, sl
 8013314:	9000      	str	r0, [sp, #0]
 8013316:	da12      	bge.n	801333e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8013318:	9301      	str	r3, [sp, #4]
 801331a:	9b00      	ldr	r3, [sp, #0]
 801331c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013320:	f8ad 2012 	strh.w	r2, [sp, #18]
 8013324:	1a9a      	subs	r2, r3, r2
 8013326:	f8ad 1010 	strh.w	r1, [sp, #16]
 801332a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801332e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8013332:	69ea      	ldr	r2, [r5, #28]
 8013334:	4631      	mov	r1, r6
 8013336:	4640      	mov	r0, r8
 8013338:	f7ff ff7a 	bl	8013230 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801333c:	9b01      	ldr	r3, [sp, #4]
 801333e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013342:	429a      	cmp	r2, r3
 8013344:	b29f      	uxth	r7, r3
 8013346:	da0d      	bge.n	8013364 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8013348:	f8ad 2010 	strh.w	r2, [sp, #16]
 801334c:	1aba      	subs	r2, r7, r2
 801334e:	f8ad a012 	strh.w	sl, [sp, #18]
 8013352:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013356:	f8ad 9016 	strh.w	r9, [sp, #22]
 801335a:	69ea      	ldr	r2, [r5, #28]
 801335c:	4631      	mov	r1, r6
 801335e:	4640      	mov	r0, r8
 8013360:	f7ff ff66 	bl	8013230 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013364:	8822      	ldrh	r2, [r4, #0]
 8013366:	88a3      	ldrh	r3, [r4, #4]
 8013368:	445f      	add	r7, fp
 801336a:	4413      	add	r3, r2
 801336c:	b29b      	uxth	r3, r3
 801336e:	b2bf      	uxth	r7, r7
 8013370:	b23a      	sxth	r2, r7
 8013372:	b219      	sxth	r1, r3
 8013374:	4291      	cmp	r1, r2
 8013376:	dd0d      	ble.n	8013394 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8013378:	1bdb      	subs	r3, r3, r7
 801337a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801337e:	f8ad a012 	strh.w	sl, [sp, #18]
 8013382:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013386:	f8ad 9016 	strh.w	r9, [sp, #22]
 801338a:	69ea      	ldr	r2, [r5, #28]
 801338c:	4631      	mov	r1, r6
 801338e:	4640      	mov	r0, r8
 8013390:	f7ff ff4e 	bl	8013230 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013394:	88e2      	ldrh	r2, [r4, #6]
 8013396:	8863      	ldrh	r3, [r4, #2]
 8013398:	4413      	add	r3, r2
 801339a:	9a00      	ldr	r2, [sp, #0]
 801339c:	444a      	add	r2, r9
 801339e:	b29b      	uxth	r3, r3
 80133a0:	fa1f f982 	uxth.w	r9, r2
 80133a4:	fa0f f289 	sxth.w	r2, r9
 80133a8:	b219      	sxth	r1, r3
 80133aa:	428a      	cmp	r2, r1
 80133ac:	da15      	bge.n	80133da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80133ae:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80133b2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80133b6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80133ba:	eba3 0309 	sub.w	r3, r3, r9
 80133be:	f8ad 0010 	strh.w	r0, [sp, #16]
 80133c2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80133c6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80133ca:	69ea      	ldr	r2, [r5, #28]
 80133cc:	4631      	mov	r1, r6
 80133ce:	e001      	b.n	80133d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80133d0:	69ea      	ldr	r2, [r5, #28]
 80133d2:	4621      	mov	r1, r4
 80133d4:	4640      	mov	r0, r8
 80133d6:	f7ff ff2b 	bl	8013230 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80133da:	4628      	mov	r0, r5
 80133dc:	f7ff fe94 	bl	8013108 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80133e0:	6861      	ldr	r1, [r4, #4]
 80133e2:	4602      	mov	r2, r0
 80133e4:	6820      	ldr	r0, [r4, #0]
 80133e6:	4633      	mov	r3, r6
 80133e8:	c303      	stmia	r3!, {r0, r1}
 80133ea:	4611      	mov	r1, r2
 80133ec:	4630      	mov	r0, r6
 80133ee:	f7f8 f973 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 80133f2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80133f6:	2b00      	cmp	r3, #0
 80133f8:	f77f af33 	ble.w	8013262 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80133fc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8013400:	2b00      	cmp	r3, #0
 8013402:	f77f af2e 	ble.w	8013262 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013406:	4628      	mov	r0, r5
 8013408:	f7ff fe9a 	bl	8013140 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801340c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8013410:	1a18      	subs	r0, r3, r0
 8013412:	f8ad 0010 	strh.w	r0, [sp, #16]
 8013416:	4628      	mov	r0, r5
 8013418:	f7ff fea6 	bl	8013168 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801341c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013420:	1a18      	subs	r0, r3, r0
 8013422:	f8ad 0012 	strh.w	r0, [sp, #18]
 8013426:	682b      	ldr	r3, [r5, #0]
 8013428:	4631      	mov	r1, r6
 801342a:	689b      	ldr	r3, [r3, #8]
 801342c:	4628      	mov	r0, r5
 801342e:	4798      	blx	r3
 8013430:	e717      	b.n	8013262 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08013432 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8013432:	b570      	push	{r4, r5, r6, lr}
 8013434:	460c      	mov	r4, r1
 8013436:	b086      	sub	sp, #24
 8013438:	1d06      	adds	r6, r0, #4
 801343a:	2300      	movs	r3, #0
 801343c:	4631      	mov	r1, r6
 801343e:	4605      	mov	r5, r0
 8013440:	a802      	add	r0, sp, #8
 8013442:	9301      	str	r3, [sp, #4]
 8013444:	f7ff f8ee 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013448:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801344c:	8822      	ldrh	r2, [r4, #0]
 801344e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8013452:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013456:	f8ad 0014 	strh.w	r0, [sp, #20]
 801345a:	1ad2      	subs	r2, r2, r3
 801345c:	8863      	ldrh	r3, [r4, #2]
 801345e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013462:	1a5b      	subs	r3, r3, r1
 8013464:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8013468:	f8ad 1016 	strh.w	r1, [sp, #22]
 801346c:	aa01      	add	r2, sp, #4
 801346e:	a904      	add	r1, sp, #16
 8013470:	4630      	mov	r0, r6
 8013472:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013476:	f7f8 fa07 	bl	800b888 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801347a:	9a01      	ldr	r2, [sp, #4]
 801347c:	b11a      	cbz	r2, 8013486 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801347e:	4621      	mov	r1, r4
 8013480:	4628      	mov	r0, r5
 8013482:	f7ff fed5 	bl	8013230 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013486:	b006      	add	sp, #24
 8013488:	bd70      	pop	{r4, r5, r6, pc}

0801348a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801348a:	b530      	push	{r4, r5, lr}
 801348c:	4602      	mov	r2, r0
 801348e:	4604      	mov	r4, r0
 8013490:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8013494:	b085      	sub	sp, #20
 8013496:	460d      	mov	r5, r1
 8013498:	6851      	ldr	r1, [r2, #4]
 801349a:	466b      	mov	r3, sp
 801349c:	c303      	stmia	r3!, {r0, r1}
 801349e:	4629      	mov	r1, r5
 80134a0:	4668      	mov	r0, sp
 80134a2:	f7f8 f919 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 80134a6:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80134aa:	b12b      	cbz	r3, 80134b8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80134ac:	4669      	mov	r1, sp
 80134ae:	4620      	mov	r0, r4
 80134b0:	f7ff ffbf 	bl	8013432 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80134b4:	b005      	add	sp, #20
 80134b6:	bd30      	pop	{r4, r5, pc}
 80134b8:	3404      	adds	r4, #4
 80134ba:	4621      	mov	r1, r4
 80134bc:	a802      	add	r0, sp, #8
 80134be:	f7ff f8b1 	bl	8012624 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80134c2:	f8bd 3000 	ldrh.w	r3, [sp]
 80134c6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80134ca:	1a9b      	subs	r3, r3, r2
 80134cc:	f8ad 3000 	strh.w	r3, [sp]
 80134d0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80134d4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80134d8:	4669      	mov	r1, sp
 80134da:	1a9b      	subs	r3, r3, r2
 80134dc:	4620      	mov	r0, r4
 80134de:	f8ad 3002 	strh.w	r3, [sp, #2]
 80134e2:	f7f8 f998 	bl	800b816 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80134e6:	e7e5      	b.n	80134b4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080134e8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80134e8:	680a      	ldr	r2, [r1, #0]
 80134ea:	460b      	mov	r3, r1
 80134ec:	6992      	ldr	r2, [r2, #24]
 80134ee:	1d01      	adds	r1, r0, #4
 80134f0:	4618      	mov	r0, r3
 80134f2:	4710      	bx	r2

080134f4 <_ZN8touchgfx12TextProviderC1Ev>:
 80134f4:	b538      	push	{r3, r4, r5, lr}
 80134f6:	2500      	movs	r5, #0
 80134f8:	2302      	movs	r3, #2
 80134fa:	4604      	mov	r4, r0
 80134fc:	e9c0 5500 	strd	r5, r5, [r0]
 8013500:	7403      	strb	r3, [r0, #16]
 8013502:	6145      	str	r5, [r0, #20]
 8013504:	7605      	strb	r5, [r0, #24]
 8013506:	83c5      	strh	r5, [r0, #30]
 8013508:	8405      	strh	r5, [r0, #32]
 801350a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801350c:	8705      	strh	r5, [r0, #56]	@ 0x38
 801350e:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8013510:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8013514:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8013518:	220e      	movs	r2, #14
 801351a:	4629      	mov	r1, r5
 801351c:	304c      	adds	r0, #76	@ 0x4c
 801351e:	f011 fa1c 	bl	802495a <memset>
 8013522:	2301      	movs	r3, #1
 8013524:	4620      	mov	r0, r4
 8013526:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 801352a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801352e:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8013532:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8013536:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 801353a:	f7f0 faa7 	bl	8003a8c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801353e:	4620      	mov	r0, r4
 8013540:	bd38      	pop	{r3, r4, r5, pc}

08013542 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8013542:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8013544:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013548:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 801354a:	fab0 f080 	clz	r0, r0
 801354e:	0940      	lsrs	r0, r0, #5
 8013550:	4770      	bx	lr

08013552 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8013552:	b530      	push	{r4, r5, lr}
 8013554:	2500      	movs	r5, #0
 8013556:	2401      	movs	r4, #1
 8013558:	6843      	ldr	r3, [r0, #4]
 801355a:	b913      	cbnz	r3, 8013562 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801355c:	6803      	ldr	r3, [r0, #0]
 801355e:	b313      	cbz	r3, 80135a6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8013560:	6043      	str	r3, [r0, #4]
 8013562:	7e03      	ldrb	r3, [r0, #24]
 8013564:	b143      	cbz	r3, 8013578 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8013566:	6943      	ldr	r3, [r0, #20]
 8013568:	b12b      	cbz	r3, 8013576 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801356a:	881a      	ldrh	r2, [r3, #0]
 801356c:	b11a      	cbz	r2, 8013576 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801356e:	1c9a      	adds	r2, r3, #2
 8013570:	6142      	str	r2, [r0, #20]
 8013572:	8818      	ldrh	r0, [r3, #0]
 8013574:	bd30      	pop	{r4, r5, pc}
 8013576:	7605      	strb	r5, [r0, #24]
 8013578:	6843      	ldr	r3, [r0, #4]
 801357a:	8819      	ldrh	r1, [r3, #0]
 801357c:	b199      	cbz	r1, 80135a6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801357e:	1c9a      	adds	r2, r3, #2
 8013580:	2902      	cmp	r1, #2
 8013582:	6042      	str	r2, [r0, #4]
 8013584:	d1f5      	bne.n	8013572 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8013586:	7c03      	ldrb	r3, [r0, #16]
 8013588:	2b01      	cmp	r3, #1
 801358a:	d8e5      	bhi.n	8013558 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801358c:	1c5a      	adds	r2, r3, #1
 801358e:	3302      	adds	r3, #2
 8013590:	7402      	strb	r2, [r0, #16]
 8013592:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8013596:	6143      	str	r3, [r0, #20]
 8013598:	2b00      	cmp	r3, #0
 801359a:	d0dd      	beq.n	8013558 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801359c:	881b      	ldrh	r3, [r3, #0]
 801359e:	2b00      	cmp	r3, #0
 80135a0:	d0da      	beq.n	8013558 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80135a2:	7604      	strb	r4, [r0, #24]
 80135a4:	e7d8      	b.n	8013558 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80135a6:	2000      	movs	r0, #0
 80135a8:	e7e4      	b.n	8013574 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080135aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80135aa:	b430      	push	{r4, r5}
 80135ac:	6001      	str	r1, [r0, #0]
 80135ae:	2100      	movs	r1, #0
 80135b0:	6041      	str	r1, [r0, #4]
 80135b2:	6815      	ldr	r5, [r2, #0]
 80135b4:	6085      	str	r5, [r0, #8]
 80135b6:	6852      	ldr	r2, [r2, #4]
 80135b8:	6443      	str	r3, [r0, #68]	@ 0x44
 80135ba:	9b02      	ldr	r3, [sp, #8]
 80135bc:	60c2      	str	r2, [r0, #12]
 80135be:	7401      	strb	r1, [r0, #16]
 80135c0:	6141      	str	r1, [r0, #20]
 80135c2:	7601      	strb	r1, [r0, #24]
 80135c4:	8701      	strh	r1, [r0, #56]	@ 0x38
 80135c6:	8401      	strh	r1, [r0, #32]
 80135c8:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 80135cc:	6483      	str	r3, [r0, #72]	@ 0x48
 80135ce:	bc30      	pop	{r4, r5}
 80135d0:	f7f0 ba5c 	b.w	8003a8c <_ZN8touchgfx12TextProvider18initializeInternalEv>

080135d4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80135d4:	b408      	push	{r3}
 80135d6:	b510      	push	{r4, lr}
 80135d8:	b085      	sub	sp, #20
 80135da:	ac07      	add	r4, sp, #28
 80135dc:	f854 3b04 	ldr.w	r3, [r4], #4
 80135e0:	9300      	str	r3, [sp, #0]
 80135e2:	4613      	mov	r3, r2
 80135e4:	4622      	mov	r2, r4
 80135e6:	9403      	str	r4, [sp, #12]
 80135e8:	f7ff ffdf 	bl	80135aa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80135ec:	b005      	add	sp, #20
 80135ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80135f2:	b001      	add	sp, #4
 80135f4:	4770      	bx	lr

080135f6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80135f6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80135f8:	4605      	mov	r5, r0
 80135fa:	4608      	mov	r0, r1
 80135fc:	b1e9      	cbz	r1, 801363a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80135fe:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8013602:	460b      	mov	r3, r1
 8013604:	f101 0708 	add.w	r7, r1, #8
 8013608:	4622      	mov	r2, r4
 801360a:	6818      	ldr	r0, [r3, #0]
 801360c:	6859      	ldr	r1, [r3, #4]
 801360e:	4626      	mov	r6, r4
 8013610:	c603      	stmia	r6!, {r0, r1}
 8013612:	3308      	adds	r3, #8
 8013614:	42bb      	cmp	r3, r7
 8013616:	4634      	mov	r4, r6
 8013618:	d1f7      	bne.n	801360a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801361a:	6818      	ldr	r0, [r3, #0]
 801361c:	6030      	str	r0, [r6, #0]
 801361e:	889b      	ldrh	r3, [r3, #4]
 8013620:	80b3      	strh	r3, [r6, #4]
 8013622:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8013626:	015b      	lsls	r3, r3, #5
 8013628:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801362c:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8013630:	430b      	orrs	r3, r1
 8013632:	425b      	negs	r3, r3
 8013634:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8013638:	4610      	mov	r0, r2
 801363a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801363c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801363c:	b538      	push	{r3, r4, r5, lr}
 801363e:	460c      	mov	r4, r1
 8013640:	6811      	ldr	r1, [r2, #0]
 8013642:	4610      	mov	r0, r2
 8013644:	68cd      	ldr	r5, [r1, #12]
 8013646:	4619      	mov	r1, r3
 8013648:	47a8      	blx	r5
 801364a:	2800      	cmp	r0, #0
 801364c:	bf08      	it	eq
 801364e:	4620      	moveq	r0, r4
 8013650:	bd38      	pop	{r3, r4, r5, pc}
	...

08013654 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8013654:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013658:	468c      	mov	ip, r1
 801365a:	4605      	mov	r5, r0
 801365c:	4614      	mov	r4, r2
 801365e:	b942      	cbnz	r2, 8013672 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8013660:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8013664:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8013668:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 801366c:	4620      	mov	r0, r4
 801366e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013672:	7b50      	ldrb	r0, [r2, #13]
 8013674:	8893      	ldrh	r3, [r2, #4]
 8013676:	0106      	lsls	r6, r0, #4
 8013678:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801367c:	79e6      	ldrb	r6, [r4, #7]
 801367e:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8013682:	4316      	orrs	r6, r2
 8013684:	185a      	adds	r2, r3, r1
 8013686:	b291      	uxth	r1, r2
 8013688:	291d      	cmp	r1, #29
 801368a:	b2b7      	uxth	r7, r6
 801368c:	d87e      	bhi.n	801378c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801368e:	2201      	movs	r2, #1
 8013690:	408a      	lsls	r2, r1
 8013692:	498a      	ldr	r1, [pc, #552]	@ (80138bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8013694:	420a      	tst	r2, r1
 8013696:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801369a:	d12d      	bne.n	80136f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801369c:	f412 7f60 	tst.w	r2, #896	@ 0x380
 80136a0:	d074      	beq.n	801378c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 80136a2:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80136a6:	4623      	mov	r3, r4
 80136a8:	f104 0e08 	add.w	lr, r4, #8
 80136ac:	4614      	mov	r4, r2
 80136ae:	6818      	ldr	r0, [r3, #0]
 80136b0:	6859      	ldr	r1, [r3, #4]
 80136b2:	4694      	mov	ip, r2
 80136b4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80136b8:	3308      	adds	r3, #8
 80136ba:	4573      	cmp	r3, lr
 80136bc:	4662      	mov	r2, ip
 80136be:	d1f6      	bne.n	80136ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80136c0:	6818      	ldr	r0, [r3, #0]
 80136c2:	f8cc 0000 	str.w	r0, [ip]
 80136c6:	889b      	ldrh	r3, [r3, #4]
 80136c8:	f8ac 3004 	strh.w	r3, [ip, #4]
 80136cc:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 80136d0:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 80136d4:	b2b3      	uxth	r3, r6
 80136d6:	1aca      	subs	r2, r1, r3
 80136d8:	b292      	uxth	r2, r2
 80136da:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 80136de:	10d2      	asrs	r2, r2, #3
 80136e0:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 80136e4:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 80136e8:	4302      	orrs	r2, r0
 80136ea:	1bcf      	subs	r7, r1, r7
 80136ec:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 80136f0:	1afb      	subs	r3, r7, r3
 80136f2:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 80136f6:	e7b9      	b.n	801366c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80136f8:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80136fc:	4623      	mov	r3, r4
 80136fe:	f104 0808 	add.w	r8, r4, #8
 8013702:	4614      	mov	r4, r2
 8013704:	6818      	ldr	r0, [r3, #0]
 8013706:	6859      	ldr	r1, [r3, #4]
 8013708:	4696      	mov	lr, r2
 801370a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801370e:	3308      	adds	r3, #8
 8013710:	4543      	cmp	r3, r8
 8013712:	4672      	mov	r2, lr
 8013714:	d1f6      	bne.n	8013704 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8013716:	6818      	ldr	r0, [r3, #0]
 8013718:	f8ce 0000 	str.w	r0, [lr]
 801371c:	889b      	ldrh	r3, [r3, #4]
 801371e:	f8ae 3004 	strh.w	r3, [lr, #4]
 8013722:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8013724:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8013728:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 801372a:	f640 6333 	movw	r3, #3635	@ 0xe33
 801372e:	4299      	cmp	r1, r3
 8013730:	d111      	bne.n	8013756 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8013732:	f8dc 3000 	ldr.w	r3, [ip]
 8013736:	4660      	mov	r0, ip
 8013738:	68db      	ldr	r3, [r3, #12]
 801373a:	4798      	blx	r3
 801373c:	7b41      	ldrb	r1, [r0, #13]
 801373e:	00cb      	lsls	r3, r1, #3
 8013740:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013744:	7a03      	ldrb	r3, [r0, #8]
 8013746:	4313      	orrs	r3, r2
 8013748:	064a      	lsls	r2, r1, #25
 801374a:	bf44      	itt	mi
 801374c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013750:	b21b      	sxthmi	r3, r3
 8013752:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8013756:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 801375a:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 801375e:	443b      	add	r3, r7
 8013760:	4433      	add	r3, r6
 8013762:	b29b      	uxth	r3, r3
 8013764:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8013768:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 801376c:	10db      	asrs	r3, r3, #3
 801376e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8013772:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8013776:	4313      	orrs	r3, r2
 8013778:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 801377c:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8013780:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8013784:	1a9b      	subs	r3, r3, r2
 8013786:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801378a:	e76f      	b.n	801366c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 801378c:	f023 0204 	bic.w	r2, r3, #4
 8013790:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8013794:	428a      	cmp	r2, r1
 8013796:	d003      	beq.n	80137a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8013798:	f640 621d 	movw	r2, #3613	@ 0xe1d
 801379c:	4293      	cmp	r3, r2
 801379e:	d137      	bne.n	8013810 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 80137a0:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 80137a4:	4622      	mov	r2, r4
 80137a6:	f104 0808 	add.w	r8, r4, #8
 80137aa:	4634      	mov	r4, r6
 80137ac:	6810      	ldr	r0, [r2, #0]
 80137ae:	6851      	ldr	r1, [r2, #4]
 80137b0:	46b6      	mov	lr, r6
 80137b2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80137b6:	3208      	adds	r2, #8
 80137b8:	4542      	cmp	r2, r8
 80137ba:	4676      	mov	r6, lr
 80137bc:	d1f6      	bne.n	80137ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 80137be:	6810      	ldr	r0, [r2, #0]
 80137c0:	f8ce 0000 	str.w	r0, [lr]
 80137c4:	8892      	ldrh	r2, [r2, #4]
 80137c6:	f8ae 2004 	strh.w	r2, [lr, #4]
 80137ca:	3b01      	subs	r3, #1
 80137cc:	b29b      	uxth	r3, r3
 80137ce:	4662      	mov	r2, ip
 80137d0:	4621      	mov	r1, r4
 80137d2:	4628      	mov	r0, r5
 80137d4:	f7ff ff32 	bl	801363c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80137d8:	7b41      	ldrb	r1, [r0, #13]
 80137da:	00cb      	lsls	r3, r1, #3
 80137dc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80137e0:	7a03      	ldrb	r3, [r0, #8]
 80137e2:	0648      	lsls	r0, r1, #25
 80137e4:	ea43 0302 	orr.w	r3, r3, r2
 80137e8:	bf44      	itt	mi
 80137ea:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80137ee:	b21b      	sxthmi	r3, r3
 80137f0:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80137f4:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80137f8:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 80137fc:	005b      	lsls	r3, r3, #1
 80137fe:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013802:	4313      	orrs	r3, r2
 8013804:	115a      	asrs	r2, r3, #5
 8013806:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801380a:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 801380e:	e046      	b.n	801389e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8013810:	00c2      	lsls	r2, r0, #3
 8013812:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8013816:	7a22      	ldrb	r2, [r4, #8]
 8013818:	430a      	orrs	r2, r1
 801381a:	0641      	lsls	r1, r0, #25
 801381c:	bf44      	itt	mi
 801381e:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8013822:	b212      	sxthmi	r2, r2
 8013824:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8013828:	f640 6109 	movw	r1, #3593	@ 0xe09
 801382c:	f023 0210 	bic.w	r2, r3, #16
 8013830:	428a      	cmp	r2, r1
 8013832:	d003      	beq.n	801383c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8013834:	f640 6213 	movw	r2, #3603	@ 0xe13
 8013838:	4293      	cmp	r3, r2
 801383a:	d13d      	bne.n	80138b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 801383c:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8013840:	f104 0808 	add.w	r8, r4, #8
 8013844:	4696      	mov	lr, r2
 8013846:	6820      	ldr	r0, [r4, #0]
 8013848:	6861      	ldr	r1, [r4, #4]
 801384a:	4616      	mov	r6, r2
 801384c:	c603      	stmia	r6!, {r0, r1}
 801384e:	3408      	adds	r4, #8
 8013850:	4544      	cmp	r4, r8
 8013852:	4632      	mov	r2, r6
 8013854:	d1f7      	bne.n	8013846 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8013856:	6820      	ldr	r0, [r4, #0]
 8013858:	6030      	str	r0, [r6, #0]
 801385a:	88a1      	ldrh	r1, [r4, #4]
 801385c:	80b1      	strh	r1, [r6, #4]
 801385e:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8013862:	0076      	lsls	r6, r6, #1
 8013864:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8013868:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 801386c:	4316      	orrs	r6, r2
 801386e:	f640 6213 	movw	r2, #3603	@ 0xe13
 8013872:	4293      	cmp	r3, r2
 8013874:	bf1a      	itte	ne
 8013876:	f103 33ff 	addne.w	r3, r3, #4294967295
 801387a:	b29b      	uxthne	r3, r3
 801387c:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8013880:	4662      	mov	r2, ip
 8013882:	4671      	mov	r1, lr
 8013884:	4628      	mov	r0, r5
 8013886:	4674      	mov	r4, lr
 8013888:	f7ff fed8 	bl	801363c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801388c:	7b43      	ldrb	r3, [r0, #13]
 801388e:	7a82      	ldrb	r2, [r0, #10]
 8013890:	005b      	lsls	r3, r3, #1
 8013892:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013896:	4313      	orrs	r3, r2
 8013898:	1af6      	subs	r6, r6, r3
 801389a:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 801389e:	7b61      	ldrb	r1, [r4, #13]
 80138a0:	00cb      	lsls	r3, r1, #3
 80138a2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80138a6:	7a23      	ldrb	r3, [r4, #8]
 80138a8:	4313      	orrs	r3, r2
 80138aa:	064a      	lsls	r2, r1, #25
 80138ac:	bf44      	itt	mi
 80138ae:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80138b2:	b21b      	sxthmi	r3, r3
 80138b4:	1bdb      	subs	r3, r3, r7
 80138b6:	e71c      	b.n	80136f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80138b8:	2300      	movs	r3, #0
 80138ba:	e7a6      	b.n	801380a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 80138bc:	3fc00079 	.word	0x3fc00079

080138c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80138c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80138c4:	4604      	mov	r4, r0
 80138c6:	b942      	cbnz	r2, 80138da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80138c8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80138cc:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 80138d0:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 80138d4:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 80138d8:	e047      	b.n	801396a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80138da:	7b51      	ldrb	r1, [r2, #13]
 80138dc:	8893      	ldrh	r3, [r2, #4]
 80138de:	010d      	lsls	r5, r1, #4
 80138e0:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 80138e4:	79d5      	ldrb	r5, [r2, #7]
 80138e6:	4305      	orrs	r5, r0
 80138e8:	2d04      	cmp	r5, #4
 80138ea:	bfcc      	ite	gt
 80138ec:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80138f0:	f04f 0e01 	movle.w	lr, #1
 80138f4:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 80138f8:	f200 80ab 	bhi.w	8013a52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80138fc:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8013900:	4283      	cmp	r3, r0
 8013902:	d216      	bcs.n	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013904:	f240 605b 	movw	r0, #1627	@ 0x65b
 8013908:	4283      	cmp	r3, r0
 801390a:	d859      	bhi.n	80139c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801390c:	f240 6057 	movw	r0, #1623	@ 0x657
 8013910:	4283      	cmp	r3, r0
 8013912:	d20e      	bcs.n	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013914:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8013918:	d24a      	bcs.n	80139b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801391a:	f240 604e 	movw	r0, #1614	@ 0x64e
 801391e:	4283      	cmp	r3, r0
 8013920:	d207      	bcs.n	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013922:	f240 601a 	movw	r0, #1562	@ 0x61a
 8013926:	4283      	cmp	r3, r0
 8013928:	d02a      	beq.n	8013980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801392a:	d821      	bhi.n	8013970 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801392c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8013930:	d35b      	bcc.n	80139ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013932:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8013936:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801393a:	f040 80d0 	bne.w	8013ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801393e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8013942:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8013946:	f040 80ca 	bne.w	8013ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801394a:	00cb      	lsls	r3, r1, #3
 801394c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8013950:	7a13      	ldrb	r3, [r2, #8]
 8013952:	0649      	lsls	r1, r1, #25
 8013954:	ea43 0300 	orr.w	r3, r3, r0
 8013958:	bf44      	itt	mi
 801395a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801395e:	b21b      	sxthmi	r3, r3
 8013960:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8013964:	1b5d      	subs	r5, r3, r5
 8013966:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801396a:	4610      	mov	r0, r2
 801396c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013970:	f240 604b 	movw	r0, #1611	@ 0x64b
 8013974:	4283      	cmp	r3, r0
 8013976:	d338      	bcc.n	80139ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013978:	f240 604c 	movw	r0, #1612	@ 0x64c
 801397c:	4283      	cmp	r3, r0
 801397e:	d9d8      	bls.n	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013980:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8013984:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8013988:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801398c:	f040 80f2 	bne.w	8013b74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8013990:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8013994:	f040 80ee 	bne.w	8013b74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8013998:	00cb      	lsls	r3, r1, #3
 801399a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801399e:	7a13      	ldrb	r3, [r2, #8]
 80139a0:	064e      	lsls	r6, r1, #25
 80139a2:	ea43 0300 	orr.w	r3, r3, r0
 80139a6:	bf44      	itt	mi
 80139a8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80139ac:	b21b      	sxthmi	r3, r3
 80139ae:	e7d9      	b.n	8013964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80139b0:	f240 6054 	movw	r0, #1620	@ 0x654
 80139b4:	4283      	cmp	r3, r0
 80139b6:	d8e3      	bhi.n	8013980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80139b8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80139bc:	d9e0      	bls.n	8013980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80139be:	e7b8      	b.n	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80139c0:	f240 6074 	movw	r0, #1652	@ 0x674
 80139c4:	4283      	cmp	r3, r0
 80139c6:	d0b4      	beq.n	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80139c8:	d82d      	bhi.n	8013a26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80139ca:	f240 605e 	movw	r0, #1630	@ 0x65e
 80139ce:	4283      	cmp	r3, r0
 80139d0:	d804      	bhi.n	80139dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80139d2:	f240 605d 	movw	r0, #1629	@ 0x65d
 80139d6:	4283      	cmp	r3, r0
 80139d8:	d3d2      	bcc.n	8013980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80139da:	e7aa      	b.n	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80139dc:	f240 605f 	movw	r0, #1631	@ 0x65f
 80139e0:	4283      	cmp	r3, r0
 80139e2:	d0cd      	beq.n	8013980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80139e4:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 80139e8:	d0a3      	beq.n	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80139ea:	00cb      	lsls	r3, r1, #3
 80139ec:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80139f0:	7a13      	ldrb	r3, [r2, #8]
 80139f2:	0649      	lsls	r1, r1, #25
 80139f4:	ea43 0300 	orr.w	r3, r3, r0
 80139f8:	bf44      	itt	mi
 80139fa:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80139fe:	b21b      	sxthmi	r3, r3
 8013a00:	1b5d      	subs	r5, r3, r5
 8013a02:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8013a06:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8013a0a:	7b53      	ldrb	r3, [r2, #13]
 8013a0c:	015b      	lsls	r3, r3, #5
 8013a0e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8013a12:	7993      	ldrb	r3, [r2, #6]
 8013a14:	430b      	orrs	r3, r1
 8013a16:	005b      	lsls	r3, r3, #1
 8013a18:	2105      	movs	r1, #5
 8013a1a:	fb93 f3f1 	sdiv	r3, r3, r1
 8013a1e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8013a22:	440b      	add	r3, r1
 8013a24:	e756      	b.n	80138d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8013a26:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8013a2a:	4283      	cmp	r3, r0
 8013a2c:	d809      	bhi.n	8013a42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8013a2e:	f240 60df 	movw	r0, #1759	@ 0x6df
 8013a32:	4283      	cmp	r3, r0
 8013a34:	f4bf af7d 	bcs.w	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013a38:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8013a3c:	2b05      	cmp	r3, #5
 8013a3e:	d8d4      	bhi.n	80139ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013a40:	e777      	b.n	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013a42:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8013a46:	4283      	cmp	r3, r0
 8013a48:	d09a      	beq.n	8013980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013a4a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8013a4e:	4283      	cmp	r3, r0
 8013a50:	e7ca      	b.n	80139e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013a52:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8013a56:	d22b      	bcs.n	8013ab0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8013a58:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8013a5c:	4283      	cmp	r3, r0
 8013a5e:	d28f      	bcs.n	8013980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013a60:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8013a64:	4283      	cmp	r3, r0
 8013a66:	d816      	bhi.n	8013a96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8013a68:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8013a6c:	4283      	cmp	r3, r0
 8013a6e:	f4bf af60 	bcs.w	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013a72:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8013a76:	4283      	cmp	r3, r0
 8013a78:	d80a      	bhi.n	8013a90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8013a7a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8013a7e:	4283      	cmp	r3, r0
 8013a80:	f4bf af57 	bcs.w	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013a84:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8013a88:	4283      	cmp	r3, r0
 8013a8a:	f43f af79 	beq.w	8013980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013a8e:	e7ac      	b.n	80139ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013a90:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8013a94:	e7f8      	b.n	8013a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8013a96:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8013a9a:	4283      	cmp	r3, r0
 8013a9c:	d802      	bhi.n	8013aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8013a9e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8013aa2:	e798      	b.n	80139d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8013aa4:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8013aa8:	4283      	cmp	r3, r0
 8013aaa:	f47f af42 	bne.w	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013aae:	e767      	b.n	8013980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013ab0:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8013ab4:	4283      	cmp	r3, r0
 8013ab6:	f43f af63 	beq.w	8013980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013aba:	d802      	bhi.n	8013ac2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8013abc:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8013ac0:	e7f2      	b.n	8013aa8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8013ac2:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8013ac6:	4283      	cmp	r3, r0
 8013ac8:	d805      	bhi.n	8013ad6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8013aca:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8013ace:	4283      	cmp	r3, r0
 8013ad0:	f4ff af2f 	bcc.w	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013ad4:	e754      	b.n	8013980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013ad6:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8013ada:	4283      	cmp	r3, r0
 8013adc:	e7af      	b.n	8013a3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8013ade:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8013ae2:	4617      	mov	r7, r2
 8013ae4:	f102 0808 	add.w	r8, r2, #8
 8013ae8:	4666      	mov	r6, ip
 8013aea:	6838      	ldr	r0, [r7, #0]
 8013aec:	6879      	ldr	r1, [r7, #4]
 8013aee:	46e6      	mov	lr, ip
 8013af0:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013af4:	3708      	adds	r7, #8
 8013af6:	4547      	cmp	r7, r8
 8013af8:	46f4      	mov	ip, lr
 8013afa:	d1f6      	bne.n	8013aea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8013afc:	6838      	ldr	r0, [r7, #0]
 8013afe:	f8ce 0000 	str.w	r0, [lr]
 8013b02:	88b9      	ldrh	r1, [r7, #4]
 8013b04:	f8ae 1004 	strh.w	r1, [lr, #4]
 8013b08:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8013b0c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8013b10:	d009      	beq.n	8013b26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8013b12:	7b51      	ldrb	r1, [r2, #13]
 8013b14:	7992      	ldrb	r2, [r2, #6]
 8013b16:	0149      	lsls	r1, r1, #5
 8013b18:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8013b1c:	4311      	orrs	r1, r2
 8013b1e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013b22:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8013b26:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8013b2a:	b2ad      	uxth	r5, r5
 8013b2c:	d00d      	beq.n	8013b4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8013b2e:	442b      	add	r3, r5
 8013b30:	b29b      	uxth	r3, r3
 8013b32:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8013b36:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8013b3a:	10db      	asrs	r3, r3, #3
 8013b3c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8013b40:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8013b44:	4313      	orrs	r3, r2
 8013b46:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8013b4a:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8013b4e:	00cb      	lsls	r3, r1, #3
 8013b50:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013b54:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8013b58:	064f      	lsls	r7, r1, #25
 8013b5a:	ea43 0302 	orr.w	r3, r3, r2
 8013b5e:	bf44      	itt	mi
 8013b60:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013b64:	b21b      	sxthmi	r3, r3
 8013b66:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8013b6a:	1b5b      	subs	r3, r3, r5
 8013b6c:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8013b70:	4632      	mov	r2, r6
 8013b72:	e6fa      	b.n	801396a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013b74:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8013b78:	4617      	mov	r7, r2
 8013b7a:	f102 0908 	add.w	r9, r2, #8
 8013b7e:	4666      	mov	r6, ip
 8013b80:	6838      	ldr	r0, [r7, #0]
 8013b82:	6879      	ldr	r1, [r7, #4]
 8013b84:	46e0      	mov	r8, ip
 8013b86:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8013b8a:	3708      	adds	r7, #8
 8013b8c:	454f      	cmp	r7, r9
 8013b8e:	46c4      	mov	ip, r8
 8013b90:	d1f6      	bne.n	8013b80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8013b92:	6838      	ldr	r0, [r7, #0]
 8013b94:	f8c8 0000 	str.w	r0, [r8]
 8013b98:	88b9      	ldrh	r1, [r7, #4]
 8013b9a:	f8a8 1004 	strh.w	r1, [r8, #4]
 8013b9e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8013ba2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8013ba6:	d009      	beq.n	8013bbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8013ba8:	7b51      	ldrb	r1, [r2, #13]
 8013baa:	7992      	ldrb	r2, [r2, #6]
 8013bac:	0149      	lsls	r1, r1, #5
 8013bae:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8013bb2:	4311      	orrs	r1, r2
 8013bb4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013bb8:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8013bbc:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8013bc0:	d00e      	beq.n	8013be0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8013bc2:	eba3 030e 	sub.w	r3, r3, lr
 8013bc6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8013bca:	b29b      	uxth	r3, r3
 8013bcc:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8013bd0:	10db      	asrs	r3, r3, #3
 8013bd2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8013bd6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8013bda:	4313      	orrs	r3, r2
 8013bdc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8013be0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8013be4:	00cb      	lsls	r3, r1, #3
 8013be6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013bea:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8013bee:	0648      	lsls	r0, r1, #25
 8013bf0:	ea43 0302 	orr.w	r3, r3, r2
 8013bf4:	bf44      	itt	mi
 8013bf6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013bfa:	b21b      	sxthmi	r3, r3
 8013bfc:	1b5d      	subs	r5, r3, r5
 8013bfe:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8013c02:	e7b5      	b.n	8013b70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08013c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8013c04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013c08:	461e      	mov	r6, r3
 8013c0a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8013c0c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013c10:	4604      	mov	r4, r0
 8013c12:	4617      	mov	r7, r2
 8013c14:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8013c18:	f7ef fef6 	bl	8003a08 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013c1c:	4605      	mov	r5, r0
 8013c1e:	b918      	cbnz	r0, 8013c28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8013c20:	6030      	str	r0, [r6, #0]
 8013c22:	4628      	mov	r0, r5
 8013c24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013c28:	683b      	ldr	r3, [r7, #0]
 8013c2a:	4601      	mov	r1, r0
 8013c2c:	68db      	ldr	r3, [r3, #12]
 8013c2e:	4638      	mov	r0, r7
 8013c30:	4798      	blx	r3
 8013c32:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8013c36:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8013c3a:	4602      	mov	r2, r0
 8013c3c:	6030      	str	r0, [r6, #0]
 8013c3e:	d213      	bcs.n	8013c68 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013c40:	4643      	mov	r3, r8
 8013c42:	4639      	mov	r1, r7
 8013c44:	4620      	mov	r0, r4
 8013c46:	f7ff fe3b 	bl	80138c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013c4a:	6030      	str	r0, [r6, #0]
 8013c4c:	6833      	ldr	r3, [r6, #0]
 8013c4e:	b143      	cbz	r3, 8013c62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013c50:	7b5a      	ldrb	r2, [r3, #13]
 8013c52:	7a9b      	ldrb	r3, [r3, #10]
 8013c54:	0052      	lsls	r2, r2, #1
 8013c56:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8013c5a:	4313      	orrs	r3, r2
 8013c5c:	bf0c      	ite	eq
 8013c5e:	2301      	moveq	r3, #1
 8013c60:	2300      	movne	r3, #0
 8013c62:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8013c66:	e7dc      	b.n	8013c22 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8013c68:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8013c6c:	b29b      	uxth	r3, r3
 8013c6e:	2b7f      	cmp	r3, #127	@ 0x7f
 8013c70:	d804      	bhi.n	8013c7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8013c72:	4639      	mov	r1, r7
 8013c74:	4620      	mov	r0, r4
 8013c76:	f7ff fced 	bl	8013654 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013c7a:	e7e6      	b.n	8013c4a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8013c7c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8013c80:	2b00      	cmp	r3, #0
 8013c82:	d0e3      	beq.n	8013c4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013c84:	f640 1302 	movw	r3, #2306	@ 0x902
 8013c88:	429d      	cmp	r5, r3
 8013c8a:	d1df      	bne.n	8013c4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013c8c:	4601      	mov	r1, r0
 8013c8e:	4620      	mov	r0, r4
 8013c90:	f7ff fcb1 	bl	80135f6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013c94:	e7d9      	b.n	8013c4a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08013c96 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8013c96:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013c9a:	461e      	mov	r6, r3
 8013c9c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8013c9e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013ca2:	4604      	mov	r4, r0
 8013ca4:	4617      	mov	r7, r2
 8013ca6:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8013caa:	f7ef fead 	bl	8003a08 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013cae:	4605      	mov	r5, r0
 8013cb0:	b918      	cbnz	r0, 8013cba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8013cb2:	6030      	str	r0, [r6, #0]
 8013cb4:	4628      	mov	r0, r5
 8013cb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013cba:	683b      	ldr	r3, [r7, #0]
 8013cbc:	4601      	mov	r1, r0
 8013cbe:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8013cc2:	4638      	mov	r0, r7
 8013cc4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8013cc8:	47c8      	blx	r9
 8013cca:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8013cce:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8013cd2:	4602      	mov	r2, r0
 8013cd4:	6030      	str	r0, [r6, #0]
 8013cd6:	d213      	bcs.n	8013d00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8013cd8:	4643      	mov	r3, r8
 8013cda:	4639      	mov	r1, r7
 8013cdc:	4620      	mov	r0, r4
 8013cde:	f7ff fdef 	bl	80138c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013ce2:	6030      	str	r0, [r6, #0]
 8013ce4:	6833      	ldr	r3, [r6, #0]
 8013ce6:	b143      	cbz	r3, 8013cfa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8013ce8:	7b5a      	ldrb	r2, [r3, #13]
 8013cea:	7a9b      	ldrb	r3, [r3, #10]
 8013cec:	0052      	lsls	r2, r2, #1
 8013cee:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8013cf2:	4313      	orrs	r3, r2
 8013cf4:	bf0c      	ite	eq
 8013cf6:	2301      	moveq	r3, #1
 8013cf8:	2300      	movne	r3, #0
 8013cfa:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8013cfe:	e7d9      	b.n	8013cb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8013d00:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8013d04:	b29b      	uxth	r3, r3
 8013d06:	2b7f      	cmp	r3, #127	@ 0x7f
 8013d08:	d804      	bhi.n	8013d14 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8013d0a:	4639      	mov	r1, r7
 8013d0c:	4620      	mov	r0, r4
 8013d0e:	f7ff fca1 	bl	8013654 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013d12:	e7e6      	b.n	8013ce2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8013d14:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8013d18:	2b00      	cmp	r3, #0
 8013d1a:	d0e3      	beq.n	8013ce4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013d1c:	f640 1302 	movw	r3, #2306	@ 0x902
 8013d20:	429d      	cmp	r5, r3
 8013d22:	d1df      	bne.n	8013ce4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013d24:	4601      	mov	r1, r0
 8013d26:	4620      	mov	r0, r4
 8013d28:	f7ff fc65 	bl	80135f6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013d2c:	e7d9      	b.n	8013ce2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08013d2e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8013d2e:	b510      	push	{r4, lr}
 8013d30:	4604      	mov	r4, r0
 8013d32:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8013d36:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8013d38:	b1f1      	cbz	r1, 8013d78 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8013d3a:	2b0a      	cmp	r3, #10
 8013d3c:	d02f      	beq.n	8013d9e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013d3e:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8013d40:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013d44:	3901      	subs	r1, #1
 8013d46:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8013d48:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8013d4c:	1c51      	adds	r1, r2, #1
 8013d4e:	b289      	uxth	r1, r1
 8013d50:	2901      	cmp	r1, #1
 8013d52:	bf84      	itt	hi
 8013d54:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8013d58:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8013d5a:	f103 0201 	add.w	r2, r3, #1
 8013d5e:	8722      	strh	r2, [r4, #56]	@ 0x38
 8013d60:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8013d62:	bf98      	it	ls
 8013d64:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8013d66:	4413      	add	r3, r2
 8013d68:	b29b      	uxth	r3, r3
 8013d6a:	2b09      	cmp	r3, #9
 8013d6c:	bf88      	it	hi
 8013d6e:	3b0a      	subhi	r3, #10
 8013d70:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013d74:	8458      	strh	r0, [r3, #34]	@ 0x22
 8013d76:	e7dc      	b.n	8013d32 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8013d78:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8013d7a:	2b0a      	cmp	r3, #10
 8013d7c:	d00f      	beq.n	8013d9e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013d7e:	4620      	mov	r0, r4
 8013d80:	f7ff fbe7 	bl	8013552 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8013d84:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8013d86:	1c5a      	adds	r2, r3, #1
 8013d88:	8722      	strh	r2, [r4, #56]	@ 0x38
 8013d8a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8013d8c:	4413      	add	r3, r2
 8013d8e:	b29b      	uxth	r3, r3
 8013d90:	2b09      	cmp	r3, #9
 8013d92:	bf88      	it	hi
 8013d94:	3b0a      	subhi	r3, #10
 8013d96:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013d9a:	8458      	strh	r0, [r3, #34]	@ 0x22
 8013d9c:	e7ec      	b.n	8013d78 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8013d9e:	bd10      	pop	{r4, pc}

08013da0 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8013da0:	b538      	push	{r3, r4, r5, lr}
 8013da2:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8013da4:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8013da8:	4604      	mov	r4, r0
 8013daa:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8013dac:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8013dae:	3a01      	subs	r2, #1
 8013db0:	8702      	strh	r2, [r0, #56]	@ 0x38
 8013db2:	1c5a      	adds	r2, r3, #1
 8013db4:	b292      	uxth	r2, r2
 8013db6:	2a09      	cmp	r2, #9
 8013db8:	bf86      	itte	hi
 8013dba:	3b09      	subhi	r3, #9
 8013dbc:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8013dbe:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8013dc0:	f7ff ffb5 	bl	8013d2e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8013dc4:	8c23      	ldrh	r3, [r4, #32]
 8013dc6:	2b01      	cmp	r3, #1
 8013dc8:	bf9c      	itt	ls
 8013dca:	3301      	addls	r3, #1
 8013dcc:	8423      	strhls	r3, [r4, #32]
 8013dce:	8be3      	ldrh	r3, [r4, #30]
 8013dd0:	b90b      	cbnz	r3, 8013dd6 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8013dd2:	2302      	movs	r3, #2
 8013dd4:	83e3      	strh	r3, [r4, #30]
 8013dd6:	8be3      	ldrh	r3, [r4, #30]
 8013dd8:	3b01      	subs	r3, #1
 8013dda:	b29b      	uxth	r3, r3
 8013ddc:	83e3      	strh	r3, [r4, #30]
 8013dde:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013de2:	4628      	mov	r0, r5
 8013de4:	8365      	strh	r5, [r4, #26]
 8013de6:	bd38      	pop	{r3, r4, r5, pc}

08013de8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8013de8:	428a      	cmp	r2, r1
 8013dea:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013dee:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8013df0:	d931      	bls.n	8013e56 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8013df2:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8013df4:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8013df8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8013dfc:	19ee      	adds	r6, r5, r7
 8013dfe:	1a54      	subs	r4, r2, r1
 8013e00:	3e01      	subs	r6, #1
 8013e02:	fa1f fe84 	uxth.w	lr, r4
 8013e06:	b2b4      	uxth	r4, r6
 8013e08:	eba4 090e 	sub.w	r9, r4, lr
 8013e0c:	fa1f f989 	uxth.w	r9, r9
 8013e10:	2c09      	cmp	r4, #9
 8013e12:	4626      	mov	r6, r4
 8013e14:	bf88      	it	hi
 8013e16:	f1a4 060a 	subhi.w	r6, r4, #10
 8013e1a:	f1bc 0f00 	cmp.w	ip, #0
 8013e1e:	bf08      	it	eq
 8013e20:	f04f 0c02 	moveq.w	ip, #2
 8013e24:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013e28:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013e2c:	fa1f fc8c 	uxth.w	ip, ip
 8013e30:	3c01      	subs	r4, #1
 8013e32:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8013e36:	b2a4      	uxth	r4, r4
 8013e38:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8013e3c:	454c      	cmp	r4, r9
 8013e3e:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8013e42:	d1e5      	bne.n	8013e10 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013e44:	eba5 050e 	sub.w	r5, r5, lr
 8013e48:	eb0e 0408 	add.w	r4, lr, r8
 8013e4c:	8705      	strh	r5, [r0, #56]	@ 0x38
 8013e4e:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8013e52:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8013e56:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8013e58:	1a64      	subs	r4, r4, r1
 8013e5a:	4439      	add	r1, r7
 8013e5c:	b289      	uxth	r1, r1
 8013e5e:	2909      	cmp	r1, #9
 8013e60:	bf88      	it	hi
 8013e62:	390a      	subhi	r1, #10
 8013e64:	8704      	strh	r4, [r0, #56]	@ 0x38
 8013e66:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8013e68:	250a      	movs	r5, #10
 8013e6a:	b18a      	cbz	r2, 8013e90 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8013e6c:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8013e6e:	3a01      	subs	r2, #1
 8013e70:	b292      	uxth	r2, r2
 8013e72:	3101      	adds	r1, #1
 8013e74:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8013e78:	8701      	strh	r1, [r0, #56]	@ 0x38
 8013e7a:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8013e7c:	b901      	cbnz	r1, 8013e80 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8013e7e:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8013e80:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8013e82:	3901      	subs	r1, #1
 8013e84:	b289      	uxth	r1, r1
 8013e86:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8013e88:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8013e8c:	844c      	strh	r4, [r1, #34]	@ 0x22
 8013e8e:	e7ec      	b.n	8013e6a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8013e90:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013e94:	f7ff bf4b 	b.w	8013d2e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08013e98 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8013e98:	b570      	push	{r4, r5, r6, lr}
 8013e9a:	2500      	movs	r5, #0
 8013e9c:	4295      	cmp	r5, r2
 8013e9e:	d011      	beq.n	8013ec4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8013ea0:	8bc4      	ldrh	r4, [r0, #30]
 8013ea2:	f831 6b02 	ldrh.w	r6, [r1], #2
 8013ea6:	4414      	add	r4, r2
 8013ea8:	3c01      	subs	r4, #1
 8013eaa:	1b64      	subs	r4, r4, r5
 8013eac:	b2a4      	uxth	r4, r4
 8013eae:	2c01      	cmp	r4, #1
 8013eb0:	bf88      	it	hi
 8013eb2:	3c02      	subhi	r4, #2
 8013eb4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013eb8:	8b64      	ldrh	r4, [r4, #26]
 8013eba:	42b4      	cmp	r4, r6
 8013ebc:	d117      	bne.n	8013eee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8013ebe:	3501      	adds	r5, #1
 8013ec0:	b2ad      	uxth	r5, r5
 8013ec2:	e7eb      	b.n	8013e9c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8013ec4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013ec8:	2400      	movs	r4, #0
 8013eca:	4413      	add	r3, r2
 8013ecc:	b2a2      	uxth	r2, r4
 8013ece:	429a      	cmp	r2, r3
 8013ed0:	da0f      	bge.n	8013ef2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8013ed2:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8013ed4:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8013ed8:	4432      	add	r2, r6
 8013eda:	b292      	uxth	r2, r2
 8013edc:	2a09      	cmp	r2, #9
 8013ede:	bf88      	it	hi
 8013ee0:	3a0a      	subhi	r2, #10
 8013ee2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013ee6:	3401      	adds	r4, #1
 8013ee8:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8013eea:	42aa      	cmp	r2, r5
 8013eec:	d0ee      	beq.n	8013ecc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8013eee:	2000      	movs	r0, #0
 8013ef0:	bd70      	pop	{r4, r5, r6, pc}
 8013ef2:	2001      	movs	r0, #1
 8013ef4:	e7fc      	b.n	8013ef0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08013ef6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8013ef6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013efa:	4605      	mov	r5, r0
 8013efc:	4616      	mov	r6, r2
 8013efe:	1c8c      	adds	r4, r1, #2
 8013f00:	8809      	ldrh	r1, [r1, #0]
 8013f02:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8013f06:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8013f0a:	42b3      	cmp	r3, r6
 8013f0c:	d124      	bne.n	8013f58 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8013f0e:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8013f12:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8013f16:	f001 070f 	and.w	r7, r1, #15
 8013f1a:	f8cd 8000 	str.w	r8, [sp]
 8013f1e:	464b      	mov	r3, r9
 8013f20:	4652      	mov	r2, sl
 8013f22:	4621      	mov	r1, r4
 8013f24:	4628      	mov	r0, r5
 8013f26:	f7ff ffb7 	bl	8013e98 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8013f2a:	4683      	mov	fp, r0
 8013f2c:	b168      	cbz	r0, 8013f4a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013f2e:	eb0a 0109 	add.w	r1, sl, r9
 8013f32:	4441      	add	r1, r8
 8013f34:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8013f38:	463a      	mov	r2, r7
 8013f3a:	4649      	mov	r1, r9
 8013f3c:	4628      	mov	r0, r5
 8013f3e:	f7ff ff53 	bl	8013de8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013f42:	4658      	mov	r0, fp
 8013f44:	b003      	add	sp, #12
 8013f46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f4a:	eb07 010a 	add.w	r1, r7, sl
 8013f4e:	4449      	add	r1, r9
 8013f50:	4441      	add	r1, r8
 8013f52:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8013f56:	e7d2      	b.n	8013efe <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8013f58:	f04f 0b00 	mov.w	fp, #0
 8013f5c:	e7f1      	b.n	8013f42 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013f5e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013f5e:	b570      	push	{r4, r5, r6, lr}
 8013f60:	8810      	ldrh	r0, [r2, #0]
 8013f62:	4298      	cmp	r0, r3
 8013f64:	d817      	bhi.n	8013f96 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013f66:	1e48      	subs	r0, r1, #1
 8013f68:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8013f6c:	4298      	cmp	r0, r3
 8013f6e:	d312      	bcc.n	8013f96 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013f70:	2400      	movs	r4, #0
 8013f72:	428c      	cmp	r4, r1
 8013f74:	d20f      	bcs.n	8013f96 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013f76:	1860      	adds	r0, r4, r1
 8013f78:	1040      	asrs	r0, r0, #1
 8013f7a:	0085      	lsls	r5, r0, #2
 8013f7c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013f80:	42b3      	cmp	r3, r6
 8013f82:	d902      	bls.n	8013f8a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013f84:	3001      	adds	r0, #1
 8013f86:	b284      	uxth	r4, r0
 8013f88:	e7f3      	b.n	8013f72 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013f8a:	d201      	bcs.n	8013f90 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8013f8c:	b281      	uxth	r1, r0
 8013f8e:	e7f0      	b.n	8013f72 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013f90:	442a      	add	r2, r5
 8013f92:	8850      	ldrh	r0, [r2, #2]
 8013f94:	bd70      	pop	{r4, r5, r6, pc}
 8013f96:	2000      	movs	r0, #0
 8013f98:	e7fc      	b.n	8013f94 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08013f9a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8013f9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f9e:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8013fa0:	886f      	ldrh	r7, [r5, #2]
 8013fa2:	4604      	mov	r4, r0
 8013fa4:	087f      	lsrs	r7, r7, #1
 8013fa6:	260b      	movs	r6, #11
 8013fa8:	3e01      	subs	r6, #1
 8013faa:	d013      	beq.n	8013fd4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013fac:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8013fae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013fb2:	462a      	mov	r2, r5
 8013fb4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8013fb8:	4639      	mov	r1, r7
 8013fba:	4643      	mov	r3, r8
 8013fbc:	4620      	mov	r0, r4
 8013fbe:	f7ff ffce 	bl	8013f5e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8013fc2:	b138      	cbz	r0, 8013fd4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013fc4:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8013fc8:	4642      	mov	r2, r8
 8013fca:	4620      	mov	r0, r4
 8013fcc:	f7ff ff93 	bl	8013ef6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8013fd0:	2800      	cmp	r0, #0
 8013fd2:	d1e9      	bne.n	8013fa8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8013fd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013fd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8013fd8:	b570      	push	{r4, r5, r6, lr}
 8013fda:	694a      	ldr	r2, [r1, #20]
 8013fdc:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8013fde:	684b      	ldr	r3, [r1, #4]
 8013fe0:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8013fe2:	1b54      	subs	r4, r2, r5
 8013fe4:	f000 8106 	beq.w	80141f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8013fe8:	1b9b      	subs	r3, r3, r6
 8013fea:	d003      	beq.n	8013ff4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013fec:	4363      	muls	r3, r4
 8013fee:	2210      	movs	r2, #16
 8013ff0:	fb93 f3f2 	sdiv	r3, r3, r2
 8013ff4:	680c      	ldr	r4, [r1, #0]
 8013ff6:	698a      	ldr	r2, [r1, #24]
 8013ff8:	1b65      	subs	r5, r4, r5
 8013ffa:	f000 80fd 	beq.w	80141f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8013ffe:	1b92      	subs	r2, r2, r6
 8014000:	d003      	beq.n	801400a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8014002:	436a      	muls	r2, r5
 8014004:	2410      	movs	r4, #16
 8014006:	fb92 f2f4 	sdiv	r2, r2, r4
 801400a:	1a9b      	subs	r3, r3, r2
 801400c:	ee07 3a90 	vmov	s15, r3
 8014010:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8014234 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8014014:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014018:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801401c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8014020:	460a      	mov	r2, r1
 8014022:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8014026:	4603      	mov	r3, r0
 8014028:	f100 040c 	add.w	r4, r0, #12
 801402c:	eeb1 6a43 	vneg.f32	s12, s6
 8014030:	edd2 7a02 	vldr	s15, [r2, #8]
 8014034:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8014038:	3214      	adds	r2, #20
 801403a:	ece3 6a01 	vstmia	r3!, {s13}
 801403e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8014042:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014046:	429c      	cmp	r4, r3
 8014048:	edc3 7a02 	vstr	s15, [r3, #8]
 801404c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8014050:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014054:	edc3 7a05 	vstr	s15, [r3, #20]
 8014058:	d1ea      	bne.n	8014030 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801405a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801405c:	698b      	ldr	r3, [r1, #24]
 801405e:	edd0 4a02 	vldr	s9, [r0, #8]
 8014062:	edd0 3a00 	vldr	s7, [r0]
 8014066:	edd0 6a01 	vldr	s13, [r0, #4]
 801406a:	ed90 5a05 	vldr	s10, [r0, #20]
 801406e:	ed90 2a03 	vldr	s4, [r0, #12]
 8014072:	edd0 5a04 	vldr	s11, [r0, #16]
 8014076:	ed90 1a07 	vldr	s2, [r0, #28]
 801407a:	edd0 2a06 	vldr	s5, [r0, #24]
 801407e:	1a9b      	subs	r3, r3, r2
 8014080:	ee07 3a90 	vmov	s15, r3
 8014084:	684b      	ldr	r3, [r1, #4]
 8014086:	1a9b      	subs	r3, r3, r2
 8014088:	ee07 3a10 	vmov	s14, r3
 801408c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014090:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8014094:	ee67 7a84 	vmul.f32	s15, s15, s8
 8014098:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801409c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80140a0:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80140a4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80140a8:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80140ac:	eee6 7a87 	vfma.f32	s15, s13, s14
 80140b0:	ee32 5a45 	vsub.f32	s10, s4, s10
 80140b4:	ee67 7a83 	vmul.f32	s15, s15, s6
 80140b8:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 80140bc:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80140be:	694a      	ldr	r2, [r1, #20]
 80140c0:	1b13      	subs	r3, r2, r4
 80140c2:	ee07 3a10 	vmov	s14, r3
 80140c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80140ca:	680b      	ldr	r3, [r1, #0]
 80140cc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80140d0:	1b1b      	subs	r3, r3, r4
 80140d2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80140d6:	ee07 3a10 	vmov	s14, r3
 80140da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80140de:	ee27 7a04 	vmul.f32	s14, s14, s8
 80140e2:	eee6 4a87 	vfma.f32	s9, s13, s14
 80140e6:	ee64 4a86 	vmul.f32	s9, s9, s12
 80140ea:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 80140ee:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80140f0:	698b      	ldr	r3, [r1, #24]
 80140f2:	1a9b      	subs	r3, r3, r2
 80140f4:	ee06 3a90 	vmov	s13, r3
 80140f8:	684b      	ldr	r3, [r1, #4]
 80140fa:	1a9b      	subs	r3, r3, r2
 80140fc:	ee07 3a10 	vmov	s14, r3
 8014100:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014104:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014108:	ee66 6a84 	vmul.f32	s13, s13, s8
 801410c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014110:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8014114:	eee5 6a87 	vfma.f32	s13, s11, s14
 8014118:	ee66 6a83 	vmul.f32	s13, s13, s6
 801411c:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8014120:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8014122:	694a      	ldr	r2, [r1, #20]
 8014124:	1b13      	subs	r3, r2, r4
 8014126:	ee07 3a10 	vmov	s14, r3
 801412a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801412e:	680b      	ldr	r3, [r1, #0]
 8014130:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014134:	1b1b      	subs	r3, r3, r4
 8014136:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801413a:	ee07 3a10 	vmov	s14, r3
 801413e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014142:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014146:	eea5 5a87 	vfma.f32	s10, s11, s14
 801414a:	edd0 5a08 	vldr	s11, [r0, #32]
 801414e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8014152:	ee31 1a65 	vsub.f32	s2, s2, s11
 8014156:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801415a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801415c:	698b      	ldr	r3, [r1, #24]
 801415e:	1a9b      	subs	r3, r3, r2
 8014160:	ee07 3a10 	vmov	s14, r3
 8014164:	684b      	ldr	r3, [r1, #4]
 8014166:	1a9b      	subs	r3, r3, r2
 8014168:	ee01 3a90 	vmov	s3, r3
 801416c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014170:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8014174:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014178:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801417c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8014180:	ee61 1a84 	vmul.f32	s3, s3, s8
 8014184:	eea1 7a21 	vfma.f32	s14, s2, s3
 8014188:	ee27 7a03 	vmul.f32	s14, s14, s6
 801418c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8014190:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8014192:	694a      	ldr	r2, [r1, #20]
 8014194:	1b13      	subs	r3, r2, r4
 8014196:	ee03 3a10 	vmov	s6, r3
 801419a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801419e:	680b      	ldr	r3, [r1, #0]
 80141a0:	ee23 3a04 	vmul.f32	s6, s6, s8
 80141a4:	1b1b      	subs	r3, r3, r4
 80141a6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80141aa:	ee03 3a10 	vmov	s6, r3
 80141ae:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80141b2:	ee23 4a04 	vmul.f32	s8, s6, s8
 80141b6:	eee1 5a04 	vfma.f32	s11, s2, s8
 80141ba:	ee25 6a86 	vmul.f32	s12, s11, s12
 80141be:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80141c2:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 80141c6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80141ca:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80141ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80141d2:	dd13      	ble.n	80141fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80141d4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80141d8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80141dc:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80141de:	eee3 7a87 	vfma.f32	s15, s7, s14
 80141e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80141e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80141ea:	dd15      	ble.n	8014218 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80141ec:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80141f0:	6403      	str	r3, [r0, #64]	@ 0x40
 80141f2:	bd70      	pop	{r4, r5, r6, pc}
 80141f4:	4623      	mov	r3, r4
 80141f6:	e6fd      	b.n	8013ff4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80141f8:	462a      	mov	r2, r5
 80141fa:	e706      	b.n	801400a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80141fc:	d502      	bpl.n	8014204 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80141fe:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8014202:	e7e9      	b.n	80141d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8014204:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8014208:	eea3 2a85 	vfma.f32	s4, s7, s10
 801420c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8014210:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014214:	dade      	bge.n	80141d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8014216:	e7f2      	b.n	80141fe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8014218:	d502      	bpl.n	8014220 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801421a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801421e:	e7e7      	b.n	80141f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8014220:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8014224:	eee3 4a86 	vfma.f32	s9, s7, s12
 8014228:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801422c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014230:	dadc      	bge.n	80141ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8014232:	e7f2      	b.n	801421a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8014234:	3d800000 	.word	0x3d800000

08014238 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8014238:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801423c:	2714      	movs	r7, #20
 801423e:	435f      	muls	r7, r3
 8014240:	eb02 0c07 	add.w	ip, r2, r7
 8014244:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8014248:	f115 0e0f 	adds.w	lr, r5, #15
 801424c:	f100 80a2 	bmi.w	8014394 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8014250:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8014254:	9c08      	ldr	r4, [sp, #32]
 8014256:	f8c0 e014 	str.w	lr, [r0, #20]
 801425a:	2614      	movs	r6, #20
 801425c:	4366      	muls	r6, r4
 801425e:	eb02 0806 	add.w	r8, r2, r6
 8014262:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8014266:	f115 040f 	adds.w	r4, r5, #15
 801426a:	f100 809f 	bmi.w	80143ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801426e:	1124      	asrs	r4, r4, #4
 8014270:	eba4 040e 	sub.w	r4, r4, lr
 8014274:	6184      	str	r4, [r0, #24]
 8014276:	2c00      	cmp	r4, #0
 8014278:	f000 808a 	beq.w	8014390 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801427c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8014280:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8014284:	5995      	ldr	r5, [r2, r6]
 8014286:	eba4 0809 	sub.w	r8, r4, r9
 801428a:	59d4      	ldr	r4, [r2, r7]
 801428c:	eba5 0a04 	sub.w	sl, r5, r4
 8014290:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8014294:	fb0e fe05 	mul.w	lr, lr, r5
 8014298:	fb0a ee19 	mls	lr, sl, r9, lr
 801429c:	fb08 e404 	mla	r4, r8, r4, lr
 80142a0:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80142a4:	3c01      	subs	r4, #1
 80142a6:	19a4      	adds	r4, r4, r6
 80142a8:	f100 808c 	bmi.w	80143c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80142ac:	fb94 fef6 	sdiv	lr, r4, r6
 80142b0:	f8c0 e000 	str.w	lr, [r0]
 80142b4:	fb06 441e 	mls	r4, r6, lr, r4
 80142b8:	6104      	str	r4, [r0, #16]
 80142ba:	2d00      	cmp	r5, #0
 80142bc:	f2c0 8095 	blt.w	80143ea <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80142c0:	fb95 f4f6 	sdiv	r4, r5, r6
 80142c4:	6044      	str	r4, [r0, #4]
 80142c6:	fb06 5514 	mls	r5, r6, r4, r5
 80142ca:	6085      	str	r5, [r0, #8]
 80142cc:	60c6      	str	r6, [r0, #12]
 80142ce:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80142d2:	6945      	ldr	r5, [r0, #20]
 80142d4:	59d2      	ldr	r2, [r2, r7]
 80142d6:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 801440c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80142da:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80142de:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80142e2:	ee07 4a10 	vmov	s14, r4
 80142e6:	6804      	ldr	r4, [r0, #0]
 80142e8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80142ec:	ee07 2a90 	vmov	s15, r2
 80142f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80142f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80142f8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80142fc:	ee27 7a26 	vmul.f32	s14, s14, s13
 8014300:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014304:	edd3 6a00 	vldr	s13, [r3]
 8014308:	eee6 6a07 	vfma.f32	s13, s12, s14
 801430c:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8014310:	eee6 6a27 	vfma.f32	s13, s12, s15
 8014314:	edc0 6a07 	vstr	s13, [r0, #28]
 8014318:	edd0 6a01 	vldr	s13, [r0, #4]
 801431c:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8014320:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8014324:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014328:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801432c:	ed80 6a08 	vstr	s12, [r0, #32]
 8014330:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8014332:	6242      	str	r2, [r0, #36]	@ 0x24
 8014334:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8014338:	ed93 6a03 	vldr	s12, [r3, #12]
 801433c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014340:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8014344:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8014348:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 801434c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8014350:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8014354:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014358:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 801435c:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801435e:	6302      	str	r2, [r0, #48]	@ 0x30
 8014360:	ed93 6a06 	vldr	s12, [r3, #24]
 8014364:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8014368:	eea5 6a87 	vfma.f32	s12, s11, s14
 801436c:	eeb0 7a46 	vmov.f32	s14, s12
 8014370:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8014374:	eea6 7a27 	vfma.f32	s14, s12, s15
 8014378:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801437c:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8014380:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8014384:	eee6 7a87 	vfma.f32	s15, s13, s14
 8014388:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801438c:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801438e:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8014390:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014394:	f1c5 0501 	rsb	r5, r5, #1
 8014398:	f015 050f 	ands.w	r5, r5, #15
 801439c:	bf18      	it	ne
 801439e:	2501      	movne	r5, #1
 80143a0:	2410      	movs	r4, #16
 80143a2:	fb9e fef4 	sdiv	lr, lr, r4
 80143a6:	ebae 0e05 	sub.w	lr, lr, r5
 80143aa:	e753      	b.n	8014254 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80143ac:	f1c5 0501 	rsb	r5, r5, #1
 80143b0:	f015 050f 	ands.w	r5, r5, #15
 80143b4:	bf18      	it	ne
 80143b6:	2501      	movne	r5, #1
 80143b8:	f04f 0910 	mov.w	r9, #16
 80143bc:	fb94 f4f9 	sdiv	r4, r4, r9
 80143c0:	1b64      	subs	r4, r4, r5
 80143c2:	e755      	b.n	8014270 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80143c4:	4264      	negs	r4, r4
 80143c6:	fb94 fef6 	sdiv	lr, r4, r6
 80143ca:	f1ce 0800 	rsb	r8, lr, #0
 80143ce:	fb06 441e 	mls	r4, r6, lr, r4
 80143d2:	f8c0 8000 	str.w	r8, [r0]
 80143d6:	6104      	str	r4, [r0, #16]
 80143d8:	2c00      	cmp	r4, #0
 80143da:	f43f af6e 	beq.w	80142ba <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80143de:	ea6f 0e0e 	mvn.w	lr, lr
 80143e2:	f8c0 e000 	str.w	lr, [r0]
 80143e6:	1b34      	subs	r4, r6, r4
 80143e8:	e766      	b.n	80142b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80143ea:	426d      	negs	r5, r5
 80143ec:	fb95 f4f6 	sdiv	r4, r5, r6
 80143f0:	f1c4 0e00 	rsb	lr, r4, #0
 80143f4:	fb06 5514 	mls	r5, r6, r4, r5
 80143f8:	f8c0 e004 	str.w	lr, [r0, #4]
 80143fc:	6085      	str	r5, [r0, #8]
 80143fe:	2d00      	cmp	r5, #0
 8014400:	f43f af64 	beq.w	80142cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8014404:	43e4      	mvns	r4, r4
 8014406:	6044      	str	r4, [r0, #4]
 8014408:	1b75      	subs	r5, r6, r5
 801440a:	e75e      	b.n	80142ca <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801440c:	3d800000 	.word	0x3d800000

08014410 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014410:	4b01      	ldr	r3, [pc, #4]	@ (8014418 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8014412:	6018      	str	r0, [r3, #0]
 8014414:	4770      	bx	lr
 8014416:	bf00      	nop
 8014418:	20013bd4 	.word	0x20013bd4

0801441c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801441c:	4b06      	ldr	r3, [pc, #24]	@ (8014438 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801441e:	881a      	ldrh	r2, [r3, #0]
 8014420:	4282      	cmp	r2, r0
 8014422:	d807      	bhi.n	8014434 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8014424:	4b05      	ldr	r3, [pc, #20]	@ (801443c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8014426:	881b      	ldrh	r3, [r3, #0]
 8014428:	4413      	add	r3, r2
 801442a:	4298      	cmp	r0, r3
 801442c:	bfac      	ite	ge
 801442e:	2000      	movge	r0, #0
 8014430:	2001      	movlt	r0, #1
 8014432:	4770      	bx	lr
 8014434:	2000      	movs	r0, #0
 8014436:	4770      	bx	lr
 8014438:	20013bf4 	.word	0x20013bf4
 801443c:	20013bf8 	.word	0x20013bf8

08014440 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8014440:	b508      	push	{r3, lr}
 8014442:	4601      	mov	r1, r0
 8014444:	f7ff ffea 	bl	801441c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8014448:	b118      	cbz	r0, 8014452 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801444a:	4b02      	ldr	r3, [pc, #8]	@ (8014454 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801444c:	681b      	ldr	r3, [r3, #0]
 801444e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8014452:	bd08      	pop	{r3, pc}
 8014454:	20013bd8 	.word	0x20013bd8

08014458 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8014458:	b5f0      	push	{r4, r5, r6, r7, lr}
 801445a:	4c24      	ldr	r4, [pc, #144]	@ (80144ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801445c:	6823      	ldr	r3, [r4, #0]
 801445e:	2b00      	cmp	r3, #0
 8014460:	d042      	beq.n	80144e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014462:	4a23      	ldr	r2, [pc, #140]	@ (80144f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8014464:	4d23      	ldr	r5, [pc, #140]	@ (80144f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8014466:	8811      	ldrh	r1, [r2, #0]
 8014468:	f8b5 c000 	ldrh.w	ip, [r5]
 801446c:	4822      	ldr	r0, [pc, #136]	@ (80144f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801446e:	4461      	add	r1, ip
 8014470:	1c4a      	adds	r2, r1, #1
 8014472:	f022 0201 	bic.w	r2, r2, #1
 8014476:	008f      	lsls	r7, r1, #2
 8014478:	0412      	lsls	r2, r2, #16
 801447a:	19de      	adds	r6, r3, r7
 801447c:	0c12      	lsrs	r2, r2, #16
 801447e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8014482:	6006      	str	r6, [r0, #0]
 8014484:	4e1d      	ldr	r6, [pc, #116]	@ (80144fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8014486:	19da      	adds	r2, r3, r7
 8014488:	6032      	str	r2, [r6, #0]
 801448a:	220e      	movs	r2, #14
 801448c:	fb02 f20c 	mul.w	r2, r2, ip
 8014490:	3203      	adds	r2, #3
 8014492:	f022 0203 	bic.w	r2, r2, #3
 8014496:	443a      	add	r2, r7
 8014498:	4f19      	ldr	r7, [pc, #100]	@ (8014500 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801449a:	4413      	add	r3, r2
 801449c:	603b      	str	r3, [r7, #0]
 801449e:	4f19      	ldr	r7, [pc, #100]	@ (8014504 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80144a0:	2300      	movs	r3, #0
 80144a2:	803b      	strh	r3, [r7, #0]
 80144a4:	4f18      	ldr	r7, [pc, #96]	@ (8014508 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80144a6:	683f      	ldr	r7, [r7, #0]
 80144a8:	1aba      	subs	r2, r7, r2
 80144aa:	4f18      	ldr	r7, [pc, #96]	@ (801450c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80144ac:	603a      	str	r2, [r7, #0]
 80144ae:	4a18      	ldr	r2, [pc, #96]	@ (8014510 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80144b0:	469c      	mov	ip, r3
 80144b2:	8013      	strh	r3, [r2, #0]
 80144b4:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 80144b8:	428b      	cmp	r3, r1
 80144ba:	d10d      	bne.n	80144d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80144bc:	882d      	ldrh	r5, [r5, #0]
 80144be:	6830      	ldr	r0, [r6, #0]
 80144c0:	2300      	movs	r3, #0
 80144c2:	240e      	movs	r4, #14
 80144c4:	429d      	cmp	r5, r3
 80144c6:	d90f      	bls.n	80144e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80144c8:	fb04 0203 	mla	r2, r4, r3, r0
 80144cc:	3301      	adds	r3, #1
 80144ce:	7b11      	ldrb	r1, [r2, #12]
 80144d0:	f36f 1145 	bfc	r1, #5, #1
 80144d4:	7311      	strb	r1, [r2, #12]
 80144d6:	e7f5      	b.n	80144c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80144d8:	6822      	ldr	r2, [r4, #0]
 80144da:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80144de:	6802      	ldr	r2, [r0, #0]
 80144e0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80144e4:	3301      	adds	r3, #1
 80144e6:	e7e7      	b.n	80144b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80144e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80144ea:	bf00      	nop
 80144ec:	20013bd8 	.word	0x20013bd8
 80144f0:	20013bf4 	.word	0x20013bf4
 80144f4:	20013bf8 	.word	0x20013bf8
 80144f8:	20013bec 	.word	0x20013bec
 80144fc:	20013bdc 	.word	0x20013bdc
 8014500:	20013be4 	.word	0x20013be4
 8014504:	20013bf6 	.word	0x20013bf6
 8014508:	20013be0 	.word	0x20013be0
 801450c:	20013bf0 	.word	0x20013bf0
 8014510:	20013be8 	.word	0x20013be8

08014514 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8014514:	4b06      	ldr	r3, [pc, #24]	@ (8014530 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8014516:	681b      	ldr	r3, [r3, #0]
 8014518:	b943      	cbnz	r3, 801452c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801451a:	b139      	cbz	r1, 801452c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801451c:	4b05      	ldr	r3, [pc, #20]	@ (8014534 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801451e:	801a      	strh	r2, [r3, #0]
 8014520:	4b05      	ldr	r3, [pc, #20]	@ (8014538 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8014522:	6019      	str	r1, [r3, #0]
 8014524:	4b05      	ldr	r3, [pc, #20]	@ (801453c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8014526:	6018      	str	r0, [r3, #0]
 8014528:	f7ff bf96 	b.w	8014458 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801452c:	4770      	bx	lr
 801452e:	bf00      	nop
 8014530:	20013be4 	.word	0x20013be4
 8014534:	20013bf8 	.word	0x20013bf8
 8014538:	20013be0 	.word	0x20013be0
 801453c:	20013bd8 	.word	0x20013bd8

08014540 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8014540:	b470      	push	{r4, r5, r6}
 8014542:	4c07      	ldr	r4, [pc, #28]	@ (8014560 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8014544:	6826      	ldr	r6, [r4, #0]
 8014546:	4605      	mov	r5, r0
 8014548:	4610      	mov	r0, r2
 801454a:	9a03      	ldr	r2, [sp, #12]
 801454c:	b936      	cbnz	r6, 801455c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801454e:	6025      	str	r5, [r4, #0]
 8014550:	4c04      	ldr	r4, [pc, #16]	@ (8014564 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8014552:	8021      	strh	r1, [r4, #0]
 8014554:	bc70      	pop	{r4, r5, r6}
 8014556:	4619      	mov	r1, r3
 8014558:	f7ff bfdc 	b.w	8014514 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801455c:	bc70      	pop	{r4, r5, r6}
 801455e:	4770      	bx	lr
 8014560:	20013bfc 	.word	0x20013bfc
 8014564:	20013bf4 	.word	0x20013bf4

08014568 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8014568:	4a12      	ldr	r2, [pc, #72]	@ (80145b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801456a:	8803      	ldrh	r3, [r0, #0]
 801456c:	8812      	ldrh	r2, [r2, #0]
 801456e:	4293      	cmp	r3, r2
 8014570:	d207      	bcs.n	8014582 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8014572:	4a11      	ldr	r2, [pc, #68]	@ (80145b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8014574:	6812      	ldr	r2, [r2, #0]
 8014576:	2114      	movs	r1, #20
 8014578:	fb01 2303 	mla	r3, r1, r3, r2
 801457c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8014580:	4770      	bx	lr
 8014582:	490e      	ldr	r1, [pc, #56]	@ (80145bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8014584:	8809      	ldrh	r1, [r1, #0]
 8014586:	4411      	add	r1, r2
 8014588:	428b      	cmp	r3, r1
 801458a:	da04      	bge.n	8014596 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801458c:	1a9b      	subs	r3, r3, r2
 801458e:	4a0c      	ldr	r2, [pc, #48]	@ (80145c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8014590:	210e      	movs	r1, #14
 8014592:	6812      	ldr	r2, [r2, #0]
 8014594:	e7f0      	b.n	8014578 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8014596:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801459a:	4293      	cmp	r3, r2
 801459c:	d108      	bne.n	80145b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801459e:	4b09      	ldr	r3, [pc, #36]	@ (80145c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80145a0:	781b      	ldrb	r3, [r3, #0]
 80145a2:	b91b      	cbnz	r3, 80145ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80145a4:	4b08      	ldr	r3, [pc, #32]	@ (80145c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80145a6:	f9b3 0000 	ldrsh.w	r0, [r3]
 80145aa:	4770      	bx	lr
 80145ac:	4b07      	ldr	r3, [pc, #28]	@ (80145cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80145ae:	e7fa      	b.n	80145a6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80145b0:	2000      	movs	r0, #0
 80145b2:	4770      	bx	lr
 80145b4:	20013bf4 	.word	0x20013bf4
 80145b8:	20013bfc 	.word	0x20013bfc
 80145bc:	20013bf8 	.word	0x20013bf8
 80145c0:	20013bdc 	.word	0x20013bdc
 80145c4:	20013b62 	.word	0x20013b62
 80145c8:	20013b64 	.word	0x20013b64
 80145cc:	20013b66 	.word	0x20013b66

080145d0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80145d0:	4a12      	ldr	r2, [pc, #72]	@ (801461c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80145d2:	8803      	ldrh	r3, [r0, #0]
 80145d4:	8812      	ldrh	r2, [r2, #0]
 80145d6:	4293      	cmp	r3, r2
 80145d8:	d207      	bcs.n	80145ea <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80145da:	4a11      	ldr	r2, [pc, #68]	@ (8014620 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80145dc:	6812      	ldr	r2, [r2, #0]
 80145de:	2114      	movs	r1, #20
 80145e0:	fb01 2303 	mla	r3, r1, r3, r2
 80145e4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80145e8:	4770      	bx	lr
 80145ea:	490e      	ldr	r1, [pc, #56]	@ (8014624 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80145ec:	8809      	ldrh	r1, [r1, #0]
 80145ee:	4411      	add	r1, r2
 80145f0:	428b      	cmp	r3, r1
 80145f2:	da04      	bge.n	80145fe <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80145f4:	1a9b      	subs	r3, r3, r2
 80145f6:	4a0c      	ldr	r2, [pc, #48]	@ (8014628 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80145f8:	210e      	movs	r1, #14
 80145fa:	6812      	ldr	r2, [r2, #0]
 80145fc:	e7f0      	b.n	80145e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80145fe:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8014602:	4293      	cmp	r3, r2
 8014604:	d108      	bne.n	8014618 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8014606:	4b09      	ldr	r3, [pc, #36]	@ (801462c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8014608:	781b      	ldrb	r3, [r3, #0]
 801460a:	b91b      	cbnz	r3, 8014614 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801460c:	4b08      	ldr	r3, [pc, #32]	@ (8014630 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801460e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014612:	4770      	bx	lr
 8014614:	4b07      	ldr	r3, [pc, #28]	@ (8014634 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8014616:	e7fa      	b.n	801460e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8014618:	2000      	movs	r0, #0
 801461a:	4770      	bx	lr
 801461c:	20013bf4 	.word	0x20013bf4
 8014620:	20013bfc 	.word	0x20013bfc
 8014624:	20013bf8 	.word	0x20013bf8
 8014628:	20013bdc 	.word	0x20013bdc
 801462c:	20013b62 	.word	0x20013b62
 8014630:	20013b66 	.word	0x20013b66
 8014634:	20013b64 	.word	0x20013b64

08014638 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8014638:	b530      	push	{r4, r5, lr}
 801463a:	4a22      	ldr	r2, [pc, #136]	@ (80146c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801463c:	880b      	ldrh	r3, [r1, #0]
 801463e:	8812      	ldrh	r2, [r2, #0]
 8014640:	4293      	cmp	r3, r2
 8014642:	d213      	bcs.n	801466c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8014644:	4a20      	ldr	r2, [pc, #128]	@ (80146c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8014646:	6812      	ldr	r2, [r2, #0]
 8014648:	2114      	movs	r1, #20
 801464a:	fb01 2303 	mla	r3, r1, r3, r2
 801464e:	8a1a      	ldrh	r2, [r3, #16]
 8014650:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8014654:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8014658:	8a5b      	ldrh	r3, [r3, #18]
 801465a:	8004      	strh	r4, [r0, #0]
 801465c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014660:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8014664:	8041      	strh	r1, [r0, #2]
 8014666:	8082      	strh	r2, [r0, #4]
 8014668:	80c3      	strh	r3, [r0, #6]
 801466a:	e024      	b.n	80146b6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 801466c:	4917      	ldr	r1, [pc, #92]	@ (80146cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801466e:	8809      	ldrh	r1, [r1, #0]
 8014670:	4411      	add	r1, r2
 8014672:	428b      	cmp	r3, r1
 8014674:	da10      	bge.n	8014698 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8014676:	1a9b      	subs	r3, r3, r2
 8014678:	220e      	movs	r2, #14
 801467a:	4353      	muls	r3, r2
 801467c:	4a14      	ldr	r2, [pc, #80]	@ (80146d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801467e:	6811      	ldr	r1, [r2, #0]
 8014680:	18ca      	adds	r2, r1, r3
 8014682:	5ecd      	ldrsh	r5, [r1, r3]
 8014684:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8014688:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 801468c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8014690:	8005      	strh	r5, [r0, #0]
 8014692:	8044      	strh	r4, [r0, #2]
 8014694:	8081      	strh	r1, [r0, #4]
 8014696:	e7e7      	b.n	8014668 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8014698:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801469c:	4293      	cmp	r3, r2
 801469e:	d10b      	bne.n	80146b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 80146a0:	4b0c      	ldr	r3, [pc, #48]	@ (80146d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80146a2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80146a6:	4b0c      	ldr	r3, [pc, #48]	@ (80146d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 80146a8:	8081      	strh	r1, [r0, #4]
 80146aa:	f9b3 2000 	ldrsh.w	r2, [r3]
 80146ae:	80c2      	strh	r2, [r0, #6]
 80146b0:	2300      	movs	r3, #0
 80146b2:	8003      	strh	r3, [r0, #0]
 80146b4:	8043      	strh	r3, [r0, #2]
 80146b6:	bd30      	pop	{r4, r5, pc}
 80146b8:	2300      	movs	r3, #0
 80146ba:	8003      	strh	r3, [r0, #0]
 80146bc:	8043      	strh	r3, [r0, #2]
 80146be:	8083      	strh	r3, [r0, #4]
 80146c0:	e7d2      	b.n	8014668 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80146c2:	bf00      	nop
 80146c4:	20013bf4 	.word	0x20013bf4
 80146c8:	20013bfc 	.word	0x20013bfc
 80146cc:	20013bf8 	.word	0x20013bf8
 80146d0:	20013bdc 	.word	0x20013bdc
 80146d4:	20013b5e 	.word	0x20013b5e
 80146d8:	20013b60 	.word	0x20013b60

080146dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80146dc:	4a17      	ldr	r2, [pc, #92]	@ (801473c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80146de:	8803      	ldrh	r3, [r0, #0]
 80146e0:	8812      	ldrh	r2, [r2, #0]
 80146e2:	4293      	cmp	r3, r2
 80146e4:	d213      	bcs.n	801470e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80146e6:	4a16      	ldr	r2, [pc, #88]	@ (8014740 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80146e8:	6812      	ldr	r2, [r2, #0]
 80146ea:	2114      	movs	r1, #20
 80146ec:	fb01 2303 	mla	r3, r1, r3, r2
 80146f0:	8a1a      	ldrh	r2, [r3, #16]
 80146f2:	8919      	ldrh	r1, [r3, #8]
 80146f4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80146f8:	428a      	cmp	r2, r1
 80146fa:	db1d      	blt.n	8014738 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80146fc:	8a58      	ldrh	r0, [r3, #18]
 80146fe:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8014702:	895b      	ldrh	r3, [r3, #10]
 8014704:	4298      	cmp	r0, r3
 8014706:	bfac      	ite	ge
 8014708:	2000      	movge	r0, #0
 801470a:	2001      	movlt	r0, #1
 801470c:	4770      	bx	lr
 801470e:	490d      	ldr	r1, [pc, #52]	@ (8014744 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8014710:	8809      	ldrh	r1, [r1, #0]
 8014712:	4411      	add	r1, r2
 8014714:	428b      	cmp	r3, r1
 8014716:	da0d      	bge.n	8014734 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8014718:	1a9b      	subs	r3, r3, r2
 801471a:	4a0b      	ldr	r2, [pc, #44]	@ (8014748 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801471c:	6812      	ldr	r2, [r2, #0]
 801471e:	210e      	movs	r1, #14
 8014720:	fb01 2303 	mla	r3, r1, r3, r2
 8014724:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8014728:	891a      	ldrh	r2, [r3, #8]
 801472a:	4291      	cmp	r1, r2
 801472c:	db04      	blt.n	8014738 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801472e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8014732:	e7e6      	b.n	8014702 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8014734:	2000      	movs	r0, #0
 8014736:	4770      	bx	lr
 8014738:	2001      	movs	r0, #1
 801473a:	4770      	bx	lr
 801473c:	20013bf4 	.word	0x20013bf4
 8014740:	20013bfc 	.word	0x20013bfc
 8014744:	20013bf8 	.word	0x20013bf8
 8014748:	20013bdc 	.word	0x20013bdc

0801474c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801474c:	4a12      	ldr	r2, [pc, #72]	@ (8014798 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801474e:	8803      	ldrh	r3, [r0, #0]
 8014750:	8811      	ldrh	r1, [r2, #0]
 8014752:	428b      	cmp	r3, r1
 8014754:	d20b      	bcs.n	801476e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8014756:	4a11      	ldr	r2, [pc, #68]	@ (801479c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014758:	6812      	ldr	r2, [r2, #0]
 801475a:	b112      	cbz	r2, 8014762 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801475c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014760:	b9c0      	cbnz	r0, 8014794 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8014762:	4a0f      	ldr	r2, [pc, #60]	@ (80147a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8014764:	6811      	ldr	r1, [r2, #0]
 8014766:	2214      	movs	r2, #20
 8014768:	4353      	muls	r3, r2
 801476a:	58c8      	ldr	r0, [r1, r3]
 801476c:	4770      	bx	lr
 801476e:	4a0d      	ldr	r2, [pc, #52]	@ (80147a4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8014770:	8812      	ldrh	r2, [r2, #0]
 8014772:	440a      	add	r2, r1
 8014774:	4293      	cmp	r3, r2
 8014776:	da04      	bge.n	8014782 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8014778:	4a08      	ldr	r2, [pc, #32]	@ (801479c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801477a:	6812      	ldr	r2, [r2, #0]
 801477c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014780:	4770      	bx	lr
 8014782:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8014786:	4293      	cmp	r3, r2
 8014788:	d103      	bne.n	8014792 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801478a:	4b07      	ldr	r3, [pc, #28]	@ (80147a8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801478c:	681b      	ldr	r3, [r3, #0]
 801478e:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8014790:	4770      	bx	lr
 8014792:	2000      	movs	r0, #0
 8014794:	4770      	bx	lr
 8014796:	bf00      	nop
 8014798:	20013bf4 	.word	0x20013bf4
 801479c:	20013bd8 	.word	0x20013bd8
 80147a0:	20013bfc 	.word	0x20013bfc
 80147a4:	20013bf8 	.word	0x20013bf8
 80147a8:	20013b6c 	.word	0x20013b6c

080147ac <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80147ac:	4b24      	ldr	r3, [pc, #144]	@ (8014840 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80147ae:	8802      	ldrh	r2, [r0, #0]
 80147b0:	8818      	ldrh	r0, [r3, #0]
 80147b2:	4282      	cmp	r2, r0
 80147b4:	d221      	bcs.n	80147fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80147b6:	4b23      	ldr	r3, [pc, #140]	@ (8014844 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80147b8:	6819      	ldr	r1, [r3, #0]
 80147ba:	2314      	movs	r3, #20
 80147bc:	fb03 1302 	mla	r3, r3, r2, r1
 80147c0:	6858      	ldr	r0, [r3, #4]
 80147c2:	2800      	cmp	r0, #0
 80147c4:	d03a      	beq.n	801483c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80147c6:	4920      	ldr	r1, [pc, #128]	@ (8014848 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80147c8:	6809      	ldr	r1, [r1, #0]
 80147ca:	2900      	cmp	r1, #0
 80147cc:	d036      	beq.n	801483c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80147ce:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80147d2:	2900      	cmp	r1, #0
 80147d4:	d032      	beq.n	801483c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80147d6:	891a      	ldrh	r2, [r3, #8]
 80147d8:	8958      	ldrh	r0, [r3, #10]
 80147da:	4350      	muls	r0, r2
 80147dc:	7c5a      	ldrb	r2, [r3, #17]
 80147de:	7cdb      	ldrb	r3, [r3, #19]
 80147e0:	0952      	lsrs	r2, r2, #5
 80147e2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80147e6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80147ea:	2b0b      	cmp	r3, #11
 80147ec:	bf18      	it	ne
 80147ee:	0040      	lslne	r0, r0, #1
 80147f0:	3003      	adds	r0, #3
 80147f2:	f020 0003 	bic.w	r0, r0, #3
 80147f6:	4408      	add	r0, r1
 80147f8:	4770      	bx	lr
 80147fa:	4b14      	ldr	r3, [pc, #80]	@ (801484c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80147fc:	881b      	ldrh	r3, [r3, #0]
 80147fe:	4403      	add	r3, r0
 8014800:	429a      	cmp	r2, r3
 8014802:	da1a      	bge.n	801483a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014804:	4b12      	ldr	r3, [pc, #72]	@ (8014850 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8014806:	681b      	ldr	r3, [r3, #0]
 8014808:	1a10      	subs	r0, r2, r0
 801480a:	210e      	movs	r1, #14
 801480c:	fb01 3000 	mla	r0, r1, r0, r3
 8014810:	7b03      	ldrb	r3, [r0, #12]
 8014812:	f003 031f 	and.w	r3, r3, #31
 8014816:	2b0b      	cmp	r3, #11
 8014818:	d10b      	bne.n	8014832 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801481a:	8903      	ldrh	r3, [r0, #8]
 801481c:	8940      	ldrh	r0, [r0, #10]
 801481e:	4358      	muls	r0, r3
 8014820:	4b09      	ldr	r3, [pc, #36]	@ (8014848 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014822:	6819      	ldr	r1, [r3, #0]
 8014824:	3003      	adds	r0, #3
 8014826:	f020 0303 	bic.w	r3, r0, #3
 801482a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801482e:	4418      	add	r0, r3
 8014830:	4770      	bx	lr
 8014832:	2b0d      	cmp	r3, #13
 8014834:	d101      	bne.n	801483a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014836:	300d      	adds	r0, #13
 8014838:	4770      	bx	lr
 801483a:	2000      	movs	r0, #0
 801483c:	4770      	bx	lr
 801483e:	bf00      	nop
 8014840:	20013bf4 	.word	0x20013bf4
 8014844:	20013bfc 	.word	0x20013bfc
 8014848:	20013bd8 	.word	0x20013bd8
 801484c:	20013bf8 	.word	0x20013bf8
 8014850:	20013bdc 	.word	0x20013bdc

08014854 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8014854:	b510      	push	{r4, lr}
 8014856:	4b1f      	ldr	r3, [pc, #124]	@ (80148d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8014858:	8802      	ldrh	r2, [r0, #0]
 801485a:	881b      	ldrh	r3, [r3, #0]
 801485c:	429a      	cmp	r2, r3
 801485e:	d21a      	bcs.n	8014896 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8014860:	4b1d      	ldr	r3, [pc, #116]	@ (80148d8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8014862:	681b      	ldr	r3, [r3, #0]
 8014864:	2114      	movs	r1, #20
 8014866:	fb01 3102 	mla	r1, r1, r2, r3
 801486a:	7c4b      	ldrb	r3, [r1, #17]
 801486c:	0958      	lsrs	r0, r3, #5
 801486e:	7ccb      	ldrb	r3, [r1, #19]
 8014870:	491a      	ldr	r1, [pc, #104]	@ (80148dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8014872:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8014876:	6809      	ldr	r1, [r1, #0]
 8014878:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 801487c:	b2d8      	uxtb	r0, r3
 801487e:	b149      	cbz	r1, 8014894 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8014880:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8014884:	b132      	cbz	r2, 8014894 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8014886:	2b0e      	cmp	r3, #14
 8014888:	d021      	beq.n	80148ce <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801488a:	280f      	cmp	r0, #15
 801488c:	d01d      	beq.n	80148ca <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 801488e:	2810      	cmp	r0, #16
 8014890:	bf08      	it	eq
 8014892:	2002      	moveq	r0, #2
 8014894:	bd10      	pop	{r4, pc}
 8014896:	4912      	ldr	r1, [pc, #72]	@ (80148e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8014898:	8809      	ldrh	r1, [r1, #0]
 801489a:	4419      	add	r1, r3
 801489c:	428a      	cmp	r2, r1
 801489e:	da09      	bge.n	80148b4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 80148a0:	1ad3      	subs	r3, r2, r3
 80148a2:	4a10      	ldr	r2, [pc, #64]	@ (80148e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 80148a4:	6812      	ldr	r2, [r2, #0]
 80148a6:	210e      	movs	r1, #14
 80148a8:	fb01 2303 	mla	r3, r1, r3, r2
 80148ac:	7b18      	ldrb	r0, [r3, #12]
 80148ae:	f000 001f 	and.w	r0, r0, #31
 80148b2:	e7ef      	b.n	8014894 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80148b4:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 80148b8:	429a      	cmp	r2, r3
 80148ba:	d108      	bne.n	80148ce <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 80148bc:	f7ee f92a 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 80148c0:	6803      	ldr	r3, [r0, #0]
 80148c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80148c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80148c8:	4718      	bx	r3
 80148ca:	2001      	movs	r0, #1
 80148cc:	e7e2      	b.n	8014894 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80148ce:	2000      	movs	r0, #0
 80148d0:	e7e0      	b.n	8014894 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80148d2:	bf00      	nop
 80148d4:	20013bf4 	.word	0x20013bf4
 80148d8:	20013bfc 	.word	0x20013bfc
 80148dc:	20013bd8 	.word	0x20013bd8
 80148e0:	20013bf8 	.word	0x20013bf8
 80148e4:	20013bdc 	.word	0x20013bdc

080148e8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80148e8:	2010      	movs	r0, #16
 80148ea:	4770      	bx	lr

080148ec <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80148ec:	2000      	movs	r0, #0
 80148ee:	4770      	bx	lr

080148f0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80148f0:	4b02      	ldr	r3, [pc, #8]	@ (80148fc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80148f2:	8818      	ldrh	r0, [r3, #0]
 80148f4:	0040      	lsls	r0, r0, #1
 80148f6:	b280      	uxth	r0, r0
 80148f8:	4770      	bx	lr
 80148fa:	bf00      	nop
 80148fc:	20013b64 	.word	0x20013b64

08014900 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014900:	2bff      	cmp	r3, #255	@ 0xff
 8014902:	d05e      	beq.n	80149c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8014904:	2a0b      	cmp	r2, #11
 8014906:	d058      	beq.n	80149ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8014908:	d80e      	bhi.n	8014928 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801490a:	2a03      	cmp	r2, #3
 801490c:	d04d      	beq.n	80149aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 801490e:	d804      	bhi.n	801491a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014910:	2a01      	cmp	r2, #1
 8014912:	d04c      	beq.n	80149ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8014914:	d94d      	bls.n	80149b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8014916:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8014918:	e031      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801491a:	2a09      	cmp	r2, #9
 801491c:	d04d      	beq.n	80149ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801491e:	d84a      	bhi.n	80149b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8014920:	2a08      	cmp	r2, #8
 8014922:	d048      	beq.n	80149b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8014924:	2300      	movs	r3, #0
 8014926:	e02a      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014928:	2a2f      	cmp	r2, #47	@ 0x2f
 801492a:	d02c      	beq.n	8014986 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 801492c:	d811      	bhi.n	8014952 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 801492e:	2a2d      	cmp	r2, #45	@ 0x2d
 8014930:	d018      	beq.n	8014964 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8014932:	d831      	bhi.n	8014998 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8014934:	2a2c      	cmp	r2, #44	@ 0x2c
 8014936:	d1f5      	bne.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014938:	684a      	ldr	r2, [r1, #4]
 801493a:	7813      	ldrb	r3, [r2, #0]
 801493c:	7852      	ldrb	r2, [r2, #1]
 801493e:	2a00      	cmp	r2, #0
 8014940:	d1f0      	bne.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014942:	2b01      	cmp	r3, #1
 8014944:	d01d      	beq.n	8014982 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8014946:	2b00      	cmp	r3, #0
 8014948:	d02d      	beq.n	80149a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801494a:	2b02      	cmp	r3, #2
 801494c:	d1ea      	bne.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801494e:	68c3      	ldr	r3, [r0, #12]
 8014950:	e015      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014952:	2a31      	cmp	r2, #49	@ 0x31
 8014954:	d004      	beq.n	8014960 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8014956:	d332      	bcc.n	80149be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8014958:	2a32      	cmp	r2, #50	@ 0x32
 801495a:	d030      	beq.n	80149be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801495c:	2a33      	cmp	r2, #51	@ 0x33
 801495e:	d1e1      	bne.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014960:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8014962:	e00c      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014964:	684a      	ldr	r2, [r1, #4]
 8014966:	7813      	ldrb	r3, [r2, #0]
 8014968:	7852      	ldrb	r2, [r2, #1]
 801496a:	2a00      	cmp	r2, #0
 801496c:	d1da      	bne.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801496e:	2b01      	cmp	r3, #1
 8014970:	d004      	beq.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8014972:	d30f      	bcc.n	8014994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8014974:	2b02      	cmp	r3, #2
 8014976:	d1d5      	bne.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014978:	6943      	ldr	r3, [r0, #20]
 801497a:	e000      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801497c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801497e:	4618      	mov	r0, r3
 8014980:	4770      	bx	lr
 8014982:	69c3      	ldr	r3, [r0, #28]
 8014984:	e7fb      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014986:	684b      	ldr	r3, [r1, #4]
 8014988:	781a      	ldrb	r2, [r3, #0]
 801498a:	785b      	ldrb	r3, [r3, #1]
 801498c:	2b00      	cmp	r3, #0
 801498e:	d1c9      	bne.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014990:	2a00      	cmp	r2, #0
 8014992:	d1f4      	bne.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014994:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8014996:	e7f2      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014998:	684b      	ldr	r3, [r1, #4]
 801499a:	781a      	ldrb	r2, [r3, #0]
 801499c:	785b      	ldrb	r3, [r3, #1]
 801499e:	2b00      	cmp	r3, #0
 80149a0:	d1c0      	bne.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149a2:	2a00      	cmp	r2, #0
 80149a4:	d1eb      	bne.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80149a6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80149a8:	e7e9      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80149aa:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 80149ac:	e7e7      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80149ae:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80149b0:	e7e5      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80149b2:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 80149b4:	e7e3      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80149b6:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 80149b8:	e7e1      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80149ba:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 80149bc:	e7df      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80149be:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 80149c0:	e7dd      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80149c2:	2a0b      	cmp	r2, #11
 80149c4:	d059      	beq.n	8014a7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80149c6:	d80e      	bhi.n	80149e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 80149c8:	2a03      	cmp	r2, #3
 80149ca:	d050      	beq.n	8014a6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 80149cc:	d804      	bhi.n	80149d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 80149ce:	2a01      	cmp	r2, #1
 80149d0:	d04f      	beq.n	8014a72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 80149d2:	d950      	bls.n	8014a76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 80149d4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80149d6:	e7d2      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80149d8:	2a09      	cmp	r2, #9
 80149da:	d04e      	beq.n	8014a7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80149dc:	d801      	bhi.n	80149e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 80149de:	2a08      	cmp	r2, #8
 80149e0:	d1a0      	bne.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149e2:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 80149e4:	e7cb      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80149e6:	2a2f      	cmp	r2, #47	@ 0x2f
 80149e8:	d02d      	beq.n	8014a46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 80149ea:	d811      	bhi.n	8014a10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80149ec:	2a2d      	cmp	r2, #45	@ 0x2d
 80149ee:	d018      	beq.n	8014a22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 80149f0:	d833      	bhi.n	8014a5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 80149f2:	2a2c      	cmp	r2, #44	@ 0x2c
 80149f4:	d196      	bne.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149f6:	684a      	ldr	r2, [r1, #4]
 80149f8:	7813      	ldrb	r3, [r2, #0]
 80149fa:	7852      	ldrb	r2, [r2, #1]
 80149fc:	2a00      	cmp	r2, #0
 80149fe:	d191      	bne.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a00:	2b01      	cmp	r3, #1
 8014a02:	d01e      	beq.n	8014a42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014a04:	2b00      	cmp	r3, #0
 8014a06:	d030      	beq.n	8014a6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8014a08:	2b02      	cmp	r3, #2
 8014a0a:	d18b      	bne.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a0c:	6903      	ldr	r3, [r0, #16]
 8014a0e:	e7b6      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a10:	2a31      	cmp	r2, #49	@ 0x31
 8014a12:	d004      	beq.n	8014a1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8014a14:	d333      	bcc.n	8014a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8014a16:	2a32      	cmp	r2, #50	@ 0x32
 8014a18:	d031      	beq.n	8014a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8014a1a:	2a33      	cmp	r2, #51	@ 0x33
 8014a1c:	d182      	bne.n	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a1e:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8014a20:	e7ad      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a22:	684a      	ldr	r2, [r1, #4]
 8014a24:	7813      	ldrb	r3, [r2, #0]
 8014a26:	7852      	ldrb	r2, [r2, #1]
 8014a28:	2a00      	cmp	r2, #0
 8014a2a:	f47f af7b 	bne.w	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a2e:	2b01      	cmp	r3, #1
 8014a30:	d005      	beq.n	8014a3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014a32:	d310      	bcc.n	8014a56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8014a34:	2b02      	cmp	r3, #2
 8014a36:	f47f af75 	bne.w	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a3a:	6983      	ldr	r3, [r0, #24]
 8014a3c:	e79f      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a3e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8014a40:	e79d      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a42:	6a03      	ldr	r3, [r0, #32]
 8014a44:	e79b      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a46:	684b      	ldr	r3, [r1, #4]
 8014a48:	781a      	ldrb	r2, [r3, #0]
 8014a4a:	785b      	ldrb	r3, [r3, #1]
 8014a4c:	2b00      	cmp	r3, #0
 8014a4e:	f47f af69 	bne.w	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a52:	2a00      	cmp	r2, #0
 8014a54:	d193      	bne.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a56:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8014a58:	e791      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a5a:	684b      	ldr	r3, [r1, #4]
 8014a5c:	781a      	ldrb	r2, [r3, #0]
 8014a5e:	785b      	ldrb	r3, [r3, #1]
 8014a60:	2b00      	cmp	r3, #0
 8014a62:	f47f af5f 	bne.w	8014924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a66:	2a00      	cmp	r2, #0
 8014a68:	d189      	bne.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a6a:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8014a6c:	e787      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a6e:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8014a70:	e785      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a72:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8014a74:	e783      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a76:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8014a78:	e781      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a7a:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8014a7c:	e77f      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014a7e:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8014a80:	e77d      	b.n	801497e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08014a82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014a82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a86:	b087      	sub	sp, #28
 8014a88:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014a8a:	9205      	str	r2, [sp, #20]
 8014a8c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014a90:	9202      	str	r2, [sp, #8]
 8014a92:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014a96:	9101      	str	r1, [sp, #4]
 8014a98:	6841      	ldr	r1, [r0, #4]
 8014a9a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8014a9e:	fb01 2404 	mla	r4, r1, r4, r2
 8014aa2:	6802      	ldr	r2, [r0, #0]
 8014aa4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014aa8:	f8de 2000 	ldr.w	r2, [lr]
 8014aac:	9203      	str	r2, [sp, #12]
 8014aae:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014ab2:	3204      	adds	r2, #4
 8014ab4:	9204      	str	r2, [sp, #16]
 8014ab6:	9a02      	ldr	r2, [sp, #8]
 8014ab8:	43d6      	mvns	r6, r2
 8014aba:	b2f6      	uxtb	r6, r6
 8014abc:	9a01      	ldr	r2, [sp, #4]
 8014abe:	2a00      	cmp	r2, #0
 8014ac0:	dc03      	bgt.n	8014aca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8014ac2:	9a05      	ldr	r2, [sp, #20]
 8014ac4:	2a00      	cmp	r2, #0
 8014ac6:	f340 8129 	ble.w	8014d1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014aca:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014acc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014ad0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014ad4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014ad8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014ada:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014ade:	2b00      	cmp	r3, #0
 8014ae0:	dd0e      	ble.n	8014b00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014ae2:	1408      	asrs	r0, r1, #16
 8014ae4:	d405      	bmi.n	8014af2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014ae6:	4560      	cmp	r0, ip
 8014ae8:	da03      	bge.n	8014af2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014aea:	1410      	asrs	r0, r2, #16
 8014aec:	d401      	bmi.n	8014af2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014aee:	42b8      	cmp	r0, r7
 8014af0:	db07      	blt.n	8014b02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014af2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014af4:	4401      	add	r1, r0
 8014af6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8014af8:	3b01      	subs	r3, #1
 8014afa:	4402      	add	r2, r0
 8014afc:	3402      	adds	r4, #2
 8014afe:	e7ee      	b.n	8014ade <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014b00:	d071      	beq.n	8014be6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014b02:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014b04:	1e58      	subs	r0, r3, #1
 8014b06:	fb05 1500 	mla	r5, r5, r0, r1
 8014b0a:	142d      	asrs	r5, r5, #16
 8014b0c:	d45f      	bmi.n	8014bce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014b0e:	4565      	cmp	r5, ip
 8014b10:	da5d      	bge.n	8014bce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014b12:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014b14:	fb05 2000 	mla	r0, r5, r0, r2
 8014b18:	1400      	asrs	r0, r0, #16
 8014b1a:	d458      	bmi.n	8014bce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014b1c:	42b8      	cmp	r0, r7
 8014b1e:	da56      	bge.n	8014bce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014b20:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8014b24:	4699      	mov	r9, r3
 8014b26:	46a2      	mov	sl, r4
 8014b28:	f1b9 0f00 	cmp.w	r9, #0
 8014b2c:	dd57      	ble.n	8014bde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014b2e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014b32:	9803      	ldr	r0, [sp, #12]
 8014b34:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014b38:	140d      	asrs	r5, r1, #16
 8014b3a:	fb07 000c 	mla	r0, r7, ip, r0
 8014b3e:	f109 39ff 	add.w	r9, r9, #4294967295
 8014b42:	5d40      	ldrb	r0, [r0, r5]
 8014b44:	9d04      	ldr	r5, [sp, #16]
 8014b46:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014b4a:	f8ba 5000 	ldrh.w	r5, [sl]
 8014b4e:	122f      	asrs	r7, r5, #8
 8014b50:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014b54:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014b58:	fb17 f706 	smulbb	r7, r7, r6
 8014b5c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014b60:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014b64:	00ed      	lsls	r5, r5, #3
 8014b66:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014b6a:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8014b6e:	10c7      	asrs	r7, r0, #3
 8014b70:	b2ed      	uxtb	r5, r5
 8014b72:	00c0      	lsls	r0, r0, #3
 8014b74:	fb18 f806 	smulbb	r8, r8, r6
 8014b78:	fb15 f506 	smulbb	r5, r5, r6
 8014b7c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014b80:	b2c0      	uxtb	r0, r0
 8014b82:	fa1f fc8c 	uxth.w	ip, ip
 8014b86:	fb07 870b 	mla	r7, r7, fp, r8
 8014b8a:	fb00 500b 	mla	r0, r0, fp, r5
 8014b8e:	b280      	uxth	r0, r0
 8014b90:	b2bf      	uxth	r7, r7
 8014b92:	f10c 0501 	add.w	r5, ip, #1
 8014b96:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014b9a:	f107 0801 	add.w	r8, r7, #1
 8014b9e:	1c45      	adds	r5, r0, #1
 8014ba0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014ba4:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014ba8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014baa:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014bae:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014bb2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014bb6:	ea45 0c0c 	orr.w	ip, r5, ip
 8014bba:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8014bbe:	4401      	add	r1, r0
 8014bc0:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8014bc2:	ea4c 0c08 	orr.w	ip, ip, r8
 8014bc6:	f82a cb02 	strh.w	ip, [sl], #2
 8014bca:	4402      	add	r2, r0
 8014bcc:	e7ac      	b.n	8014b28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014bce:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8014bd2:	f04f 0800 	mov.w	r8, #0
 8014bd6:	eb03 0008 	add.w	r0, r3, r8
 8014bda:	2800      	cmp	r0, #0
 8014bdc:	dc41      	bgt.n	8014c62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014bde:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014be2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014be6:	9b01      	ldr	r3, [sp, #4]
 8014be8:	2b00      	cmp	r3, #0
 8014bea:	f340 8097 	ble.w	8014d1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014bee:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014bf2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8014bf6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014bfa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014bfc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014c00:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014c04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014c08:	eef0 6a62 	vmov.f32	s13, s5
 8014c0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014c10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014c14:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014c18:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8014c1c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014c20:	eef0 6a43 	vmov.f32	s13, s6
 8014c24:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014c28:	ee12 2a90 	vmov	r2, s5
 8014c2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014c30:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c34:	ee13 2a10 	vmov	r2, s6
 8014c38:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014c3a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014c3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c40:	9314      	str	r3, [sp, #80]	@ 0x50
 8014c42:	9b01      	ldr	r3, [sp, #4]
 8014c44:	9a05      	ldr	r2, [sp, #20]
 8014c46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014c4a:	3b01      	subs	r3, #1
 8014c4c:	9301      	str	r3, [sp, #4]
 8014c4e:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8014c52:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014c54:	eeb0 3a67 	vmov.f32	s6, s15
 8014c58:	bf08      	it	eq
 8014c5a:	4613      	moveq	r3, r2
 8014c5c:	eef0 2a47 	vmov.f32	s5, s14
 8014c60:	e72c      	b.n	8014abc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014c62:	140f      	asrs	r7, r1, #16
 8014c64:	d453      	bmi.n	8014d0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014c66:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014c6a:	42bd      	cmp	r5, r7
 8014c6c:	dd4f      	ble.n	8014d0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014c6e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014c72:	d44c      	bmi.n	8014d0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014c74:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014c78:	4560      	cmp	r0, ip
 8014c7a:	dd48      	ble.n	8014d0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014c7c:	9803      	ldr	r0, [sp, #12]
 8014c7e:	b22d      	sxth	r5, r5
 8014c80:	fb0c 0505 	mla	r5, ip, r5, r0
 8014c84:	5de8      	ldrb	r0, [r5, r7]
 8014c86:	9d04      	ldr	r5, [sp, #16]
 8014c88:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014c8c:	f06f 0501 	mvn.w	r5, #1
 8014c90:	fb05 fb08 	mul.w	fp, r5, r8
 8014c94:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014c98:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014c9c:	122f      	asrs	r7, r5, #8
 8014c9e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014ca2:	fb17 f706 	smulbb	r7, r7, r6
 8014ca6:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014caa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014cae:	00ed      	lsls	r5, r5, #3
 8014cb0:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014cb4:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8014cb8:	10c7      	asrs	r7, r0, #3
 8014cba:	b2ed      	uxtb	r5, r5
 8014cbc:	00c0      	lsls	r0, r0, #3
 8014cbe:	fb19 f906 	smulbb	r9, r9, r6
 8014cc2:	fb15 f506 	smulbb	r5, r5, r6
 8014cc6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014cca:	b2c0      	uxtb	r0, r0
 8014ccc:	fa1f fc8c 	uxth.w	ip, ip
 8014cd0:	fb07 970a 	mla	r7, r7, sl, r9
 8014cd4:	fb00 500a 	mla	r0, r0, sl, r5
 8014cd8:	b2bf      	uxth	r7, r7
 8014cda:	b280      	uxth	r0, r0
 8014cdc:	f10c 0501 	add.w	r5, ip, #1
 8014ce0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014ce4:	f107 0901 	add.w	r9, r7, #1
 8014ce8:	1c45      	adds	r5, r0, #1
 8014cea:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014cee:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014cf2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014cf6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014cfa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014cfe:	ea45 0c0c 	orr.w	ip, r5, ip
 8014d02:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8014d06:	ea4c 0c09 	orr.w	ip, ip, r9
 8014d0a:	f824 c00b 	strh.w	ip, [r4, fp]
 8014d0e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014d10:	4401      	add	r1, r0
 8014d12:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8014d14:	f108 38ff 	add.w	r8, r8, #4294967295
 8014d18:	4402      	add	r2, r0
 8014d1a:	e75c      	b.n	8014bd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014d1c:	b007      	add	sp, #28
 8014d1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014d22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014d22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d26:	b085      	sub	sp, #20
 8014d28:	4693      	mov	fp, r2
 8014d2a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014d2c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8014d2e:	6870      	ldr	r0, [r6, #4]
 8014d30:	9100      	str	r1, [sp, #0]
 8014d32:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014d36:	fb00 2404 	mla	r4, r0, r4, r2
 8014d3a:	6832      	ldr	r2, [r6, #0]
 8014d3c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014d40:	682a      	ldr	r2, [r5, #0]
 8014d42:	9201      	str	r2, [sp, #4]
 8014d44:	686a      	ldr	r2, [r5, #4]
 8014d46:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8014d4a:	3204      	adds	r2, #4
 8014d4c:	9202      	str	r2, [sp, #8]
 8014d4e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014d52:	9a00      	ldr	r2, [sp, #0]
 8014d54:	2a00      	cmp	r2, #0
 8014d56:	dc03      	bgt.n	8014d60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014d58:	f1bb 0f00 	cmp.w	fp, #0
 8014d5c:	f340 80a0 	ble.w	8014ea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014d60:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014d62:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014d66:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014d6a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014d6e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014d70:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014d74:	2b00      	cmp	r3, #0
 8014d76:	dd0c      	ble.n	8014d92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014d78:	1406      	asrs	r6, r0, #16
 8014d7a:	d405      	bmi.n	8014d88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014d7c:	454e      	cmp	r6, r9
 8014d7e:	da03      	bge.n	8014d88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014d80:	1416      	asrs	r6, r2, #16
 8014d82:	d401      	bmi.n	8014d88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014d84:	4546      	cmp	r6, r8
 8014d86:	db05      	blt.n	8014d94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014d88:	4470      	add	r0, lr
 8014d8a:	4462      	add	r2, ip
 8014d8c:	3b01      	subs	r3, #1
 8014d8e:	3402      	adds	r4, #2
 8014d90:	e7f0      	b.n	8014d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014d92:	d00f      	beq.n	8014db4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014d94:	1e5e      	subs	r6, r3, #1
 8014d96:	fb0e 0706 	mla	r7, lr, r6, r0
 8014d9a:	143f      	asrs	r7, r7, #16
 8014d9c:	d541      	bpl.n	8014e22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8014d9e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014da2:	4698      	mov	r8, r3
 8014da4:	9603      	str	r6, [sp, #12]
 8014da6:	f1b8 0f00 	cmp.w	r8, #0
 8014daa:	dc59      	bgt.n	8014e60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014dac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014db0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014db4:	9b00      	ldr	r3, [sp, #0]
 8014db6:	2b00      	cmp	r3, #0
 8014db8:	dd72      	ble.n	8014ea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014dba:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014dbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014dc2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014dc6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014dc8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014dcc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014dd0:	eeb0 6a62 	vmov.f32	s12, s5
 8014dd4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014dd8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ddc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014de0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014de4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014de8:	eeb0 6a43 	vmov.f32	s12, s6
 8014dec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014df0:	ee12 2a90 	vmov	r2, s5
 8014df4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014df8:	fb92 fef3 	sdiv	lr, r2, r3
 8014dfc:	ee13 2a10 	vmov	r2, s6
 8014e00:	fb92 fcf3 	sdiv	ip, r2, r3
 8014e04:	9b00      	ldr	r3, [sp, #0]
 8014e06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014e0a:	3b01      	subs	r3, #1
 8014e0c:	9300      	str	r3, [sp, #0]
 8014e0e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014e12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014e14:	eeb0 3a67 	vmov.f32	s6, s15
 8014e18:	bf08      	it	eq
 8014e1a:	465b      	moveq	r3, fp
 8014e1c:	eef0 2a47 	vmov.f32	s5, s14
 8014e20:	e797      	b.n	8014d52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014e22:	454f      	cmp	r7, r9
 8014e24:	dabb      	bge.n	8014d9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014e26:	fb0c 2606 	mla	r6, ip, r6, r2
 8014e2a:	1436      	asrs	r6, r6, #16
 8014e2c:	d4b7      	bmi.n	8014d9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014e2e:	4546      	cmp	r6, r8
 8014e30:	dab5      	bge.n	8014d9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014e32:	461e      	mov	r6, r3
 8014e34:	46a0      	mov	r8, r4
 8014e36:	2e00      	cmp	r6, #0
 8014e38:	ddb8      	ble.n	8014dac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014e3a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014e3e:	9901      	ldr	r1, [sp, #4]
 8014e40:	1417      	asrs	r7, r2, #16
 8014e42:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014e46:	fb0a 1707 	mla	r7, sl, r7, r1
 8014e4a:	9902      	ldr	r1, [sp, #8]
 8014e4c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014e50:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014e54:	f828 7b02 	strh.w	r7, [r8], #2
 8014e58:	4470      	add	r0, lr
 8014e5a:	4462      	add	r2, ip
 8014e5c:	3e01      	subs	r6, #1
 8014e5e:	e7ea      	b.n	8014e36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014e60:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014e64:	d417      	bmi.n	8014e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014e66:	68ae      	ldr	r6, [r5, #8]
 8014e68:	454e      	cmp	r6, r9
 8014e6a:	dd14      	ble.n	8014e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014e6c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014e70:	d411      	bmi.n	8014e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014e72:	68ef      	ldr	r7, [r5, #12]
 8014e74:	4557      	cmp	r7, sl
 8014e76:	dd0e      	ble.n	8014e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014e78:	9f01      	ldr	r7, [sp, #4]
 8014e7a:	b236      	sxth	r6, r6
 8014e7c:	fb0a 7606 	mla	r6, sl, r6, r7
 8014e80:	9f02      	ldr	r7, [sp, #8]
 8014e82:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014e86:	f06f 0101 	mvn.w	r1, #1
 8014e8a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014e8e:	fb01 f608 	mul.w	r6, r1, r8
 8014e92:	9903      	ldr	r1, [sp, #12]
 8014e94:	538f      	strh	r7, [r1, r6]
 8014e96:	4470      	add	r0, lr
 8014e98:	4462      	add	r2, ip
 8014e9a:	f108 38ff 	add.w	r8, r8, #4294967295
 8014e9e:	e782      	b.n	8014da6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014ea0:	b005      	add	sp, #20
 8014ea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014ea6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014ea6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014eaa:	b087      	sub	sp, #28
 8014eac:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8014eae:	9205      	str	r2, [sp, #20]
 8014eb0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014eb4:	9203      	str	r2, [sp, #12]
 8014eb6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8014eba:	9102      	str	r1, [sp, #8]
 8014ebc:	6861      	ldr	r1, [r4, #4]
 8014ebe:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8014ec2:	fb01 2000 	mla	r0, r1, r0, r2
 8014ec6:	6822      	ldr	r2, [r4, #0]
 8014ec8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8014ecc:	9200      	str	r2, [sp, #0]
 8014ece:	f8dc 2000 	ldr.w	r2, [ip]
 8014ed2:	9204      	str	r2, [sp, #16]
 8014ed4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014ed8:	3204      	adds	r2, #4
 8014eda:	9201      	str	r2, [sp, #4]
 8014edc:	9a03      	ldr	r2, [sp, #12]
 8014ede:	43d5      	mvns	r5, r2
 8014ee0:	b2ed      	uxtb	r5, r5
 8014ee2:	9a02      	ldr	r2, [sp, #8]
 8014ee4:	2a00      	cmp	r2, #0
 8014ee6:	dc03      	bgt.n	8014ef0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014ee8:	9a05      	ldr	r2, [sp, #20]
 8014eea:	2a00      	cmp	r2, #0
 8014eec:	f340 812c 	ble.w	8015148 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014ef0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014ef2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8014ef6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014efa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014efe:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014f00:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014f04:	2b00      	cmp	r3, #0
 8014f06:	dd10      	ble.n	8014f2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014f08:	140c      	asrs	r4, r1, #16
 8014f0a:	d405      	bmi.n	8014f18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f0c:	4574      	cmp	r4, lr
 8014f0e:	da03      	bge.n	8014f18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f10:	1414      	asrs	r4, r2, #16
 8014f12:	d401      	bmi.n	8014f18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f14:	42bc      	cmp	r4, r7
 8014f16:	db09      	blt.n	8014f2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014f18:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014f1a:	9800      	ldr	r0, [sp, #0]
 8014f1c:	4421      	add	r1, r4
 8014f1e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014f20:	3002      	adds	r0, #2
 8014f22:	4422      	add	r2, r4
 8014f24:	3b01      	subs	r3, #1
 8014f26:	9000      	str	r0, [sp, #0]
 8014f28:	e7ec      	b.n	8014f04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014f2a:	d071      	beq.n	8015010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014f2c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014f2e:	1e5c      	subs	r4, r3, #1
 8014f30:	fb06 1604 	mla	r6, r6, r4, r1
 8014f34:	1436      	asrs	r6, r6, #16
 8014f36:	d45d      	bmi.n	8014ff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014f38:	4576      	cmp	r6, lr
 8014f3a:	da5b      	bge.n	8014ff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014f3c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8014f3e:	fb06 2404 	mla	r4, r6, r4, r2
 8014f42:	1424      	asrs	r4, r4, #16
 8014f44:	d456      	bmi.n	8014ff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014f46:	42bc      	cmp	r4, r7
 8014f48:	da54      	bge.n	8014ff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014f4a:	f8dd 9000 	ldr.w	r9, [sp]
 8014f4e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014f52:	4698      	mov	r8, r3
 8014f54:	f1b8 0f00 	cmp.w	r8, #0
 8014f58:	dd54      	ble.n	8015004 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014f5a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014f5e:	9804      	ldr	r0, [sp, #16]
 8014f60:	1414      	asrs	r4, r2, #16
 8014f62:	fb07 0404 	mla	r4, r7, r4, r0
 8014f66:	140e      	asrs	r6, r1, #16
 8014f68:	9801      	ldr	r0, [sp, #4]
 8014f6a:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014f6e:	f8b9 4000 	ldrh.w	r4, [r9]
 8014f72:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014f76:	eb00 0b0e 	add.w	fp, r0, lr
 8014f7a:	1227      	asrs	r7, r4, #8
 8014f7c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014f80:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014f84:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8014f88:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014f8a:	fb16 f60a 	smulbb	r6, r6, sl
 8014f8e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014f92:	fb07 6705 	mla	r7, r7, r5, r6
 8014f96:	10e6      	asrs	r6, r4, #3
 8014f98:	00e4      	lsls	r4, r4, #3
 8014f9a:	b2e4      	uxtb	r4, r4
 8014f9c:	fb1b fb0a 	smulbb	fp, fp, sl
 8014fa0:	fb14 f405 	smulbb	r4, r4, r5
 8014fa4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014fa8:	b2bf      	uxth	r7, r7
 8014faa:	fb06 b605 	mla	r6, r6, r5, fp
 8014fae:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8014fb2:	b2b6      	uxth	r6, r6
 8014fb4:	fa1f fe8e 	uxth.w	lr, lr
 8014fb8:	1c7c      	adds	r4, r7, #1
 8014fba:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014fbe:	f106 0b01 	add.w	fp, r6, #1
 8014fc2:	f10e 0401 	add.w	r4, lr, #1
 8014fc6:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8014fca:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014fce:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014fd2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014fd6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014fda:	4327      	orrs	r7, r4
 8014fdc:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8014fe0:	4401      	add	r1, r0
 8014fe2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8014fe4:	ea47 070b 	orr.w	r7, r7, fp
 8014fe8:	f829 7b02 	strh.w	r7, [r9], #2
 8014fec:	4402      	add	r2, r0
 8014fee:	f108 38ff 	add.w	r8, r8, #4294967295
 8014ff2:	e7af      	b.n	8014f54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8014ff4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014ff8:	f04f 0e00 	mov.w	lr, #0
 8014ffc:	eb03 040e 	add.w	r4, r3, lr
 8015000:	2c00      	cmp	r4, #0
 8015002:	dc43      	bgt.n	801508c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8015004:	9a00      	ldr	r2, [sp, #0]
 8015006:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801500a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801500e:	9300      	str	r3, [sp, #0]
 8015010:	9b02      	ldr	r3, [sp, #8]
 8015012:	2b00      	cmp	r3, #0
 8015014:	f340 8098 	ble.w	8015148 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015018:	ee30 0a04 	vadd.f32	s0, s0, s8
 801501c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8015020:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015024:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015026:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801502a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801502e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015032:	eef0 6a62 	vmov.f32	s13, s5
 8015036:	ee61 7a27 	vmul.f32	s15, s2, s15
 801503a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801503e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015042:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015046:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801504a:	eef0 6a43 	vmov.f32	s13, s6
 801504e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015052:	ee12 2a90 	vmov	r2, s5
 8015056:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801505a:	fb92 f3f3 	sdiv	r3, r2, r3
 801505e:	ee13 2a10 	vmov	r2, s6
 8015062:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015064:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015066:	fb92 f3f3 	sdiv	r3, r2, r3
 801506a:	9314      	str	r3, [sp, #80]	@ 0x50
 801506c:	9b02      	ldr	r3, [sp, #8]
 801506e:	9a05      	ldr	r2, [sp, #20]
 8015070:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015074:	3b01      	subs	r3, #1
 8015076:	9302      	str	r3, [sp, #8]
 8015078:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801507c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801507e:	eeb0 3a67 	vmov.f32	s6, s15
 8015082:	bf08      	it	eq
 8015084:	4613      	moveq	r3, r2
 8015086:	eef0 2a47 	vmov.f32	s5, s14
 801508a:	e72a      	b.n	8014ee2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801508c:	140f      	asrs	r7, r1, #16
 801508e:	d454      	bmi.n	801513a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015090:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8015094:	42be      	cmp	r6, r7
 8015096:	dd50      	ble.n	801513a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015098:	ea5f 4822 	movs.w	r8, r2, asr #16
 801509c:	d44d      	bmi.n	801513a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801509e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80150a2:	4544      	cmp	r4, r8
 80150a4:	dd49      	ble.n	801513a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80150a6:	9c04      	ldr	r4, [sp, #16]
 80150a8:	b236      	sxth	r6, r6
 80150aa:	fb08 4606 	mla	r6, r8, r6, r4
 80150ae:	f06f 0001 	mvn.w	r0, #1
 80150b2:	f816 8007 	ldrb.w	r8, [r6, r7]
 80150b6:	9c01      	ldr	r4, [sp, #4]
 80150b8:	fb00 fa0e 	mul.w	sl, r0, lr
 80150bc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80150c0:	9800      	ldr	r0, [sp, #0]
 80150c2:	eb04 0b08 	add.w	fp, r4, r8
 80150c6:	f830 400a 	ldrh.w	r4, [r0, sl]
 80150ca:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80150ce:	9801      	ldr	r0, [sp, #4]
 80150d0:	f89b b001 	ldrb.w	fp, [fp, #1]
 80150d4:	f810 8008 	ldrb.w	r8, [r0, r8]
 80150d8:	9800      	ldr	r0, [sp, #0]
 80150da:	1227      	asrs	r7, r4, #8
 80150dc:	fb16 f609 	smulbb	r6, r6, r9
 80150e0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80150e4:	fb07 6705 	mla	r7, r7, r5, r6
 80150e8:	10e6      	asrs	r6, r4, #3
 80150ea:	00e4      	lsls	r4, r4, #3
 80150ec:	b2e4      	uxtb	r4, r4
 80150ee:	fb1b fb09 	smulbb	fp, fp, r9
 80150f2:	fb14 f405 	smulbb	r4, r4, r5
 80150f6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80150fa:	b2bf      	uxth	r7, r7
 80150fc:	fb06 b605 	mla	r6, r6, r5, fp
 8015100:	fb08 4809 	mla	r8, r8, r9, r4
 8015104:	b2b6      	uxth	r6, r6
 8015106:	fa1f f888 	uxth.w	r8, r8
 801510a:	1c7c      	adds	r4, r7, #1
 801510c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8015110:	f106 0b01 	add.w	fp, r6, #1
 8015114:	f108 0401 	add.w	r4, r8, #1
 8015118:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801511c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8015120:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015124:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015128:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801512c:	4327      	orrs	r7, r4
 801512e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8015132:	ea47 070b 	orr.w	r7, r7, fp
 8015136:	f820 700a 	strh.w	r7, [r0, sl]
 801513a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801513c:	4401      	add	r1, r0
 801513e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8015140:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015144:	4402      	add	r2, r0
 8015146:	e759      	b.n	8014ffc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015148:	b007      	add	sp, #28
 801514a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015150 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015154:	b085      	sub	sp, #20
 8015156:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801515a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801515c:	9203      	str	r2, [sp, #12]
 801515e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015162:	6870      	ldr	r0, [r6, #4]
 8015164:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8015166:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801516a:	686f      	ldr	r7, [r5, #4]
 801516c:	9101      	str	r1, [sp, #4]
 801516e:	fb00 2404 	mla	r4, r0, r4, r2
 8015172:	6832      	ldr	r2, [r6, #0]
 8015174:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015178:	682a      	ldr	r2, [r5, #0]
 801517a:	9202      	str	r2, [sp, #8]
 801517c:	3704      	adds	r7, #4
 801517e:	9a01      	ldr	r2, [sp, #4]
 8015180:	2a00      	cmp	r2, #0
 8015182:	dc03      	bgt.n	801518c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015184:	9a03      	ldr	r2, [sp, #12]
 8015186:	2a00      	cmp	r2, #0
 8015188:	f340 80cc 	ble.w	8015324 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801518c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801518e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015192:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015196:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801519a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801519c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80151a0:	2b00      	cmp	r3, #0
 80151a2:	dd0d      	ble.n	80151c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80151a4:	1406      	asrs	r6, r0, #16
 80151a6:	d405      	bmi.n	80151b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80151a8:	454e      	cmp	r6, r9
 80151aa:	da03      	bge.n	80151b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80151ac:	1416      	asrs	r6, r2, #16
 80151ae:	d401      	bmi.n	80151b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80151b0:	4546      	cmp	r6, r8
 80151b2:	db06      	blt.n	80151c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80151b4:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 80151b6:	4460      	add	r0, ip
 80151b8:	4432      	add	r2, r6
 80151ba:	3b01      	subs	r3, #1
 80151bc:	3402      	adds	r4, #2
 80151be:	e7ef      	b.n	80151a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80151c0:	d00f      	beq.n	80151e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80151c2:	1e5e      	subs	r6, r3, #1
 80151c4:	fb0c 0e06 	mla	lr, ip, r6, r0
 80151c8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80151cc:	d543      	bpl.n	8015256 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80151ce:	4698      	mov	r8, r3
 80151d0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80151d4:	f1b8 0f00 	cmp.w	r8, #0
 80151d8:	dc71      	bgt.n	80152be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80151da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80151de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80151e2:	9b01      	ldr	r3, [sp, #4]
 80151e4:	2b00      	cmp	r3, #0
 80151e6:	f340 809d 	ble.w	8015324 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80151ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 80151ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80151f2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80151f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80151f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80151fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015200:	eeb0 6a62 	vmov.f32	s12, s5
 8015204:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015208:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801520c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015210:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015214:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015218:	eeb0 6a43 	vmov.f32	s12, s6
 801521c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015220:	ee12 2a90 	vmov	r2, s5
 8015224:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015228:	fb92 fcf3 	sdiv	ip, r2, r3
 801522c:	ee13 2a10 	vmov	r2, s6
 8015230:	fb92 f3f3 	sdiv	r3, r2, r3
 8015234:	9312      	str	r3, [sp, #72]	@ 0x48
 8015236:	9b01      	ldr	r3, [sp, #4]
 8015238:	9a03      	ldr	r2, [sp, #12]
 801523a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801523e:	3b01      	subs	r3, #1
 8015240:	9301      	str	r3, [sp, #4]
 8015242:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8015246:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015248:	eeb0 3a67 	vmov.f32	s6, s15
 801524c:	bf08      	it	eq
 801524e:	4613      	moveq	r3, r2
 8015250:	eef0 2a47 	vmov.f32	s5, s14
 8015254:	e793      	b.n	801517e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015256:	45ce      	cmp	lr, r9
 8015258:	dab9      	bge.n	80151ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801525a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801525c:	fb01 2606 	mla	r6, r1, r6, r2
 8015260:	1436      	asrs	r6, r6, #16
 8015262:	d4b4      	bmi.n	80151ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015264:	4546      	cmp	r6, r8
 8015266:	dab2      	bge.n	80151ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015268:	4698      	mov	r8, r3
 801526a:	46a2      	mov	sl, r4
 801526c:	f1b8 0f00 	cmp.w	r8, #0
 8015270:	ddb3      	ble.n	80151da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015272:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015276:	9902      	ldr	r1, [sp, #8]
 8015278:	1416      	asrs	r6, r2, #16
 801527a:	fb09 1606 	mla	r6, r9, r6, r1
 801527e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8015282:	492a      	ldr	r1, [pc, #168]	@ (801532c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8015284:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8015288:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801528c:	eb07 0b0e 	add.w	fp, r7, lr
 8015290:	4460      	add	r0, ip
 8015292:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8015296:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801529a:	00f6      	lsls	r6, r6, #3
 801529c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80152a0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80152a4:	ea49 0606 	orr.w	r6, r9, r6
 80152a8:	f817 900e 	ldrb.w	r9, [r7, lr]
 80152ac:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80152ae:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80152b2:	f82a 6b02 	strh.w	r6, [sl], #2
 80152b6:	440a      	add	r2, r1
 80152b8:	f108 38ff 	add.w	r8, r8, #4294967295
 80152bc:	e7d6      	b.n	801526c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80152be:	ea5f 4920 	movs.w	r9, r0, asr #16
 80152c2:	d429      	bmi.n	8015318 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80152c4:	68ae      	ldr	r6, [r5, #8]
 80152c6:	454e      	cmp	r6, r9
 80152c8:	dd26      	ble.n	8015318 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80152ca:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80152ce:	d423      	bmi.n	8015318 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80152d0:	68e9      	ldr	r1, [r5, #12]
 80152d2:	4559      	cmp	r1, fp
 80152d4:	dd20      	ble.n	8015318 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80152d6:	9902      	ldr	r1, [sp, #8]
 80152d8:	fa0f fe86 	sxth.w	lr, r6
 80152dc:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80152e0:	f06f 0101 	mvn.w	r1, #1
 80152e4:	f81e e009 	ldrb.w	lr, [lr, r9]
 80152e8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80152ec:	eb07 060e 	add.w	r6, r7, lr
 80152f0:	fb01 f908 	mul.w	r9, r1, r8
 80152f4:	f896 b002 	ldrb.w	fp, [r6, #2]
 80152f8:	7876      	ldrb	r6, [r6, #1]
 80152fa:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 80152fe:	00f6      	lsls	r6, r6, #3
 8015300:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8015304:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015308:	ea4b 0606 	orr.w	r6, fp, r6
 801530c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8015310:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8015314:	f82a 6009 	strh.w	r6, [sl, r9]
 8015318:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801531a:	4460      	add	r0, ip
 801531c:	440a      	add	r2, r1
 801531e:	f108 38ff 	add.w	r8, r8, #4294967295
 8015322:	e757      	b.n	80151d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015324:	b005      	add	sp, #20
 8015326:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801532a:	bf00      	nop
 801532c:	fffff800 	.word	0xfffff800

08015330 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015334:	b087      	sub	sp, #28
 8015336:	468b      	mov	fp, r1
 8015338:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801533a:	9204      	str	r2, [sp, #16]
 801533c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015340:	9205      	str	r2, [sp, #20]
 8015342:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8015346:	6841      	ldr	r1, [r0, #4]
 8015348:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801534c:	fb01 2404 	mla	r4, r1, r4, r2
 8015350:	6802      	ldr	r2, [r0, #0]
 8015352:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015356:	f8dc 2000 	ldr.w	r2, [ip]
 801535a:	9201      	str	r2, [sp, #4]
 801535c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015360:	3204      	adds	r2, #4
 8015362:	9202      	str	r2, [sp, #8]
 8015364:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015368:	f1bb 0f00 	cmp.w	fp, #0
 801536c:	dc03      	bgt.n	8015376 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801536e:	9a04      	ldr	r2, [sp, #16]
 8015370:	2a00      	cmp	r2, #0
 8015372:	f340 8138 	ble.w	80155e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015376:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015378:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801537c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8015380:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015384:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015386:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801538a:	2b00      	cmp	r3, #0
 801538c:	dd0e      	ble.n	80153ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801538e:	1402      	asrs	r2, r0, #16
 8015390:	d405      	bmi.n	801539e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015392:	42ba      	cmp	r2, r7
 8015394:	da03      	bge.n	801539e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015396:	140a      	asrs	r2, r1, #16
 8015398:	d401      	bmi.n	801539e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801539a:	42b2      	cmp	r2, r6
 801539c:	db07      	blt.n	80153ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801539e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80153a0:	4410      	add	r0, r2
 80153a2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80153a4:	3b01      	subs	r3, #1
 80153a6:	4411      	add	r1, r2
 80153a8:	3402      	adds	r4, #2
 80153aa:	e7ee      	b.n	801538a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80153ac:	d019      	beq.n	80153e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80153ae:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80153b0:	1e5a      	subs	r2, r3, #1
 80153b2:	fb05 0502 	mla	r5, r5, r2, r0
 80153b6:	142d      	asrs	r5, r5, #16
 80153b8:	d409      	bmi.n	80153ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80153ba:	42bd      	cmp	r5, r7
 80153bc:	da07      	bge.n	80153ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80153be:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80153c0:	fb05 1202 	mla	r2, r5, r2, r1
 80153c4:	1412      	asrs	r2, r2, #16
 80153c6:	d402      	bmi.n	80153ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80153c8:	42b2      	cmp	r2, r6
 80153ca:	f2c0 80ac 	blt.w	8015526 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80153ce:	f04f 0e00 	mov.w	lr, #0
 80153d2:	eb03 020e 	add.w	r2, r3, lr
 80153d6:	2a00      	cmp	r2, #0
 80153d8:	dc3e      	bgt.n	8015458 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80153da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80153de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80153e2:	f1bb 0f00 	cmp.w	fp, #0
 80153e6:	f340 80fe 	ble.w	80155e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80153ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 80153ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80153f2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80153f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80153f8:	f1bb 0b01 	subs.w	fp, fp, #1
 80153fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015400:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015404:	eeb0 6a62 	vmov.f32	s12, s5
 8015408:	ee61 7a27 	vmul.f32	s15, s2, s15
 801540c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015410:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015414:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015418:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801541c:	eeb0 6a43 	vmov.f32	s12, s6
 8015420:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015424:	ee12 2a90 	vmov	r2, s5
 8015428:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801542c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015430:	ee13 2a10 	vmov	r2, s6
 8015434:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015438:	9313      	str	r3, [sp, #76]	@ 0x4c
 801543a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801543c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015440:	9a04      	ldr	r2, [sp, #16]
 8015442:	9314      	str	r3, [sp, #80]	@ 0x50
 8015444:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015448:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801544a:	eeb0 3a67 	vmov.f32	s6, s15
 801544e:	bf08      	it	eq
 8015450:	4613      	moveq	r3, r2
 8015452:	eef0 2a47 	vmov.f32	s5, s14
 8015456:	e787      	b.n	8015368 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015458:	1406      	asrs	r6, r0, #16
 801545a:	d45d      	bmi.n	8015518 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801545c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8015460:	42b5      	cmp	r5, r6
 8015462:	dd59      	ble.n	8015518 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015464:	140f      	asrs	r7, r1, #16
 8015466:	d457      	bmi.n	8015518 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015468:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801546c:	42ba      	cmp	r2, r7
 801546e:	dd53      	ble.n	8015518 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015470:	9a01      	ldr	r2, [sp, #4]
 8015472:	b22d      	sxth	r5, r5
 8015474:	fb07 2505 	mla	r5, r7, r5, r2
 8015478:	5daa      	ldrb	r2, [r5, r6]
 801547a:	9d02      	ldr	r5, [sp, #8]
 801547c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015480:	0e2e      	lsrs	r6, r5, #24
 8015482:	d049      	beq.n	8015518 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015484:	f06f 0201 	mvn.w	r2, #1
 8015488:	fb02 f20e 	mul.w	r2, r2, lr
 801548c:	9203      	str	r2, [sp, #12]
 801548e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8015492:	9a05      	ldr	r2, [sp, #20]
 8015494:	4356      	muls	r6, r2
 8015496:	1c72      	adds	r2, r6, #1
 8015498:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801549c:	1212      	asrs	r2, r2, #8
 801549e:	fa1f f982 	uxth.w	r9, r2
 80154a2:	ea4f 2728 	mov.w	r7, r8, asr #8
 80154a6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80154aa:	43d2      	mvns	r2, r2
 80154ac:	b2d2      	uxtb	r2, r2
 80154ae:	fb16 f609 	smulbb	r6, r6, r9
 80154b2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80154b6:	fb07 6702 	mla	r7, r7, r2, r6
 80154ba:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80154be:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80154c2:	b2ed      	uxtb	r5, r5
 80154c4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80154c8:	fa5f f888 	uxtb.w	r8, r8
 80154cc:	fb15 f509 	smulbb	r5, r5, r9
 80154d0:	fb08 5502 	mla	r5, r8, r2, r5
 80154d4:	b2bf      	uxth	r7, r7
 80154d6:	fb1a fa09 	smulbb	sl, sl, r9
 80154da:	b2ad      	uxth	r5, r5
 80154dc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80154e0:	fb06 a602 	mla	r6, r6, r2, sl
 80154e4:	1c7a      	adds	r2, r7, #1
 80154e6:	f105 0a01 	add.w	sl, r5, #1
 80154ea:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80154ee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80154f2:	b2b6      	uxth	r6, r6
 80154f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80154f8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80154fc:	ea4a 0707 	orr.w	r7, sl, r7
 8015500:	f106 0a01 	add.w	sl, r6, #1
 8015504:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015508:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801550c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015510:	9a03      	ldr	r2, [sp, #12]
 8015512:	ea47 070a 	orr.w	r7, r7, sl
 8015516:	52a7      	strh	r7, [r4, r2]
 8015518:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801551a:	4410      	add	r0, r2
 801551c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801551e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015522:	4411      	add	r1, r2
 8015524:	e755      	b.n	80153d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015526:	f04f 0800 	mov.w	r8, #0
 801552a:	eba3 0208 	sub.w	r2, r3, r8
 801552e:	2a00      	cmp	r2, #0
 8015530:	f77f af53 	ble.w	80153da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015534:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015538:	9f01      	ldr	r7, [sp, #4]
 801553a:	140a      	asrs	r2, r1, #16
 801553c:	1405      	asrs	r5, r0, #16
 801553e:	fb06 7202 	mla	r2, r6, r2, r7
 8015542:	5d52      	ldrb	r2, [r2, r5]
 8015544:	9d02      	ldr	r5, [sp, #8]
 8015546:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801554a:	0e2e      	lsrs	r6, r5, #24
 801554c:	d044      	beq.n	80155d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801554e:	9a05      	ldr	r2, [sp, #20]
 8015550:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015554:	4356      	muls	r6, r2
 8015556:	1c72      	adds	r2, r6, #1
 8015558:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801555c:	1212      	asrs	r2, r2, #8
 801555e:	fa1f f982 	uxth.w	r9, r2
 8015562:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015566:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801556a:	43d2      	mvns	r2, r2
 801556c:	b2d2      	uxtb	r2, r2
 801556e:	fb16 f609 	smulbb	r6, r6, r9
 8015572:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015576:	fb07 6702 	mla	r7, r7, r2, r6
 801557a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801557e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015582:	b2ed      	uxtb	r5, r5
 8015584:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015588:	fa5f fe8e 	uxtb.w	lr, lr
 801558c:	fb15 f509 	smulbb	r5, r5, r9
 8015590:	fb0e 5502 	mla	r5, lr, r2, r5
 8015594:	b2bf      	uxth	r7, r7
 8015596:	fb1a fa09 	smulbb	sl, sl, r9
 801559a:	b2ad      	uxth	r5, r5
 801559c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80155a0:	fb06 a602 	mla	r6, r6, r2, sl
 80155a4:	1c7a      	adds	r2, r7, #1
 80155a6:	f105 0a01 	add.w	sl, r5, #1
 80155aa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80155ae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80155b2:	b2b6      	uxth	r6, r6
 80155b4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80155b8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80155bc:	ea4a 0707 	orr.w	r7, sl, r7
 80155c0:	f106 0a01 	add.w	sl, r6, #1
 80155c4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80155c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80155cc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80155d0:	ea47 070a 	orr.w	r7, r7, sl
 80155d4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80155d8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80155da:	4410      	add	r0, r2
 80155dc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80155de:	f108 0801 	add.w	r8, r8, #1
 80155e2:	4411      	add	r1, r2
 80155e4:	e7a1      	b.n	801552a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80155e6:	b007      	add	sp, #28
 80155e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080155ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80155ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155f0:	b085      	sub	sp, #20
 80155f2:	468b      	mov	fp, r1
 80155f4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80155f6:	9203      	str	r2, [sp, #12]
 80155f8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80155fc:	6841      	ldr	r1, [r0, #4]
 80155fe:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8015602:	fb01 2404 	mla	r4, r1, r4, r2
 8015606:	6802      	ldr	r2, [r0, #0]
 8015608:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801560c:	f8de 2000 	ldr.w	r2, [lr]
 8015610:	9200      	str	r2, [sp, #0]
 8015612:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015616:	3204      	adds	r2, #4
 8015618:	9201      	str	r2, [sp, #4]
 801561a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801561e:	f1bb 0f00 	cmp.w	fp, #0
 8015622:	dc03      	bgt.n	801562c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015624:	9a03      	ldr	r2, [sp, #12]
 8015626:	2a00      	cmp	r2, #0
 8015628:	f340 8153 	ble.w	80158d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801562c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801562e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015632:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015636:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801563a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801563c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015640:	2b00      	cmp	r3, #0
 8015642:	dd0e      	ble.n	8015662 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015644:	1408      	asrs	r0, r1, #16
 8015646:	d405      	bmi.n	8015654 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015648:	42b8      	cmp	r0, r7
 801564a:	da03      	bge.n	8015654 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801564c:	1410      	asrs	r0, r2, #16
 801564e:	d401      	bmi.n	8015654 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015650:	42b0      	cmp	r0, r6
 8015652:	db07      	blt.n	8015664 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015654:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015656:	4401      	add	r1, r0
 8015658:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801565a:	3b01      	subs	r3, #1
 801565c:	4402      	add	r2, r0
 801565e:	3402      	adds	r4, #2
 8015660:	e7ee      	b.n	8015640 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015662:	d017      	beq.n	8015694 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015664:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8015666:	1e58      	subs	r0, r3, #1
 8015668:	fb05 1500 	mla	r5, r5, r0, r1
 801566c:	142d      	asrs	r5, r5, #16
 801566e:	d409      	bmi.n	8015684 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015670:	42bd      	cmp	r5, r7
 8015672:	da07      	bge.n	8015684 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015674:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8015676:	fb05 2000 	mla	r0, r5, r0, r2
 801567a:	1400      	asrs	r0, r0, #16
 801567c:	d402      	bmi.n	8015684 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801567e:	42b0      	cmp	r0, r6
 8015680:	f2c0 80bc 	blt.w	80157fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8015684:	2600      	movs	r6, #0
 8015686:	1998      	adds	r0, r3, r6
 8015688:	2800      	cmp	r0, #0
 801568a:	dc3e      	bgt.n	801570a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801568c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015690:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015694:	f1bb 0f00 	cmp.w	fp, #0
 8015698:	f340 811b 	ble.w	80158d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801569c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80156a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80156a4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80156a8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80156aa:	f1bb 0b01 	subs.w	fp, fp, #1
 80156ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80156b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80156b6:	eeb0 6a62 	vmov.f32	s12, s5
 80156ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80156be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80156c6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80156ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80156ce:	eeb0 6a43 	vmov.f32	s12, s6
 80156d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80156d6:	ee12 2a90 	vmov	r2, s5
 80156da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80156de:	fb92 f3f3 	sdiv	r3, r2, r3
 80156e2:	ee13 2a10 	vmov	r2, s6
 80156e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156ea:	9311      	str	r3, [sp, #68]	@ 0x44
 80156ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80156ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80156f2:	9a03      	ldr	r2, [sp, #12]
 80156f4:	9312      	str	r3, [sp, #72]	@ 0x48
 80156f6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80156fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80156fc:	eeb0 3a67 	vmov.f32	s6, s15
 8015700:	bf08      	it	eq
 8015702:	4613      	moveq	r3, r2
 8015704:	eef0 2a47 	vmov.f32	s5, s14
 8015708:	e789      	b.n	801561e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801570a:	140f      	asrs	r7, r1, #16
 801570c:	d426      	bmi.n	801575c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801570e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015712:	42bd      	cmp	r5, r7
 8015714:	dd22      	ble.n	801575c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015716:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801571a:	d41f      	bmi.n	801575c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801571c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015720:	4560      	cmp	r0, ip
 8015722:	dd1b      	ble.n	801575c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015724:	9800      	ldr	r0, [sp, #0]
 8015726:	b22d      	sxth	r5, r5
 8015728:	fb0c 0505 	mla	r5, ip, r5, r0
 801572c:	5de8      	ldrb	r0, [r5, r7]
 801572e:	9d01      	ldr	r5, [sp, #4]
 8015730:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8015734:	0e07      	lsrs	r7, r0, #24
 8015736:	2fff      	cmp	r7, #255	@ 0xff
 8015738:	d116      	bne.n	8015768 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801573a:	f06f 0501 	mvn.w	r5, #1
 801573e:	fb05 f706 	mul.w	r7, r5, r6
 8015742:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8015746:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801574a:	0945      	lsrs	r5, r0, #5
 801574c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015750:	ea4c 0505 	orr.w	r5, ip, r5
 8015754:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015758:	4305      	orrs	r5, r0
 801575a:	53e5      	strh	r5, [r4, r7]
 801575c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801575e:	4401      	add	r1, r0
 8015760:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015762:	3e01      	subs	r6, #1
 8015764:	4402      	add	r2, r0
 8015766:	e78e      	b.n	8015686 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015768:	b2fd      	uxtb	r5, r7
 801576a:	2f00      	cmp	r7, #0
 801576c:	d0f6      	beq.n	801575c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801576e:	f06f 0701 	mvn.w	r7, #1
 8015772:	4377      	muls	r7, r6
 8015774:	fa1f f985 	uxth.w	r9, r5
 8015778:	f834 8007 	ldrh.w	r8, [r4, r7]
 801577c:	9702      	str	r7, [sp, #8]
 801577e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015782:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015786:	43ed      	mvns	r5, r5
 8015788:	b2ed      	uxtb	r5, r5
 801578a:	fb17 f709 	smulbb	r7, r7, r9
 801578e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015792:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015796:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801579a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801579e:	b2c0      	uxtb	r0, r0
 80157a0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80157a4:	fa5f f888 	uxtb.w	r8, r8
 80157a8:	fb10 f009 	smulbb	r0, r0, r9
 80157ac:	fb08 0005 	mla	r0, r8, r5, r0
 80157b0:	b280      	uxth	r0, r0
 80157b2:	fa1f fc8c 	uxth.w	ip, ip
 80157b6:	fb1a fa09 	smulbb	sl, sl, r9
 80157ba:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80157be:	fb07 a705 	mla	r7, r7, r5, sl
 80157c2:	f100 0a01 	add.w	sl, r0, #1
 80157c6:	f10c 0501 	add.w	r5, ip, #1
 80157ca:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80157ce:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80157d2:	b2bf      	uxth	r7, r7
 80157d4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80157d8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80157dc:	ea4a 0c0c 	orr.w	ip, sl, ip
 80157e0:	f107 0a01 	add.w	sl, r7, #1
 80157e4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80157e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80157ec:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80157f0:	9802      	ldr	r0, [sp, #8]
 80157f2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80157f6:	f824 c000 	strh.w	ip, [r4, r0]
 80157fa:	e7af      	b.n	801575c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80157fc:	f04f 0800 	mov.w	r8, #0
 8015800:	eba3 0008 	sub.w	r0, r3, r8
 8015804:	2800      	cmp	r0, #0
 8015806:	f77f af41 	ble.w	801568c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801580a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801580e:	9f00      	ldr	r7, [sp, #0]
 8015810:	1410      	asrs	r0, r2, #16
 8015812:	140d      	asrs	r5, r1, #16
 8015814:	fb06 7000 	mla	r0, r6, r0, r7
 8015818:	5d40      	ldrb	r0, [r0, r5]
 801581a:	9d01      	ldr	r5, [sp, #4]
 801581c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015820:	0e2e      	lsrs	r6, r5, #24
 8015822:	2eff      	cmp	r6, #255	@ 0xff
 8015824:	d112      	bne.n	801584c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8015826:	482c      	ldr	r0, [pc, #176]	@ (80158d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015828:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801582c:	0968      	lsrs	r0, r5, #5
 801582e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015832:	4330      	orrs	r0, r6
 8015834:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015838:	4328      	orrs	r0, r5
 801583a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801583e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015840:	4401      	add	r1, r0
 8015842:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015844:	f108 0801 	add.w	r8, r8, #1
 8015848:	4402      	add	r2, r0
 801584a:	e7d9      	b.n	8015800 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801584c:	b2f0      	uxtb	r0, r6
 801584e:	2e00      	cmp	r6, #0
 8015850:	d0f5      	beq.n	801583e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8015852:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8015856:	fa1f f980 	uxth.w	r9, r0
 801585a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801585e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015862:	43c0      	mvns	r0, r0
 8015864:	b2c0      	uxtb	r0, r0
 8015866:	fb16 f609 	smulbb	r6, r6, r9
 801586a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801586e:	fb07 6700 	mla	r7, r7, r0, r6
 8015872:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015876:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801587a:	b2ed      	uxtb	r5, r5
 801587c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015880:	fa5f fc8c 	uxtb.w	ip, ip
 8015884:	fb15 f509 	smulbb	r5, r5, r9
 8015888:	fb0c 5500 	mla	r5, ip, r0, r5
 801588c:	b2bf      	uxth	r7, r7
 801588e:	fb1a fa09 	smulbb	sl, sl, r9
 8015892:	b2ad      	uxth	r5, r5
 8015894:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015898:	fb06 a600 	mla	r6, r6, r0, sl
 801589c:	1c78      	adds	r0, r7, #1
 801589e:	f105 0a01 	add.w	sl, r5, #1
 80158a2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80158a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80158aa:	b2b6      	uxth	r6, r6
 80158ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80158b0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80158b4:	ea4a 0707 	orr.w	r7, sl, r7
 80158b8:	f106 0a01 	add.w	sl, r6, #1
 80158bc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80158c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80158c4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80158c8:	ea47 070a 	orr.w	r7, r7, sl
 80158cc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80158d0:	e7b5      	b.n	801583e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80158d2:	b005      	add	sp, #20
 80158d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80158d8:	fffff800 	.word	0xfffff800

080158dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80158dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158e0:	b087      	sub	sp, #28
 80158e2:	468b      	mov	fp, r1
 80158e4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80158e6:	9204      	str	r2, [sp, #16]
 80158e8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80158ec:	9205      	str	r2, [sp, #20]
 80158ee:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80158f2:	6861      	ldr	r1, [r4, #4]
 80158f4:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80158f8:	fb01 2000 	mla	r0, r1, r0, r2
 80158fc:	6822      	ldr	r2, [r4, #0]
 80158fe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015902:	f8de 2000 	ldr.w	r2, [lr]
 8015906:	9201      	str	r2, [sp, #4]
 8015908:	f8de 2004 	ldr.w	r2, [lr, #4]
 801590c:	9202      	str	r2, [sp, #8]
 801590e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015912:	f1bb 0f00 	cmp.w	fp, #0
 8015916:	dc03      	bgt.n	8015920 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015918:	9a04      	ldr	r2, [sp, #16]
 801591a:	2a00      	cmp	r2, #0
 801591c:	f340 8142 	ble.w	8015ba4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015920:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015922:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015926:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801592a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801592e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015930:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015934:	2b00      	cmp	r3, #0
 8015936:	dd0e      	ble.n	8015956 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015938:	140c      	asrs	r4, r1, #16
 801593a:	d405      	bmi.n	8015948 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801593c:	42bc      	cmp	r4, r7
 801593e:	da03      	bge.n	8015948 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015940:	1414      	asrs	r4, r2, #16
 8015942:	d401      	bmi.n	8015948 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015944:	42b4      	cmp	r4, r6
 8015946:	db07      	blt.n	8015958 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015948:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801594a:	4421      	add	r1, r4
 801594c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801594e:	3b01      	subs	r3, #1
 8015950:	4422      	add	r2, r4
 8015952:	3002      	adds	r0, #2
 8015954:	e7ee      	b.n	8015934 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015956:	d019      	beq.n	801598c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015958:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801595a:	1e5c      	subs	r4, r3, #1
 801595c:	fb05 1504 	mla	r5, r5, r4, r1
 8015960:	142d      	asrs	r5, r5, #16
 8015962:	d409      	bmi.n	8015978 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015964:	42bd      	cmp	r5, r7
 8015966:	da07      	bge.n	8015978 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015968:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801596a:	fb05 2404 	mla	r4, r5, r4, r2
 801596e:	1424      	asrs	r4, r4, #16
 8015970:	d402      	bmi.n	8015978 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015972:	42b4      	cmp	r4, r6
 8015974:	f2c0 80b1 	blt.w	8015ada <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015978:	f04f 0800 	mov.w	r8, #0
 801597c:	eb03 0408 	add.w	r4, r3, r8
 8015980:	2c00      	cmp	r4, #0
 8015982:	dc3e      	bgt.n	8015a02 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015984:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015988:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801598c:	f1bb 0f00 	cmp.w	fp, #0
 8015990:	f340 8108 	ble.w	8015ba4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015994:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015998:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801599c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80159a0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80159a2:	f1bb 0b01 	subs.w	fp, fp, #1
 80159a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80159aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80159ae:	eeb0 6a62 	vmov.f32	s12, s5
 80159b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80159b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80159ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80159be:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80159c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80159c6:	eeb0 6a43 	vmov.f32	s12, s6
 80159ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80159ce:	ee12 2a90 	vmov	r2, s5
 80159d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80159d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80159da:	ee13 2a10 	vmov	r2, s6
 80159de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80159e2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80159e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80159e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80159ea:	9a04      	ldr	r2, [sp, #16]
 80159ec:	9314      	str	r3, [sp, #80]	@ 0x50
 80159ee:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80159f2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80159f4:	eeb0 3a67 	vmov.f32	s6, s15
 80159f8:	bf08      	it	eq
 80159fa:	4613      	moveq	r3, r2
 80159fc:	eef0 2a47 	vmov.f32	s5, s14
 8015a00:	e787      	b.n	8015912 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8015a02:	140e      	asrs	r6, r1, #16
 8015a04:	d462      	bmi.n	8015acc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a06:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015a0a:	42b5      	cmp	r5, r6
 8015a0c:	dd5e      	ble.n	8015acc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a0e:	1417      	asrs	r7, r2, #16
 8015a10:	d45c      	bmi.n	8015acc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a12:	f8de 400c 	ldr.w	r4, [lr, #12]
 8015a16:	42bc      	cmp	r4, r7
 8015a18:	dd58      	ble.n	8015acc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a1a:	b22d      	sxth	r5, r5
 8015a1c:	fb07 6505 	mla	r5, r7, r5, r6
 8015a20:	9c02      	ldr	r4, [sp, #8]
 8015a22:	5d66      	ldrb	r6, [r4, r5]
 8015a24:	2e00      	cmp	r6, #0
 8015a26:	d051      	beq.n	8015acc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a28:	9c01      	ldr	r4, [sp, #4]
 8015a2a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8015a2e:	f06f 0401 	mvn.w	r4, #1
 8015a32:	fb04 f408 	mul.w	r4, r4, r8
 8015a36:	9403      	str	r4, [sp, #12]
 8015a38:	5b05      	ldrh	r5, [r0, r4]
 8015a3a:	9c05      	ldr	r4, [sp, #20]
 8015a3c:	4366      	muls	r6, r4
 8015a3e:	1c74      	adds	r4, r6, #1
 8015a40:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015a44:	1224      	asrs	r4, r4, #8
 8015a46:	b2a7      	uxth	r7, r4
 8015a48:	122e      	asrs	r6, r5, #8
 8015a4a:	43e4      	mvns	r4, r4
 8015a4c:	b2e4      	uxtb	r4, r4
 8015a4e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8015a52:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015a56:	fb16 f604 	smulbb	r6, r6, r4
 8015a5a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015a5e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015a62:	00ed      	lsls	r5, r5, #3
 8015a64:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015a68:	b2ed      	uxtb	r5, r5
 8015a6a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015a6e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015a72:	fb15 f504 	smulbb	r5, r5, r4
 8015a76:	fa5f f989 	uxtb.w	r9, r9
 8015a7a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8015a7e:	fb09 5507 	mla	r5, r9, r7, r5
 8015a82:	fb1a fa04 	smulbb	sl, sl, r4
 8015a86:	fa1f fc8c 	uxth.w	ip, ip
 8015a8a:	b2ad      	uxth	r5, r5
 8015a8c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015a90:	fb06 a607 	mla	r6, r6, r7, sl
 8015a94:	f10c 0401 	add.w	r4, ip, #1
 8015a98:	f105 0a01 	add.w	sl, r5, #1
 8015a9c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015aa0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015aa4:	b2b6      	uxth	r6, r6
 8015aa6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015aaa:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015aae:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015ab2:	f106 0a01 	add.w	sl, r6, #1
 8015ab6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015aba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015abe:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015ac2:	9c03      	ldr	r4, [sp, #12]
 8015ac4:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015ac8:	f820 c004 	strh.w	ip, [r0, r4]
 8015acc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015ace:	4421      	add	r1, r4
 8015ad0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015ad2:	f108 38ff 	add.w	r8, r8, #4294967295
 8015ad6:	4422      	add	r2, r4
 8015ad8:	e750      	b.n	801597c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015ada:	f04f 0900 	mov.w	r9, #0
 8015ade:	eba3 0409 	sub.w	r4, r3, r9
 8015ae2:	2c00      	cmp	r4, #0
 8015ae4:	f77f af4e 	ble.w	8015984 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015ae8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015aec:	140d      	asrs	r5, r1, #16
 8015aee:	1414      	asrs	r4, r2, #16
 8015af0:	fb06 5404 	mla	r4, r6, r4, r5
 8015af4:	9d02      	ldr	r5, [sp, #8]
 8015af6:	5d2e      	ldrb	r6, [r5, r4]
 8015af8:	2e00      	cmp	r6, #0
 8015afa:	d04c      	beq.n	8015b96 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015afc:	9d01      	ldr	r5, [sp, #4]
 8015afe:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8015b02:	9c05      	ldr	r4, [sp, #20]
 8015b04:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015b08:	4366      	muls	r6, r4
 8015b0a:	1c74      	adds	r4, r6, #1
 8015b0c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015b10:	1224      	asrs	r4, r4, #8
 8015b12:	b2a7      	uxth	r7, r4
 8015b14:	122e      	asrs	r6, r5, #8
 8015b16:	43e4      	mvns	r4, r4
 8015b18:	b2e4      	uxtb	r4, r4
 8015b1a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015b1e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015b22:	fb16 f604 	smulbb	r6, r6, r4
 8015b26:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015b2a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015b2e:	00ed      	lsls	r5, r5, #3
 8015b30:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015b34:	b2ed      	uxtb	r5, r5
 8015b36:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015b3a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015b3e:	fb15 f504 	smulbb	r5, r5, r4
 8015b42:	fa5f f888 	uxtb.w	r8, r8
 8015b46:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8015b4a:	fb08 5507 	mla	r5, r8, r7, r5
 8015b4e:	fb1a fa04 	smulbb	sl, sl, r4
 8015b52:	fa1f fc8c 	uxth.w	ip, ip
 8015b56:	b2ad      	uxth	r5, r5
 8015b58:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015b5c:	fb06 a607 	mla	r6, r6, r7, sl
 8015b60:	f10c 0401 	add.w	r4, ip, #1
 8015b64:	f105 0a01 	add.w	sl, r5, #1
 8015b68:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015b6c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015b70:	b2b6      	uxth	r6, r6
 8015b72:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015b76:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015b7a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015b7e:	f106 0a01 	add.w	sl, r6, #1
 8015b82:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015b86:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015b8a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015b8e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015b92:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015b96:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015b98:	4421      	add	r1, r4
 8015b9a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015b9c:	f109 0901 	add.w	r9, r9, #1
 8015ba0:	4422      	add	r2, r4
 8015ba2:	e79c      	b.n	8015ade <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015ba4:	b007      	add	sp, #28
 8015ba6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015baa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015baa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015bae:	b085      	sub	sp, #20
 8015bb0:	468b      	mov	fp, r1
 8015bb2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015bb4:	9203      	str	r2, [sp, #12]
 8015bb6:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8015bba:	6861      	ldr	r1, [r4, #4]
 8015bbc:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8015bc0:	fb01 2000 	mla	r0, r1, r0, r2
 8015bc4:	6822      	ldr	r2, [r4, #0]
 8015bc6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015bca:	f8d8 2000 	ldr.w	r2, [r8]
 8015bce:	9200      	str	r2, [sp, #0]
 8015bd0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8015bd4:	9201      	str	r2, [sp, #4]
 8015bd6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015bda:	f1bb 0f00 	cmp.w	fp, #0
 8015bde:	dc03      	bgt.n	8015be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015be0:	9a03      	ldr	r2, [sp, #12]
 8015be2:	2a00      	cmp	r2, #0
 8015be4:	f340 8146 	ble.w	8015e74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015be8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015bea:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015bee:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015bf2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015bf6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015bf8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015bfc:	2b00      	cmp	r3, #0
 8015bfe:	dd0e      	ble.n	8015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015c00:	140c      	asrs	r4, r1, #16
 8015c02:	d405      	bmi.n	8015c10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015c04:	42bc      	cmp	r4, r7
 8015c06:	da03      	bge.n	8015c10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015c08:	1414      	asrs	r4, r2, #16
 8015c0a:	d401      	bmi.n	8015c10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015c0c:	42b4      	cmp	r4, r6
 8015c0e:	db07      	blt.n	8015c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015c10:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8015c12:	4421      	add	r1, r4
 8015c14:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8015c16:	3b01      	subs	r3, #1
 8015c18:	4422      	add	r2, r4
 8015c1a:	3002      	adds	r0, #2
 8015c1c:	e7ee      	b.n	8015bfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015c1e:	d017      	beq.n	8015c50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015c20:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8015c22:	1e5c      	subs	r4, r3, #1
 8015c24:	fb05 1504 	mla	r5, r5, r4, r1
 8015c28:	142d      	asrs	r5, r5, #16
 8015c2a:	d409      	bmi.n	8015c40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015c2c:	42bd      	cmp	r5, r7
 8015c2e:	da07      	bge.n	8015c40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015c30:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8015c32:	fb05 2404 	mla	r4, r5, r4, r2
 8015c36:	1424      	asrs	r4, r4, #16
 8015c38:	d402      	bmi.n	8015c40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015c3a:	42b4      	cmp	r4, r6
 8015c3c:	f2c0 80b3 	blt.w	8015da6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015c40:	2600      	movs	r6, #0
 8015c42:	199c      	adds	r4, r3, r6
 8015c44:	2c00      	cmp	r4, #0
 8015c46:	dc3e      	bgt.n	8015cc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015c48:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015c4c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015c50:	f1bb 0f00 	cmp.w	fp, #0
 8015c54:	f340 810e 	ble.w	8015e74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015c58:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015c5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015c60:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015c64:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015c66:	f1bb 0b01 	subs.w	fp, fp, #1
 8015c6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015c6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015c72:	eeb0 6a62 	vmov.f32	s12, s5
 8015c76:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015c7a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015c7e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015c82:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015c86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015c8a:	eeb0 6a43 	vmov.f32	s12, s6
 8015c8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015c92:	ee12 2a90 	vmov	r2, s5
 8015c96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015c9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8015c9e:	ee13 2a10 	vmov	r2, s6
 8015ca2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ca6:	9311      	str	r3, [sp, #68]	@ 0x44
 8015ca8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015caa:	fb92 f3f3 	sdiv	r3, r2, r3
 8015cae:	9a03      	ldr	r2, [sp, #12]
 8015cb0:	9312      	str	r3, [sp, #72]	@ 0x48
 8015cb2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8015cb6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015cb8:	eeb0 3a67 	vmov.f32	s6, s15
 8015cbc:	bf08      	it	eq
 8015cbe:	4613      	moveq	r3, r2
 8015cc0:	eef0 2a47 	vmov.f32	s5, s14
 8015cc4:	e789      	b.n	8015bda <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015cc6:	140f      	asrs	r7, r1, #16
 8015cc8:	d418      	bmi.n	8015cfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015cca:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015cce:	42bd      	cmp	r5, r7
 8015cd0:	dd14      	ble.n	8015cfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015cd2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015cd6:	d411      	bmi.n	8015cfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015cd8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8015cdc:	4564      	cmp	r4, ip
 8015cde:	dd0d      	ble.n	8015cfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015ce0:	b22d      	sxth	r5, r5
 8015ce2:	fb0c 7505 	mla	r5, ip, r5, r7
 8015ce6:	9c01      	ldr	r4, [sp, #4]
 8015ce8:	5d64      	ldrb	r4, [r4, r5]
 8015cea:	2cff      	cmp	r4, #255	@ 0xff
 8015cec:	d10c      	bne.n	8015d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015cee:	9c00      	ldr	r4, [sp, #0]
 8015cf0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8015cf4:	f06f 0401 	mvn.w	r4, #1
 8015cf8:	4374      	muls	r4, r6
 8015cfa:	5305      	strh	r5, [r0, r4]
 8015cfc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8015cfe:	4421      	add	r1, r4
 8015d00:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8015d02:	3e01      	subs	r6, #1
 8015d04:	4422      	add	r2, r4
 8015d06:	e79c      	b.n	8015c42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015d08:	2c00      	cmp	r4, #0
 8015d0a:	d0f7      	beq.n	8015cfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015d0c:	9f00      	ldr	r7, [sp, #0]
 8015d0e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8015d12:	f06f 0501 	mvn.w	r5, #1
 8015d16:	4375      	muls	r5, r6
 8015d18:	9502      	str	r5, [sp, #8]
 8015d1a:	5b45      	ldrh	r5, [r0, r5]
 8015d1c:	fa1f fc84 	uxth.w	ip, r4
 8015d20:	122f      	asrs	r7, r5, #8
 8015d22:	43e4      	mvns	r4, r4
 8015d24:	b2e4      	uxtb	r4, r4
 8015d26:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015d2a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015d2e:	fb17 f704 	smulbb	r7, r7, r4
 8015d32:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015d36:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8015d3a:	00ed      	lsls	r5, r5, #3
 8015d3c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015d40:	b2ed      	uxtb	r5, r5
 8015d42:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8015d46:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015d4a:	fb15 f504 	smulbb	r5, r5, r4
 8015d4e:	fa5f f989 	uxtb.w	r9, r9
 8015d52:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8015d56:	fb09 550c 	mla	r5, r9, ip, r5
 8015d5a:	fb1a fa04 	smulbb	sl, sl, r4
 8015d5e:	fa1f fe8e 	uxth.w	lr, lr
 8015d62:	b2ad      	uxth	r5, r5
 8015d64:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015d68:	fb07 a70c 	mla	r7, r7, ip, sl
 8015d6c:	f10e 0401 	add.w	r4, lr, #1
 8015d70:	f105 0a01 	add.w	sl, r5, #1
 8015d74:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015d78:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015d7c:	b2bf      	uxth	r7, r7
 8015d7e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015d82:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8015d86:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015d8a:	f107 0a01 	add.w	sl, r7, #1
 8015d8e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015d92:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015d96:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015d9a:	9c02      	ldr	r4, [sp, #8]
 8015d9c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015da0:	f820 e004 	strh.w	lr, [r0, r4]
 8015da4:	e7aa      	b.n	8015cfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015da6:	f04f 0900 	mov.w	r9, #0
 8015daa:	eba3 0409 	sub.w	r4, r3, r9
 8015dae:	2c00      	cmp	r4, #0
 8015db0:	f77f af4a 	ble.w	8015c48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015db4:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015db8:	1414      	asrs	r4, r2, #16
 8015dba:	140d      	asrs	r5, r1, #16
 8015dbc:	fb06 5504 	mla	r5, r6, r4, r5
 8015dc0:	9c01      	ldr	r4, [sp, #4]
 8015dc2:	5d64      	ldrb	r4, [r4, r5]
 8015dc4:	2cff      	cmp	r4, #255	@ 0xff
 8015dc6:	d10b      	bne.n	8015de0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015dc8:	9c00      	ldr	r4, [sp, #0]
 8015dca:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8015dce:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015dd2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8015dd4:	4421      	add	r1, r4
 8015dd6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8015dd8:	f109 0901 	add.w	r9, r9, #1
 8015ddc:	4422      	add	r2, r4
 8015dde:	e7e4      	b.n	8015daa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015de0:	2c00      	cmp	r4, #0
 8015de2:	d0f6      	beq.n	8015dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015de4:	9e00      	ldr	r6, [sp, #0]
 8015de6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015dea:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015dee:	b2a7      	uxth	r7, r4
 8015df0:	122e      	asrs	r6, r5, #8
 8015df2:	43e4      	mvns	r4, r4
 8015df4:	b2e4      	uxtb	r4, r4
 8015df6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015dfa:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015dfe:	fb16 f604 	smulbb	r6, r6, r4
 8015e02:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015e06:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015e0a:	00ed      	lsls	r5, r5, #3
 8015e0c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015e10:	b2ed      	uxtb	r5, r5
 8015e12:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015e16:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015e1a:	fb15 f504 	smulbb	r5, r5, r4
 8015e1e:	fa5f fe8e 	uxtb.w	lr, lr
 8015e22:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8015e26:	fb0e 5507 	mla	r5, lr, r7, r5
 8015e2a:	fb1a fa04 	smulbb	sl, sl, r4
 8015e2e:	fa1f fc8c 	uxth.w	ip, ip
 8015e32:	b2ad      	uxth	r5, r5
 8015e34:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015e38:	fb06 a607 	mla	r6, r6, r7, sl
 8015e3c:	f10c 0401 	add.w	r4, ip, #1
 8015e40:	f105 0a01 	add.w	sl, r5, #1
 8015e44:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015e48:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015e4c:	b2b6      	uxth	r6, r6
 8015e4e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015e52:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015e56:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015e5a:	f106 0a01 	add.w	sl, r6, #1
 8015e5e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015e62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015e66:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015e6a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015e6e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015e72:	e7ae      	b.n	8015dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015e74:	b005      	add	sp, #20
 8015e76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015e7a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015e7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e7e:	b085      	sub	sp, #20
 8015e80:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015e82:	9203      	str	r2, [sp, #12]
 8015e84:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8015e88:	9201      	str	r2, [sp, #4]
 8015e8a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015e8e:	9100      	str	r1, [sp, #0]
 8015e90:	6841      	ldr	r1, [r0, #4]
 8015e92:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8015e96:	fb01 2404 	mla	r4, r1, r4, r2
 8015e9a:	6802      	ldr	r2, [r0, #0]
 8015e9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015ea0:	f8de 2000 	ldr.w	r2, [lr]
 8015ea4:	9202      	str	r2, [sp, #8]
 8015ea6:	9a01      	ldr	r2, [sp, #4]
 8015ea8:	43d6      	mvns	r6, r2
 8015eaa:	b2f6      	uxtb	r6, r6
 8015eac:	9a00      	ldr	r2, [sp, #0]
 8015eae:	2a00      	cmp	r2, #0
 8015eb0:	dc03      	bgt.n	8015eba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015eb2:	9a03      	ldr	r2, [sp, #12]
 8015eb4:	2a00      	cmp	r2, #0
 8015eb6:	f340 8124 	ble.w	8016102 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015eba:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015ebc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015ec0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015ec4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015ec8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015eca:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015ece:	2b00      	cmp	r3, #0
 8015ed0:	dd0e      	ble.n	8015ef0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015ed2:	1408      	asrs	r0, r1, #16
 8015ed4:	d405      	bmi.n	8015ee2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015ed6:	4560      	cmp	r0, ip
 8015ed8:	da03      	bge.n	8015ee2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015eda:	1410      	asrs	r0, r2, #16
 8015edc:	d401      	bmi.n	8015ee2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015ede:	42b8      	cmp	r0, r7
 8015ee0:	db07      	blt.n	8015ef2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015ee2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015ee4:	4401      	add	r1, r0
 8015ee6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015ee8:	3b01      	subs	r3, #1
 8015eea:	4402      	add	r2, r0
 8015eec:	3402      	adds	r4, #2
 8015eee:	e7ee      	b.n	8015ece <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015ef0:	d06e      	beq.n	8015fd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015ef2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8015ef4:	1e58      	subs	r0, r3, #1
 8015ef6:	fb05 1500 	mla	r5, r5, r0, r1
 8015efa:	142d      	asrs	r5, r5, #16
 8015efc:	d45c      	bmi.n	8015fb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015efe:	4565      	cmp	r5, ip
 8015f00:	da5a      	bge.n	8015fb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015f02:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8015f04:	fb05 2000 	mla	r0, r5, r0, r2
 8015f08:	1400      	asrs	r0, r0, #16
 8015f0a:	d455      	bmi.n	8015fb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015f0c:	42b8      	cmp	r0, r7
 8015f0e:	da53      	bge.n	8015fb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015f10:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8015f14:	4699      	mov	r9, r3
 8015f16:	46a2      	mov	sl, r4
 8015f18:	f1b9 0f00 	cmp.w	r9, #0
 8015f1c:	dd54      	ble.n	8015fc8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015f1e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015f22:	140d      	asrs	r5, r1, #16
 8015f24:	1410      	asrs	r0, r2, #16
 8015f26:	fb07 5000 	mla	r0, r7, r0, r5
 8015f2a:	9d02      	ldr	r5, [sp, #8]
 8015f2c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015f30:	f8ba 5000 	ldrh.w	r5, [sl]
 8015f34:	122f      	asrs	r7, r5, #8
 8015f36:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015f3a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015f3e:	fb17 f706 	smulbb	r7, r7, r6
 8015f42:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015f46:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015f4a:	00ed      	lsls	r5, r5, #3
 8015f4c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015f50:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8015f54:	10c7      	asrs	r7, r0, #3
 8015f56:	b2ed      	uxtb	r5, r5
 8015f58:	00c0      	lsls	r0, r0, #3
 8015f5a:	fb18 f806 	smulbb	r8, r8, r6
 8015f5e:	fb15 f506 	smulbb	r5, r5, r6
 8015f62:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015f66:	b2c0      	uxtb	r0, r0
 8015f68:	fa1f fc8c 	uxth.w	ip, ip
 8015f6c:	fb07 870b 	mla	r7, r7, fp, r8
 8015f70:	fb00 500b 	mla	r0, r0, fp, r5
 8015f74:	b280      	uxth	r0, r0
 8015f76:	b2bf      	uxth	r7, r7
 8015f78:	f10c 0501 	add.w	r5, ip, #1
 8015f7c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015f80:	f107 0801 	add.w	r8, r7, #1
 8015f84:	1c45      	adds	r5, r0, #1
 8015f86:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015f8a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015f8e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015f90:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015f94:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015f98:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015f9c:	ea45 0c0c 	orr.w	ip, r5, ip
 8015fa0:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8015fa4:	4401      	add	r1, r0
 8015fa6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015fa8:	ea4c 0c08 	orr.w	ip, ip, r8
 8015fac:	f82a cb02 	strh.w	ip, [sl], #2
 8015fb0:	4402      	add	r2, r0
 8015fb2:	f109 39ff 	add.w	r9, r9, #4294967295
 8015fb6:	e7af      	b.n	8015f18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015fb8:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8015fbc:	f04f 0800 	mov.w	r8, #0
 8015fc0:	eb03 0008 	add.w	r0, r3, r8
 8015fc4:	2800      	cmp	r0, #0
 8015fc6:	dc41      	bgt.n	801604c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015fc8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015fcc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015fd0:	9b00      	ldr	r3, [sp, #0]
 8015fd2:	2b00      	cmp	r3, #0
 8015fd4:	f340 8095 	ble.w	8016102 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015fd8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015fdc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8015fe0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015fe4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015fe6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015fea:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015fee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015ff2:	eef0 6a62 	vmov.f32	s13, s5
 8015ff6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015ffa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015ffe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016002:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8016006:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801600a:	eef0 6a43 	vmov.f32	s13, s6
 801600e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016012:	ee12 2a90 	vmov	r2, s5
 8016016:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801601a:	fb92 f3f3 	sdiv	r3, r2, r3
 801601e:	ee13 2a10 	vmov	r2, s6
 8016022:	9311      	str	r3, [sp, #68]	@ 0x44
 8016024:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016026:	fb92 f3f3 	sdiv	r3, r2, r3
 801602a:	9312      	str	r3, [sp, #72]	@ 0x48
 801602c:	9b00      	ldr	r3, [sp, #0]
 801602e:	9a03      	ldr	r2, [sp, #12]
 8016030:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016034:	3b01      	subs	r3, #1
 8016036:	9300      	str	r3, [sp, #0]
 8016038:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 801603c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801603e:	eeb0 3a67 	vmov.f32	s6, s15
 8016042:	bf08      	it	eq
 8016044:	4613      	moveq	r3, r2
 8016046:	eef0 2a47 	vmov.f32	s5, s14
 801604a:	e72f      	b.n	8015eac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801604c:	140f      	asrs	r7, r1, #16
 801604e:	d451      	bmi.n	80160f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016050:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016054:	42bd      	cmp	r5, r7
 8016056:	dd4d      	ble.n	80160f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016058:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801605c:	d44a      	bmi.n	80160f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801605e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8016062:	4560      	cmp	r0, ip
 8016064:	dd46      	ble.n	80160f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016066:	b22d      	sxth	r5, r5
 8016068:	fb0c 7505 	mla	r5, ip, r5, r7
 801606c:	9802      	ldr	r0, [sp, #8]
 801606e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8016072:	f06f 0501 	mvn.w	r5, #1
 8016076:	fb05 fb08 	mul.w	fp, r5, r8
 801607a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801607e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8016082:	122f      	asrs	r7, r5, #8
 8016084:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016088:	fb17 f706 	smulbb	r7, r7, r6
 801608c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8016090:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016094:	00ed      	lsls	r5, r5, #3
 8016096:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801609a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801609e:	10c7      	asrs	r7, r0, #3
 80160a0:	b2ed      	uxtb	r5, r5
 80160a2:	00c0      	lsls	r0, r0, #3
 80160a4:	fb19 f906 	smulbb	r9, r9, r6
 80160a8:	fb15 f506 	smulbb	r5, r5, r6
 80160ac:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80160b0:	b2c0      	uxtb	r0, r0
 80160b2:	fa1f fc8c 	uxth.w	ip, ip
 80160b6:	fb07 970a 	mla	r7, r7, sl, r9
 80160ba:	fb00 500a 	mla	r0, r0, sl, r5
 80160be:	b2bf      	uxth	r7, r7
 80160c0:	b280      	uxth	r0, r0
 80160c2:	f10c 0501 	add.w	r5, ip, #1
 80160c6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80160ca:	f107 0901 	add.w	r9, r7, #1
 80160ce:	1c45      	adds	r5, r0, #1
 80160d0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80160d4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80160d8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80160dc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80160e0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80160e4:	ea45 0c0c 	orr.w	ip, r5, ip
 80160e8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80160ec:	ea4c 0c09 	orr.w	ip, ip, r9
 80160f0:	f824 c00b 	strh.w	ip, [r4, fp]
 80160f4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80160f6:	4401      	add	r1, r0
 80160f8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80160fa:	f108 38ff 	add.w	r8, r8, #4294967295
 80160fe:	4402      	add	r2, r0
 8016100:	e75e      	b.n	8015fc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8016102:	b005      	add	sp, #20
 8016104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016108 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801610c:	b085      	sub	sp, #20
 801610e:	4693      	mov	fp, r2
 8016110:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8016112:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8016114:	6870      	ldr	r0, [r6, #4]
 8016116:	9101      	str	r1, [sp, #4]
 8016118:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801611c:	fb00 2404 	mla	r4, r0, r4, r2
 8016120:	6832      	ldr	r2, [r6, #0]
 8016122:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8016126:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801612a:	682a      	ldr	r2, [r5, #0]
 801612c:	9202      	str	r2, [sp, #8]
 801612e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016132:	9a01      	ldr	r2, [sp, #4]
 8016134:	2a00      	cmp	r2, #0
 8016136:	dc03      	bgt.n	8016140 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016138:	f1bb 0f00 	cmp.w	fp, #0
 801613c:	f340 809a 	ble.w	8016274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016140:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016142:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016146:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801614a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801614e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016150:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016154:	2b00      	cmp	r3, #0
 8016156:	dd0c      	ble.n	8016172 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016158:	1406      	asrs	r6, r0, #16
 801615a:	d405      	bmi.n	8016168 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801615c:	454e      	cmp	r6, r9
 801615e:	da03      	bge.n	8016168 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016160:	1416      	asrs	r6, r2, #16
 8016162:	d401      	bmi.n	8016168 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016164:	4546      	cmp	r6, r8
 8016166:	db05      	blt.n	8016174 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016168:	4470      	add	r0, lr
 801616a:	4462      	add	r2, ip
 801616c:	3b01      	subs	r3, #1
 801616e:	3402      	adds	r4, #2
 8016170:	e7f0      	b.n	8016154 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8016172:	d00f      	beq.n	8016194 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016174:	1e5e      	subs	r6, r3, #1
 8016176:	fb0e 0706 	mla	r7, lr, r6, r0
 801617a:	143f      	asrs	r7, r7, #16
 801617c:	d541      	bpl.n	8016202 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801617e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8016182:	4698      	mov	r8, r3
 8016184:	9603      	str	r6, [sp, #12]
 8016186:	f1b8 0f00 	cmp.w	r8, #0
 801618a:	dc56      	bgt.n	801623a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801618c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016190:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016194:	9b01      	ldr	r3, [sp, #4]
 8016196:	2b00      	cmp	r3, #0
 8016198:	dd6c      	ble.n	8016274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801619a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801619e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80161a2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80161a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80161a8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80161ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80161b0:	eeb0 6a62 	vmov.f32	s12, s5
 80161b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80161b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80161bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80161c0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80161c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80161c8:	eeb0 6a43 	vmov.f32	s12, s6
 80161cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80161d0:	ee12 2a90 	vmov	r2, s5
 80161d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80161d8:	fb92 fef3 	sdiv	lr, r2, r3
 80161dc:	ee13 2a10 	vmov	r2, s6
 80161e0:	fb92 fcf3 	sdiv	ip, r2, r3
 80161e4:	9b01      	ldr	r3, [sp, #4]
 80161e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80161ea:	3b01      	subs	r3, #1
 80161ec:	9301      	str	r3, [sp, #4]
 80161ee:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80161f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80161f4:	eeb0 3a67 	vmov.f32	s6, s15
 80161f8:	bf08      	it	eq
 80161fa:	465b      	moveq	r3, fp
 80161fc:	eef0 2a47 	vmov.f32	s5, s14
 8016200:	e797      	b.n	8016132 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8016202:	454f      	cmp	r7, r9
 8016204:	dabb      	bge.n	801617e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016206:	fb0c 2606 	mla	r6, ip, r6, r2
 801620a:	1436      	asrs	r6, r6, #16
 801620c:	d4b7      	bmi.n	801617e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801620e:	4546      	cmp	r6, r8
 8016210:	dab5      	bge.n	801617e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016212:	461e      	mov	r6, r3
 8016214:	46a0      	mov	r8, r4
 8016216:	2e00      	cmp	r6, #0
 8016218:	ddb8      	ble.n	801618c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801621a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801621e:	9902      	ldr	r1, [sp, #8]
 8016220:	1417      	asrs	r7, r2, #16
 8016222:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016226:	fb0a 9707 	mla	r7, sl, r7, r9
 801622a:	4470      	add	r0, lr
 801622c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8016230:	f828 7b02 	strh.w	r7, [r8], #2
 8016234:	4462      	add	r2, ip
 8016236:	3e01      	subs	r6, #1
 8016238:	e7ed      	b.n	8016216 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801623a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801623e:	d414      	bmi.n	801626a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016240:	68ae      	ldr	r6, [r5, #8]
 8016242:	454e      	cmp	r6, r9
 8016244:	dd11      	ble.n	801626a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016246:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801624a:	d40e      	bmi.n	801626a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801624c:	68ef      	ldr	r7, [r5, #12]
 801624e:	4557      	cmp	r7, sl
 8016250:	dd0b      	ble.n	801626a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016252:	b236      	sxth	r6, r6
 8016254:	fb0a 9606 	mla	r6, sl, r6, r9
 8016258:	9f02      	ldr	r7, [sp, #8]
 801625a:	f06f 0101 	mvn.w	r1, #1
 801625e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8016262:	fb01 f608 	mul.w	r6, r1, r8
 8016266:	9903      	ldr	r1, [sp, #12]
 8016268:	538f      	strh	r7, [r1, r6]
 801626a:	4470      	add	r0, lr
 801626c:	4462      	add	r2, ip
 801626e:	f108 38ff 	add.w	r8, r8, #4294967295
 8016272:	e788      	b.n	8016186 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016274:	b005      	add	sp, #20
 8016276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801627a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801627a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801627e:	b087      	sub	sp, #28
 8016280:	468b      	mov	fp, r1
 8016282:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8016284:	9203      	str	r2, [sp, #12]
 8016286:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801628a:	9204      	str	r2, [sp, #16]
 801628c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8016290:	6841      	ldr	r1, [r0, #4]
 8016292:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8016296:	fb01 2505 	mla	r5, r1, r5, r2
 801629a:	6802      	ldr	r2, [r0, #0]
 801629c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80162a0:	f8d9 2000 	ldr.w	r2, [r9]
 80162a4:	9201      	str	r2, [sp, #4]
 80162a6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80162aa:	f1bb 0f00 	cmp.w	fp, #0
 80162ae:	dc03      	bgt.n	80162b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80162b0:	9a03      	ldr	r2, [sp, #12]
 80162b2:	2a00      	cmp	r2, #0
 80162b4:	f340 8159 	ble.w	801656a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80162b8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80162ba:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80162be:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80162c2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80162c6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80162c8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80162cc:	2b00      	cmp	r3, #0
 80162ce:	dd0e      	ble.n	80162ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80162d0:	1402      	asrs	r2, r0, #16
 80162d2:	d405      	bmi.n	80162e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80162d4:	42ba      	cmp	r2, r7
 80162d6:	da03      	bge.n	80162e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80162d8:	140a      	asrs	r2, r1, #16
 80162da:	d401      	bmi.n	80162e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80162dc:	42b2      	cmp	r2, r6
 80162de:	db07      	blt.n	80162f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80162e0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80162e2:	4410      	add	r0, r2
 80162e4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80162e6:	3b01      	subs	r3, #1
 80162e8:	4411      	add	r1, r2
 80162ea:	3502      	adds	r5, #2
 80162ec:	e7ee      	b.n	80162cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80162ee:	d017      	beq.n	8016320 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80162f0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80162f2:	1e5a      	subs	r2, r3, #1
 80162f4:	fb04 0402 	mla	r4, r4, r2, r0
 80162f8:	1424      	asrs	r4, r4, #16
 80162fa:	d409      	bmi.n	8016310 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80162fc:	42bc      	cmp	r4, r7
 80162fe:	da07      	bge.n	8016310 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016300:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016302:	fb04 1202 	mla	r2, r4, r2, r1
 8016306:	1412      	asrs	r2, r2, #16
 8016308:	d402      	bmi.n	8016310 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801630a:	42b2      	cmp	r2, r6
 801630c:	f2c0 80bf 	blt.w	801648e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016310:	2700      	movs	r7, #0
 8016312:	19da      	adds	r2, r3, r7
 8016314:	2a00      	cmp	r2, #0
 8016316:	dc3e      	bgt.n	8016396 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016318:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801631c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8016320:	f1bb 0f00 	cmp.w	fp, #0
 8016324:	f340 8121 	ble.w	801656a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016328:	ee30 0a04 	vadd.f32	s0, s0, s8
 801632c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016330:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016334:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016336:	f1bb 0b01 	subs.w	fp, fp, #1
 801633a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801633e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016342:	eeb0 6a62 	vmov.f32	s12, s5
 8016346:	ee61 7a27 	vmul.f32	s15, s2, s15
 801634a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801634e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016352:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8016356:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801635a:	eeb0 6a43 	vmov.f32	s12, s6
 801635e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016362:	ee12 2a90 	vmov	r2, s5
 8016366:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801636a:	fb92 f3f3 	sdiv	r3, r2, r3
 801636e:	ee13 2a10 	vmov	r2, s6
 8016372:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016376:	9313      	str	r3, [sp, #76]	@ 0x4c
 8016378:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801637a:	fb92 f3f3 	sdiv	r3, r2, r3
 801637e:	9a03      	ldr	r2, [sp, #12]
 8016380:	9314      	str	r3, [sp, #80]	@ 0x50
 8016382:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8016386:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016388:	eeb0 3a67 	vmov.f32	s6, s15
 801638c:	bf08      	it	eq
 801638e:	4613      	moveq	r3, r2
 8016390:	eef0 2a47 	vmov.f32	s5, s14
 8016394:	e789      	b.n	80162aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016396:	1406      	asrs	r6, r0, #16
 8016398:	d42d      	bmi.n	80163f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801639a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801639e:	42b4      	cmp	r4, r6
 80163a0:	dd29      	ble.n	80163f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163a2:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80163a6:	d426      	bmi.n	80163f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163a8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80163ac:	4562      	cmp	r2, ip
 80163ae:	dd22      	ble.n	80163f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163b0:	b224      	sxth	r4, r4
 80163b2:	9a01      	ldr	r2, [sp, #4]
 80163b4:	fb0c 6404 	mla	r4, ip, r4, r6
 80163b8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80163bc:	0e22      	lsrs	r2, r4, #24
 80163be:	d01a      	beq.n	80163f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163c0:	9e04      	ldr	r6, [sp, #16]
 80163c2:	4372      	muls	r2, r6
 80163c4:	1c56      	adds	r6, r2, #1
 80163c6:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80163ca:	1212      	asrs	r2, r2, #8
 80163cc:	0a26      	lsrs	r6, r4, #8
 80163ce:	2aff      	cmp	r2, #255	@ 0xff
 80163d0:	9605      	str	r6, [sp, #20]
 80163d2:	d116      	bne.n	8016402 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80163d4:	f06f 0201 	mvn.w	r2, #1
 80163d8:	fb02 fc07 	mul.w	ip, r2, r7
 80163dc:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80163e0:	0962      	lsrs	r2, r4, #5
 80163e2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80163e6:	f026 0607 	bic.w	r6, r6, #7
 80163ea:	4316      	orrs	r6, r2
 80163ec:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80163f0:	4326      	orrs	r6, r4
 80163f2:	f825 600c 	strh.w	r6, [r5, ip]
 80163f6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80163f8:	4410      	add	r0, r2
 80163fa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80163fc:	3f01      	subs	r7, #1
 80163fe:	4411      	add	r1, r2
 8016400:	e787      	b.n	8016312 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016402:	f06f 0601 	mvn.w	r6, #1
 8016406:	437e      	muls	r6, r7
 8016408:	fa1f fa82 	uxth.w	sl, r2
 801640c:	f835 8006 	ldrh.w	r8, [r5, r6]
 8016410:	9602      	str	r6, [sp, #8]
 8016412:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016416:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801641a:	43d2      	mvns	r2, r2
 801641c:	b2d2      	uxtb	r2, r2
 801641e:	fb1c fc0a 	smulbb	ip, ip, sl
 8016422:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8016426:	fb0e ce02 	mla	lr, lr, r2, ip
 801642a:	b2e4      	uxtb	r4, r4
 801642c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016430:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016434:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016438:	fa5f f888 	uxtb.w	r8, r8
 801643c:	fb14 f40a 	smulbb	r4, r4, sl
 8016440:	fb08 4402 	mla	r4, r8, r2, r4
 8016444:	fa1f fe8e 	uxth.w	lr, lr
 8016448:	fb16 f60a 	smulbb	r6, r6, sl
 801644c:	b2a4      	uxth	r4, r4
 801644e:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8016452:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016456:	f10e 0201 	add.w	r2, lr, #1
 801645a:	1c66      	adds	r6, r4, #1
 801645c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016460:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016464:	fa1f fc8c 	uxth.w	ip, ip
 8016468:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801646c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8016470:	ea46 0e0e 	orr.w	lr, r6, lr
 8016474:	f10c 0601 	add.w	r6, ip, #1
 8016478:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801647c:	0976      	lsrs	r6, r6, #5
 801647e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8016482:	9a02      	ldr	r2, [sp, #8]
 8016484:	ea4e 0e06 	orr.w	lr, lr, r6
 8016488:	f825 e002 	strh.w	lr, [r5, r2]
 801648c:	e7b3      	b.n	80163f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801648e:	f04f 0800 	mov.w	r8, #0
 8016492:	eba3 0208 	sub.w	r2, r3, r8
 8016496:	2a00      	cmp	r2, #0
 8016498:	f77f af3e 	ble.w	8016318 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801649c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80164a0:	1404      	asrs	r4, r0, #16
 80164a2:	140a      	asrs	r2, r1, #16
 80164a4:	fb06 4202 	mla	r2, r6, r2, r4
 80164a8:	9c01      	ldr	r4, [sp, #4]
 80164aa:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80164ae:	0e22      	lsrs	r2, r4, #24
 80164b0:	d016      	beq.n	80164e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80164b2:	9e04      	ldr	r6, [sp, #16]
 80164b4:	4372      	muls	r2, r6
 80164b6:	1c56      	adds	r6, r2, #1
 80164b8:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80164bc:	1212      	asrs	r2, r2, #8
 80164be:	2aff      	cmp	r2, #255	@ 0xff
 80164c0:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80164c4:	d113      	bne.n	80164ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80164c6:	0962      	lsrs	r2, r4, #5
 80164c8:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80164cc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80164d0:	f026 0607 	bic.w	r6, r6, #7
 80164d4:	4316      	orrs	r6, r2
 80164d6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80164da:	4326      	orrs	r6, r4
 80164dc:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80164e0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80164e2:	4410      	add	r0, r2
 80164e4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80164e6:	f108 0801 	add.w	r8, r8, #1
 80164ea:	4411      	add	r1, r2
 80164ec:	e7d1      	b.n	8016492 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80164ee:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80164f2:	fa1f fa82 	uxth.w	sl, r2
 80164f6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80164fa:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80164fe:	43d2      	mvns	r2, r2
 8016500:	b2d2      	uxtb	r2, r2
 8016502:	fb17 f70a 	smulbb	r7, r7, sl
 8016506:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801650a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801650e:	b2e4      	uxtb	r4, r4
 8016510:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016514:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016518:	fa5f fe8e 	uxtb.w	lr, lr
 801651c:	fb14 f40a 	smulbb	r4, r4, sl
 8016520:	fb0e 4402 	mla	r4, lr, r2, r4
 8016524:	b2f6      	uxtb	r6, r6
 8016526:	fa1f fc8c 	uxth.w	ip, ip
 801652a:	fb16 f60a 	smulbb	r6, r6, sl
 801652e:	b2a4      	uxth	r4, r4
 8016530:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016534:	fb07 6702 	mla	r7, r7, r2, r6
 8016538:	f10c 0201 	add.w	r2, ip, #1
 801653c:	1c66      	adds	r6, r4, #1
 801653e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016542:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016546:	b2bf      	uxth	r7, r7
 8016548:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801654c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016550:	ea46 0c0c 	orr.w	ip, r6, ip
 8016554:	1c7e      	adds	r6, r7, #1
 8016556:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801655a:	0976      	lsrs	r6, r6, #5
 801655c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8016560:	ea4c 0c06 	orr.w	ip, ip, r6
 8016564:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016568:	e7ba      	b.n	80164e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801656a:	b007      	add	sp, #28
 801656c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016570 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016574:	b085      	sub	sp, #20
 8016576:	468b      	mov	fp, r1
 8016578:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801657a:	9203      	str	r2, [sp, #12]
 801657c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8016580:	6841      	ldr	r1, [r0, #4]
 8016582:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8016586:	fb01 2404 	mla	r4, r1, r4, r2
 801658a:	6802      	ldr	r2, [r0, #0]
 801658c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016590:	f8d8 2000 	ldr.w	r2, [r8]
 8016594:	9201      	str	r2, [sp, #4]
 8016596:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801659a:	f1bb 0f00 	cmp.w	fp, #0
 801659e:	dc03      	bgt.n	80165a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80165a0:	9a03      	ldr	r2, [sp, #12]
 80165a2:	2a00      	cmp	r2, #0
 80165a4:	f340 814f 	ble.w	8016846 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80165a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80165aa:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80165ae:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80165b2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80165b6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80165b8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80165bc:	2b00      	cmp	r3, #0
 80165be:	dd0e      	ble.n	80165de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80165c0:	1408      	asrs	r0, r1, #16
 80165c2:	d405      	bmi.n	80165d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80165c4:	42b8      	cmp	r0, r7
 80165c6:	da03      	bge.n	80165d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80165c8:	1410      	asrs	r0, r2, #16
 80165ca:	d401      	bmi.n	80165d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80165cc:	42b0      	cmp	r0, r6
 80165ce:	db07      	blt.n	80165e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80165d0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80165d2:	4401      	add	r1, r0
 80165d4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80165d6:	3b01      	subs	r3, #1
 80165d8:	4402      	add	r2, r0
 80165da:	3402      	adds	r4, #2
 80165dc:	e7ee      	b.n	80165bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80165de:	d017      	beq.n	8016610 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80165e0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80165e2:	1e58      	subs	r0, r3, #1
 80165e4:	fb05 1500 	mla	r5, r5, r0, r1
 80165e8:	142d      	asrs	r5, r5, #16
 80165ea:	d409      	bmi.n	8016600 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80165ec:	42bd      	cmp	r5, r7
 80165ee:	da07      	bge.n	8016600 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80165f0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80165f2:	fb05 2000 	mla	r0, r5, r0, r2
 80165f6:	1400      	asrs	r0, r0, #16
 80165f8:	d402      	bmi.n	8016600 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80165fa:	42b0      	cmp	r0, r6
 80165fc:	f2c0 80ba 	blt.w	8016774 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016600:	2600      	movs	r6, #0
 8016602:	1998      	adds	r0, r3, r6
 8016604:	2800      	cmp	r0, #0
 8016606:	dc3e      	bgt.n	8016686 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016608:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801660c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016610:	f1bb 0f00 	cmp.w	fp, #0
 8016614:	f340 8117 	ble.w	8016846 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016618:	ee30 0a04 	vadd.f32	s0, s0, s8
 801661c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016620:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016624:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016626:	f1bb 0b01 	subs.w	fp, fp, #1
 801662a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801662e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016632:	eeb0 6a62 	vmov.f32	s12, s5
 8016636:	ee61 7a27 	vmul.f32	s15, s2, s15
 801663a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801663e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016642:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8016646:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801664a:	eeb0 6a43 	vmov.f32	s12, s6
 801664e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016652:	ee12 2a90 	vmov	r2, s5
 8016656:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801665a:	fb92 f3f3 	sdiv	r3, r2, r3
 801665e:	ee13 2a10 	vmov	r2, s6
 8016662:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016666:	9311      	str	r3, [sp, #68]	@ 0x44
 8016668:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801666a:	fb92 f3f3 	sdiv	r3, r2, r3
 801666e:	9a03      	ldr	r2, [sp, #12]
 8016670:	9312      	str	r3, [sp, #72]	@ 0x48
 8016672:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8016676:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016678:	eeb0 3a67 	vmov.f32	s6, s15
 801667c:	bf08      	it	eq
 801667e:	4613      	moveq	r3, r2
 8016680:	eef0 2a47 	vmov.f32	s5, s14
 8016684:	e789      	b.n	801659a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8016686:	140f      	asrs	r7, r1, #16
 8016688:	d424      	bmi.n	80166d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801668a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801668e:	42bd      	cmp	r5, r7
 8016690:	dd20      	ble.n	80166d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016692:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016696:	d41d      	bmi.n	80166d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016698:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801669c:	4560      	cmp	r0, ip
 801669e:	dd19      	ble.n	80166d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80166a0:	b22d      	sxth	r5, r5
 80166a2:	fb0c 7505 	mla	r5, ip, r5, r7
 80166a6:	9801      	ldr	r0, [sp, #4]
 80166a8:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80166ac:	0e07      	lsrs	r7, r0, #24
 80166ae:	2fff      	cmp	r7, #255	@ 0xff
 80166b0:	d116      	bne.n	80166e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80166b2:	f06f 0501 	mvn.w	r5, #1
 80166b6:	fb05 f706 	mul.w	r7, r5, r6
 80166ba:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80166be:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80166c2:	0945      	lsrs	r5, r0, #5
 80166c4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80166c8:	ea4c 0505 	orr.w	r5, ip, r5
 80166cc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80166d0:	4305      	orrs	r5, r0
 80166d2:	53e5      	strh	r5, [r4, r7]
 80166d4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80166d6:	4401      	add	r1, r0
 80166d8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80166da:	3e01      	subs	r6, #1
 80166dc:	4402      	add	r2, r0
 80166de:	e790      	b.n	8016602 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80166e0:	b2fd      	uxtb	r5, r7
 80166e2:	2f00      	cmp	r7, #0
 80166e4:	d0f6      	beq.n	80166d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80166e6:	f06f 0701 	mvn.w	r7, #1
 80166ea:	4377      	muls	r7, r6
 80166ec:	fa1f f985 	uxth.w	r9, r5
 80166f0:	f834 e007 	ldrh.w	lr, [r4, r7]
 80166f4:	9702      	str	r7, [sp, #8]
 80166f6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80166fa:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80166fe:	43ed      	mvns	r5, r5
 8016700:	b2ed      	uxtb	r5, r5
 8016702:	fb17 f709 	smulbb	r7, r7, r9
 8016706:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801670a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801670e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8016712:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016716:	b2c0      	uxtb	r0, r0
 8016718:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801671c:	fa5f fe8e 	uxtb.w	lr, lr
 8016720:	fb10 f009 	smulbb	r0, r0, r9
 8016724:	fb0e 0005 	mla	r0, lr, r5, r0
 8016728:	b280      	uxth	r0, r0
 801672a:	fa1f fc8c 	uxth.w	ip, ip
 801672e:	fb1a fa09 	smulbb	sl, sl, r9
 8016732:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016736:	fb07 a705 	mla	r7, r7, r5, sl
 801673a:	f100 0a01 	add.w	sl, r0, #1
 801673e:	f10c 0501 	add.w	r5, ip, #1
 8016742:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016746:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801674a:	b2bf      	uxth	r7, r7
 801674c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016750:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016754:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016758:	f107 0a01 	add.w	sl, r7, #1
 801675c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016760:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016764:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016768:	9802      	ldr	r0, [sp, #8]
 801676a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801676e:	f824 c000 	strh.w	ip, [r4, r0]
 8016772:	e7af      	b.n	80166d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016774:	f04f 0e00 	mov.w	lr, #0
 8016778:	eba3 000e 	sub.w	r0, r3, lr
 801677c:	2800      	cmp	r0, #0
 801677e:	f77f af43 	ble.w	8016608 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016782:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8016786:	140d      	asrs	r5, r1, #16
 8016788:	1410      	asrs	r0, r2, #16
 801678a:	fb06 5000 	mla	r0, r6, r0, r5
 801678e:	9d01      	ldr	r5, [sp, #4]
 8016790:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8016794:	0e2e      	lsrs	r6, r5, #24
 8016796:	2eff      	cmp	r6, #255	@ 0xff
 8016798:	d112      	bne.n	80167c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801679a:	482c      	ldr	r0, [pc, #176]	@ (801684c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801679c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80167a0:	0968      	lsrs	r0, r5, #5
 80167a2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80167a6:	4330      	orrs	r0, r6
 80167a8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80167ac:	4328      	orrs	r0, r5
 80167ae:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80167b2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80167b4:	4401      	add	r1, r0
 80167b6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80167b8:	f10e 0e01 	add.w	lr, lr, #1
 80167bc:	4402      	add	r2, r0
 80167be:	e7db      	b.n	8016778 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80167c0:	b2f0      	uxtb	r0, r6
 80167c2:	2e00      	cmp	r6, #0
 80167c4:	d0f5      	beq.n	80167b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80167c6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80167ca:	fa1f f980 	uxth.w	r9, r0
 80167ce:	ea4f 272c 	mov.w	r7, ip, asr #8
 80167d2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80167d6:	43c0      	mvns	r0, r0
 80167d8:	b2c0      	uxtb	r0, r0
 80167da:	fb16 f609 	smulbb	r6, r6, r9
 80167de:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80167e2:	fb07 6700 	mla	r7, r7, r0, r6
 80167e6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80167ea:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80167ee:	b2ed      	uxtb	r5, r5
 80167f0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80167f4:	fa5f fc8c 	uxtb.w	ip, ip
 80167f8:	fb15 f509 	smulbb	r5, r5, r9
 80167fc:	fb0c 5500 	mla	r5, ip, r0, r5
 8016800:	b2bf      	uxth	r7, r7
 8016802:	fb1a fa09 	smulbb	sl, sl, r9
 8016806:	b2ad      	uxth	r5, r5
 8016808:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801680c:	fb06 a600 	mla	r6, r6, r0, sl
 8016810:	1c78      	adds	r0, r7, #1
 8016812:	f105 0a01 	add.w	sl, r5, #1
 8016816:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801681a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801681e:	b2b6      	uxth	r6, r6
 8016820:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016824:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016828:	ea4a 0707 	orr.w	r7, sl, r7
 801682c:	f106 0a01 	add.w	sl, r6, #1
 8016830:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016834:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016838:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801683c:	ea47 070a 	orr.w	r7, r7, sl
 8016840:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8016844:	e7b5      	b.n	80167b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016846:	b005      	add	sp, #20
 8016848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801684c:	fffff800 	.word	0xfffff800

08016850 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016854:	b087      	sub	sp, #28
 8016856:	468b      	mov	fp, r1
 8016858:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801685a:	9203      	str	r2, [sp, #12]
 801685c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016860:	9204      	str	r2, [sp, #16]
 8016862:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8016866:	6841      	ldr	r1, [r0, #4]
 8016868:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801686c:	fb01 2404 	mla	r4, r1, r4, r2
 8016870:	6802      	ldr	r2, [r0, #0]
 8016872:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016876:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801687a:	3201      	adds	r2, #1
 801687c:	f022 0201 	bic.w	r2, r2, #1
 8016880:	9200      	str	r2, [sp, #0]
 8016882:	f8d9 2000 	ldr.w	r2, [r9]
 8016886:	9201      	str	r2, [sp, #4]
 8016888:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801688c:	f1bb 0f00 	cmp.w	fp, #0
 8016890:	dc03      	bgt.n	801689a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8016892:	9a03      	ldr	r2, [sp, #12]
 8016894:	2a00      	cmp	r2, #0
 8016896:	f340 8169 	ble.w	8016b6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801689a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801689c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80168a0:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80168a4:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80168a8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80168aa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80168ae:	2b00      	cmp	r3, #0
 80168b0:	dd0e      	ble.n	80168d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80168b2:	1402      	asrs	r2, r0, #16
 80168b4:	d405      	bmi.n	80168c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80168b6:	42ba      	cmp	r2, r7
 80168b8:	da03      	bge.n	80168c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80168ba:	140a      	asrs	r2, r1, #16
 80168bc:	d401      	bmi.n	80168c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80168be:	42b2      	cmp	r2, r6
 80168c0:	db07      	blt.n	80168d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80168c2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80168c4:	4410      	add	r0, r2
 80168c6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80168c8:	3b01      	subs	r3, #1
 80168ca:	4411      	add	r1, r2
 80168cc:	3402      	adds	r4, #2
 80168ce:	e7ee      	b.n	80168ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80168d0:	d017      	beq.n	8016902 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80168d2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80168d4:	1e5a      	subs	r2, r3, #1
 80168d6:	fb05 0502 	mla	r5, r5, r2, r0
 80168da:	142d      	asrs	r5, r5, #16
 80168dc:	d409      	bmi.n	80168f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80168de:	42bd      	cmp	r5, r7
 80168e0:	da07      	bge.n	80168f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80168e2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80168e4:	fb05 1202 	mla	r2, r5, r2, r1
 80168e8:	1412      	asrs	r2, r2, #16
 80168ea:	d402      	bmi.n	80168f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80168ec:	42b2      	cmp	r2, r6
 80168ee:	f2c0 80c7 	blt.w	8016a80 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80168f2:	2700      	movs	r7, #0
 80168f4:	19da      	adds	r2, r3, r7
 80168f6:	2a00      	cmp	r2, #0
 80168f8:	dc3e      	bgt.n	8016978 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80168fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80168fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016902:	f1bb 0f00 	cmp.w	fp, #0
 8016906:	f340 8131 	ble.w	8016b6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801690a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801690e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016912:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016916:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016918:	f1bb 0b01 	subs.w	fp, fp, #1
 801691c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016920:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016924:	eeb0 6a62 	vmov.f32	s12, s5
 8016928:	ee61 7a27 	vmul.f32	s15, s2, s15
 801692c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016930:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016934:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8016938:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801693c:	eeb0 6a43 	vmov.f32	s12, s6
 8016940:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016944:	ee12 2a90 	vmov	r2, s5
 8016948:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801694c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016950:	ee13 2a10 	vmov	r2, s6
 8016954:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016958:	9313      	str	r3, [sp, #76]	@ 0x4c
 801695a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801695c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016960:	9a03      	ldr	r2, [sp, #12]
 8016962:	9314      	str	r3, [sp, #80]	@ 0x50
 8016964:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8016968:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801696a:	eeb0 3a67 	vmov.f32	s6, s15
 801696e:	bf08      	it	eq
 8016970:	4613      	moveq	r3, r2
 8016972:	eef0 2a47 	vmov.f32	s5, s14
 8016976:	e789      	b.n	801688c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016978:	1405      	asrs	r5, r0, #16
 801697a:	d435      	bmi.n	80169e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801697c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016980:	42aa      	cmp	r2, r5
 8016982:	dd31      	ble.n	80169e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016984:	140e      	asrs	r6, r1, #16
 8016986:	d42f      	bmi.n	80169e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016988:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801698c:	42b2      	cmp	r2, r6
 801698e:	dd2b      	ble.n	80169e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016990:	9a00      	ldr	r2, [sp, #0]
 8016992:	fb06 5502 	mla	r5, r6, r2, r5
 8016996:	086a      	lsrs	r2, r5, #1
 8016998:	9e01      	ldr	r6, [sp, #4]
 801699a:	5cb2      	ldrb	r2, [r6, r2]
 801699c:	07ee      	lsls	r6, r5, #31
 801699e:	bf54      	ite	pl
 80169a0:	f002 020f 	andpl.w	r2, r2, #15
 80169a4:	1112      	asrmi	r2, r2, #4
 80169a6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80169aa:	b2d2      	uxtb	r2, r2
 80169ac:	b1e2      	cbz	r2, 80169e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80169ae:	9d04      	ldr	r5, [sp, #16]
 80169b0:	436a      	muls	r2, r5
 80169b2:	1c55      	adds	r5, r2, #1
 80169b4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80169b8:	4d6e      	ldr	r5, [pc, #440]	@ (8016b74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80169ba:	682d      	ldr	r5, [r5, #0]
 80169bc:	1212      	asrs	r2, r2, #8
 80169be:	0a2e      	lsrs	r6, r5, #8
 80169c0:	2aff      	cmp	r2, #255	@ 0xff
 80169c2:	9605      	str	r6, [sp, #20]
 80169c4:	d116      	bne.n	80169f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80169c6:	f06f 0201 	mvn.w	r2, #1
 80169ca:	fb02 fc07 	mul.w	ip, r2, r7
 80169ce:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80169d2:	096a      	lsrs	r2, r5, #5
 80169d4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80169d8:	f026 0607 	bic.w	r6, r6, #7
 80169dc:	4316      	orrs	r6, r2
 80169de:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80169e2:	432e      	orrs	r6, r5
 80169e4:	f824 600c 	strh.w	r6, [r4, ip]
 80169e8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80169ea:	4410      	add	r0, r2
 80169ec:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80169ee:	3f01      	subs	r7, #1
 80169f0:	4411      	add	r1, r2
 80169f2:	e77f      	b.n	80168f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80169f4:	f06f 0601 	mvn.w	r6, #1
 80169f8:	437e      	muls	r6, r7
 80169fa:	fa1f fa82 	uxth.w	sl, r2
 80169fe:	f834 8006 	ldrh.w	r8, [r4, r6]
 8016a02:	9602      	str	r6, [sp, #8]
 8016a04:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016a08:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8016a0c:	43d2      	mvns	r2, r2
 8016a0e:	b2d2      	uxtb	r2, r2
 8016a10:	fb1c fc0a 	smulbb	ip, ip, sl
 8016a14:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8016a18:	fb0e ce02 	mla	lr, lr, r2, ip
 8016a1c:	b2ed      	uxtb	r5, r5
 8016a1e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016a22:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016a26:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016a2a:	fa5f f888 	uxtb.w	r8, r8
 8016a2e:	fb15 f50a 	smulbb	r5, r5, sl
 8016a32:	fb08 5502 	mla	r5, r8, r2, r5
 8016a36:	fa1f fe8e 	uxth.w	lr, lr
 8016a3a:	fb16 f60a 	smulbb	r6, r6, sl
 8016a3e:	b2ad      	uxth	r5, r5
 8016a40:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8016a44:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016a48:	f10e 0201 	add.w	r2, lr, #1
 8016a4c:	1c6e      	adds	r6, r5, #1
 8016a4e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016a52:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8016a56:	fa1f fc8c 	uxth.w	ip, ip
 8016a5a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016a5e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8016a62:	ea46 0e0e 	orr.w	lr, r6, lr
 8016a66:	f10c 0601 	add.w	r6, ip, #1
 8016a6a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016a6e:	0976      	lsrs	r6, r6, #5
 8016a70:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8016a74:	9a02      	ldr	r2, [sp, #8]
 8016a76:	ea4e 0e06 	orr.w	lr, lr, r6
 8016a7a:	f824 e002 	strh.w	lr, [r4, r2]
 8016a7e:	e7b3      	b.n	80169e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016a80:	f04f 0800 	mov.w	r8, #0
 8016a84:	eba3 0208 	sub.w	r2, r3, r8
 8016a88:	2a00      	cmp	r2, #0
 8016a8a:	f77f af36 	ble.w	80168fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016a8e:	9e00      	ldr	r6, [sp, #0]
 8016a90:	1402      	asrs	r2, r0, #16
 8016a92:	140d      	asrs	r5, r1, #16
 8016a94:	fb06 2505 	mla	r5, r6, r5, r2
 8016a98:	086a      	lsrs	r2, r5, #1
 8016a9a:	9e01      	ldr	r6, [sp, #4]
 8016a9c:	5cb2      	ldrb	r2, [r6, r2]
 8016a9e:	07ed      	lsls	r5, r5, #31
 8016aa0:	bf54      	ite	pl
 8016aa2:	f002 020f 	andpl.w	r2, r2, #15
 8016aa6:	1112      	asrmi	r2, r2, #4
 8016aa8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016aac:	b2d2      	uxtb	r2, r2
 8016aae:	b1c2      	cbz	r2, 8016ae2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016ab0:	9d04      	ldr	r5, [sp, #16]
 8016ab2:	436a      	muls	r2, r5
 8016ab4:	1c55      	adds	r5, r2, #1
 8016ab6:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016aba:	4d2e      	ldr	r5, [pc, #184]	@ (8016b74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016abc:	1212      	asrs	r2, r2, #8
 8016abe:	682e      	ldr	r6, [r5, #0]
 8016ac0:	2aff      	cmp	r2, #255	@ 0xff
 8016ac2:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8016ac6:	d113      	bne.n	8016af0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016ac8:	0972      	lsrs	r2, r6, #5
 8016aca:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8016ace:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016ad2:	f025 0507 	bic.w	r5, r5, #7
 8016ad6:	4315      	orrs	r5, r2
 8016ad8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016adc:	4335      	orrs	r5, r6
 8016ade:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8016ae2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016ae4:	4410      	add	r0, r2
 8016ae6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016ae8:	f108 0801 	add.w	r8, r8, #1
 8016aec:	4411      	add	r1, r2
 8016aee:	e7c9      	b.n	8016a84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016af0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016af4:	fa1f fa82 	uxth.w	sl, r2
 8016af8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016afc:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016b00:	43d2      	mvns	r2, r2
 8016b02:	b2d2      	uxtb	r2, r2
 8016b04:	fb17 f70a 	smulbb	r7, r7, sl
 8016b08:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016b0c:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016b10:	b2f6      	uxtb	r6, r6
 8016b12:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016b16:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016b1a:	fa5f fe8e 	uxtb.w	lr, lr
 8016b1e:	fb16 f60a 	smulbb	r6, r6, sl
 8016b22:	fb0e 6602 	mla	r6, lr, r2, r6
 8016b26:	b2ed      	uxtb	r5, r5
 8016b28:	fa1f fc8c 	uxth.w	ip, ip
 8016b2c:	fb15 f50a 	smulbb	r5, r5, sl
 8016b30:	b2b6      	uxth	r6, r6
 8016b32:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016b36:	fb07 5702 	mla	r7, r7, r2, r5
 8016b3a:	f10c 0201 	add.w	r2, ip, #1
 8016b3e:	1c75      	adds	r5, r6, #1
 8016b40:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016b44:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016b48:	b2bf      	uxth	r7, r7
 8016b4a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016b4e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016b52:	ea45 0c0c 	orr.w	ip, r5, ip
 8016b56:	1c7d      	adds	r5, r7, #1
 8016b58:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016b5c:	096d      	lsrs	r5, r5, #5
 8016b5e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016b62:	ea4c 0c05 	orr.w	ip, ip, r5
 8016b66:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016b6a:	e7ba      	b.n	8016ae2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016b6c:	b007      	add	sp, #28
 8016b6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b72:	bf00      	nop
 8016b74:	20013b7c 	.word	0x20013b7c

08016b78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016b78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b7c:	b087      	sub	sp, #28
 8016b7e:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8016e8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016b82:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8016b84:	9205      	str	r2, [sp, #20]
 8016b86:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8016b8a:	9101      	str	r1, [sp, #4]
 8016b8c:	6841      	ldr	r1, [r0, #4]
 8016b8e:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8016b92:	fb01 2404 	mla	r4, r1, r4, r2
 8016b96:	6802      	ldr	r2, [r0, #0]
 8016b98:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016b9c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016ba0:	3201      	adds	r2, #1
 8016ba2:	f022 0201 	bic.w	r2, r2, #1
 8016ba6:	9202      	str	r2, [sp, #8]
 8016ba8:	f8db 2000 	ldr.w	r2, [fp]
 8016bac:	9203      	str	r2, [sp, #12]
 8016bae:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016bb2:	9a01      	ldr	r2, [sp, #4]
 8016bb4:	2a00      	cmp	r2, #0
 8016bb6:	dc03      	bgt.n	8016bc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016bb8:	9a05      	ldr	r2, [sp, #20]
 8016bba:	2a00      	cmp	r2, #0
 8016bbc:	f340 8162 	ble.w	8016e84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016bc0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8016bc2:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8016bc6:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016bca:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8016bce:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016bd0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016bd4:	2b00      	cmp	r3, #0
 8016bd6:	dd0e      	ble.n	8016bf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016bd8:	1402      	asrs	r2, r0, #16
 8016bda:	d405      	bmi.n	8016be8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016bdc:	42ba      	cmp	r2, r7
 8016bde:	da03      	bge.n	8016be8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016be0:	140a      	asrs	r2, r1, #16
 8016be2:	d401      	bmi.n	8016be8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016be4:	42b2      	cmp	r2, r6
 8016be6:	db07      	blt.n	8016bf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016be8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016bea:	4410      	add	r0, r2
 8016bec:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016bee:	3b01      	subs	r3, #1
 8016bf0:	4411      	add	r1, r2
 8016bf2:	3402      	adds	r4, #2
 8016bf4:	e7ee      	b.n	8016bd4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016bf6:	d017      	beq.n	8016c28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016bf8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8016bfa:	1e5a      	subs	r2, r3, #1
 8016bfc:	fb05 0502 	mla	r5, r5, r2, r0
 8016c00:	142d      	asrs	r5, r5, #16
 8016c02:	d409      	bmi.n	8016c18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016c04:	42bd      	cmp	r5, r7
 8016c06:	da07      	bge.n	8016c18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016c08:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8016c0a:	fb05 1202 	mla	r2, r5, r2, r1
 8016c0e:	1412      	asrs	r2, r2, #16
 8016c10:	d402      	bmi.n	8016c18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016c12:	42b2      	cmp	r2, r6
 8016c14:	f2c0 80c3 	blt.w	8016d9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016c18:	2500      	movs	r5, #0
 8016c1a:	195a      	adds	r2, r3, r5
 8016c1c:	2a00      	cmp	r2, #0
 8016c1e:	dc3f      	bgt.n	8016ca0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016c20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016c24:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016c28:	9b01      	ldr	r3, [sp, #4]
 8016c2a:	2b00      	cmp	r3, #0
 8016c2c:	f340 812a 	ble.w	8016e84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016c30:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016c34:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016c38:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016c3c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016c3e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016c42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016c46:	eeb0 6a62 	vmov.f32	s12, s5
 8016c4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016c4e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016c52:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016c56:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8016c5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016c5e:	eeb0 6a43 	vmov.f32	s12, s6
 8016c62:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016c66:	ee12 2a90 	vmov	r2, s5
 8016c6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016c6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c72:	ee13 2a10 	vmov	r2, s6
 8016c76:	9313      	str	r3, [sp, #76]	@ 0x4c
 8016c78:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016c7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c7e:	9314      	str	r3, [sp, #80]	@ 0x50
 8016c80:	9b01      	ldr	r3, [sp, #4]
 8016c82:	9a05      	ldr	r2, [sp, #20]
 8016c84:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016c88:	3b01      	subs	r3, #1
 8016c8a:	9301      	str	r3, [sp, #4]
 8016c8c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8016c90:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016c92:	eeb0 3a67 	vmov.f32	s6, s15
 8016c96:	bf08      	it	eq
 8016c98:	4613      	moveq	r3, r2
 8016c9a:	eef0 2a47 	vmov.f32	s5, s14
 8016c9e:	e788      	b.n	8016bb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016ca0:	1406      	asrs	r6, r0, #16
 8016ca2:	d42c      	bmi.n	8016cfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016ca4:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016ca8:	42b2      	cmp	r2, r6
 8016caa:	dd28      	ble.n	8016cfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016cac:	140f      	asrs	r7, r1, #16
 8016cae:	d426      	bmi.n	8016cfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016cb0:	f8db 200c 	ldr.w	r2, [fp, #12]
 8016cb4:	42ba      	cmp	r2, r7
 8016cb6:	dd22      	ble.n	8016cfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016cb8:	9a02      	ldr	r2, [sp, #8]
 8016cba:	fb07 6602 	mla	r6, r7, r2, r6
 8016cbe:	0872      	lsrs	r2, r6, #1
 8016cc0:	9f03      	ldr	r7, [sp, #12]
 8016cc2:	5cba      	ldrb	r2, [r7, r2]
 8016cc4:	07f6      	lsls	r6, r6, #31
 8016cc6:	bf54      	ite	pl
 8016cc8:	f002 020f 	andpl.w	r2, r2, #15
 8016ccc:	1112      	asrmi	r2, r2, #4
 8016cce:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016cd2:	b2d2      	uxtb	r2, r2
 8016cd4:	2aff      	cmp	r2, #255	@ 0xff
 8016cd6:	d118      	bne.n	8016d0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016cd8:	f8d8 2000 	ldr.w	r2, [r8]
 8016cdc:	f06f 0601 	mvn.w	r6, #1
 8016ce0:	fb06 f705 	mul.w	r7, r6, r5
 8016ce4:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8016ce8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8016cec:	0956      	lsrs	r6, r2, #5
 8016cee:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8016cf2:	ea4c 0606 	orr.w	r6, ip, r6
 8016cf6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016cfa:	4316      	orrs	r6, r2
 8016cfc:	53e6      	strh	r6, [r4, r7]
 8016cfe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016d00:	4410      	add	r0, r2
 8016d02:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016d04:	3d01      	subs	r5, #1
 8016d06:	4411      	add	r1, r2
 8016d08:	e787      	b.n	8016c1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016d0a:	2a00      	cmp	r2, #0
 8016d0c:	d0f7      	beq.n	8016cfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016d0e:	f06f 0601 	mvn.w	r6, #1
 8016d12:	436e      	muls	r6, r5
 8016d14:	f8d8 c000 	ldr.w	ip, [r8]
 8016d18:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016d1c:	9604      	str	r6, [sp, #16]
 8016d1e:	fa1f f982 	uxth.w	r9, r2
 8016d22:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016d26:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8016d2a:	43d2      	mvns	r2, r2
 8016d2c:	b2d2      	uxtb	r2, r2
 8016d2e:	fb16 f609 	smulbb	r6, r6, r9
 8016d32:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016d36:	fb07 6702 	mla	r7, r7, r2, r6
 8016d3a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016d3e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016d42:	fa5f fc8c 	uxtb.w	ip, ip
 8016d46:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016d4a:	fa5f fe8e 	uxtb.w	lr, lr
 8016d4e:	fb1c fc09 	smulbb	ip, ip, r9
 8016d52:	fb0e cc02 	mla	ip, lr, r2, ip
 8016d56:	b2bf      	uxth	r7, r7
 8016d58:	fb1a fa09 	smulbb	sl, sl, r9
 8016d5c:	fa1f fc8c 	uxth.w	ip, ip
 8016d60:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016d64:	fb06 a602 	mla	r6, r6, r2, sl
 8016d68:	1c7a      	adds	r2, r7, #1
 8016d6a:	f10c 0a01 	add.w	sl, ip, #1
 8016d6e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016d72:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8016d76:	b2b6      	uxth	r6, r6
 8016d78:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016d7c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016d80:	ea4a 0707 	orr.w	r7, sl, r7
 8016d84:	f106 0a01 	add.w	sl, r6, #1
 8016d88:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016d8c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016d90:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016d94:	9a04      	ldr	r2, [sp, #16]
 8016d96:	ea47 070a 	orr.w	r7, r7, sl
 8016d9a:	52a7      	strh	r7, [r4, r2]
 8016d9c:	e7af      	b.n	8016cfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016d9e:	f04f 0e00 	mov.w	lr, #0
 8016da2:	eba3 020e 	sub.w	r2, r3, lr
 8016da6:	2a00      	cmp	r2, #0
 8016da8:	f77f af3a 	ble.w	8016c20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016dac:	9e02      	ldr	r6, [sp, #8]
 8016dae:	1402      	asrs	r2, r0, #16
 8016db0:	140d      	asrs	r5, r1, #16
 8016db2:	fb06 2505 	mla	r5, r6, r5, r2
 8016db6:	086a      	lsrs	r2, r5, #1
 8016db8:	9e03      	ldr	r6, [sp, #12]
 8016dba:	5cb2      	ldrb	r2, [r6, r2]
 8016dbc:	07ed      	lsls	r5, r5, #31
 8016dbe:	bf54      	ite	pl
 8016dc0:	f002 020f 	andpl.w	r2, r2, #15
 8016dc4:	1112      	asrmi	r2, r2, #4
 8016dc6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016dca:	b2d2      	uxtb	r2, r2
 8016dcc:	2aff      	cmp	r2, #255	@ 0xff
 8016dce:	d115      	bne.n	8016dfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016dd0:	f8d8 5000 	ldr.w	r5, [r8]
 8016dd4:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8016dd8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016ddc:	096a      	lsrs	r2, r5, #5
 8016dde:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016de2:	4332      	orrs	r2, r6
 8016de4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016de8:	432a      	orrs	r2, r5
 8016dea:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016dee:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8016df0:	4410      	add	r0, r2
 8016df2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016df4:	f10e 0e01 	add.w	lr, lr, #1
 8016df8:	4411      	add	r1, r2
 8016dfa:	e7d2      	b.n	8016da2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016dfc:	2a00      	cmp	r2, #0
 8016dfe:	d0f6      	beq.n	8016dee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016e00:	f8d8 7000 	ldr.w	r7, [r8]
 8016e04:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016e08:	fa1f f982 	uxth.w	r9, r2
 8016e0c:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016e10:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8016e14:	43d2      	mvns	r2, r2
 8016e16:	b2d2      	uxtb	r2, r2
 8016e18:	fb15 f509 	smulbb	r5, r5, r9
 8016e1c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016e20:	fb06 5602 	mla	r6, r6, r2, r5
 8016e24:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016e28:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016e2c:	b2ff      	uxtb	r7, r7
 8016e2e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016e32:	fa5f fc8c 	uxtb.w	ip, ip
 8016e36:	fb17 f709 	smulbb	r7, r7, r9
 8016e3a:	fb0c 7702 	mla	r7, ip, r2, r7
 8016e3e:	b2b6      	uxth	r6, r6
 8016e40:	fb1a fa09 	smulbb	sl, sl, r9
 8016e44:	b2bf      	uxth	r7, r7
 8016e46:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016e4a:	fb05 a502 	mla	r5, r5, r2, sl
 8016e4e:	1c72      	adds	r2, r6, #1
 8016e50:	f107 0a01 	add.w	sl, r7, #1
 8016e54:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016e58:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016e5c:	b2ad      	uxth	r5, r5
 8016e5e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016e62:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016e66:	ea4a 0606 	orr.w	r6, sl, r6
 8016e6a:	f105 0a01 	add.w	sl, r5, #1
 8016e6e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016e72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016e76:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016e7a:	ea46 060a 	orr.w	r6, r6, sl
 8016e7e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8016e82:	e7b4      	b.n	8016dee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016e84:	b007      	add	sp, #28
 8016e86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e8a:	bf00      	nop
 8016e8c:	20013b7c 	.word	0x20013b7c

08016e90 <_ZN8touchgfx8LCD16bppD1Ev>:
 8016e90:	4770      	bx	lr

08016e92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8016e92:	4770      	bx	lr

08016e94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8016e94:	4770      	bx	lr

08016e96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8016e96:	4770      	bx	lr

08016e98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8016e98:	4770      	bx	lr

08016e9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016e9a:	4770      	bx	lr

08016e9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016e9c:	4770      	bx	lr

08016e9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016e9e:	4770      	bx	lr

08016ea0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016ea0:	4770      	bx	lr

08016ea2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016ea2:	4770      	bx	lr

08016ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016ea4:	4770      	bx	lr

08016ea6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016ea6:	4770      	bx	lr

08016ea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016ea8:	4770      	bx	lr

08016eaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016eaa:	4770      	bx	lr

08016eac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016eac:	4770      	bx	lr

08016eae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016eae:	4770      	bx	lr

08016eb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016eb0:	4770      	bx	lr

08016eb2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016eb2:	4770      	bx	lr

08016eb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016eb4:	4770      	bx	lr

08016eb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016eb6:	4770      	bx	lr

08016eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016eb8:	4770      	bx	lr

08016eba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016eba:	4770      	bx	lr

08016ebc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016ebc:	4770      	bx	lr

08016ebe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016ebe:	4770      	bx	lr

08016ec0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016ec0:	4770      	bx	lr

08016ec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016ec2:	4770      	bx	lr

08016ec4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016ec4:	4770      	bx	lr

08016ec6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016ec6:	4770      	bx	lr

08016ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016ec8:	4770      	bx	lr

08016eca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016eca:	4770      	bx	lr

08016ecc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016ecc:	4770      	bx	lr

08016ece <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016ece:	4770      	bx	lr

08016ed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016ed0:	4770      	bx	lr

08016ed2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016ed2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016ed6:	b088      	sub	sp, #32
 8016ed8:	ac08      	add	r4, sp, #32
 8016eda:	4606      	mov	r6, r0
 8016edc:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016ee0:	4620      	mov	r0, r4
 8016ee2:	4688      	mov	r8, r1
 8016ee4:	4691      	mov	r9, r2
 8016ee6:	f7fd fc31 	bl	801474c <_ZNK8touchgfx6Bitmap7getDataEv>
 8016eea:	6833      	ldr	r3, [r6, #0]
 8016eec:	4605      	mov	r5, r0
 8016eee:	4620      	mov	r0, r4
 8016ef0:	699f      	ldr	r7, [r3, #24]
 8016ef2:	f7fd fb39 	bl	8014568 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016ef6:	4682      	mov	sl, r0
 8016ef8:	4620      	mov	r0, r4
 8016efa:	f7fd fb69 	bl	80145d0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016efe:	9500      	str	r5, [sp, #0]
 8016f00:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016f04:	464b      	mov	r3, r9
 8016f06:	a806      	add	r0, sp, #24
 8016f08:	4642      	mov	r2, r8
 8016f0a:	4631      	mov	r1, r6
 8016f0c:	47b8      	blx	r7
 8016f0e:	4628      	mov	r0, r5
 8016f10:	b008      	add	sp, #32
 8016f12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08016f18 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016f18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016f1c:	2300      	movs	r3, #0
 8016f1e:	9300      	str	r3, [sp, #0]
 8016f20:	4b3d      	ldr	r3, [pc, #244]	@ (8017018 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016f22:	781b      	ldrb	r3, [r3, #0]
 8016f24:	2b00      	cmp	r3, #0
 8016f26:	d137      	bne.n	8016f98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016f28:	4a3c      	ldr	r2, [pc, #240]	@ (801701c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016f2a:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016f2e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016f32:	2b00      	cmp	r3, #0
 8016f34:	d132      	bne.n	8016f9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8016f36:	4b3a      	ldr	r3, [pc, #232]	@ (8017020 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016f38:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016f3c:	6808      	ldr	r0, [r1, #0]
 8016f3e:	6849      	ldr	r1, [r1, #4]
 8016f40:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016f44:	ac02      	add	r4, sp, #8
 8016f46:	ab02      	add	r3, sp, #8
 8016f48:	c303      	stmia	r3!, {r0, r1}
 8016f4a:	4669      	mov	r1, sp
 8016f4c:	4620      	mov	r0, r4
 8016f4e:	f7f9 ffab 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f52:	4668      	mov	r0, sp
 8016f54:	f7f9 ff80 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f58:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016f5c:	f8bd 2000 	ldrh.w	r2, [sp]
 8016f60:	4d30      	ldr	r5, [pc, #192]	@ (8017024 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016f62:	4413      	add	r3, r2
 8016f64:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016f68:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016f6c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016f70:	6828      	ldr	r0, [r5, #0]
 8016f72:	4413      	add	r3, r2
 8016f74:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016f78:	6803      	ldr	r3, [r0, #0]
 8016f7a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8016f7c:	4798      	blx	r3
 8016f7e:	f010 0f01 	tst.w	r0, #1
 8016f82:	462f      	mov	r7, r5
 8016f84:	d00c      	beq.n	8016fa0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8016f86:	6828      	ldr	r0, [r5, #0]
 8016f88:	6803      	ldr	r3, [r0, #0]
 8016f8a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8016f8e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8016f90:	4798      	blx	r3
 8016f92:	b004      	add	sp, #16
 8016f94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016f98:	4a21      	ldr	r2, [pc, #132]	@ (8017020 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016f9a:	e7c6      	b.n	8016f2a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016f9c:	4b1f      	ldr	r3, [pc, #124]	@ (801701c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016f9e:	e7cb      	b.n	8016f38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8016fa0:	6838      	ldr	r0, [r7, #0]
 8016fa2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016fa6:	6803      	ldr	r3, [r0, #0]
 8016fa8:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8016fac:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8016fae:	4798      	blx	r3
 8016fb0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016fb4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016fb8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8016fbc:	fb16 3602 	smlabb	r6, r6, r2, r3
 8016fc0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016fc4:	6838      	ldr	r0, [r7, #0]
 8016fc6:	6803      	ldr	r3, [r0, #0]
 8016fc8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016fca:	4798      	blx	r3
 8016fcc:	4a13      	ldr	r2, [pc, #76]	@ (801701c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016fce:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8016fd2:	8813      	ldrh	r3, [r2, #0]
 8016fd4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016fd8:	fb03 1404 	mla	r4, r3, r4, r1
 8016fdc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016fe0:	435d      	muls	r5, r3
 8016fe2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016fe6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8016fea:	4691      	mov	r9, r2
 8016fec:	6838      	ldr	r0, [r7, #0]
 8016fee:	42ac      	cmp	r4, r5
 8016ff0:	6803      	ldr	r3, [r0, #0]
 8016ff2:	d20e      	bcs.n	8017012 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016ff4:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 8016ff8:	4632      	mov	r2, r6
 8016ffa:	4643      	mov	r3, r8
 8016ffc:	4621      	mov	r1, r4
 8016ffe:	47d0      	blx	sl
 8017000:	f8b9 3000 	ldrh.w	r3, [r9]
 8017004:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017008:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801700c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017010:	e7ec      	b.n	8016fec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8017012:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017014:	4798      	blx	r3
 8017016:	e7bc      	b.n	8016f92 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8017018:	20013b62 	.word	0x20013b62
 801701c:	20013b64 	.word	0x20013b64
 8017020:	20013b66 	.word	0x20013b66
 8017024:	20013b6c 	.word	0x20013b6c

08017028 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8017028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801702c:	b08b      	sub	sp, #44	@ 0x2c
 801702e:	460f      	mov	r7, r1
 8017030:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8017034:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8017038:	4616      	mov	r6, r2
 801703a:	f1bb 0f00 	cmp.w	fp, #0
 801703e:	d04a      	beq.n	80170d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8017040:	6810      	ldr	r0, [r2, #0]
 8017042:	6851      	ldr	r1, [r2, #4]
 8017044:	ad06      	add	r5, sp, #24
 8017046:	c503      	stmia	r5!, {r0, r1}
 8017048:	6818      	ldr	r0, [r3, #0]
 801704a:	6859      	ldr	r1, [r3, #4]
 801704c:	ad08      	add	r5, sp, #32
 801704e:	c503      	stmia	r5!, {r0, r1}
 8017050:	a806      	add	r0, sp, #24
 8017052:	f7f9 ff01 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017056:	4631      	mov	r1, r6
 8017058:	a808      	add	r0, sp, #32
 801705a:	f7f9 ff25 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801705e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017062:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8017066:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801706a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801706e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8017072:	fb16 2103 	smlabb	r1, r6, r3, r2
 8017076:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801707a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801707e:	4f5f      	ldr	r7, [pc, #380]	@ (80171fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017080:	440a      	add	r2, r1
 8017082:	f8ad 2020 	strh.w	r2, [sp, #32]
 8017086:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801708a:	6838      	ldr	r0, [r7, #0]
 801708c:	4413      	add	r3, r2
 801708e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8017092:	6803      	ldr	r3, [r0, #0]
 8017094:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017096:	4798      	blx	r3
 8017098:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801709c:	46b9      	mov	r9, r7
 801709e:	d11d      	bne.n	80170dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80170a0:	b9fc      	cbnz	r4, 80170e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80170a2:	f010 0f01 	tst.w	r0, #1
 80170a6:	d01c      	beq.n	80170e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80170a8:	f8d9 0000 	ldr.w	r0, [r9]
 80170ac:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80170b0:	6801      	ldr	r1, [r0, #0]
 80170b2:	f8cd b00c 	str.w	fp, [sp, #12]
 80170b6:	2700      	movs	r7, #0
 80170b8:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80170bc:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80170c0:	9402      	str	r4, [sp, #8]
 80170c2:	b2ad      	uxth	r5, r5
 80170c4:	fa1f f488 	uxth.w	r4, r8
 80170c8:	9501      	str	r5, [sp, #4]
 80170ca:	9400      	str	r4, [sp, #0]
 80170cc:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 80170ce:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80170d2:	4631      	mov	r1, r6
 80170d4:	47a0      	blx	r4
 80170d6:	b00b      	add	sp, #44	@ 0x2c
 80170d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170dc:	f010 0f04 	tst.w	r0, #4
 80170e0:	e7e1      	b.n	80170a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80170e2:	f8d9 0000 	ldr.w	r0, [r9]
 80170e6:	6803      	ldr	r3, [r0, #0]
 80170e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80170ea:	4798      	blx	r3
 80170ec:	4b44      	ldr	r3, [pc, #272]	@ (8017200 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80170ee:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 80170f2:	881a      	ldrh	r2, [r3, #0]
 80170f4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80170f8:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80170fc:	fb02 1404 	mla	r4, r2, r4, r1
 8017100:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017104:	469a      	mov	sl, r3
 8017106:	fb05 f502 	mul.w	r5, r5, r2
 801710a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801710e:	d059      	beq.n	80171c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8017110:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8017114:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017118:	fa1f f28b 	uxth.w	r2, fp
 801711c:	fa1f f989 	uxth.w	r9, r9
 8017120:	469e      	mov	lr, r3
 8017122:	42ac      	cmp	r4, r5
 8017124:	d264      	bcs.n	80171f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8017126:	eb04 0a07 	add.w	sl, r4, r7
 801712a:	4554      	cmp	r4, sl
 801712c:	d23d      	bcs.n	80171aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801712e:	8821      	ldrh	r1, [r4, #0]
 8017130:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017134:	1208      	asrs	r0, r1, #8
 8017136:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801713a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801713e:	fb10 f009 	smulbb	r0, r0, r9
 8017142:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8017146:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801714a:	00c9      	lsls	r1, r1, #3
 801714c:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017150:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8017154:	10d8      	asrs	r0, r3, #3
 8017156:	b2c9      	uxtb	r1, r1
 8017158:	00db      	lsls	r3, r3, #3
 801715a:	fa1f fc8c 	uxth.w	ip, ip
 801715e:	fb1b fb09 	smulbb	fp, fp, r9
 8017162:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8017166:	b2db      	uxtb	r3, r3
 8017168:	fb11 f109 	smulbb	r1, r1, r9
 801716c:	fb00 b002 	mla	r0, r0, r2, fp
 8017170:	fb03 1302 	mla	r3, r3, r2, r1
 8017174:	f10c 0b01 	add.w	fp, ip, #1
 8017178:	b29b      	uxth	r3, r3
 801717a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801717e:	b280      	uxth	r0, r0
 8017180:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8017184:	f103 0c01 	add.w	ip, r3, #1
 8017188:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801718c:	1c43      	adds	r3, r0, #1
 801718e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017192:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017196:	0940      	lsrs	r0, r0, #5
 8017198:	ea4c 0c0b 	orr.w	ip, ip, fp
 801719c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80171a0:	ea4c 0c00 	orr.w	ip, ip, r0
 80171a4:	f824 cb02 	strh.w	ip, [r4], #2
 80171a8:	e7bf      	b.n	801712a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80171aa:	f8be 3000 	ldrh.w	r3, [lr]
 80171ae:	eba3 0308 	sub.w	r3, r3, r8
 80171b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80171b6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80171ba:	eba3 0308 	sub.w	r3, r3, r8
 80171be:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80171c2:	e7ae      	b.n	8017122 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80171c4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80171c8:	f8d9 0000 	ldr.w	r0, [r9]
 80171cc:	42ac      	cmp	r4, r5
 80171ce:	6803      	ldr	r3, [r0, #0]
 80171d0:	d20e      	bcs.n	80171f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80171d2:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 80171d6:	4632      	mov	r2, r6
 80171d8:	463b      	mov	r3, r7
 80171da:	4621      	mov	r1, r4
 80171dc:	47c0      	blx	r8
 80171de:	f8ba 3000 	ldrh.w	r3, [sl]
 80171e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80171e6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80171ea:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80171ee:	e7eb      	b.n	80171c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80171f0:	4b02      	ldr	r3, [pc, #8]	@ (80171fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80171f2:	6818      	ldr	r0, [r3, #0]
 80171f4:	6803      	ldr	r3, [r0, #0]
 80171f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80171f8:	4798      	blx	r3
 80171fa:	e76c      	b.n	80170d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80171fc:	20013b6c 	.word	0x20013b6c
 8017200:	20013b64 	.word	0x20013b64

08017204 <_ZN8touchgfx8LCD16bppD0Ev>:
 8017204:	b510      	push	{r4, lr}
 8017206:	218c      	movs	r1, #140	@ 0x8c
 8017208:	4604      	mov	r4, r0
 801720a:	f00c fa2c 	bl	8023666 <_ZdlPvj>
 801720e:	4620      	mov	r0, r4
 8017210:	bd10      	pop	{r4, pc}

08017212 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8017212:	b510      	push	{r4, lr}
 8017214:	2104      	movs	r1, #4
 8017216:	4604      	mov	r4, r0
 8017218:	f00c fa25 	bl	8023666 <_ZdlPvj>
 801721c:	4620      	mov	r0, r4
 801721e:	bd10      	pop	{r4, pc}

08017220 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8017220:	b510      	push	{r4, lr}
 8017222:	2104      	movs	r1, #4
 8017224:	4604      	mov	r4, r0
 8017226:	f00c fa1e 	bl	8023666 <_ZdlPvj>
 801722a:	4620      	mov	r0, r4
 801722c:	bd10      	pop	{r4, pc}

0801722e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801722e:	b510      	push	{r4, lr}
 8017230:	f640 0144 	movw	r1, #2116	@ 0x844
 8017234:	4604      	mov	r4, r0
 8017236:	f00c fa16 	bl	8023666 <_ZdlPvj>
 801723a:	4620      	mov	r0, r4
 801723c:	bd10      	pop	{r4, pc}

0801723e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801723e:	b510      	push	{r4, lr}
 8017240:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8017244:	4604      	mov	r4, r0
 8017246:	f00c fa0e 	bl	8023666 <_ZdlPvj>
 801724a:	4620      	mov	r0, r4
 801724c:	bd10      	pop	{r4, pc}

0801724e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801724e:	b510      	push	{r4, lr}
 8017250:	2104      	movs	r1, #4
 8017252:	4604      	mov	r4, r0
 8017254:	f00c fa07 	bl	8023666 <_ZdlPvj>
 8017258:	4620      	mov	r0, r4
 801725a:	bd10      	pop	{r4, pc}

0801725c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801725c:	b510      	push	{r4, lr}
 801725e:	2104      	movs	r1, #4
 8017260:	4604      	mov	r4, r0
 8017262:	f00c fa00 	bl	8023666 <_ZdlPvj>
 8017266:	4620      	mov	r0, r4
 8017268:	bd10      	pop	{r4, pc}

0801726a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801726a:	b510      	push	{r4, lr}
 801726c:	2104      	movs	r1, #4
 801726e:	4604      	mov	r4, r0
 8017270:	f00c f9f9 	bl	8023666 <_ZdlPvj>
 8017274:	4620      	mov	r0, r4
 8017276:	bd10      	pop	{r4, pc}

08017278 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017278:	b510      	push	{r4, lr}
 801727a:	2104      	movs	r1, #4
 801727c:	4604      	mov	r4, r0
 801727e:	f00c f9f2 	bl	8023666 <_ZdlPvj>
 8017282:	4620      	mov	r0, r4
 8017284:	bd10      	pop	{r4, pc}

08017286 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017286:	b510      	push	{r4, lr}
 8017288:	2104      	movs	r1, #4
 801728a:	4604      	mov	r4, r0
 801728c:	f00c f9eb 	bl	8023666 <_ZdlPvj>
 8017290:	4620      	mov	r0, r4
 8017292:	bd10      	pop	{r4, pc}

08017294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8017294:	b510      	push	{r4, lr}
 8017296:	2104      	movs	r1, #4
 8017298:	4604      	mov	r4, r0
 801729a:	f00c f9e4 	bl	8023666 <_ZdlPvj>
 801729e:	4620      	mov	r0, r4
 80172a0:	bd10      	pop	{r4, pc}

080172a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80172a2:	b510      	push	{r4, lr}
 80172a4:	2104      	movs	r1, #4
 80172a6:	4604      	mov	r4, r0
 80172a8:	f00c f9dd 	bl	8023666 <_ZdlPvj>
 80172ac:	4620      	mov	r0, r4
 80172ae:	bd10      	pop	{r4, pc}

080172b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80172b0:	b510      	push	{r4, lr}
 80172b2:	2104      	movs	r1, #4
 80172b4:	4604      	mov	r4, r0
 80172b6:	f00c f9d6 	bl	8023666 <_ZdlPvj>
 80172ba:	4620      	mov	r0, r4
 80172bc:	bd10      	pop	{r4, pc}

080172be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80172be:	b510      	push	{r4, lr}
 80172c0:	2104      	movs	r1, #4
 80172c2:	4604      	mov	r4, r0
 80172c4:	f00c f9cf 	bl	8023666 <_ZdlPvj>
 80172c8:	4620      	mov	r0, r4
 80172ca:	bd10      	pop	{r4, pc}

080172cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80172cc:	b510      	push	{r4, lr}
 80172ce:	2104      	movs	r1, #4
 80172d0:	4604      	mov	r4, r0
 80172d2:	f00c f9c8 	bl	8023666 <_ZdlPvj>
 80172d6:	4620      	mov	r0, r4
 80172d8:	bd10      	pop	{r4, pc}

080172da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80172da:	b510      	push	{r4, lr}
 80172dc:	2104      	movs	r1, #4
 80172de:	4604      	mov	r4, r0
 80172e0:	f00c f9c1 	bl	8023666 <_ZdlPvj>
 80172e4:	4620      	mov	r0, r4
 80172e6:	bd10      	pop	{r4, pc}

080172e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80172e8:	b510      	push	{r4, lr}
 80172ea:	2104      	movs	r1, #4
 80172ec:	4604      	mov	r4, r0
 80172ee:	f00c f9ba 	bl	8023666 <_ZdlPvj>
 80172f2:	4620      	mov	r0, r4
 80172f4:	bd10      	pop	{r4, pc}

080172f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80172f6:	b510      	push	{r4, lr}
 80172f8:	2104      	movs	r1, #4
 80172fa:	4604      	mov	r4, r0
 80172fc:	f00c f9b3 	bl	8023666 <_ZdlPvj>
 8017300:	4620      	mov	r0, r4
 8017302:	bd10      	pop	{r4, pc}

08017304 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017304:	b510      	push	{r4, lr}
 8017306:	2104      	movs	r1, #4
 8017308:	4604      	mov	r4, r0
 801730a:	f00c f9ac 	bl	8023666 <_ZdlPvj>
 801730e:	4620      	mov	r0, r4
 8017310:	bd10      	pop	{r4, pc}

08017312 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017312:	b510      	push	{r4, lr}
 8017314:	2104      	movs	r1, #4
 8017316:	4604      	mov	r4, r0
 8017318:	f00c f9a5 	bl	8023666 <_ZdlPvj>
 801731c:	4620      	mov	r0, r4
 801731e:	bd10      	pop	{r4, pc}

08017320 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017320:	b510      	push	{r4, lr}
 8017322:	2104      	movs	r1, #4
 8017324:	4604      	mov	r4, r0
 8017326:	f00c f99e 	bl	8023666 <_ZdlPvj>
 801732a:	4620      	mov	r0, r4
 801732c:	bd10      	pop	{r4, pc}

0801732e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801732e:	b510      	push	{r4, lr}
 8017330:	2104      	movs	r1, #4
 8017332:	4604      	mov	r4, r0
 8017334:	f00c f997 	bl	8023666 <_ZdlPvj>
 8017338:	4620      	mov	r0, r4
 801733a:	bd10      	pop	{r4, pc}

0801733c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801733c:	b510      	push	{r4, lr}
 801733e:	2104      	movs	r1, #4
 8017340:	4604      	mov	r4, r0
 8017342:	f00c f990 	bl	8023666 <_ZdlPvj>
 8017346:	4620      	mov	r0, r4
 8017348:	bd10      	pop	{r4, pc}

0801734a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801734a:	b510      	push	{r4, lr}
 801734c:	2104      	movs	r1, #4
 801734e:	4604      	mov	r4, r0
 8017350:	f00c f989 	bl	8023666 <_ZdlPvj>
 8017354:	4620      	mov	r0, r4
 8017356:	bd10      	pop	{r4, pc}

08017358 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017358:	b510      	push	{r4, lr}
 801735a:	2104      	movs	r1, #4
 801735c:	4604      	mov	r4, r0
 801735e:	f00c f982 	bl	8023666 <_ZdlPvj>
 8017362:	4620      	mov	r0, r4
 8017364:	bd10      	pop	{r4, pc}

08017366 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017366:	b510      	push	{r4, lr}
 8017368:	2104      	movs	r1, #4
 801736a:	4604      	mov	r4, r0
 801736c:	f00c f97b 	bl	8023666 <_ZdlPvj>
 8017370:	4620      	mov	r0, r4
 8017372:	bd10      	pop	{r4, pc}

08017374 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017374:	b510      	push	{r4, lr}
 8017376:	2104      	movs	r1, #4
 8017378:	4604      	mov	r4, r0
 801737a:	f00c f974 	bl	8023666 <_ZdlPvj>
 801737e:	4620      	mov	r0, r4
 8017380:	bd10      	pop	{r4, pc}

08017382 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017382:	b510      	push	{r4, lr}
 8017384:	2104      	movs	r1, #4
 8017386:	4604      	mov	r4, r0
 8017388:	f00c f96d 	bl	8023666 <_ZdlPvj>
 801738c:	4620      	mov	r0, r4
 801738e:	bd10      	pop	{r4, pc}

08017390 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017390:	b510      	push	{r4, lr}
 8017392:	2104      	movs	r1, #4
 8017394:	4604      	mov	r4, r0
 8017396:	f00c f966 	bl	8023666 <_ZdlPvj>
 801739a:	4620      	mov	r0, r4
 801739c:	bd10      	pop	{r4, pc}

0801739e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801739e:	b510      	push	{r4, lr}
 80173a0:	2104      	movs	r1, #4
 80173a2:	4604      	mov	r4, r0
 80173a4:	f00c f95f 	bl	8023666 <_ZdlPvj>
 80173a8:	4620      	mov	r0, r4
 80173aa:	bd10      	pop	{r4, pc}

080173ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80173ac:	b510      	push	{r4, lr}
 80173ae:	2104      	movs	r1, #4
 80173b0:	4604      	mov	r4, r0
 80173b2:	f00c f958 	bl	8023666 <_ZdlPvj>
 80173b6:	4620      	mov	r0, r4
 80173b8:	bd10      	pop	{r4, pc}

080173ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80173ba:	b510      	push	{r4, lr}
 80173bc:	2104      	movs	r1, #4
 80173be:	4604      	mov	r4, r0
 80173c0:	f00c f951 	bl	8023666 <_ZdlPvj>
 80173c4:	4620      	mov	r0, r4
 80173c6:	bd10      	pop	{r4, pc}

080173c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80173c8:	b510      	push	{r4, lr}
 80173ca:	2104      	movs	r1, #4
 80173cc:	4604      	mov	r4, r0
 80173ce:	f00c f94a 	bl	8023666 <_ZdlPvj>
 80173d2:	4620      	mov	r0, r4
 80173d4:	bd10      	pop	{r4, pc}
	...

080173d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 80173d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173dc:	b08f      	sub	sp, #60	@ 0x3c
 80173de:	4616      	mov	r6, r2
 80173e0:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 80173e4:	9205      	str	r2, [sp, #20]
 80173e6:	4682      	mov	sl, r0
 80173e8:	460d      	mov	r5, r1
 80173ea:	2a00      	cmp	r2, #0
 80173ec:	f000 82b7 	beq.w	801795e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 80173f0:	6830      	ldr	r0, [r6, #0]
 80173f2:	6871      	ldr	r1, [r6, #4]
 80173f4:	ac0a      	add	r4, sp, #40	@ 0x28
 80173f6:	c403      	stmia	r4!, {r0, r1}
 80173f8:	6818      	ldr	r0, [r3, #0]
 80173fa:	6859      	ldr	r1, [r3, #4]
 80173fc:	ac0c      	add	r4, sp, #48	@ 0x30
 80173fe:	c403      	stmia	r4!, {r0, r1}
 8017400:	a80a      	add	r0, sp, #40	@ 0x28
 8017402:	f7f9 fd29 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017406:	4631      	mov	r1, r6
 8017408:	a80c      	add	r0, sp, #48	@ 0x30
 801740a:	f7f9 fd4d 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801740e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8017412:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8017416:	bfd7      	itett	le
 8017418:	b293      	uxthle	r3, r2
 801741a:	2301      	movgt	r3, #1
 801741c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017420:	fb91 f3f3 	sdivle	r3, r1, r3
 8017424:	9300      	str	r3, [sp, #0]
 8017426:	f105 0308 	add.w	r3, r5, #8
 801742a:	9900      	ldr	r1, [sp, #0]
 801742c:	9306      	str	r3, [sp, #24]
 801742e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8017432:	440b      	add	r3, r1
 8017434:	3b01      	subs	r3, #1
 8017436:	fb93 f3f1 	sdiv	r3, r3, r1
 801743a:	9906      	ldr	r1, [sp, #24]
 801743c:	3b01      	subs	r3, #1
 801743e:	b29b      	uxth	r3, r3
 8017440:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017444:	9307      	str	r3, [sp, #28]
 8017446:	9900      	ldr	r1, [sp, #0]
 8017448:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801744c:	fb93 f0f1 	sdiv	r0, r3, r1
 8017450:	b284      	uxth	r4, r0
 8017452:	9402      	str	r4, [sp, #8]
 8017454:	9d02      	ldr	r5, [sp, #8]
 8017456:	9c00      	ldr	r4, [sp, #0]
 8017458:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801745c:	fb05 3414 	mls	r4, r5, r4, r3
 8017460:	fb14 f402 	smulbb	r4, r4, r2
 8017464:	440c      	add	r4, r1
 8017466:	b2a4      	uxth	r4, r4
 8017468:	2d00      	cmp	r5, #0
 801746a:	d06c      	beq.n	8017546 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801746c:	1e6a      	subs	r2, r5, #1
 801746e:	9806      	ldr	r0, [sp, #24]
 8017470:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8017474:	9a07      	ldr	r2, [sp, #28]
 8017476:	ba36      	rev	r6, r6
 8017478:	4416      	add	r6, r2
 801747a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801747e:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8017482:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 80177b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 8017486:	4411      	add	r1, r2
 8017488:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801748c:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8017490:	4413      	add	r3, r2
 8017492:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017496:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801749a:	9301      	str	r3, [sp, #4]
 801749c:	4bc4      	ldr	r3, [pc, #784]	@ (80177b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801749e:	6818      	ldr	r0, [r3, #0]
 80174a0:	6803      	ldr	r3, [r0, #0]
 80174a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80174a4:	4798      	blx	r3
 80174a6:	4bc3      	ldr	r3, [pc, #780]	@ (80177b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 80174a8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80174ac:	881b      	ldrh	r3, [r3, #0]
 80174ae:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 80174b2:	fb03 2808 	mla	r8, r3, r8, r2
 80174b6:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 80174ba:	436b      	muls	r3, r5
 80174bc:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 80174c0:	9309      	str	r3, [sp, #36]	@ 0x24
 80174c2:	2500      	movs	r5, #0
 80174c4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80174c8:	fb94 f3f3 	sdiv	r3, r4, r3
 80174cc:	9304      	str	r3, [sp, #16]
 80174ce:	f10a 0304 	add.w	r3, sl, #4
 80174d2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80174d6:	4629      	mov	r1, r5
 80174d8:	4618      	mov	r0, r3
 80174da:	9308      	str	r3, [sp, #32]
 80174dc:	f00d fa3d 	bl	802495a <memset>
 80174e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80174e2:	4543      	cmp	r3, r8
 80174e4:	f240 8236 	bls.w	8017954 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 80174e8:	2203      	movs	r2, #3
 80174ea:	2107      	movs	r1, #7
 80174ec:	200b      	movs	r0, #11
 80174ee:	2c00      	cmp	r4, #0
 80174f0:	f000 8131 	beq.w	8017756 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 80174f4:	7833      	ldrb	r3, [r6, #0]
 80174f6:	b2db      	uxtb	r3, r3
 80174f8:	2bfe      	cmp	r3, #254	@ 0xfe
 80174fa:	d126      	bne.n	801754a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 80174fc:	f896 e001 	ldrb.w	lr, [r6, #1]
 8017500:	f896 c002 	ldrb.w	ip, [r6, #2]
 8017504:	f896 b003 	ldrb.w	fp, [r6, #3]
 8017508:	fa5f fe8e 	uxtb.w	lr, lr
 801750c:	fa5f fc8c 	uxtb.w	ip, ip
 8017510:	f36e 0507 	bfi	r5, lr, #0, #8
 8017514:	f36c 250f 	bfi	r5, ip, #8, #8
 8017518:	fa5f fb8b 	uxtb.w	fp, fp
 801751c:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8017520:	f36b 4517 	bfi	r5, fp, #16, #8
 8017524:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 8017528:	0e2b      	lsrs	r3, r5, #24
 801752a:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801752e:	fb10 c303 	smlabb	r3, r0, r3, ip
 8017532:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8017536:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801753a:	3c01      	subs	r4, #1
 801753c:	1d37      	adds	r7, r6, #4
 801753e:	b2a4      	uxth	r4, r4
 8017540:	605d      	str	r5, [r3, #4]
 8017542:	463e      	mov	r6, r7
 8017544:	e7d3      	b.n	80174ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 8017546:	9e07      	ldr	r6, [sp, #28]
 8017548:	e797      	b.n	801747a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801754a:	2bff      	cmp	r3, #255	@ 0xff
 801754c:	d127      	bne.n	801759e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801754e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8017552:	78b3      	ldrb	r3, [r6, #2]
 8017554:	f896 e003 	ldrb.w	lr, [r6, #3]
 8017558:	f896 b004 	ldrb.w	fp, [r6, #4]
 801755c:	fa5f fc8c 	uxtb.w	ip, ip
 8017560:	b2db      	uxtb	r3, r3
 8017562:	f36c 0507 	bfi	r5, ip, #0, #8
 8017566:	f363 250f 	bfi	r5, r3, #8, #8
 801756a:	fa5f fe8e 	uxtb.w	lr, lr
 801756e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8017572:	fb12 330e 	smlabb	r3, r2, lr, r3
 8017576:	fa5f fb8b 	uxtb.w	fp, fp
 801757a:	f36e 4517 	bfi	r5, lr, #16, #8
 801757e:	fb11 330c 	smlabb	r3, r1, ip, r3
 8017582:	f36b 651f 	bfi	r5, fp, #24, #8
 8017586:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801758a:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801758e:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8017592:	3c01      	subs	r4, #1
 8017594:	1d77      	adds	r7, r6, #5
 8017596:	b2a4      	uxth	r4, r4
 8017598:	f8cb 5004 	str.w	r5, [fp, #4]
 801759c:	e7d1      	b.n	8017542 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801759e:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 80175a2:	f106 0701 	add.w	r7, r6, #1
 80175a6:	d107      	bne.n	80175b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 80175a8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80175ac:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80175b0:	685d      	ldr	r5, [r3, #4]
 80175b2:	3c01      	subs	r4, #1
 80175b4:	b2a4      	uxth	r4, r4
 80175b6:	e7c4      	b.n	8017542 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80175b8:	f1bc 0f01 	cmp.w	ip, #1
 80175bc:	d12c      	bne.n	8017618 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 80175be:	f003 0e03 	and.w	lr, r3, #3
 80175c2:	f1ae 0e02 	sub.w	lr, lr, #2
 80175c6:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 80175ca:	fa5f fe8e 	uxtb.w	lr, lr
 80175ce:	f003 0c0c 	and.w	ip, r3, #12
 80175d2:	f36e 0507 	bfi	r5, lr, #0, #8
 80175d6:	f1ac 0c08 	sub.w	ip, ip, #8
 80175da:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80175de:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 80175e2:	f36c 250f 	bfi	r5, ip, #8, #8
 80175e6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80175ea:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80175ee:	3b02      	subs	r3, #2
 80175f0:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80175f4:	b2db      	uxtb	r3, r3
 80175f6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80175fa:	f363 4517 	bfi	r5, r3, #16, #8
 80175fe:	fb12 cc03 	smlabb	ip, r2, r3, ip
 8017602:	0e2e      	lsrs	r6, r5, #24
 8017604:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8017608:	fb10 c606 	smlabb	r6, r0, r6, ip
 801760c:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8017610:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8017614:	6075      	str	r5, [r6, #4]
 8017616:	e7cc      	b.n	80175b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 8017618:	f1bc 0f02 	cmp.w	ip, #2
 801761c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8017620:	d12a      	bne.n	8017678 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 8017622:	1cb7      	adds	r7, r6, #2
 8017624:	7876      	ldrb	r6, [r6, #1]
 8017626:	b2f6      	uxtb	r6, r6
 8017628:	f006 0c0f 	and.w	ip, r6, #15
 801762c:	3b20      	subs	r3, #32
 801762e:	f1ac 0c08 	sub.w	ip, ip, #8
 8017632:	449c      	add	ip, r3
 8017634:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 8017638:	fa5f fc8c 	uxtb.w	ip, ip
 801763c:	f36c 0507 	bfi	r5, ip, #0, #8
 8017640:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8017644:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8017648:	fa5f fe8e 	uxtb.w	lr, lr
 801764c:	1136      	asrs	r6, r6, #4
 801764e:	f36e 250f 	bfi	r5, lr, #8, #8
 8017652:	3e08      	subs	r6, #8
 8017654:	4433      	add	r3, r6
 8017656:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801765a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801765e:	b2db      	uxtb	r3, r3
 8017660:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8017664:	f363 4517 	bfi	r5, r3, #16, #8
 8017668:	fb12 ee03 	smlabb	lr, r2, r3, lr
 801766c:	0e2e      	lsrs	r6, r5, #24
 801766e:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8017672:	fb10 e606 	smlabb	r6, r0, r6, lr
 8017676:	e7c9      	b.n	801760c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8017678:	1c5e      	adds	r6, r3, #1
 801767a:	42a6      	cmp	r6, r4
 801767c:	dd4e      	ble.n	801771c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801767e:	1b36      	subs	r6, r6, r4
 8017680:	2e00      	cmp	r6, #0
 8017682:	dc4e      	bgt.n	8017722 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8017684:	f8dd b004 	ldr.w	fp, [sp, #4]
 8017688:	2400      	movs	r4, #0
 801768a:	f1bb 0f00 	cmp.w	fp, #0
 801768e:	f340 8122 	ble.w	80178d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8017692:	1c7b      	adds	r3, r7, #1
 8017694:	9303      	str	r3, [sp, #12]
 8017696:	783b      	ldrb	r3, [r7, #0]
 8017698:	b2db      	uxtb	r3, r3
 801769a:	2bfe      	cmp	r3, #254	@ 0xfe
 801769c:	d160      	bne.n	8017760 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801769e:	7879      	ldrb	r1, [r7, #1]
 80176a0:	78ba      	ldrb	r2, [r7, #2]
 80176a2:	78f8      	ldrb	r0, [r7, #3]
 80176a4:	b2c9      	uxtb	r1, r1
 80176a6:	f361 0507 	bfi	r5, r1, #0, #8
 80176aa:	b2d2      	uxtb	r2, r2
 80176ac:	1d3b      	adds	r3, r7, #4
 80176ae:	f362 250f 	bfi	r5, r2, #8, #8
 80176b2:	b2c0      	uxtb	r0, r0
 80176b4:	9303      	str	r3, [sp, #12]
 80176b6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80176ba:	2303      	movs	r3, #3
 80176bc:	fb13 2200 	smlabb	r2, r3, r0, r2
 80176c0:	f360 4517 	bfi	r5, r0, #16, #8
 80176c4:	2307      	movs	r3, #7
 80176c6:	fb13 2101 	smlabb	r1, r3, r1, r2
 80176ca:	0e2e      	lsrs	r6, r5, #24
 80176cc:	230b      	movs	r3, #11
 80176ce:	fb13 1306 	smlabb	r3, r3, r6, r1
 80176d2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80176d6:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80176da:	605d      	str	r5, [r3, #4]
 80176dc:	2601      	movs	r6, #1
 80176de:	4637      	mov	r7, r6
 80176e0:	0e2b      	lsrs	r3, r5, #24
 80176e2:	ebab 0b07 	sub.w	fp, fp, r7
 80176e6:	eba6 0607 	sub.w	r6, r6, r7
 80176ea:	f040 80d3 	bne.w	8017894 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 80176ee:	b18c      	cbz	r4, 8017714 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 80176f0:	4648      	mov	r0, r9
 80176f2:	00a1      	lsls	r1, r4, #2
 80176f4:	f7e9 fc2c 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 80176f8:	9b05      	ldr	r3, [sp, #20]
 80176fa:	4622      	mov	r2, r4
 80176fc:	4649      	mov	r1, r9
 80176fe:	4640      	mov	r0, r8
 8017700:	f7e9 fc74 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8017704:	4b2c      	ldr	r3, [pc, #176]	@ (80177b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 8017706:	4a2d      	ldr	r2, [pc, #180]	@ (80177bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 8017708:	4599      	cmp	r9, r3
 801770a:	bf08      	it	eq
 801770c:	4613      	moveq	r3, r2
 801770e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8017712:	4699      	mov	r9, r3
 8017714:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 8017718:	2400      	movs	r4, #0
 801771a:	e0da      	b.n	80178d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 801771c:	1ba6      	subs	r6, r4, r6
 801771e:	b2b4      	uxth	r4, r6
 8017720:	e70f      	b.n	8017542 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8017722:	9b01      	ldr	r3, [sp, #4]
 8017724:	9a01      	ldr	r2, [sp, #4]
 8017726:	42b3      	cmp	r3, r6
 8017728:	bfa8      	it	ge
 801772a:	4633      	movge	r3, r6
 801772c:	0e2c      	lsrs	r4, r5, #24
 801772e:	eba2 0b03 	sub.w	fp, r2, r3
 8017732:	eba6 0603 	sub.w	r6, r6, r3
 8017736:	d00b      	beq.n	8017750 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 8017738:	f1a9 0104 	sub.w	r1, r9, #4
 801773c:	461a      	mov	r2, r3
 801773e:	2a00      	cmp	r2, #0
 8017740:	dc02      	bgt.n	8017748 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8017742:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017746:	e7a0      	b.n	801768a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8017748:	f841 5f04 	str.w	r5, [r1, #4]!
 801774c:	3a01      	subs	r2, #1
 801774e:	e7f6      	b.n	801773e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8017750:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8017754:	e799      	b.n	801768a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8017756:	4637      	mov	r7, r6
 8017758:	f8dd b004 	ldr.w	fp, [sp, #4]
 801775c:	4626      	mov	r6, r4
 801775e:	e794      	b.n	801768a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8017760:	2bff      	cmp	r3, #255	@ 0xff
 8017762:	d11d      	bne.n	80177a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8017764:	7878      	ldrb	r0, [r7, #1]
 8017766:	78ba      	ldrb	r2, [r7, #2]
 8017768:	78fe      	ldrb	r6, [r7, #3]
 801776a:	1d7b      	adds	r3, r7, #5
 801776c:	b2c0      	uxtb	r0, r0
 801776e:	9303      	str	r3, [sp, #12]
 8017770:	793b      	ldrb	r3, [r7, #4]
 8017772:	f360 0507 	bfi	r5, r0, #0, #8
 8017776:	b2d2      	uxtb	r2, r2
 8017778:	b2d9      	uxtb	r1, r3
 801777a:	f362 250f 	bfi	r5, r2, #8, #8
 801777e:	b2f6      	uxtb	r6, r6
 8017780:	2303      	movs	r3, #3
 8017782:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8017786:	fb13 2206 	smlabb	r2, r3, r6, r2
 801778a:	2307      	movs	r3, #7
 801778c:	fb13 2000 	smlabb	r0, r3, r0, r2
 8017790:	f366 4517 	bfi	r5, r6, #16, #8
 8017794:	230b      	movs	r3, #11
 8017796:	f361 651f 	bfi	r5, r1, #24, #8
 801779a:	fb13 0301 	smlabb	r3, r3, r1, r0
 801779e:	e798      	b.n	80176d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 80177a0:	119e      	asrs	r6, r3, #6
 80177a2:	d10d      	bne.n	80177c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 80177a4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80177a8:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80177ac:	685d      	ldr	r5, [r3, #4]
 80177ae:	e795      	b.n	80176dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 80177b0:	20013b6c 	.word	0x20013b6c
 80177b4:	20013b64 	.word	0x20013b64
 80177b8:	20000280 	.word	0x20000280
 80177bc:	20000380 	.word	0x20000380
 80177c0:	2e01      	cmp	r6, #1
 80177c2:	ea4f 6115 	mov.w	r1, r5, lsr #24
 80177c6:	d12b      	bne.n	8017820 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 80177c8:	f003 0003 	and.w	r0, r3, #3
 80177cc:	3802      	subs	r0, #2
 80177ce:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 80177d2:	b2c0      	uxtb	r0, r0
 80177d4:	f003 020c 	and.w	r2, r3, #12
 80177d8:	f360 0507 	bfi	r5, r0, #0, #8
 80177dc:	3a08      	subs	r2, #8
 80177de:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80177e2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 80177e6:	f362 250f 	bfi	r5, r2, #8, #8
 80177ea:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80177ee:	1e9f      	subs	r7, r3, #2
 80177f0:	f3c5 4307 	ubfx	r3, r5, #16, #8
 80177f4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80177f8:	b2db      	uxtb	r3, r3
 80177fa:	2703      	movs	r7, #3
 80177fc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8017800:	fb17 2203 	smlabb	r2, r7, r3, r2
 8017804:	2707      	movs	r7, #7
 8017806:	f363 4517 	bfi	r5, r3, #16, #8
 801780a:	fb17 2000 	smlabb	r0, r7, r0, r2
 801780e:	230b      	movs	r3, #11
 8017810:	fb13 0101 	smlabb	r1, r3, r1, r0
 8017814:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8017818:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801781c:	604d      	str	r5, [r1, #4]
 801781e:	e75e      	b.n	80176de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8017820:	2e02      	cmp	r6, #2
 8017822:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8017826:	d12f      	bne.n	8017888 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8017828:	7878      	ldrb	r0, [r7, #1]
 801782a:	1cba      	adds	r2, r7, #2
 801782c:	b2c0      	uxtb	r0, r0
 801782e:	9203      	str	r2, [sp, #12]
 8017830:	f000 020f 	and.w	r2, r0, #15
 8017834:	3b20      	subs	r3, #32
 8017836:	3a08      	subs	r2, #8
 8017838:	441a      	add	r2, r3
 801783a:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801783e:	b2d2      	uxtb	r2, r2
 8017840:	f362 0507 	bfi	r5, r2, #0, #8
 8017844:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8017848:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801784c:	b2f6      	uxtb	r6, r6
 801784e:	1100      	asrs	r0, r0, #4
 8017850:	f366 250f 	bfi	r5, r6, #8, #8
 8017854:	3808      	subs	r0, #8
 8017856:	4403      	add	r3, r0
 8017858:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801785c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8017860:	b2db      	uxtb	r3, r3
 8017862:	2003      	movs	r0, #3
 8017864:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8017868:	fb10 6603 	smlabb	r6, r0, r3, r6
 801786c:	2007      	movs	r0, #7
 801786e:	f363 4517 	bfi	r5, r3, #16, #8
 8017872:	fb10 6202 	smlabb	r2, r0, r2, r6
 8017876:	230b      	movs	r3, #11
 8017878:	fb13 2101 	smlabb	r1, r3, r1, r2
 801787c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8017880:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8017884:	604d      	str	r5, [r1, #4]
 8017886:	e729      	b.n	80176dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8017888:	1c5e      	adds	r6, r3, #1
 801788a:	45b3      	cmp	fp, r6
 801788c:	465f      	mov	r7, fp
 801788e:	bfa8      	it	ge
 8017890:	4637      	movge	r7, r6
 8017892:	e725      	b.n	80176e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8017894:	193b      	adds	r3, r7, r4
 8017896:	2b40      	cmp	r3, #64	@ 0x40
 8017898:	dd13      	ble.n	80178c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801789a:	4648      	mov	r0, r9
 801789c:	00a1      	lsls	r1, r4, #2
 801789e:	f7e9 fb57 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 80178a2:	4649      	mov	r1, r9
 80178a4:	9b05      	ldr	r3, [sp, #20]
 80178a6:	4622      	mov	r2, r4
 80178a8:	4640      	mov	r0, r8
 80178aa:	f7e9 fb9f 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80178ae:	4b2d      	ldr	r3, [pc, #180]	@ (8017964 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 80178b0:	4599      	cmp	r9, r3
 80178b2:	bf0c      	ite	eq
 80178b4:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8017970 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 80178b8:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8017964 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 80178bc:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80178c0:	2400      	movs	r4, #0
 80178c2:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 80178c6:	463b      	mov	r3, r7
 80178c8:	3b01      	subs	r3, #1
 80178ca:	f842 5b04 	str.w	r5, [r2], #4
 80178ce:	d1fb      	bne.n	80178c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 80178d0:	443c      	add	r4, r7
 80178d2:	9f03      	ldr	r7, [sp, #12]
 80178d4:	e6d9      	b.n	801768a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80178d6:	b15c      	cbz	r4, 80178f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 80178d8:	00a1      	lsls	r1, r4, #2
 80178da:	4648      	mov	r0, r9
 80178dc:	f7e9 fb38 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 80178e0:	4640      	mov	r0, r8
 80178e2:	9b05      	ldr	r3, [sp, #20]
 80178e4:	4622      	mov	r2, r4
 80178e6:	4649      	mov	r1, r9
 80178e8:	f7e9 fb80 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80178ec:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80178f0:	4b1d      	ldr	r3, [pc, #116]	@ (8017968 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 80178f2:	9a01      	ldr	r2, [sp, #4]
 80178f4:	881b      	ldrh	r3, [r3, #0]
 80178f6:	1a9b      	subs	r3, r3, r2
 80178f8:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 80178fc:	9b04      	ldr	r3, [sp, #16]
 80178fe:	3301      	adds	r3, #1
 8017900:	9304      	str	r3, [sp, #16]
 8017902:	9a04      	ldr	r2, [sp, #16]
 8017904:	9b00      	ldr	r3, [sp, #0]
 8017906:	4293      	cmp	r3, r2
 8017908:	d11d      	bne.n	8017946 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801790a:	9b02      	ldr	r3, [sp, #8]
 801790c:	9a02      	ldr	r2, [sp, #8]
 801790e:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8017912:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8017916:	9808      	ldr	r0, [sp, #32]
 8017918:	f103 0b01 	add.w	fp, r3, #1
 801791c:	9b06      	ldr	r3, [sp, #24]
 801791e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8017922:	9b07      	ldr	r3, [sp, #28]
 8017924:	2500      	movs	r5, #0
 8017926:	ba3f      	rev	r7, r7
 8017928:	1ba4      	subs	r4, r4, r6
 801792a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801792e:	4629      	mov	r1, r5
 8017930:	441f      	add	r7, r3
 8017932:	b2a4      	uxth	r4, r4
 8017934:	f00d f811 	bl	802495a <memset>
 8017938:	f8cd b008 	str.w	fp, [sp, #8]
 801793c:	9504      	str	r5, [sp, #16]
 801793e:	f7e9 fafd 	bl	8000f3c <_ZN8touchgfx5paint8tearDownEv>
 8017942:	463e      	mov	r6, r7
 8017944:	e5cc      	b.n	80174e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8017946:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801794a:	9b01      	ldr	r3, [sp, #4]
 801794c:	1ae4      	subs	r4, r4, r3
 801794e:	1ba4      	subs	r4, r4, r6
 8017950:	b2a4      	uxth	r4, r4
 8017952:	e7f4      	b.n	801793e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8017954:	4b05      	ldr	r3, [pc, #20]	@ (801796c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8017956:	6818      	ldr	r0, [r3, #0]
 8017958:	6803      	ldr	r3, [r0, #0]
 801795a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801795c:	4798      	blx	r3
 801795e:	b00f      	add	sp, #60	@ 0x3c
 8017960:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017964:	20000280 	.word	0x20000280
 8017968:	20013b64 	.word	0x20013b64
 801796c:	20013b6c 	.word	0x20013b6c
 8017970:	20000380 	.word	0x20000380

08017974 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8017974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017978:	b08f      	sub	sp, #60	@ 0x3c
 801797a:	461c      	mov	r4, r3
 801797c:	9205      	str	r2, [sp, #20]
 801797e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017982:	9100      	str	r1, [sp, #0]
 8017984:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8017986:	9201      	str	r2, [sp, #4]
 8017988:	2a00      	cmp	r2, #0
 801798a:	f000 8115 	beq.w	8017bb8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801798e:	6820      	ldr	r0, [r4, #0]
 8017990:	6861      	ldr	r1, [r4, #4]
 8017992:	aa0a      	add	r2, sp, #40	@ 0x28
 8017994:	c203      	stmia	r2!, {r0, r1}
 8017996:	6818      	ldr	r0, [r3, #0]
 8017998:	6859      	ldr	r1, [r3, #4]
 801799a:	aa0c      	add	r2, sp, #48	@ 0x30
 801799c:	c203      	stmia	r2!, {r0, r1}
 801799e:	a80a      	add	r0, sp, #40	@ 0x28
 80179a0:	f7f9 fa5a 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80179a4:	4621      	mov	r1, r4
 80179a6:	a80c      	add	r0, sp, #48	@ 0x30
 80179a8:	f7f9 fa7e 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80179ac:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80179b0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80179b4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80179b8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80179bc:	bfde      	ittt	le
 80179be:	b2b3      	uxthle	r3, r6
 80179c0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80179c4:	fb92 f3f3 	sdivle	r3, r2, r3
 80179c8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80179cc:	bfc8      	it	gt
 80179ce:	2301      	movgt	r3, #1
 80179d0:	fb92 f1f3 	sdiv	r1, r2, r3
 80179d4:	fa1f fc81 	uxth.w	ip, r1
 80179d8:	fb0c 2413 	mls	r4, ip, r3, r2
 80179dc:	fb14 f406 	smulbb	r4, r4, r6
 80179e0:	441d      	add	r5, r3
 80179e2:	4404      	add	r4, r0
 80179e4:	4661      	mov	r1, ip
 80179e6:	3d01      	subs	r5, #1
 80179e8:	b2a4      	uxth	r4, r4
 80179ea:	fb95 f5f3 	sdiv	r5, r5, r3
 80179ee:	b131      	cbz	r1, 80179fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 80179f0:	9b05      	ldr	r3, [sp, #20]
 80179f2:	9900      	ldr	r1, [sp, #0]
 80179f4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80179f8:	ba1b      	rev	r3, r3
 80179fa:	4419      	add	r1, r3
 80179fc:	9100      	str	r1, [sp, #0]
 80179fe:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017a02:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8017a06:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8017a0a:	4418      	add	r0, r3
 8017a0c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8017a10:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8017a14:	441a      	add	r2, r3
 8017a16:	4b6a      	ldr	r3, [pc, #424]	@ (8017bc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8017a18:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8017a1c:	6818      	ldr	r0, [r3, #0]
 8017a1e:	6803      	ldr	r3, [r0, #0]
 8017a20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017a22:	4798      	blx	r3
 8017a24:	4967      	ldr	r1, [pc, #412]	@ (8017bc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8017a26:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017a2a:	880b      	ldrh	r3, [r1, #0]
 8017a2c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8017a30:	9109      	str	r1, [sp, #36]	@ 0x24
 8017a32:	fb03 c202 	mla	r2, r3, r2, ip
 8017a36:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017a3a:	4373      	muls	r3, r6
 8017a3c:	b2ad      	uxth	r5, r5
 8017a3e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017a42:	00ad      	lsls	r5, r5, #2
 8017a44:	9306      	str	r3, [sp, #24]
 8017a46:	1d2b      	adds	r3, r5, #4
 8017a48:	9307      	str	r3, [sp, #28]
 8017a4a:	9b01      	ldr	r3, [sp, #4]
 8017a4c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017a50:	9103      	str	r1, [sp, #12]
 8017a52:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8017a56:	2c00      	cmp	r4, #0
 8017a58:	bf0c      	ite	eq
 8017a5a:	46c6      	moveq	lr, r8
 8017a5c:	f04f 0e00 	movne.w	lr, #0
 8017a60:	2300      	movs	r3, #0
 8017a62:	b292      	uxth	r2, r2
 8017a64:	fa1f fe8e 	uxth.w	lr, lr
 8017a68:	9302      	str	r3, [sp, #8]
 8017a6a:	9204      	str	r2, [sp, #16]
 8017a6c:	9a06      	ldr	r2, [sp, #24]
 8017a6e:	4282      	cmp	r2, r0
 8017a70:	f240 809d 	bls.w	8017bae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8017a74:	b963      	cbnz	r3, 8017a90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8017a76:	9b00      	ldr	r3, [sp, #0]
 8017a78:	781a      	ldrb	r2, [r3, #0]
 8017a7a:	0993      	lsrs	r3, r2, #6
 8017a7c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8017a80:	9202      	str	r2, [sp, #8]
 8017a82:	1e5a      	subs	r2, r3, #1
 8017a84:	2a02      	cmp	r2, #2
 8017a86:	d815      	bhi.n	8017ab4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8017a88:	9a00      	ldr	r2, [sp, #0]
 8017a8a:	3201      	adds	r2, #1
 8017a8c:	9200      	str	r2, [sp, #0]
 8017a8e:	b29b      	uxth	r3, r3
 8017a90:	b1b4      	cbz	r4, 8017ac0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8017a92:	429c      	cmp	r4, r3
 8017a94:	bf95      	itete	ls
 8017a96:	1b1c      	subls	r4, r3, r4
 8017a98:	1ae4      	subhi	r4, r4, r3
 8017a9a:	fa1f fa84 	uxthls.w	sl, r4
 8017a9e:	b2a4      	uxthhi	r4, r4
 8017aa0:	bf87      	ittee	hi
 8017aa2:	4671      	movhi	r1, lr
 8017aa4:	f04f 0a00 	movhi.w	sl, #0
 8017aa8:	fa1f f188 	uxthls.w	r1, r8
 8017aac:	2400      	movls	r4, #0
 8017aae:	4653      	mov	r3, sl
 8017ab0:	468e      	mov	lr, r1
 8017ab2:	e7db      	b.n	8017a6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8017ab4:	9a00      	ldr	r2, [sp, #0]
 8017ab6:	9b00      	ldr	r3, [sp, #0]
 8017ab8:	3202      	adds	r2, #2
 8017aba:	785b      	ldrb	r3, [r3, #1]
 8017abc:	9200      	str	r2, [sp, #0]
 8017abe:	e7e7      	b.n	8017a90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8017ac0:	2202      	movs	r2, #2
 8017ac2:	4615      	mov	r5, r2
 8017ac4:	9907      	ldr	r1, [sp, #28]
 8017ac6:	9a02      	ldr	r2, [sp, #8]
 8017ac8:	fb15 1202 	smlabb	r2, r5, r2, r1
 8017acc:	9905      	ldr	r1, [sp, #20]
 8017ace:	4573      	cmp	r3, lr
 8017ad0:	f831 c002 	ldrh.w	ip, [r1, r2]
 8017ad4:	9a01      	ldr	r2, [sp, #4]
 8017ad6:	bf2b      	itete	cs
 8017ad8:	eba3 0a0e 	subcs.w	sl, r3, lr
 8017adc:	ebae 0103 	subcc.w	r1, lr, r3
 8017ae0:	46f1      	movcs	r9, lr
 8017ae2:	4699      	movcc	r9, r3
 8017ae4:	bf27      	ittee	cs
 8017ae6:	fa1f fa8a 	uxthcs.w	sl, sl
 8017aea:	4621      	movcs	r1, r4
 8017aec:	b289      	uxthcc	r1, r1
 8017aee:	46a2      	movcc	sl, r4
 8017af0:	2aff      	cmp	r2, #255	@ 0xff
 8017af2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017af6:	d105      	bne.n	8017b04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8017af8:	4481      	add	r9, r0
 8017afa:	4581      	cmp	r9, r0
 8017afc:	d045      	beq.n	8017b8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8017afe:	f820 cb02 	strh.w	ip, [r0], #2
 8017b02:	e7fa      	b.n	8017afa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8017b04:	9d03      	ldr	r5, [sp, #12]
 8017b06:	ea4f 222c 	mov.w	r2, ip, asr #8
 8017b0a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8017b0e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8017b12:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017b16:	436a      	muls	r2, r5
 8017b18:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8017b1c:	fa5f fc8c 	uxtb.w	ip, ip
 8017b20:	9208      	str	r2, [sp, #32]
 8017b22:	fb0b fb05 	mul.w	fp, fp, r5
 8017b26:	fb0c fc05 	mul.w	ip, ip, r5
 8017b2a:	4481      	add	r9, r0
 8017b2c:	4581      	cmp	r9, r0
 8017b2e:	d02c      	beq.n	8017b8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8017b30:	8802      	ldrh	r2, [r0, #0]
 8017b32:	9d04      	ldr	r5, [sp, #16]
 8017b34:	9f04      	ldr	r7, [sp, #16]
 8017b36:	1216      	asrs	r6, r2, #8
 8017b38:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017b3c:	fb16 f605 	smulbb	r6, r6, r5
 8017b40:	9d08      	ldr	r5, [sp, #32]
 8017b42:	442e      	add	r6, r5
 8017b44:	10d5      	asrs	r5, r2, #3
 8017b46:	00d2      	lsls	r2, r2, #3
 8017b48:	b2d2      	uxtb	r2, r2
 8017b4a:	fb12 f207 	smulbb	r2, r2, r7
 8017b4e:	b2b6      	uxth	r6, r6
 8017b50:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017b54:	4462      	add	r2, ip
 8017b56:	fb15 f507 	smulbb	r5, r5, r7
 8017b5a:	b292      	uxth	r2, r2
 8017b5c:	1c77      	adds	r7, r6, #1
 8017b5e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8017b62:	1c57      	adds	r7, r2, #1
 8017b64:	445d      	add	r5, fp
 8017b66:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8017b6a:	b2ad      	uxth	r5, r5
 8017b6c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017b70:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017b74:	4316      	orrs	r6, r2
 8017b76:	1c6a      	adds	r2, r5, #1
 8017b78:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017b7c:	096d      	lsrs	r5, r5, #5
 8017b7e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017b82:	432e      	orrs	r6, r5
 8017b84:	f820 6b02 	strh.w	r6, [r0], #2
 8017b88:	e7d0      	b.n	8017b2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8017b8a:	4573      	cmp	r3, lr
 8017b8c:	d38f      	bcc.n	8017aae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8017b8e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8017b92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017b94:	fa1f f188 	uxth.w	r1, r8
 8017b98:	1a64      	subs	r4, r4, r1
 8017b9a:	881b      	ldrh	r3, [r3, #0]
 8017b9c:	b2a4      	uxth	r4, r4
 8017b9e:	2c00      	cmp	r4, #0
 8017ba0:	eba3 0308 	sub.w	r3, r3, r8
 8017ba4:	bf18      	it	ne
 8017ba6:	2100      	movne	r1, #0
 8017ba8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017bac:	e77f      	b.n	8017aae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8017bae:	4b04      	ldr	r3, [pc, #16]	@ (8017bc0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8017bb0:	6818      	ldr	r0, [r3, #0]
 8017bb2:	6803      	ldr	r3, [r0, #0]
 8017bb4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017bb6:	4798      	blx	r3
 8017bb8:	b00f      	add	sp, #60	@ 0x3c
 8017bba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017bbe:	bf00      	nop
 8017bc0:	20013b6c 	.word	0x20013b6c
 8017bc4:	20013b64 	.word	0x20013b64

08017bc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8017bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bcc:	b09f      	sub	sp, #124	@ 0x7c
 8017bce:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8017bd2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8017bd6:	9209      	str	r2, [sp, #36]	@ 0x24
 8017bd8:	461d      	mov	r5, r3
 8017bda:	4604      	mov	r4, r0
 8017bdc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017bde:	2a00      	cmp	r2, #0
 8017be0:	f000 81eb 	beq.w	8017fba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8017be4:	6828      	ldr	r0, [r5, #0]
 8017be6:	6869      	ldr	r1, [r5, #4]
 8017be8:	aa1a      	add	r2, sp, #104	@ 0x68
 8017bea:	c203      	stmia	r2!, {r0, r1}
 8017bec:	6818      	ldr	r0, [r3, #0]
 8017bee:	6859      	ldr	r1, [r3, #4]
 8017bf0:	aa1c      	add	r2, sp, #112	@ 0x70
 8017bf2:	c203      	stmia	r2!, {r0, r1}
 8017bf4:	a81a      	add	r0, sp, #104	@ 0x68
 8017bf6:	f7f9 f92f 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017bfa:	4629      	mov	r1, r5
 8017bfc:	a81c      	add	r0, sp, #112	@ 0x70
 8017bfe:	f7f9 f953 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017c02:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8017c06:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8017c0a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8017c0e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017c12:	bfd7      	itett	le
 8017c14:	b29a      	uxthle	r2, r3
 8017c16:	2201      	movgt	r2, #1
 8017c18:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017c1c:	fb91 f2f2 	sdivle	r2, r1, r2
 8017c20:	9202      	str	r2, [sp, #8]
 8017c22:	9802      	ldr	r0, [sp, #8]
 8017c24:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8017c28:	fb92 f0f0 	sdiv	r0, r2, r0
 8017c2c:	b280      	uxth	r0, r0
 8017c2e:	9010      	str	r0, [sp, #64]	@ 0x40
 8017c30:	9902      	ldr	r1, [sp, #8]
 8017c32:	9802      	ldr	r0, [sp, #8]
 8017c34:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8017c36:	4488      	add	r8, r1
 8017c38:	fb05 2510 	mls	r5, r5, r0, r2
 8017c3c:	fb15 f503 	smulbb	r5, r5, r3
 8017c40:	f108 38ff 	add.w	r8, r8, #4294967295
 8017c44:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8017c48:	fb98 f8f1 	sdiv	r8, r8, r1
 8017c4c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8017c50:	440d      	add	r5, r1
 8017c52:	4419      	add	r1, r3
 8017c54:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8017c58:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8017c5c:	441a      	add	r2, r3
 8017c5e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8017c62:	9304      	str	r3, [sp, #16]
 8017c64:	4b95      	ldr	r3, [pc, #596]	@ (8017ebc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8017c66:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8017c6a:	6818      	ldr	r0, [r3, #0]
 8017c6c:	6803      	ldr	r3, [r0, #0]
 8017c6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017c70:	4798      	blx	r3
 8017c72:	4b93      	ldr	r3, [pc, #588]	@ (8017ec0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8017c74:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8017c78:	881a      	ldrh	r2, [r3, #0]
 8017c7a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8017c7e:	9318      	str	r3, [sp, #96]	@ 0x60
 8017c80:	fb02 7101 	mla	r1, r2, r1, r7
 8017c84:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017c88:	4356      	muls	r6, r2
 8017c8a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8017c8e:	f108 0801 	add.w	r8, r8, #1
 8017c92:	920a      	str	r2, [sp, #40]	@ 0x28
 8017c94:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017c96:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8017c9a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017c9c:	fa1f f888 	uxth.w	r8, r8
 8017ca0:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8017ca4:	f108 0204 	add.w	r2, r8, #4
 8017ca8:	9211      	str	r2, [sp, #68]	@ 0x44
 8017caa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017cac:	4b85      	ldr	r3, [pc, #532]	@ (8017ec4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8017cae:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8017cb2:	b2ad      	uxth	r5, r5
 8017cb4:	9215      	str	r2, [sp, #84]	@ 0x54
 8017cb6:	2d00      	cmp	r5, #0
 8017cb8:	9a04      	ldr	r2, [sp, #16]
 8017cba:	f04f 0100 	mov.w	r1, #0
 8017cbe:	bf18      	it	ne
 8017cc0:	2200      	movne	r2, #0
 8017cc2:	1b1b      	subs	r3, r3, r4
 8017cc4:	b292      	uxth	r2, r2
 8017cc6:	910d      	str	r1, [sp, #52]	@ 0x34
 8017cc8:	9319      	str	r3, [sp, #100]	@ 0x64
 8017cca:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8017ccc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017cce:	fa11 f383 	uxtah	r3, r1, r3
 8017cd2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8017cd4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017cd8:	3304      	adds	r3, #4
 8017cda:	9306      	str	r3, [sp, #24]
 8017cdc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017cde:	4283      	cmp	r3, r0
 8017ce0:	f240 8166 	bls.w	8017fb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8017ce4:	9902      	ldr	r1, [sp, #8]
 8017ce6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8017cea:	fbb5 f3f3 	udiv	r3, r5, r3
 8017cee:	1acb      	subs	r3, r1, r3
 8017cf0:	b29b      	uxth	r3, r3
 8017cf2:	9316      	str	r3, [sp, #88]	@ 0x58
 8017cf4:	9b06      	ldr	r3, [sp, #24]
 8017cf6:	9e06      	ldr	r6, [sp, #24]
 8017cf8:	7859      	ldrb	r1, [r3, #1]
 8017cfa:	789b      	ldrb	r3, [r3, #2]
 8017cfc:	7836      	ldrb	r6, [r6, #0]
 8017cfe:	9612      	str	r6, [sp, #72]	@ 0x48
 8017d00:	021b      	lsls	r3, r3, #8
 8017d02:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8017d06:	9906      	ldr	r1, [sp, #24]
 8017d08:	78c9      	ldrb	r1, [r1, #3]
 8017d0a:	430b      	orrs	r3, r1
 8017d0c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8017d0e:	3601      	adds	r6, #1
 8017d10:	4419      	add	r1, r3
 8017d12:	9605      	str	r6, [sp, #20]
 8017d14:	1c4e      	adds	r6, r1, #1
 8017d16:	9603      	str	r6, [sp, #12]
 8017d18:	7849      	ldrb	r1, [r1, #1]
 8017d1a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8017d1c:	0209      	lsls	r1, r1, #8
 8017d1e:	5cf3      	ldrb	r3, [r6, r3]
 8017d20:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8017d24:	4319      	orrs	r1, r3
 8017d26:	b28b      	uxth	r3, r1
 8017d28:	930c      	str	r3, [sp, #48]	@ 0x30
 8017d2a:	2300      	movs	r3, #0
 8017d2c:	f04f 0a01 	mov.w	sl, #1
 8017d30:	9307      	str	r3, [sp, #28]
 8017d32:	469c      	mov	ip, r3
 8017d34:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8017d38:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8017d3c:	46d3      	mov	fp, sl
 8017d3e:	4657      	mov	r7, sl
 8017d40:	930e      	str	r3, [sp, #56]	@ 0x38
 8017d42:	2d00      	cmp	r5, #0
 8017d44:	d07e      	beq.n	8017e44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8017d46:	42af      	cmp	r7, r5
 8017d48:	d26e      	bcs.n	8017e28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8017d4a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017d4c:	9201      	str	r2, [sp, #4]
 8017d4e:	1bed      	subs	r5, r5, r7
 8017d50:	4283      	cmp	r3, r0
 8017d52:	b2ad      	uxth	r5, r5
 8017d54:	d802      	bhi.n	8017d5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8017d56:	e073      	b.n	8017e40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8017d58:	2b00      	cmp	r3, #0
 8017d5a:	d15f      	bne.n	8017e1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8017d5c:	9b03      	ldr	r3, [sp, #12]
 8017d5e:	785b      	ldrb	r3, [r3, #1]
 8017d60:	f1cb 0207 	rsb	r2, fp, #7
 8017d64:	4093      	lsls	r3, r2
 8017d66:	005b      	lsls	r3, r3, #1
 8017d68:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017d6c:	9b03      	ldr	r3, [sp, #12]
 8017d6e:	781b      	ldrb	r3, [r3, #0]
 8017d70:	fa43 f30b 	asr.w	r3, r3, fp
 8017d74:	b2db      	uxtb	r3, r3
 8017d76:	4313      	orrs	r3, r2
 8017d78:	f10b 0201 	add.w	r2, fp, #1
 8017d7c:	fa5f fb82 	uxtb.w	fp, r2
 8017d80:	9a03      	ldr	r2, [sp, #12]
 8017d82:	f1bb 0f08 	cmp.w	fp, #8
 8017d86:	bf15      	itete	ne
 8017d88:	3201      	addne	r2, #1
 8017d8a:	3202      	addeq	r2, #2
 8017d8c:	9203      	strne	r2, [sp, #12]
 8017d8e:	9203      	streq	r2, [sp, #12]
 8017d90:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017d92:	b29f      	uxth	r7, r3
 8017d94:	bf08      	it	eq
 8017d96:	f04f 0b00 	moveq.w	fp, #0
 8017d9a:	42ba      	cmp	r2, r7
 8017d9c:	d309      	bcc.n	8017db2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8017d9e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8017da2:	2301      	movs	r3, #1
 8017da4:	9a05      	ldr	r2, [sp, #20]
 8017da6:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8017daa:	d30e      	bcc.n	8017dca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8017dac:	469a      	mov	sl, r3
 8017dae:	2600      	movs	r6, #0
 8017db0:	e035      	b.n	8017e1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8017db2:	9b05      	ldr	r3, [sp, #20]
 8017db4:	429f      	cmp	r7, r3
 8017db6:	d318      	bcc.n	8017dea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8017db8:	eb04 030a 	add.w	r3, r4, sl
 8017dbc:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8017dc0:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8017dc4:	f10a 0301 	add.w	r3, sl, #1
 8017dc8:	b29b      	uxth	r3, r3
 8017dca:	9a05      	ldr	r2, [sp, #20]
 8017dcc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8017dd0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8017dd2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8017dd6:	7116      	strb	r6, [r2, #4]
 8017dd8:	f10a 0601 	add.w	r6, sl, #1
 8017ddc:	80d1      	strh	r1, [r2, #6]
 8017dde:	7156      	strb	r6, [r2, #5]
 8017de0:	9a05      	ldr	r2, [sp, #20]
 8017de2:	3201      	adds	r2, #1
 8017de4:	b292      	uxth	r2, r2
 8017de6:	9205      	str	r2, [sp, #20]
 8017de8:	e7e0      	b.n	8017dac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8017dea:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8017dee:	463a      	mov	r2, r7
 8017df0:	795b      	ldrb	r3, [r3, #5]
 8017df2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8017df6:	4426      	add	r6, r4
 8017df8:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8017dfa:	eb01 0c06 	add.w	ip, r1, r6
 8017dfe:	f1bc 0f00 	cmp.w	ip, #0
 8017e02:	dd07      	ble.n	8017e14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8017e04:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8017e08:	f892 c004 	ldrb.w	ip, [r2, #4]
 8017e0c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8017e10:	88d2      	ldrh	r2, [r2, #6]
 8017e12:	e7f1      	b.n	8017df8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8017e14:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8017e18:	b29b      	uxth	r3, r3
 8017e1a:	e7c3      	b.n	8017da4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8017e1c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8017e1e:	970c      	str	r7, [sp, #48]	@ 0x30
 8017e20:	9a01      	ldr	r2, [sp, #4]
 8017e22:	46b4      	mov	ip, r6
 8017e24:	461f      	mov	r7, r3
 8017e26:	e78c      	b.n	8017d42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8017e28:	1b7b      	subs	r3, r7, r5
 8017e2a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017e2e:	9201      	str	r2, [sp, #4]
 8017e30:	eb0c 0605 	add.w	r6, ip, r5
 8017e34:	b29b      	uxth	r3, r3
 8017e36:	b2b6      	uxth	r6, r6
 8017e38:	2500      	movs	r5, #0
 8017e3a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017e3c:	4282      	cmp	r2, r0
 8017e3e:	d88b      	bhi.n	8017d58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8017e40:	9a01      	ldr	r2, [sp, #4]
 8017e42:	e74b      	b.n	8017cdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8017e44:	4297      	cmp	r7, r2
 8017e46:	d332      	bcc.n	8017eae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8017e48:	1abb      	subs	r3, r7, r2
 8017e4a:	b29b      	uxth	r3, r3
 8017e4c:	9208      	str	r2, [sp, #32]
 8017e4e:	9501      	str	r5, [sp, #4]
 8017e50:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8017e52:	29ff      	cmp	r1, #255	@ 0xff
 8017e54:	9908      	ldr	r1, [sp, #32]
 8017e56:	eb0c 0601 	add.w	r6, ip, r1
 8017e5a:	d135      	bne.n	8017ec8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8017e5c:	f1a0 0e02 	sub.w	lr, r0, #2
 8017e60:	b2b6      	uxth	r6, r6
 8017e62:	45b4      	cmp	ip, r6
 8017e64:	f040 808c 	bne.w	8017f80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8017e68:	9908      	ldr	r1, [sp, #32]
 8017e6a:	4297      	cmp	r7, r2
 8017e6c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017e70:	d3e2      	bcc.n	8017e38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8017e72:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8017e74:	9904      	ldr	r1, [sp, #16]
 8017e76:	8812      	ldrh	r2, [r2, #0]
 8017e78:	1a52      	subs	r2, r2, r1
 8017e7a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017e7e:	9a07      	ldr	r2, [sp, #28]
 8017e80:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8017e82:	3201      	adds	r2, #1
 8017e84:	428a      	cmp	r2, r1
 8017e86:	9207      	str	r2, [sp, #28]
 8017e88:	f040 8087 	bne.w	8017f9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8017e8c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8017e90:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8017e94:	9b04      	ldr	r3, [sp, #16]
 8017e96:	1bed      	subs	r5, r5, r7
 8017e98:	b2ad      	uxth	r5, r5
 8017e9a:	2d00      	cmp	r5, #0
 8017e9c:	bf08      	it	eq
 8017e9e:	461a      	moveq	r2, r3
 8017ea0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017ea2:	bf18      	it	ne
 8017ea4:	2200      	movne	r2, #0
 8017ea6:	3301      	adds	r3, #1
 8017ea8:	930d      	str	r3, [sp, #52]	@ 0x34
 8017eaa:	b292      	uxth	r2, r2
 8017eac:	e70d      	b.n	8017cca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8017eae:	1bd1      	subs	r1, r2, r7
 8017eb0:	b28b      	uxth	r3, r1
 8017eb2:	9301      	str	r3, [sp, #4]
 8017eb4:	9708      	str	r7, [sp, #32]
 8017eb6:	462b      	mov	r3, r5
 8017eb8:	e7ca      	b.n	8017e50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8017eba:	bf00      	nop
 8017ebc:	20013b6c 	.word	0x20013b6c
 8017ec0:	20013b64 	.word	0x20013b64
 8017ec4:	fffff7fb 	.word	0xfffff7fb
 8017ec8:	b2b6      	uxth	r6, r6
 8017eca:	900b      	str	r0, [sp, #44]	@ 0x2c
 8017ecc:	45b4      	cmp	ip, r6
 8017ece:	d0cb      	beq.n	8017e68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8017ed0:	f10c 0101 	add.w	r1, ip, #1
 8017ed4:	44a4      	add	ip, r4
 8017ed6:	9117      	str	r1, [sp, #92]	@ 0x5c
 8017ed8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8017edc:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8017ede:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8017ee2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8017ee4:	f8b1 c000 	ldrh.w	ip, [r1]
 8017ee8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8017eea:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8017eee:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8017ef2:	fb1e fe01 	smulbb	lr, lr, r1
 8017ef6:	ea4f 2825 	mov.w	r8, r5, asr #8
 8017efa:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8017efc:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8017f00:	fb08 e801 	mla	r8, r8, r1, lr
 8017f04:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8017f08:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8017f0a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8017f0e:	fb19 f901 	smulbb	r9, r9, r1
 8017f12:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8017f16:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8017f18:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8017f1c:	fb0e 9e01 	mla	lr, lr, r1, r9
 8017f20:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017f24:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8017f26:	fa5f fc8c 	uxtb.w	ip, ip
 8017f2a:	fb1c fc01 	smulbb	ip, ip, r1
 8017f2e:	00ed      	lsls	r5, r5, #3
 8017f30:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8017f32:	b2ed      	uxtb	r5, r5
 8017f34:	fb05 c501 	mla	r5, r5, r1, ip
 8017f38:	fa1f f888 	uxth.w	r8, r8
 8017f3c:	fa1f fe8e 	uxth.w	lr, lr
 8017f40:	b2ad      	uxth	r5, r5
 8017f42:	f108 0c01 	add.w	ip, r8, #1
 8017f46:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8017f4a:	f10e 0901 	add.w	r9, lr, #1
 8017f4e:	f105 0c01 	add.w	ip, r5, #1
 8017f52:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8017f56:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8017f5a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017f5e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8017f62:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017f66:	ea4c 0808 	orr.w	r8, ip, r8
 8017f6a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8017f6c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8017f70:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017f74:	ea48 0809 	orr.w	r8, r8, r9
 8017f78:	f821 8b02 	strh.w	r8, [r1], #2
 8017f7c:	910b      	str	r1, [sp, #44]	@ 0x2c
 8017f7e:	e7a5      	b.n	8017ecc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8017f80:	f10c 0801 	add.w	r8, ip, #1
 8017f84:	44a4      	add	ip, r4
 8017f86:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8017f88:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8017f8c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8017f90:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8017f94:	fa1f fc88 	uxth.w	ip, r8
 8017f98:	e763      	b.n	8017e62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8017f9a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017f9e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8017fa2:	1aad      	subs	r5, r5, r2
 8017fa4:	b2ad      	uxth	r5, r5
 8017fa6:	2d00      	cmp	r5, #0
 8017fa8:	bf18      	it	ne
 8017faa:	2200      	movne	r2, #0
 8017fac:	9201      	str	r2, [sp, #4]
 8017fae:	e744      	b.n	8017e3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8017fb0:	4b03      	ldr	r3, [pc, #12]	@ (8017fc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8017fb2:	6818      	ldr	r0, [r3, #0]
 8017fb4:	6803      	ldr	r3, [r0, #0]
 8017fb6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017fb8:	4798      	blx	r3
 8017fba:	b01f      	add	sp, #124	@ 0x7c
 8017fbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017fc0:	20013b6c 	.word	0x20013b6c

08017fc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8017fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017fc8:	b093      	sub	sp, #76	@ 0x4c
 8017fca:	4616      	mov	r6, r2
 8017fcc:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8017fd0:	9003      	str	r0, [sp, #12]
 8017fd2:	460d      	mov	r5, r1
 8017fd4:	9201      	str	r2, [sp, #4]
 8017fd6:	2a00      	cmp	r2, #0
 8017fd8:	f000 8304 	beq.w	80185e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8017fdc:	6830      	ldr	r0, [r6, #0]
 8017fde:	6871      	ldr	r1, [r6, #4]
 8017fe0:	ac0e      	add	r4, sp, #56	@ 0x38
 8017fe2:	c403      	stmia	r4!, {r0, r1}
 8017fe4:	6818      	ldr	r0, [r3, #0]
 8017fe6:	6859      	ldr	r1, [r3, #4]
 8017fe8:	ac10      	add	r4, sp, #64	@ 0x40
 8017fea:	c403      	stmia	r4!, {r0, r1}
 8017fec:	a80e      	add	r0, sp, #56	@ 0x38
 8017fee:	f7f8 ff33 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017ff2:	4631      	mov	r1, r6
 8017ff4:	a810      	add	r0, sp, #64	@ 0x40
 8017ff6:	f7f8 ff57 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017ffa:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8017ffe:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8018002:	bfd7      	itett	le
 8018004:	b293      	uxthle	r3, r2
 8018006:	2301      	movgt	r3, #1
 8018008:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801800c:	fb91 f3f3 	sdivle	r3, r1, r3
 8018010:	9304      	str	r3, [sp, #16]
 8018012:	f105 0308 	add.w	r3, r5, #8
 8018016:	9904      	ldr	r1, [sp, #16]
 8018018:	9308      	str	r3, [sp, #32]
 801801a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801801e:	440b      	add	r3, r1
 8018020:	3b01      	subs	r3, #1
 8018022:	fb93 f3f1 	sdiv	r3, r3, r1
 8018026:	9908      	ldr	r1, [sp, #32]
 8018028:	3b01      	subs	r3, #1
 801802a:	b29b      	uxth	r3, r3
 801802c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018030:	9309      	str	r3, [sp, #36]	@ 0x24
 8018032:	9904      	ldr	r1, [sp, #16]
 8018034:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8018038:	fb93 f0f1 	sdiv	r0, r3, r1
 801803c:	b284      	uxth	r4, r0
 801803e:	9405      	str	r4, [sp, #20]
 8018040:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8018044:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8018048:	fb05 3914 	mls	r9, r5, r4, r3
 801804c:	fb19 f902 	smulbb	r9, r9, r2
 8018050:	4489      	add	r9, r1
 8018052:	fa1f f989 	uxth.w	r9, r9
 8018056:	2d00      	cmp	r5, #0
 8018058:	d05d      	beq.n	8018116 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801805a:	1e6a      	subs	r2, r5, #1
 801805c:	9808      	ldr	r0, [sp, #32]
 801805e:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8018062:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018064:	fa9a fa8a 	rev.w	sl, sl
 8018068:	4492      	add	sl, r2
 801806a:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801806e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8018072:	4411      	add	r1, r2
 8018074:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018078:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801807c:	4413      	add	r3, r2
 801807e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8018082:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8018086:	9302      	str	r3, [sp, #8]
 8018088:	4bcb      	ldr	r3, [pc, #812]	@ (80183b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801808a:	6818      	ldr	r0, [r3, #0]
 801808c:	6803      	ldr	r3, [r0, #0]
 801808e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018090:	4798      	blx	r3
 8018092:	4bca      	ldr	r3, [pc, #808]	@ (80183bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8018094:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8018098:	881b      	ldrh	r3, [r3, #0]
 801809a:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801809e:	fb03 2404 	mla	r4, r3, r4, r2
 80180a2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80180a6:	436b      	muls	r3, r5
 80180a8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80180ac:	930d      	str	r3, [sp, #52]	@ 0x34
 80180ae:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 80180b2:	fb99 f3f3 	sdiv	r3, r9, r3
 80180b6:	9306      	str	r3, [sp, #24]
 80180b8:	9b01      	ldr	r3, [sp, #4]
 80180ba:	43db      	mvns	r3, r3
 80180bc:	b2db      	uxtb	r3, r3
 80180be:	930a      	str	r3, [sp, #40]	@ 0x28
 80180c0:	9b03      	ldr	r3, [sp, #12]
 80180c2:	3304      	adds	r3, #4
 80180c4:	4618      	mov	r0, r3
 80180c6:	2280      	movs	r2, #128	@ 0x80
 80180c8:	2100      	movs	r1, #0
 80180ca:	930b      	str	r3, [sp, #44]	@ 0x2c
 80180cc:	f00c fc45 	bl	802495a <memset>
 80180d0:	4bbb      	ldr	r3, [pc, #748]	@ (80183c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 80180d2:	9300      	str	r3, [sp, #0]
 80180d4:	2300      	movs	r3, #0
 80180d6:	f04f 0600 	mov.w	r6, #0
 80180da:	9307      	str	r3, [sp, #28]
 80180dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80180de:	42a3      	cmp	r3, r4
 80180e0:	f240 827b 	bls.w	80185da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 80180e4:	f04f 0e07 	mov.w	lr, #7
 80180e8:	f1b9 0f00 	cmp.w	r9, #0
 80180ec:	f000 8159 	beq.w	80183a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 80180f0:	f89a 5000 	ldrb.w	r5, [sl]
 80180f4:	b2ed      	uxtb	r5, r5
 80180f6:	11aa      	asrs	r2, r5, #6
 80180f8:	f10a 0701 	add.w	r7, sl, #1
 80180fc:	d10e      	bne.n	801811c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 80180fe:	9b03      	ldr	r3, [sp, #12]
 8018100:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8018104:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018108:	88ae      	ldrh	r6, [r5, #4]
 801810a:	f109 39ff 	add.w	r9, r9, #4294967295
 801810e:	fa1f f989 	uxth.w	r9, r9
 8018112:	46ba      	mov	sl, r7
 8018114:	e7e8      	b.n	80180e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 8018116:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801811a:	e7a6      	b.n	801806a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801811c:	2a01      	cmp	r2, #1
 801811e:	d129      	bne.n	8018174 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 8018120:	f3c6 0304 	ubfx	r3, r6, #0, #5
 8018124:	f005 0203 	and.w	r2, r5, #3
 8018128:	3b02      	subs	r3, #2
 801812a:	4413      	add	r3, r2
 801812c:	f003 031f 	and.w	r3, r3, #31
 8018130:	f3c5 0281 	ubfx	r2, r5, #2, #2
 8018134:	f363 0604 	bfi	r6, r3, #0, #5
 8018138:	3a02      	subs	r2, #2
 801813a:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801813e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8018142:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8018146:	f362 164a 	bfi	r6, r2, #5, #6
 801814a:	3d02      	subs	r5, #2
 801814c:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8018150:	f005 051f 	and.w	r5, r5, #31
 8018154:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8018158:	2103      	movs	r1, #3
 801815a:	fb11 2205 	smlabb	r2, r1, r5, r2
 801815e:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8018162:	9a03      	ldr	r2, [sp, #12]
 8018164:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8018168:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801816c:	f365 26cf 	bfi	r6, r5, #11, #5
 8018170:	809e      	strh	r6, [r3, #4]
 8018172:	e7ca      	b.n	801810a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8018174:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8018178:	2a02      	cmp	r2, #2
 801817a:	b2ab      	uxth	r3, r5
 801817c:	d136      	bne.n	80181ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801817e:	2101      	movs	r1, #1
 8018180:	fb12 1205 	smlabb	r2, r2, r5, r1
 8018184:	4492      	add	sl, r2
 8018186:	463a      	mov	r2, r7
 8018188:	4552      	cmp	r2, sl
 801818a:	d01c      	beq.n	80181c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801818c:	4694      	mov	ip, r2
 801818e:	f04f 0b03 	mov.w	fp, #3
 8018192:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8018196:	7852      	ldrb	r2, [r2, #1]
 8018198:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801819c:	f3c1 1045 	ubfx	r0, r1, #5, #6
 80181a0:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 80181a4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80181a8:	f001 021f 	and.w	r2, r1, #31
 80181ac:	fb1b 0008 	smlabb	r0, fp, r8, r0
 80181b0:	fb1e 0002 	smlabb	r0, lr, r2, r0
 80181b4:	9a03      	ldr	r2, [sp, #12]
 80181b6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80181ba:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80181be:	460e      	mov	r6, r1
 80181c0:	8081      	strh	r1, [r0, #4]
 80181c2:	4662      	mov	r2, ip
 80181c4:	e7e0      	b.n	8018188 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 80181c6:	4599      	cmp	r9, r3
 80181c8:	d20b      	bcs.n	80181e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 80181ca:	eba5 0509 	sub.w	r5, r5, r9
 80181ce:	2d00      	cmp	r5, #0
 80181d0:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 80181d4:	f300 8209 	bgt.w	80185ea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 80181d8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80181dc:	2301      	movs	r3, #1
 80181de:	9307      	str	r3, [sp, #28]
 80181e0:	e00c      	b.n	80181fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80181e2:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80181e6:	eba9 0903 	sub.w	r9, r9, r3
 80181ea:	e790      	b.n	801810e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 80181ec:	4599      	cmp	r9, r3
 80181ee:	d2fa      	bcs.n	80181e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 80181f0:	eba5 0509 	sub.w	r5, r5, r9
 80181f4:	2d00      	cmp	r5, #0
 80181f6:	dc1d      	bgt.n	8018234 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 80181f8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80181fc:	f04f 0b00 	mov.w	fp, #0
 8018200:	f1b8 0f00 	cmp.w	r8, #0
 8018204:	f340 81a1 	ble.w	801854a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 8018208:	783b      	ldrb	r3, [r7, #0]
 801820a:	b2db      	uxtb	r3, r3
 801820c:	119a      	asrs	r2, r3, #6
 801820e:	f107 0a01 	add.w	sl, r7, #1
 8018212:	f040 80d7 	bne.w	80183c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 8018216:	9a03      	ldr	r2, [sp, #12]
 8018218:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801821c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018220:	889e      	ldrh	r6, [r3, #4]
 8018222:	9b01      	ldr	r3, [sp, #4]
 8018224:	2bff      	cmp	r3, #255	@ 0xff
 8018226:	f040 81e9 	bne.w	80185fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 801822a:	8026      	strh	r6, [r4, #0]
 801822c:	f108 38ff 	add.w	r8, r8, #4294967295
 8018230:	3402      	adds	r4, #2
 8018232:	e0be      	b.n	80183b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8018234:	9b02      	ldr	r3, [sp, #8]
 8018236:	9a02      	ldr	r2, [sp, #8]
 8018238:	42ab      	cmp	r3, r5
 801823a:	bfa8      	it	ge
 801823c:	462b      	movge	r3, r5
 801823e:	eba2 0803 	sub.w	r8, r2, r3
 8018242:	9a07      	ldr	r2, [sp, #28]
 8018244:	1aed      	subs	r5, r5, r3
 8018246:	2a00      	cmp	r2, #0
 8018248:	d05a      	beq.n	8018300 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801824a:	9a01      	ldr	r2, [sp, #4]
 801824c:	2aff      	cmp	r2, #255	@ 0xff
 801824e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018252:	d049      	beq.n	80182e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8018254:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8018258:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801825c:	42a3      	cmp	r3, r4
 801825e:	f240 80a5 	bls.w	80183ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8018262:	46bc      	mov	ip, r7
 8018264:	8820      	ldrh	r0, [r4, #0]
 8018266:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801826a:	7879      	ldrb	r1, [r7, #1]
 801826c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8018270:	b212      	sxth	r2, r2
 8018272:	b291      	uxth	r1, r2
 8018274:	ea4f 2a20 	mov.w	sl, r0, asr #8
 8018278:	120f      	asrs	r7, r1, #8
 801827a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801827e:	fb1a fa09 	smulbb	sl, sl, r9
 8018282:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018286:	fb07 a70e 	mla	r7, r7, lr, sl
 801828a:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801828e:	00c0      	lsls	r0, r0, #3
 8018290:	10c9      	asrs	r1, r1, #3
 8018292:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018296:	00d2      	lsls	r2, r2, #3
 8018298:	b2c0      	uxtb	r0, r0
 801829a:	fb1a fa09 	smulbb	sl, sl, r9
 801829e:	fb10 f009 	smulbb	r0, r0, r9
 80182a2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80182a6:	b2d2      	uxtb	r2, r2
 80182a8:	b2bf      	uxth	r7, r7
 80182aa:	fb01 a10e 	mla	r1, r1, lr, sl
 80182ae:	fb02 020e 	mla	r2, r2, lr, r0
 80182b2:	b289      	uxth	r1, r1
 80182b4:	b292      	uxth	r2, r2
 80182b6:	1c78      	adds	r0, r7, #1
 80182b8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80182bc:	f101 0a01 	add.w	sl, r1, #1
 80182c0:	1c50      	adds	r0, r2, #1
 80182c2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80182c6:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 80182ca:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80182ce:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80182d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80182d6:	4307      	orrs	r7, r0
 80182d8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80182dc:	ea47 070a 	orr.w	r7, r7, sl
 80182e0:	f824 7b02 	strh.w	r7, [r4], #2
 80182e4:	4667      	mov	r7, ip
 80182e6:	e7b9      	b.n	801825c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80182e8:	42a3      	cmp	r3, r4
 80182ea:	d95f      	bls.n	80183ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80182ec:	463a      	mov	r2, r7
 80182ee:	f812 1b02 	ldrb.w	r1, [r2], #2
 80182f2:	7878      	ldrb	r0, [r7, #1]
 80182f4:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80182f8:	f824 1b02 	strh.w	r1, [r4], #2
 80182fc:	4617      	mov	r7, r2
 80182fe:	e7f3      	b.n	80182e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8018300:	9901      	ldr	r1, [sp, #4]
 8018302:	29ff      	cmp	r1, #255	@ 0xff
 8018304:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018308:	b2b2      	uxth	r2, r6
 801830a:	d044      	beq.n	8018396 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801830c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8018310:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 8018314:	ea4f 2922 	mov.w	r9, r2, asr #8
 8018318:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801831c:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 8018320:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8018324:	4608      	mov	r0, r1
 8018326:	fb09 f901 	mul.w	r9, r9, r1
 801832a:	fb0e fe01 	mul.w	lr, lr, r1
 801832e:	00d1      	lsls	r1, r2, #3
 8018330:	b2c9      	uxtb	r1, r1
 8018332:	4341      	muls	r1, r0
 8018334:	429c      	cmp	r4, r3
 8018336:	f4bf af61 	bcs.w	80181fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801833a:	8822      	ldrh	r2, [r4, #0]
 801833c:	1210      	asrs	r0, r2, #8
 801833e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8018342:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8018346:	00d2      	lsls	r2, r2, #3
 8018348:	fb00 900a 	mla	r0, r0, sl, r9
 801834c:	b2d2      	uxtb	r2, r2
 801834e:	b280      	uxth	r0, r0
 8018350:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8018354:	fb02 120a 	mla	r2, r2, sl, r1
 8018358:	b292      	uxth	r2, r2
 801835a:	f100 0b01 	add.w	fp, r0, #1
 801835e:	fb0c ec0a 	mla	ip, ip, sl, lr
 8018362:	fa1f fc8c 	uxth.w	ip, ip
 8018366:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801836a:	1c50      	adds	r0, r2, #1
 801836c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8018370:	f10c 0201 	add.w	r2, ip, #1
 8018374:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018378:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801837c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8018380:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8018384:	ea40 0b0b 	orr.w	fp, r0, fp
 8018388:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801838c:	ea4b 0b0c 	orr.w	fp, fp, ip
 8018390:	f824 bb02 	strh.w	fp, [r4], #2
 8018394:	e7ce      	b.n	8018334 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8018396:	429c      	cmp	r4, r3
 8018398:	f4bf af30 	bcs.w	80181fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801839c:	f824 2b02 	strh.w	r2, [r4], #2
 80183a0:	e7f9      	b.n	8018396 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80183a2:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80183a6:	4657      	mov	r7, sl
 80183a8:	464d      	mov	r5, r9
 80183aa:	e727      	b.n	80181fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80183ac:	2300      	movs	r3, #0
 80183ae:	e716      	b.n	80181de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 80183b0:	44bb      	add	fp, r7
 80183b2:	4657      	mov	r7, sl
 80183b4:	e724      	b.n	8018200 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 80183b6:	bf00      	nop
 80183b8:	20013b6c 	.word	0x20013b6c
 80183bc:	20013b64 	.word	0x20013b64
 80183c0:	20000280 	.word	0x20000280
 80183c4:	2a01      	cmp	r2, #1
 80183c6:	d12a      	bne.n	801841e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 80183c8:	f3c6 0104 	ubfx	r1, r6, #0, #5
 80183cc:	f003 0203 	and.w	r2, r3, #3
 80183d0:	3902      	subs	r1, #2
 80183d2:	4411      	add	r1, r2
 80183d4:	f001 011f 	and.w	r1, r1, #31
 80183d8:	f3c3 0081 	ubfx	r0, r3, #2, #2
 80183dc:	f361 0604 	bfi	r6, r1, #0, #5
 80183e0:	3802      	subs	r0, #2
 80183e2:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 80183e6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80183ea:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80183ee:	f360 164a 	bfi	r6, r0, #5, #6
 80183f2:	3b02      	subs	r3, #2
 80183f4:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 80183f8:	f002 031f 	and.w	r3, r2, #31
 80183fc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8018400:	2203      	movs	r2, #3
 8018402:	f363 26cf 	bfi	r6, r3, #11, #5
 8018406:	fb12 0303 	smlabb	r3, r2, r3, r0
 801840a:	2207      	movs	r2, #7
 801840c:	fb12 3301 	smlabb	r3, r2, r1, r3
 8018410:	9a03      	ldr	r2, [sp, #12]
 8018412:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8018416:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801841a:	809e      	strh	r6, [r3, #4]
 801841c:	e701      	b.n	8018222 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801841e:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 8018422:	45a8      	cmp	r8, r5
 8018424:	4647      	mov	r7, r8
 8018426:	bfa8      	it	ge
 8018428:	462f      	movge	r7, r5
 801842a:	2a02      	cmp	r2, #2
 801842c:	d154      	bne.n	80184d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801842e:	9b01      	ldr	r3, [sp, #4]
 8018430:	2bff      	cmp	r3, #255	@ 0xff
 8018432:	d01a      	beq.n	801846a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8018434:	eb0b 0307 	add.w	r3, fp, r7
 8018438:	2b40      	cmp	r3, #64	@ 0x40
 801843a:	dd16      	ble.n	801846a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801843c:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8018440:	4649      	mov	r1, r9
 8018442:	9800      	ldr	r0, [sp, #0]
 8018444:	f7e8 fd84 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8018448:	465a      	mov	r2, fp
 801844a:	9b01      	ldr	r3, [sp, #4]
 801844c:	9900      	ldr	r1, [sp, #0]
 801844e:	4620      	mov	r0, r4
 8018450:	f7e8 fda8 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8018454:	9b00      	ldr	r3, [sp, #0]
 8018456:	461a      	mov	r2, r3
 8018458:	4b6c      	ldr	r3, [pc, #432]	@ (801860c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801845a:	429a      	cmp	r2, r3
 801845c:	bf0c      	ite	eq
 801845e:	4b6c      	ldreq	r3, [pc, #432]	@ (8018610 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8018460:	4b6a      	ldrne	r3, [pc, #424]	@ (801860c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8018462:	9300      	str	r3, [sp, #0]
 8018464:	444c      	add	r4, r9
 8018466:	f04f 0b00 	mov.w	fp, #0
 801846a:	4652      	mov	r2, sl
 801846c:	2100      	movs	r1, #0
 801846e:	42a9      	cmp	r1, r5
 8018470:	da2c      	bge.n	80184cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8018472:	4694      	mov	ip, r2
 8018474:	f04f 0903 	mov.w	r9, #3
 8018478:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801847c:	7852      	ldrb	r2, [r2, #1]
 801847e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8018482:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8018486:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801848a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801848e:	f003 021f 	and.w	r2, r3, #31
 8018492:	fb19 000e 	smlabb	r0, r9, lr, r0
 8018496:	f04f 0e07 	mov.w	lr, #7
 801849a:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801849e:	9a03      	ldr	r2, [sp, #12]
 80184a0:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80184a4:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80184a8:	42b9      	cmp	r1, r7
 80184aa:	461e      	mov	r6, r3
 80184ac:	8083      	strh	r3, [r0, #4]
 80184ae:	da0a      	bge.n	80184c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 80184b0:	9a01      	ldr	r2, [sp, #4]
 80184b2:	2aff      	cmp	r2, #255	@ 0xff
 80184b4:	bf15      	itete	ne
 80184b6:	9a00      	ldrne	r2, [sp, #0]
 80184b8:	8023      	strheq	r3, [r4, #0]
 80184ba:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 80184be:	3402      	addeq	r4, #2
 80184c0:	bf18      	it	ne
 80184c2:	f10b 0b01 	addne.w	fp, fp, #1
 80184c6:	3101      	adds	r1, #1
 80184c8:	4662      	mov	r2, ip
 80184ca:	e7d0      	b.n	801846e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 80184cc:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80184d0:	eba8 0807 	sub.w	r8, r8, r7
 80184d4:	1bed      	subs	r5, r5, r7
 80184d6:	e76c      	b.n	80183b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80184d8:	9b01      	ldr	r3, [sp, #4]
 80184da:	2bff      	cmp	r3, #255	@ 0xff
 80184dc:	eba8 0807 	sub.w	r8, r8, r7
 80184e0:	eba5 0507 	sub.w	r5, r5, r7
 80184e4:	fa1f f986 	uxth.w	r9, r6
 80184e8:	d027      	beq.n	801853a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 80184ea:	eb0b 0307 	add.w	r3, fp, r7
 80184ee:	2b40      	cmp	r3, #64	@ 0x40
 80184f0:	dd18      	ble.n	8018524 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 80184f2:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80184f6:	4619      	mov	r1, r3
 80184f8:	9800      	ldr	r0, [sp, #0]
 80184fa:	930c      	str	r3, [sp, #48]	@ 0x30
 80184fc:	f7e8 fd28 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8018500:	465a      	mov	r2, fp
 8018502:	9b01      	ldr	r3, [sp, #4]
 8018504:	9900      	ldr	r1, [sp, #0]
 8018506:	4620      	mov	r0, r4
 8018508:	f7e8 fd4c 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801850c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801850e:	441c      	add	r4, r3
 8018510:	9b00      	ldr	r3, [sp, #0]
 8018512:	461a      	mov	r2, r3
 8018514:	4b3d      	ldr	r3, [pc, #244]	@ (801860c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8018516:	429a      	cmp	r2, r3
 8018518:	bf0c      	ite	eq
 801851a:	4b3d      	ldreq	r3, [pc, #244]	@ (8018610 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801851c:	4b3b      	ldrne	r3, [pc, #236]	@ (801860c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801851e:	9300      	str	r3, [sp, #0]
 8018520:	f04f 0b00 	mov.w	fp, #0
 8018524:	9b00      	ldr	r3, [sp, #0]
 8018526:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801852a:	463b      	mov	r3, r7
 801852c:	2b00      	cmp	r3, #0
 801852e:	f43f af3f 	beq.w	80183b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 8018532:	f822 9b02 	strh.w	r9, [r2], #2
 8018536:	3b01      	subs	r3, #1
 8018538:	e7f8      	b.n	801852c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801853a:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801853e:	42a7      	cmp	r7, r4
 8018540:	f67f af37 	bls.w	80183b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8018544:	f824 9b02 	strh.w	r9, [r4], #2
 8018548:	e7f9      	b.n	801853e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801854a:	f1bb 0f00 	cmp.w	fp, #0
 801854e:	d00c      	beq.n	801856a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8018550:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8018554:	4641      	mov	r1, r8
 8018556:	9800      	ldr	r0, [sp, #0]
 8018558:	f7e8 fcfa 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 801855c:	4620      	mov	r0, r4
 801855e:	9b01      	ldr	r3, [sp, #4]
 8018560:	9900      	ldr	r1, [sp, #0]
 8018562:	465a      	mov	r2, fp
 8018564:	f7e8 fd1e 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8018568:	4444      	add	r4, r8
 801856a:	4b2a      	ldr	r3, [pc, #168]	@ (8018614 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801856c:	9a02      	ldr	r2, [sp, #8]
 801856e:	881b      	ldrh	r3, [r3, #0]
 8018570:	1a9b      	subs	r3, r3, r2
 8018572:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018576:	9b06      	ldr	r3, [sp, #24]
 8018578:	3301      	adds	r3, #1
 801857a:	9306      	str	r3, [sp, #24]
 801857c:	9a06      	ldr	r2, [sp, #24]
 801857e:	9b04      	ldr	r3, [sp, #16]
 8018580:	4293      	cmp	r3, r2
 8018582:	d120      	bne.n	80185c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8018584:	9b05      	ldr	r3, [sp, #20]
 8018586:	9a05      	ldr	r2, [sp, #20]
 8018588:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801858c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8018590:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8018592:	f103 0801 	add.w	r8, r3, #1
 8018596:	9b08      	ldr	r3, [sp, #32]
 8018598:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801859c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801859e:	ba3f      	rev	r7, r7
 80185a0:	2280      	movs	r2, #128	@ 0x80
 80185a2:	2100      	movs	r1, #0
 80185a4:	441f      	add	r7, r3
 80185a6:	eba9 0905 	sub.w	r9, r9, r5
 80185aa:	f00c f9d6 	bl	802495a <memset>
 80185ae:	2300      	movs	r3, #0
 80185b0:	fa1f f989 	uxth.w	r9, r9
 80185b4:	f04f 0600 	mov.w	r6, #0
 80185b8:	f8cd 8014 	str.w	r8, [sp, #20]
 80185bc:	9306      	str	r3, [sp, #24]
 80185be:	f7e8 fcbd 	bl	8000f3c <_ZN8touchgfx5paint8tearDownEv>
 80185c2:	46ba      	mov	sl, r7
 80185c4:	e58a      	b.n	80180dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 80185c6:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 80185ca:	9b02      	ldr	r3, [sp, #8]
 80185cc:	eba9 0903 	sub.w	r9, r9, r3
 80185d0:	eba9 0505 	sub.w	r5, r9, r5
 80185d4:	fa1f f985 	uxth.w	r9, r5
 80185d8:	e7f1      	b.n	80185be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 80185da:	4b0f      	ldr	r3, [pc, #60]	@ (8018618 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 80185dc:	6818      	ldr	r0, [r3, #0]
 80185de:	6803      	ldr	r3, [r0, #0]
 80185e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80185e2:	4798      	blx	r3
 80185e4:	b013      	add	sp, #76	@ 0x4c
 80185e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185ea:	9b02      	ldr	r3, [sp, #8]
 80185ec:	9a02      	ldr	r2, [sp, #8]
 80185ee:	42ab      	cmp	r3, r5
 80185f0:	bfa8      	it	ge
 80185f2:	462b      	movge	r3, r5
 80185f4:	eba2 0803 	sub.w	r8, r2, r3
 80185f8:	1aed      	subs	r5, r5, r3
 80185fa:	e626      	b.n	801824a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 80185fc:	f108 38ff 	add.w	r8, r8, #4294967295
 8018600:	fa1f f986 	uxth.w	r9, r6
 8018604:	2500      	movs	r5, #0
 8018606:	2701      	movs	r7, #1
 8018608:	e76f      	b.n	80184ea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 801860a:	bf00      	nop
 801860c:	20000280 	.word	0x20000280
 8018610:	20000380 	.word	0x20000380
 8018614:	20013b64 	.word	0x20013b64
 8018618:	20013b6c 	.word	0x20013b6c

0801861c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801861c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018620:	b08f      	sub	sp, #60	@ 0x3c
 8018622:	461c      	mov	r4, r3
 8018624:	9203      	str	r2, [sp, #12]
 8018626:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801862a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801862c:	9202      	str	r2, [sp, #8]
 801862e:	460f      	mov	r7, r1
 8018630:	2a00      	cmp	r2, #0
 8018632:	f000 8128 	beq.w	8018886 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8018636:	6820      	ldr	r0, [r4, #0]
 8018638:	6861      	ldr	r1, [r4, #4]
 801863a:	aa0a      	add	r2, sp, #40	@ 0x28
 801863c:	c203      	stmia	r2!, {r0, r1}
 801863e:	6818      	ldr	r0, [r3, #0]
 8018640:	6859      	ldr	r1, [r3, #4]
 8018642:	aa0c      	add	r2, sp, #48	@ 0x30
 8018644:	c203      	stmia	r2!, {r0, r1}
 8018646:	a80a      	add	r0, sp, #40	@ 0x28
 8018648:	f7f8 fc06 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801864c:	4621      	mov	r1, r4
 801864e:	a80c      	add	r0, sp, #48	@ 0x30
 8018650:	f7f8 fc2a 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018654:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8018658:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801865c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8018660:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8018664:	bfde      	ittt	le
 8018666:	b2b3      	uxthle	r3, r6
 8018668:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801866c:	fb92 f3f3 	sdivle	r3, r2, r3
 8018670:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8018674:	bfc8      	it	gt
 8018676:	2301      	movgt	r3, #1
 8018678:	fb92 f1f3 	sdiv	r1, r2, r3
 801867c:	fa1f fc81 	uxth.w	ip, r1
 8018680:	fb0c 2413 	mls	r4, ip, r3, r2
 8018684:	fb14 f406 	smulbb	r4, r4, r6
 8018688:	441d      	add	r5, r3
 801868a:	4404      	add	r4, r0
 801868c:	4661      	mov	r1, ip
 801868e:	3d01      	subs	r5, #1
 8018690:	b2a4      	uxth	r4, r4
 8018692:	fb95 f5f3 	sdiv	r5, r5, r3
 8018696:	b121      	cbz	r1, 80186a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8018698:	9b03      	ldr	r3, [sp, #12]
 801869a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801869e:	ba1b      	rev	r3, r3
 80186a0:	441f      	add	r7, r3
 80186a2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80186a6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80186aa:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80186ae:	4418      	add	r0, r3
 80186b0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80186b4:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80186b8:	441a      	add	r2, r3
 80186ba:	4b74      	ldr	r3, [pc, #464]	@ (801888c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80186bc:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80186c0:	6818      	ldr	r0, [r3, #0]
 80186c2:	6803      	ldr	r3, [r0, #0]
 80186c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80186c6:	4798      	blx	r3
 80186c8:	4a71      	ldr	r2, [pc, #452]	@ (8018890 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80186ca:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80186ce:	8813      	ldrh	r3, [r2, #0]
 80186d0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80186d4:	9209      	str	r2, [sp, #36]	@ 0x24
 80186d6:	fb03 c101 	mla	r1, r3, r1, ip
 80186da:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80186de:	4373      	muls	r3, r6
 80186e0:	b2ad      	uxth	r5, r5
 80186e2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80186e6:	00ad      	lsls	r5, r5, #2
 80186e8:	2c00      	cmp	r4, #0
 80186ea:	9304      	str	r3, [sp, #16]
 80186ec:	f105 0304 	add.w	r3, r5, #4
 80186f0:	9305      	str	r3, [sp, #20]
 80186f2:	bf0c      	ite	eq
 80186f4:	46c8      	moveq	r8, r9
 80186f6:	f04f 0800 	movne.w	r8, #0
 80186fa:	2300      	movs	r3, #0
 80186fc:	fa1f f888 	uxth.w	r8, r8
 8018700:	9301      	str	r3, [sp, #4]
 8018702:	9a04      	ldr	r2, [sp, #16]
 8018704:	4282      	cmp	r2, r0
 8018706:	f240 80b9 	bls.w	801887c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801870a:	b95b      	cbnz	r3, 8018724 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801870c:	783a      	ldrb	r2, [r7, #0]
 801870e:	0993      	lsrs	r3, r2, #6
 8018710:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8018714:	9201      	str	r2, [sp, #4]
 8018716:	1e5a      	subs	r2, r3, #1
 8018718:	2a02      	cmp	r2, #2
 801871a:	bf8d      	iteet	hi
 801871c:	787b      	ldrbhi	r3, [r7, #1]
 801871e:	3701      	addls	r7, #1
 8018720:	b29b      	uxthls	r3, r3
 8018722:	3702      	addhi	r7, #2
 8018724:	b184      	cbz	r4, 8018748 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8018726:	429c      	cmp	r4, r3
 8018728:	bf95      	itete	ls
 801872a:	1b1c      	subls	r4, r3, r4
 801872c:	1ae4      	subhi	r4, r4, r3
 801872e:	fa1f fa84 	uxthls.w	sl, r4
 8018732:	b2a4      	uxthhi	r4, r4
 8018734:	bf87      	ittee	hi
 8018736:	46c4      	movhi	ip, r8
 8018738:	f04f 0a00 	movhi.w	sl, #0
 801873c:	fa1f fc89 	uxthls.w	ip, r9
 8018740:	2400      	movls	r4, #0
 8018742:	4653      	mov	r3, sl
 8018744:	46e0      	mov	r8, ip
 8018746:	e7dc      	b.n	8018702 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8018748:	2204      	movs	r2, #4
 801874a:	4615      	mov	r5, r2
 801874c:	9905      	ldr	r1, [sp, #20]
 801874e:	9a01      	ldr	r2, [sp, #4]
 8018750:	fb15 1202 	smlabb	r2, r5, r2, r1
 8018754:	9903      	ldr	r1, [sp, #12]
 8018756:	588a      	ldr	r2, [r1, r2]
 8018758:	4543      	cmp	r3, r8
 801875a:	bf27      	ittee	cs
 801875c:	eba3 0a08 	subcs.w	sl, r3, r8
 8018760:	46c6      	movcs	lr, r8
 8018762:	eba8 0c03 	subcc.w	ip, r8, r3
 8018766:	469e      	movcc	lr, r3
 8018768:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801876c:	bf27      	ittee	cs
 801876e:	fa1f fa8a 	uxthcs.w	sl, sl
 8018772:	46a4      	movcs	ip, r4
 8018774:	fa1f fc8c 	uxthcc.w	ip, ip
 8018778:	46a2      	movcc	sl, r4
 801877a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801877e:	2900      	cmp	r1, #0
 8018780:	d066      	beq.n	8018850 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8018782:	29ff      	cmp	r1, #255	@ 0xff
 8018784:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8018788:	d114      	bne.n	80187b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801878a:	9d02      	ldr	r5, [sp, #8]
 801878c:	2dff      	cmp	r5, #255	@ 0xff
 801878e:	d111      	bne.n	80187b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8018790:	0951      	lsrs	r1, r2, #5
 8018792:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8018796:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801879a:	f026 0607 	bic.w	r6, r6, #7
 801879e:	430e      	orrs	r6, r1
 80187a0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80187a4:	4316      	orrs	r6, r2
 80187a6:	b2b6      	uxth	r6, r6
 80187a8:	4486      	add	lr, r0
 80187aa:	4586      	cmp	lr, r0
 80187ac:	d051      	beq.n	8018852 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80187ae:	f820 6b02 	strh.w	r6, [r0], #2
 80187b2:	e7fa      	b.n	80187aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 80187b4:	9d02      	ldr	r5, [sp, #8]
 80187b6:	4369      	muls	r1, r5
 80187b8:	1c4d      	adds	r5, r1, #1
 80187ba:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80187be:	122d      	asrs	r5, r5, #8
 80187c0:	ea6f 0b05 	mvn.w	fp, r5
 80187c4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80187c8:	b2ad      	uxth	r5, r5
 80187ca:	b2f6      	uxtb	r6, r6
 80187cc:	b2d2      	uxtb	r2, r2
 80187ce:	fb11 f105 	smulbb	r1, r1, r5
 80187d2:	fb16 f605 	smulbb	r6, r6, r5
 80187d6:	fb12 f205 	smulbb	r2, r2, r5
 80187da:	b289      	uxth	r1, r1
 80187dc:	b2b6      	uxth	r6, r6
 80187de:	b292      	uxth	r2, r2
 80187e0:	9106      	str	r1, [sp, #24]
 80187e2:	9607      	str	r6, [sp, #28]
 80187e4:	9208      	str	r2, [sp, #32]
 80187e6:	4486      	add	lr, r0
 80187e8:	fa5f fb8b 	uxtb.w	fp, fp
 80187ec:	4586      	cmp	lr, r0
 80187ee:	d030      	beq.n	8018852 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80187f0:	8802      	ldrh	r2, [r0, #0]
 80187f2:	9906      	ldr	r1, [sp, #24]
 80187f4:	1216      	asrs	r6, r2, #8
 80187f6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80187fa:	10d5      	asrs	r5, r2, #3
 80187fc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018800:	fb06 160b 	mla	r6, r6, fp, r1
 8018804:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018808:	9907      	ldr	r1, [sp, #28]
 801880a:	00d2      	lsls	r2, r2, #3
 801880c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018810:	fb05 150b 	mla	r5, r5, fp, r1
 8018814:	b2d2      	uxtb	r2, r2
 8018816:	9908      	ldr	r1, [sp, #32]
 8018818:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801881c:	b2b6      	uxth	r6, r6
 801881e:	fb02 120b 	mla	r2, r2, fp, r1
 8018822:	b292      	uxth	r2, r2
 8018824:	1c71      	adds	r1, r6, #1
 8018826:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801882a:	1c51      	adds	r1, r2, #1
 801882c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018830:	b2ad      	uxth	r5, r5
 8018832:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018836:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801883a:	4316      	orrs	r6, r2
 801883c:	1c6a      	adds	r2, r5, #1
 801883e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8018842:	096d      	lsrs	r5, r5, #5
 8018844:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018848:	432e      	orrs	r6, r5
 801884a:	f820 6b02 	strh.w	r6, [r0], #2
 801884e:	e7cd      	b.n	80187ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8018850:	4470      	add	r0, lr
 8018852:	4543      	cmp	r3, r8
 8018854:	f4ff af75 	bcc.w	8018742 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8018858:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801885c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801885e:	fa1f fc89 	uxth.w	ip, r9
 8018862:	eba4 040c 	sub.w	r4, r4, ip
 8018866:	881b      	ldrh	r3, [r3, #0]
 8018868:	b2a4      	uxth	r4, r4
 801886a:	2c00      	cmp	r4, #0
 801886c:	eba3 0309 	sub.w	r3, r3, r9
 8018870:	bf18      	it	ne
 8018872:	f04f 0c00 	movne.w	ip, #0
 8018876:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801887a:	e762      	b.n	8018742 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801887c:	4b03      	ldr	r3, [pc, #12]	@ (801888c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801887e:	6818      	ldr	r0, [r3, #0]
 8018880:	6803      	ldr	r3, [r0, #0]
 8018882:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018884:	4798      	blx	r3
 8018886:	b00f      	add	sp, #60	@ 0x3c
 8018888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801888c:	20013b6c 	.word	0x20013b6c
 8018890:	20013b64 	.word	0x20013b64

08018894 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8018894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018898:	b093      	sub	sp, #76	@ 0x4c
 801889a:	461c      	mov	r4, r3
 801889c:	9205      	str	r2, [sp, #20]
 801889e:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 80188a2:	9101      	str	r1, [sp, #4]
 80188a4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80188a6:	9202      	str	r2, [sp, #8]
 80188a8:	2a00      	cmp	r2, #0
 80188aa:	f000 812c 	beq.w	8018b06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80188ae:	6820      	ldr	r0, [r4, #0]
 80188b0:	6861      	ldr	r1, [r4, #4]
 80188b2:	aa0e      	add	r2, sp, #56	@ 0x38
 80188b4:	c203      	stmia	r2!, {r0, r1}
 80188b6:	6818      	ldr	r0, [r3, #0]
 80188b8:	6859      	ldr	r1, [r3, #4]
 80188ba:	aa10      	add	r2, sp, #64	@ 0x40
 80188bc:	c203      	stmia	r2!, {r0, r1}
 80188be:	a80e      	add	r0, sp, #56	@ 0x38
 80188c0:	f7f8 faca 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80188c4:	4621      	mov	r1, r4
 80188c6:	a810      	add	r0, sp, #64	@ 0x40
 80188c8:	f7f8 faee 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80188cc:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80188d0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80188d4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 80188d8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80188dc:	bfde      	ittt	le
 80188de:	b2b3      	uxthle	r3, r6
 80188e0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80188e4:	fb92 f3f3 	sdivle	r3, r2, r3
 80188e8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80188ec:	bfc8      	it	gt
 80188ee:	2301      	movgt	r3, #1
 80188f0:	fb92 f1f3 	sdiv	r1, r2, r3
 80188f4:	fa1f fc81 	uxth.w	ip, r1
 80188f8:	fb0c 2413 	mls	r4, ip, r3, r2
 80188fc:	fb14 f406 	smulbb	r4, r4, r6
 8018900:	441d      	add	r5, r3
 8018902:	4404      	add	r4, r0
 8018904:	4661      	mov	r1, ip
 8018906:	3d01      	subs	r5, #1
 8018908:	b2a4      	uxth	r4, r4
 801890a:	fb95 f5f3 	sdiv	r5, r5, r3
 801890e:	b131      	cbz	r1, 801891e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8018910:	9b05      	ldr	r3, [sp, #20]
 8018912:	9901      	ldr	r1, [sp, #4]
 8018914:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8018918:	ba1b      	rev	r3, r3
 801891a:	4419      	add	r1, r3
 801891c:	9101      	str	r1, [sp, #4]
 801891e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8018922:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8018926:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801892a:	4418      	add	r0, r3
 801892c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8018930:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8018934:	441a      	add	r2, r3
 8018936:	4b75      	ldr	r3, [pc, #468]	@ (8018b0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8018938:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801893c:	6818      	ldr	r0, [r3, #0]
 801893e:	6803      	ldr	r3, [r0, #0]
 8018940:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018942:	4798      	blx	r3
 8018944:	4972      	ldr	r1, [pc, #456]	@ (8018b10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8018946:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801894a:	880b      	ldrh	r3, [r1, #0]
 801894c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8018950:	910d      	str	r1, [sp, #52]	@ 0x34
 8018952:	fb03 c202 	mla	r2, r3, r2, ip
 8018956:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801895a:	4373      	muls	r3, r6
 801895c:	b2ad      	uxth	r5, r5
 801895e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018962:	00ad      	lsls	r5, r5, #2
 8018964:	9308      	str	r3, [sp, #32]
 8018966:	1d2b      	adds	r3, r5, #4
 8018968:	9309      	str	r3, [sp, #36]	@ 0x24
 801896a:	9b02      	ldr	r3, [sp, #8]
 801896c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018970:	9106      	str	r1, [sp, #24]
 8018972:	43da      	mvns	r2, r3
 8018974:	2c00      	cmp	r4, #0
 8018976:	bf0c      	ite	eq
 8018978:	46dc      	moveq	ip, fp
 801897a:	f04f 0c00 	movne.w	ip, #0
 801897e:	2300      	movs	r3, #0
 8018980:	b2d2      	uxtb	r2, r2
 8018982:	fa1f fc8c 	uxth.w	ip, ip
 8018986:	9303      	str	r3, [sp, #12]
 8018988:	9207      	str	r2, [sp, #28]
 801898a:	9a08      	ldr	r2, [sp, #32]
 801898c:	4282      	cmp	r2, r0
 801898e:	f240 80b5 	bls.w	8018afc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8018992:	b963      	cbnz	r3, 80189ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8018994:	9b01      	ldr	r3, [sp, #4]
 8018996:	781a      	ldrb	r2, [r3, #0]
 8018998:	0993      	lsrs	r3, r2, #6
 801899a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801899e:	9203      	str	r2, [sp, #12]
 80189a0:	1e5a      	subs	r2, r3, #1
 80189a2:	2a02      	cmp	r2, #2
 80189a4:	d815      	bhi.n	80189d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 80189a6:	9a01      	ldr	r2, [sp, #4]
 80189a8:	3201      	adds	r2, #1
 80189aa:	9201      	str	r2, [sp, #4]
 80189ac:	b29b      	uxth	r3, r3
 80189ae:	b1b4      	cbz	r4, 80189de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 80189b0:	429c      	cmp	r4, r3
 80189b2:	bf95      	itete	ls
 80189b4:	1b1c      	subls	r4, r3, r4
 80189b6:	1ae4      	subhi	r4, r4, r3
 80189b8:	fa1f f884 	uxthls.w	r8, r4
 80189bc:	b2a4      	uxthhi	r4, r4
 80189be:	bf87      	ittee	hi
 80189c0:	4666      	movhi	r6, ip
 80189c2:	f04f 0800 	movhi.w	r8, #0
 80189c6:	fa1f f68b 	uxthls.w	r6, fp
 80189ca:	2400      	movls	r4, #0
 80189cc:	4643      	mov	r3, r8
 80189ce:	46b4      	mov	ip, r6
 80189d0:	e7db      	b.n	801898a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 80189d2:	9a01      	ldr	r2, [sp, #4]
 80189d4:	9b01      	ldr	r3, [sp, #4]
 80189d6:	3202      	adds	r2, #2
 80189d8:	785b      	ldrb	r3, [r3, #1]
 80189da:	9201      	str	r2, [sp, #4]
 80189dc:	e7e7      	b.n	80189ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80189de:	2203      	movs	r2, #3
 80189e0:	4615      	mov	r5, r2
 80189e2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80189e4:	9a03      	ldr	r2, [sp, #12]
 80189e6:	fb15 1202 	smlabb	r2, r5, r2, r1
 80189ea:	9905      	ldr	r1, [sp, #20]
 80189ec:	4563      	cmp	r3, ip
 80189ee:	eb01 0502 	add.w	r5, r1, r2
 80189f2:	9902      	ldr	r1, [sp, #8]
 80189f4:	bf29      	itett	cs
 80189f6:	eba3 080c 	subcs.w	r8, r3, ip
 80189fa:	ebac 0603 	subcc.w	r6, ip, r3
 80189fe:	fa1f f888 	uxthcs.w	r8, r8
 8018a02:	46e1      	movcs	r9, ip
 8018a04:	bf2f      	iteee	cs
 8018a06:	4626      	movcs	r6, r4
 8018a08:	b2b6      	uxthcc	r6, r6
 8018a0a:	4699      	movcc	r9, r3
 8018a0c:	46a0      	movcc	r8, r4
 8018a0e:	29ff      	cmp	r1, #255	@ 0xff
 8018a10:	d04a      	beq.n	8018aa8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8018a12:	9f06      	ldr	r7, [sp, #24]
 8018a14:	78a9      	ldrb	r1, [r5, #2]
 8018a16:	9004      	str	r0, [sp, #16]
 8018a18:	4379      	muls	r1, r7
 8018a1a:	910a      	str	r1, [sp, #40]	@ 0x28
 8018a1c:	7869      	ldrb	r1, [r5, #1]
 8018a1e:	4379      	muls	r1, r7
 8018a20:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018a22:	9905      	ldr	r1, [sp, #20]
 8018a24:	5c8a      	ldrb	r2, [r1, r2]
 8018a26:	437a      	muls	r2, r7
 8018a28:	920c      	str	r2, [sp, #48]	@ 0x30
 8018a2a:	46ca      	mov	sl, r9
 8018a2c:	f1ba 0f00 	cmp.w	sl, #0
 8018a30:	d03d      	beq.n	8018aae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8018a32:	9a04      	ldr	r2, [sp, #16]
 8018a34:	9f07      	ldr	r7, [sp, #28]
 8018a36:	8812      	ldrh	r2, [r2, #0]
 8018a38:	1215      	asrs	r5, r2, #8
 8018a3a:	46be      	mov	lr, r7
 8018a3c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018a40:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8018a42:	10d1      	asrs	r1, r2, #3
 8018a44:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8018a48:	fb05 750e 	mla	r5, r5, lr, r7
 8018a4c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018a50:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8018a52:	00d2      	lsls	r2, r2, #3
 8018a54:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018a58:	fb01 710e 	mla	r1, r1, lr, r7
 8018a5c:	b2d2      	uxtb	r2, r2
 8018a5e:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8018a60:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018a64:	b2ad      	uxth	r5, r5
 8018a66:	fb02 720e 	mla	r2, r2, lr, r7
 8018a6a:	b292      	uxth	r2, r2
 8018a6c:	f105 0e01 	add.w	lr, r5, #1
 8018a70:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8018a74:	f102 0e01 	add.w	lr, r2, #1
 8018a78:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8018a7c:	b289      	uxth	r1, r1
 8018a7e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018a82:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018a86:	4315      	orrs	r5, r2
 8018a88:	1c4a      	adds	r2, r1, #1
 8018a8a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018a8e:	0949      	lsrs	r1, r1, #5
 8018a90:	9a04      	ldr	r2, [sp, #16]
 8018a92:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018a96:	430d      	orrs	r5, r1
 8018a98:	f822 5b02 	strh.w	r5, [r2], #2
 8018a9c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018aa0:	9204      	str	r2, [sp, #16]
 8018aa2:	fa1f fa8a 	uxth.w	sl, sl
 8018aa6:	e7c1      	b.n	8018a2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8018aa8:	4649      	mov	r1, r9
 8018aaa:	4686      	mov	lr, r0
 8018aac:	b999      	cbnz	r1, 8018ad6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8018aae:	4563      	cmp	r3, ip
 8018ab0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8018ab4:	d38a      	bcc.n	80189cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8018ab6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8018aba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018abc:	fa1f f68b 	uxth.w	r6, fp
 8018ac0:	1ba4      	subs	r4, r4, r6
 8018ac2:	881b      	ldrh	r3, [r3, #0]
 8018ac4:	b2a4      	uxth	r4, r4
 8018ac6:	2c00      	cmp	r4, #0
 8018ac8:	eba3 030b 	sub.w	r3, r3, fp
 8018acc:	bf18      	it	ne
 8018ace:	2600      	movne	r6, #0
 8018ad0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018ad4:	e77a      	b.n	80189cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8018ad6:	78aa      	ldrb	r2, [r5, #2]
 8018ad8:	4f0e      	ldr	r7, [pc, #56]	@ (8018b14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8018ada:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8018ade:	786a      	ldrb	r2, [r5, #1]
 8018ae0:	00d2      	lsls	r2, r2, #3
 8018ae2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018ae6:	ea4a 0202 	orr.w	r2, sl, r2
 8018aea:	f895 a000 	ldrb.w	sl, [r5]
 8018aee:	3901      	subs	r1, #1
 8018af0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8018af4:	f82e 2b02 	strh.w	r2, [lr], #2
 8018af8:	b289      	uxth	r1, r1
 8018afa:	e7d7      	b.n	8018aac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8018afc:	4b03      	ldr	r3, [pc, #12]	@ (8018b0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8018afe:	6818      	ldr	r0, [r3, #0]
 8018b00:	6803      	ldr	r3, [r0, #0]
 8018b02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018b04:	4798      	blx	r3
 8018b06:	b013      	add	sp, #76	@ 0x4c
 8018b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b0c:	20013b6c 	.word	0x20013b6c
 8018b10:	20013b64 	.word	0x20013b64
 8018b14:	fffff800 	.word	0xfffff800

08018b18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8018b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b1c:	b09d      	sub	sp, #116	@ 0x74
 8018b1e:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8018b22:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8018b26:	920e      	str	r2, [sp, #56]	@ 0x38
 8018b28:	461c      	mov	r4, r3
 8018b2a:	4683      	mov	fp, r0
 8018b2c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8018b2e:	2a00      	cmp	r2, #0
 8018b30:	f000 81e0 	beq.w	8018ef4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8018b34:	6820      	ldr	r0, [r4, #0]
 8018b36:	6861      	ldr	r1, [r4, #4]
 8018b38:	aa18      	add	r2, sp, #96	@ 0x60
 8018b3a:	c203      	stmia	r2!, {r0, r1}
 8018b3c:	6818      	ldr	r0, [r3, #0]
 8018b3e:	6859      	ldr	r1, [r3, #4]
 8018b40:	aa1a      	add	r2, sp, #104	@ 0x68
 8018b42:	c203      	stmia	r2!, {r0, r1}
 8018b44:	a818      	add	r0, sp, #96	@ 0x60
 8018b46:	f7f8 f987 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018b4a:	4621      	mov	r1, r4
 8018b4c:	a81a      	add	r0, sp, #104	@ 0x68
 8018b4e:	f7f8 f9ab 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018b52:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8018b56:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8018b5a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8018b5e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8018b62:	bfd7      	itett	le
 8018b64:	b29a      	uxthle	r2, r3
 8018b66:	2201      	movgt	r2, #1
 8018b68:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8018b6c:	fb91 f2f2 	sdivle	r2, r1, r2
 8018b70:	9202      	str	r2, [sp, #8]
 8018b72:	9802      	ldr	r0, [sp, #8]
 8018b74:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8018b78:	fb92 f0f0 	sdiv	r0, r2, r0
 8018b7c:	b280      	uxth	r0, r0
 8018b7e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8018b80:	9902      	ldr	r1, [sp, #8]
 8018b82:	9802      	ldr	r0, [sp, #8]
 8018b84:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8018b86:	440c      	add	r4, r1
 8018b88:	fb05 2510 	mls	r5, r5, r0, r2
 8018b8c:	fb15 f503 	smulbb	r5, r5, r3
 8018b90:	3c01      	subs	r4, #1
 8018b92:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8018b96:	fb94 f4f1 	sdiv	r4, r4, r1
 8018b9a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8018b9e:	440d      	add	r5, r1
 8018ba0:	4419      	add	r1, r3
 8018ba2:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8018ba6:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8018baa:	441a      	add	r2, r3
 8018bac:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8018bb0:	9306      	str	r3, [sp, #24]
 8018bb2:	4bb3      	ldr	r3, [pc, #716]	@ (8018e80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8018bb4:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8018bb8:	6818      	ldr	r0, [r3, #0]
 8018bba:	6803      	ldr	r3, [r0, #0]
 8018bbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018bbe:	4798      	blx	r3
 8018bc0:	4bb0      	ldr	r3, [pc, #704]	@ (8018e84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8018bc2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8018bc6:	881a      	ldrh	r2, [r3, #0]
 8018bc8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8018bcc:	9316      	str	r3, [sp, #88]	@ 0x58
 8018bce:	fb02 7101 	mla	r1, r2, r1, r7
 8018bd2:	3401      	adds	r4, #1
 8018bd4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8018bd8:	b2a4      	uxth	r4, r4
 8018bda:	4356      	muls	r6, r2
 8018bdc:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8018be0:	00a4      	lsls	r4, r4, #2
 8018be2:	920a      	str	r2, [sp, #40]	@ 0x28
 8018be4:	1d22      	adds	r2, r4, #4
 8018be6:	b2ad      	uxth	r5, r5
 8018be8:	9213      	str	r2, [sp, #76]	@ 0x4c
 8018bea:	4ba7      	ldr	r3, [pc, #668]	@ (8018e88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8018bec:	9a06      	ldr	r2, [sp, #24]
 8018bee:	2d00      	cmp	r5, #0
 8018bf0:	bf0c      	ite	eq
 8018bf2:	4611      	moveq	r1, r2
 8018bf4:	2100      	movne	r1, #0
 8018bf6:	2200      	movs	r2, #0
 8018bf8:	eba3 030b 	sub.w	r3, r3, fp
 8018bfc:	b289      	uxth	r1, r1
 8018bfe:	920d      	str	r2, [sp, #52]	@ 0x34
 8018c00:	9317      	str	r3, [sp, #92]	@ 0x5c
 8018c02:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018c04:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018c06:	fa12 f383 	uxtah	r3, r2, r3
 8018c0a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018c0c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8018c10:	3304      	adds	r3, #4
 8018c12:	9308      	str	r3, [sp, #32]
 8018c14:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018c16:	4543      	cmp	r3, r8
 8018c18:	f240 8167 	bls.w	8018eea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8018c1c:	9a02      	ldr	r2, [sp, #8]
 8018c1e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8018c22:	fbb5 f3f3 	udiv	r3, r5, r3
 8018c26:	1ad3      	subs	r3, r2, r3
 8018c28:	b29b      	uxth	r3, r3
 8018c2a:	9314      	str	r3, [sp, #80]	@ 0x50
 8018c2c:	9b08      	ldr	r3, [sp, #32]
 8018c2e:	9808      	ldr	r0, [sp, #32]
 8018c30:	785a      	ldrb	r2, [r3, #1]
 8018c32:	789b      	ldrb	r3, [r3, #2]
 8018c34:	7800      	ldrb	r0, [r0, #0]
 8018c36:	9010      	str	r0, [sp, #64]	@ 0x40
 8018c38:	021b      	lsls	r3, r3, #8
 8018c3a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8018c3e:	9a08      	ldr	r2, [sp, #32]
 8018c40:	78d2      	ldrb	r2, [r2, #3]
 8018c42:	4313      	orrs	r3, r2
 8018c44:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8018c46:	3001      	adds	r0, #1
 8018c48:	441a      	add	r2, r3
 8018c4a:	9007      	str	r0, [sp, #28]
 8018c4c:	1c50      	adds	r0, r2, #1
 8018c4e:	9005      	str	r0, [sp, #20]
 8018c50:	7852      	ldrb	r2, [r2, #1]
 8018c52:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018c54:	0212      	lsls	r2, r2, #8
 8018c56:	5cc3      	ldrb	r3, [r0, r3]
 8018c58:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8018c5c:	431a      	orrs	r2, r3
 8018c5e:	b293      	uxth	r3, r2
 8018c60:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018c62:	2300      	movs	r3, #0
 8018c64:	9309      	str	r3, [sp, #36]	@ 0x24
 8018c66:	2301      	movs	r3, #1
 8018c68:	9301      	str	r3, [sp, #4]
 8018c6a:	9304      	str	r3, [sp, #16]
 8018c6c:	2300      	movs	r3, #0
 8018c6e:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8018c72:	9303      	str	r3, [sp, #12]
 8018c74:	f04f 0e01 	mov.w	lr, #1
 8018c78:	2d00      	cmp	r5, #0
 8018c7a:	d07c      	beq.n	8018d76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8018c7c:	45ae      	cmp	lr, r5
 8018c7e:	d26b      	bcs.n	8018d58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8018c80:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018c82:	eba5 050e 	sub.w	r5, r5, lr
 8018c86:	4543      	cmp	r3, r8
 8018c88:	b2ad      	uxth	r5, r5
 8018c8a:	460c      	mov	r4, r1
 8018c8c:	d802      	bhi.n	8018c94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8018c8e:	e070      	b.n	8018d72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8018c90:	2b00      	cmp	r3, #0
 8018c92:	d15c      	bne.n	8018d4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8018c94:	9b05      	ldr	r3, [sp, #20]
 8018c96:	9a04      	ldr	r2, [sp, #16]
 8018c98:	785b      	ldrb	r3, [r3, #1]
 8018c9a:	9904      	ldr	r1, [sp, #16]
 8018c9c:	f1c2 0207 	rsb	r2, r2, #7
 8018ca0:	4093      	lsls	r3, r2
 8018ca2:	005b      	lsls	r3, r3, #1
 8018ca4:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8018ca8:	9b05      	ldr	r3, [sp, #20]
 8018caa:	781b      	ldrb	r3, [r3, #0]
 8018cac:	410b      	asrs	r3, r1
 8018cae:	3101      	adds	r1, #1
 8018cb0:	b2c9      	uxtb	r1, r1
 8018cb2:	2908      	cmp	r1, #8
 8018cb4:	9104      	str	r1, [sp, #16]
 8018cb6:	9905      	ldr	r1, [sp, #20]
 8018cb8:	bf0a      	itet	eq
 8018cba:	3102      	addeq	r1, #2
 8018cbc:	3101      	addne	r1, #1
 8018cbe:	9105      	streq	r1, [sp, #20]
 8018cc0:	b2db      	uxtb	r3, r3
 8018cc2:	bf0a      	itet	eq
 8018cc4:	2100      	moveq	r1, #0
 8018cc6:	9105      	strne	r1, [sp, #20]
 8018cc8:	9104      	streq	r1, [sp, #16]
 8018cca:	4313      	orrs	r3, r2
 8018ccc:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8018cce:	b29a      	uxth	r2, r3
 8018cd0:	4291      	cmp	r1, r2
 8018cd2:	d30a      	bcc.n	8018cea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8018cd4:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8018cd8:	2301      	movs	r3, #1
 8018cda:	9907      	ldr	r1, [sp, #28]
 8018cdc:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8018ce0:	d30f      	bcc.n	8018d02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8018ce2:	2100      	movs	r1, #0
 8018ce4:	9301      	str	r3, [sp, #4]
 8018ce6:	9103      	str	r1, [sp, #12]
 8018ce8:	e032      	b.n	8018d50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8018cea:	9b07      	ldr	r3, [sp, #28]
 8018cec:	429a      	cmp	r2, r3
 8018cee:	d318      	bcc.n	8018d22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8018cf0:	9b01      	ldr	r3, [sp, #4]
 8018cf2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8018cf6:	445b      	add	r3, fp
 8018cf8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8018cfc:	9b01      	ldr	r3, [sp, #4]
 8018cfe:	3301      	adds	r3, #1
 8018d00:	b29b      	uxth	r3, r3
 8018d02:	9907      	ldr	r1, [sp, #28]
 8018d04:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8018d08:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8018d0c:	7108      	strb	r0, [r1, #4]
 8018d0e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8018d10:	80c8      	strh	r0, [r1, #6]
 8018d12:	9801      	ldr	r0, [sp, #4]
 8018d14:	3001      	adds	r0, #1
 8018d16:	7148      	strb	r0, [r1, #5]
 8018d18:	9907      	ldr	r1, [sp, #28]
 8018d1a:	3101      	adds	r1, #1
 8018d1c:	b289      	uxth	r1, r1
 8018d1e:	9107      	str	r1, [sp, #28]
 8018d20:	e7df      	b.n	8018ce2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8018d22:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8018d26:	4611      	mov	r1, r2
 8018d28:	795b      	ldrb	r3, [r3, #5]
 8018d2a:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8018d2e:	4458      	add	r0, fp
 8018d30:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8018d32:	4406      	add	r6, r0
 8018d34:	2e00      	cmp	r6, #0
 8018d36:	dd06      	ble.n	8018d46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8018d38:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8018d3c:	790e      	ldrb	r6, [r1, #4]
 8018d3e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8018d42:	88c9      	ldrh	r1, [r1, #6]
 8018d44:	e7f4      	b.n	8018d30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8018d46:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8018d4a:	b29b      	uxth	r3, r3
 8018d4c:	e7c5      	b.n	8018cda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8018d4e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018d50:	920b      	str	r2, [sp, #44]	@ 0x2c
 8018d52:	4621      	mov	r1, r4
 8018d54:	469e      	mov	lr, r3
 8018d56:	e78f      	b.n	8018c78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8018d58:	9a03      	ldr	r2, [sp, #12]
 8018d5a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8018d5e:	442a      	add	r2, r5
 8018d60:	ebae 0305 	sub.w	r3, lr, r5
 8018d64:	b292      	uxth	r2, r2
 8018d66:	b29b      	uxth	r3, r3
 8018d68:	9203      	str	r2, [sp, #12]
 8018d6a:	2500      	movs	r5, #0
 8018d6c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8018d6e:	4542      	cmp	r2, r8
 8018d70:	d88e      	bhi.n	8018c90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8018d72:	4621      	mov	r1, r4
 8018d74:	e74e      	b.n	8018c14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8018d76:	458e      	cmp	lr, r1
 8018d78:	bf29      	itett	cs
 8018d7a:	ebae 0301 	subcs.w	r3, lr, r1
 8018d7e:	eba1 040e 	subcc.w	r4, r1, lr
 8018d82:	b29b      	uxthcs	r3, r3
 8018d84:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8018d86:	bf2f      	iteee	cs
 8018d88:	462c      	movcs	r4, r5
 8018d8a:	b2a4      	uxthcc	r4, r4
 8018d8c:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8018d90:	462b      	movcc	r3, r5
 8018d92:	f04f 0900 	mov.w	r9, #0
 8018d96:	9a03      	ldr	r2, [sp, #12]
 8018d98:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8018d9a:	444a      	add	r2, r9
 8018d9c:	4548      	cmp	r0, r9
 8018d9e:	b292      	uxth	r2, r2
 8018da0:	d074      	beq.n	8018e8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8018da2:	445a      	add	r2, fp
 8018da4:	2004      	movs	r0, #4
 8018da6:	4605      	mov	r5, r0
 8018da8:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8018dac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018dae:	fb15 0202 	smlabb	r2, r5, r2, r0
 8018db2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018db4:	5880      	ldr	r0, [r0, r2]
 8018db6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8018dba:	d014      	beq.n	8018de6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8018dbc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8018dc0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8018dc4:	d112      	bne.n	8018dec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8018dc6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8018dc8:	2aff      	cmp	r2, #255	@ 0xff
 8018dca:	d10f      	bne.n	8018dec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8018dcc:	0942      	lsrs	r2, r0, #5
 8018dce:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8018dd2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018dd6:	f025 0507 	bic.w	r5, r5, #7
 8018dda:	4315      	orrs	r5, r2
 8018ddc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8018de0:	4305      	orrs	r5, r0
 8018de2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8018de6:	f109 0901 	add.w	r9, r9, #1
 8018dea:	e7d4      	b.n	8018d96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8018dec:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8018df0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8018df4:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8018df8:	9215      	str	r2, [sp, #84]	@ 0x54
 8018dfa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8018dfc:	fb02 fa0a 	mul.w	sl, r2, sl
 8018e00:	f10a 0201 	add.w	r2, sl, #1
 8018e04:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8018e08:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018e0c:	1212      	asrs	r2, r2, #8
 8018e0e:	fa1f fa82 	uxth.w	sl, r2
 8018e12:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8018e16:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018e1a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018e1e:	43d2      	mvns	r2, r2
 8018e20:	b2d2      	uxtb	r2, r2
 8018e22:	fb16 f60a 	smulbb	r6, r6, sl
 8018e26:	fa5f fc8c 	uxtb.w	ip, ip
 8018e2a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8018e2e:	b2c0      	uxtb	r0, r0
 8018e30:	fb07 6702 	mla	r7, r7, r2, r6
 8018e34:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8018e38:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8018e3a:	fb10 f00a 	smulbb	r0, r0, sl
 8018e3e:	fb0c 0002 	mla	r0, ip, r2, r0
 8018e42:	b2ed      	uxtb	r5, r5
 8018e44:	b2bf      	uxth	r7, r7
 8018e46:	fb15 f50a 	smulbb	r5, r5, sl
 8018e4a:	b280      	uxth	r0, r0
 8018e4c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8018e50:	fb06 5602 	mla	r6, r6, r2, r5
 8018e54:	1c7a      	adds	r2, r7, #1
 8018e56:	1c45      	adds	r5, r0, #1
 8018e58:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018e5c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018e60:	b2b6      	uxth	r6, r6
 8018e62:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018e66:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018e6a:	432f      	orrs	r7, r5
 8018e6c:	1c75      	adds	r5, r6, #1
 8018e6e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8018e72:	096d      	lsrs	r5, r5, #5
 8018e74:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018e78:	432f      	orrs	r7, r5
 8018e7a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8018e7e:	e7b2      	b.n	8018de6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8018e80:	20013b6c 	.word	0x20013b6c
 8018e84:	20013b64 	.word	0x20013b64
 8018e88:	fffff7fb 	.word	0xfffff7fb
 8018e8c:	9203      	str	r2, [sp, #12]
 8018e8e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8018e90:	458e      	cmp	lr, r1
 8018e92:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8018e96:	f4ff af68 	bcc.w	8018d6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8018e9a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8018e9c:	9906      	ldr	r1, [sp, #24]
 8018e9e:	8812      	ldrh	r2, [r2, #0]
 8018ea0:	1a52      	subs	r2, r2, r1
 8018ea2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8018ea6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018ea8:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8018eaa:	3201      	adds	r2, #1
 8018eac:	428a      	cmp	r2, r1
 8018eae:	9209      	str	r2, [sp, #36]	@ 0x24
 8018eb0:	d111      	bne.n	8018ed6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8018eb2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8018eb6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8018eba:	9b06      	ldr	r3, [sp, #24]
 8018ebc:	eba5 0509 	sub.w	r5, r5, r9
 8018ec0:	b2ad      	uxth	r5, r5
 8018ec2:	2d00      	cmp	r5, #0
 8018ec4:	bf08      	it	eq
 8018ec6:	4619      	moveq	r1, r3
 8018ec8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018eca:	bf18      	it	ne
 8018ecc:	2100      	movne	r1, #0
 8018ece:	3301      	adds	r3, #1
 8018ed0:	930d      	str	r3, [sp, #52]	@ 0x34
 8018ed2:	b289      	uxth	r1, r1
 8018ed4:	e695      	b.n	8018c02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8018ed6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8018eda:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8018ede:	1b2d      	subs	r5, r5, r4
 8018ee0:	b2ad      	uxth	r5, r5
 8018ee2:	2d00      	cmp	r5, #0
 8018ee4:	bf18      	it	ne
 8018ee6:	2400      	movne	r4, #0
 8018ee8:	e740      	b.n	8018d6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8018eea:	4b04      	ldr	r3, [pc, #16]	@ (8018efc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8018eec:	6818      	ldr	r0, [r3, #0]
 8018eee:	6803      	ldr	r3, [r0, #0]
 8018ef0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018ef2:	4798      	blx	r3
 8018ef4:	b01d      	add	sp, #116	@ 0x74
 8018ef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018efa:	bf00      	nop
 8018efc:	20013b6c 	.word	0x20013b6c

08018f00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8018f00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f04:	b09f      	sub	sp, #124	@ 0x7c
 8018f06:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8018f0a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8018f0e:	920a      	str	r2, [sp, #40]	@ 0x28
 8018f10:	461d      	mov	r5, r3
 8018f12:	4604      	mov	r4, r0
 8018f14:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018f16:	2a00      	cmp	r2, #0
 8018f18:	f000 81fa 	beq.w	8019310 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8018f1c:	6828      	ldr	r0, [r5, #0]
 8018f1e:	6869      	ldr	r1, [r5, #4]
 8018f20:	aa1a      	add	r2, sp, #104	@ 0x68
 8018f22:	c203      	stmia	r2!, {r0, r1}
 8018f24:	6818      	ldr	r0, [r3, #0]
 8018f26:	6859      	ldr	r1, [r3, #4]
 8018f28:	aa1c      	add	r2, sp, #112	@ 0x70
 8018f2a:	c203      	stmia	r2!, {r0, r1}
 8018f2c:	a81a      	add	r0, sp, #104	@ 0x68
 8018f2e:	f7f7 ff93 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018f32:	4629      	mov	r1, r5
 8018f34:	a81c      	add	r0, sp, #112	@ 0x70
 8018f36:	f7f7 ffb7 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018f3a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8018f3e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8018f42:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8018f46:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8018f4a:	bfd7      	itett	le
 8018f4c:	b29a      	uxthle	r2, r3
 8018f4e:	2201      	movgt	r2, #1
 8018f50:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8018f54:	fb91 f2f2 	sdivle	r2, r1, r2
 8018f58:	9201      	str	r2, [sp, #4]
 8018f5a:	9801      	ldr	r0, [sp, #4]
 8018f5c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8018f60:	fb92 f0f0 	sdiv	r0, r2, r0
 8018f64:	b280      	uxth	r0, r0
 8018f66:	9010      	str	r0, [sp, #64]	@ 0x40
 8018f68:	9901      	ldr	r1, [sp, #4]
 8018f6a:	9801      	ldr	r0, [sp, #4]
 8018f6c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8018f6e:	440e      	add	r6, r1
 8018f70:	fb05 2510 	mls	r5, r5, r0, r2
 8018f74:	fb15 f503 	smulbb	r5, r5, r3
 8018f78:	3e01      	subs	r6, #1
 8018f7a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8018f7e:	fb96 f6f1 	sdiv	r6, r6, r1
 8018f82:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8018f86:	440d      	add	r5, r1
 8018f88:	4419      	add	r1, r3
 8018f8a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8018f8e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8018f92:	441a      	add	r2, r3
 8018f94:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8018f98:	9304      	str	r3, [sp, #16]
 8018f9a:	4b96      	ldr	r3, [pc, #600]	@ (80191f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8018f9c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8018fa0:	6818      	ldr	r0, [r3, #0]
 8018fa2:	6803      	ldr	r3, [r0, #0]
 8018fa4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018fa6:	4798      	blx	r3
 8018fa8:	4b93      	ldr	r3, [pc, #588]	@ (80191f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8018faa:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8018fae:	881a      	ldrh	r2, [r3, #0]
 8018fb0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8018fb4:	9318      	str	r3, [sp, #96]	@ 0x60
 8018fb6:	fb02 c101 	mla	r1, r2, r1, ip
 8018fba:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8018fbe:	4357      	muls	r7, r2
 8018fc0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8018fc4:	3601      	adds	r6, #1
 8018fc6:	920b      	str	r2, [sp, #44]	@ 0x2c
 8018fc8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018fca:	4b8c      	ldr	r3, [pc, #560]	@ (80191fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8018fcc:	b2b6      	uxth	r6, r6
 8018fce:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8018fd2:	1d32      	adds	r2, r6, #4
 8018fd4:	9206      	str	r2, [sp, #24]
 8018fd6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8018fd8:	43d2      	mvns	r2, r2
 8018fda:	b2d2      	uxtb	r2, r2
 8018fdc:	b2ad      	uxth	r5, r5
 8018fde:	9215      	str	r2, [sp, #84]	@ 0x54
 8018fe0:	9a04      	ldr	r2, [sp, #16]
 8018fe2:	2d00      	cmp	r5, #0
 8018fe4:	bf0c      	ite	eq
 8018fe6:	4611      	moveq	r1, r2
 8018fe8:	2100      	movne	r1, #0
 8018fea:	2200      	movs	r2, #0
 8018fec:	1b1b      	subs	r3, r3, r4
 8018fee:	b289      	uxth	r1, r1
 8018ff0:	920d      	str	r2, [sp, #52]	@ 0x34
 8018ff2:	9319      	str	r3, [sp, #100]	@ 0x64
 8018ff4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018ff6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018ff8:	fa12 f383 	uxtah	r3, r2, r3
 8018ffc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018ffe:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8019002:	3304      	adds	r3, #4
 8019004:	9307      	str	r3, [sp, #28]
 8019006:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019008:	455b      	cmp	r3, fp
 801900a:	f240 817c 	bls.w	8019306 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801900e:	9a01      	ldr	r2, [sp, #4]
 8019010:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8019014:	fbb5 f3f3 	udiv	r3, r5, r3
 8019018:	1ad3      	subs	r3, r2, r3
 801901a:	b29b      	uxth	r3, r3
 801901c:	9316      	str	r3, [sp, #88]	@ 0x58
 801901e:	9b07      	ldr	r3, [sp, #28]
 8019020:	9807      	ldr	r0, [sp, #28]
 8019022:	785a      	ldrb	r2, [r3, #1]
 8019024:	789b      	ldrb	r3, [r3, #2]
 8019026:	7800      	ldrb	r0, [r0, #0]
 8019028:	9011      	str	r0, [sp, #68]	@ 0x44
 801902a:	021b      	lsls	r3, r3, #8
 801902c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8019030:	9a07      	ldr	r2, [sp, #28]
 8019032:	78d2      	ldrb	r2, [r2, #3]
 8019034:	4313      	orrs	r3, r2
 8019036:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019038:	3001      	adds	r0, #1
 801903a:	441a      	add	r2, r3
 801903c:	9005      	str	r0, [sp, #20]
 801903e:	1c50      	adds	r0, r2, #1
 8019040:	9003      	str	r0, [sp, #12]
 8019042:	7852      	ldrb	r2, [r2, #1]
 8019044:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8019046:	0212      	lsls	r2, r2, #8
 8019048:	5cc3      	ldrb	r3, [r0, r3]
 801904a:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801904e:	431a      	orrs	r2, r3
 8019050:	b293      	uxth	r3, r2
 8019052:	930c      	str	r3, [sp, #48]	@ 0x30
 8019054:	2300      	movs	r3, #0
 8019056:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801905a:	9308      	str	r3, [sp, #32]
 801905c:	461a      	mov	r2, r3
 801905e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8019062:	930e      	str	r3, [sp, #56]	@ 0x38
 8019064:	f04f 0801 	mov.w	r8, #1
 8019068:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801906c:	f8cd 8008 	str.w	r8, [sp, #8]
 8019070:	46c4      	mov	ip, r8
 8019072:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019074:	2d00      	cmp	r5, #0
 8019076:	d07c      	beq.n	8019172 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8019078:	45ac      	cmp	ip, r5
 801907a:	d26c      	bcs.n	8019156 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801907c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801907e:	eba5 050c 	sub.w	r5, r5, ip
 8019082:	455b      	cmp	r3, fp
 8019084:	b2ad      	uxth	r5, r5
 8019086:	4608      	mov	r0, r1
 8019088:	d802      	bhi.n	8019090 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801908a:	e070      	b.n	801916e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801908c:	2b00      	cmp	r3, #0
 801908e:	d15c      	bne.n	801914a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8019090:	9b03      	ldr	r3, [sp, #12]
 8019092:	9a02      	ldr	r2, [sp, #8]
 8019094:	785b      	ldrb	r3, [r3, #1]
 8019096:	9902      	ldr	r1, [sp, #8]
 8019098:	f1c2 0207 	rsb	r2, r2, #7
 801909c:	4093      	lsls	r3, r2
 801909e:	005b      	lsls	r3, r3, #1
 80190a0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80190a4:	9b03      	ldr	r3, [sp, #12]
 80190a6:	781b      	ldrb	r3, [r3, #0]
 80190a8:	410b      	asrs	r3, r1
 80190aa:	3101      	adds	r1, #1
 80190ac:	b2c9      	uxtb	r1, r1
 80190ae:	2908      	cmp	r1, #8
 80190b0:	9102      	str	r1, [sp, #8]
 80190b2:	9903      	ldr	r1, [sp, #12]
 80190b4:	bf0a      	itet	eq
 80190b6:	3102      	addeq	r1, #2
 80190b8:	3101      	addne	r1, #1
 80190ba:	9103      	streq	r1, [sp, #12]
 80190bc:	b2db      	uxtb	r3, r3
 80190be:	bf0a      	itet	eq
 80190c0:	2100      	moveq	r1, #0
 80190c2:	9103      	strne	r1, [sp, #12]
 80190c4:	9102      	streq	r1, [sp, #8]
 80190c6:	4313      	orrs	r3, r2
 80190c8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80190ca:	b29a      	uxth	r2, r3
 80190cc:	4291      	cmp	r1, r2
 80190ce:	d30a      	bcc.n	80190e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 80190d0:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 80190d4:	2301      	movs	r3, #1
 80190d6:	9905      	ldr	r1, [sp, #20]
 80190d8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80190dc:	d30f      	bcc.n	80190fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 80190de:	2100      	movs	r1, #0
 80190e0:	4698      	mov	r8, r3
 80190e2:	9100      	str	r1, [sp, #0]
 80190e4:	e032      	b.n	801914c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 80190e6:	9b05      	ldr	r3, [sp, #20]
 80190e8:	429a      	cmp	r2, r3
 80190ea:	d318      	bcc.n	801911e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 80190ec:	eb04 0308 	add.w	r3, r4, r8
 80190f0:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 80190f4:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80190f8:	f108 0301 	add.w	r3, r8, #1
 80190fc:	b29b      	uxth	r3, r3
 80190fe:	9905      	ldr	r1, [sp, #20]
 8019100:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8019104:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8019108:	710e      	strb	r6, [r1, #4]
 801910a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801910c:	80ce      	strh	r6, [r1, #6]
 801910e:	f108 0601 	add.w	r6, r8, #1
 8019112:	714e      	strb	r6, [r1, #5]
 8019114:	9905      	ldr	r1, [sp, #20]
 8019116:	3101      	adds	r1, #1
 8019118:	b289      	uxth	r1, r1
 801911a:	9105      	str	r1, [sp, #20]
 801911c:	e7df      	b.n	80190de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801911e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8019122:	4611      	mov	r1, r2
 8019124:	795b      	ldrb	r3, [r3, #5]
 8019126:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801912a:	4426      	add	r6, r4
 801912c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801912e:	4437      	add	r7, r6
 8019130:	2f00      	cmp	r7, #0
 8019132:	dd06      	ble.n	8019142 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8019134:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8019138:	790f      	ldrb	r7, [r1, #4]
 801913a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801913e:	88c9      	ldrh	r1, [r1, #6]
 8019140:	e7f4      	b.n	801912c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8019142:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8019146:	b29b      	uxth	r3, r3
 8019148:	e7c5      	b.n	80190d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801914a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801914c:	920c      	str	r2, [sp, #48]	@ 0x30
 801914e:	4601      	mov	r1, r0
 8019150:	9a00      	ldr	r2, [sp, #0]
 8019152:	469c      	mov	ip, r3
 8019154:	e78e      	b.n	8019074 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8019156:	1957      	adds	r7, r2, r5
 8019158:	ebac 0305 	sub.w	r3, ip, r5
 801915c:	b2ba      	uxth	r2, r7
 801915e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8019162:	9200      	str	r2, [sp, #0]
 8019164:	b29b      	uxth	r3, r3
 8019166:	2500      	movs	r5, #0
 8019168:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801916a:	455a      	cmp	r2, fp
 801916c:	d88e      	bhi.n	801908c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801916e:	4601      	mov	r1, r0
 8019170:	e749      	b.n	8019006 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8019172:	458c      	cmp	ip, r1
 8019174:	bf2c      	ite	cs
 8019176:	4628      	movcs	r0, r5
 8019178:	462b      	movcc	r3, r5
 801917a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801917c:	bf27      	ittee	cs
 801917e:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8019180:	ebac 0301 	subcs.w	r3, ip, r1
 8019184:	eba1 000c 	subcc.w	r0, r1, ip
 8019188:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801918c:	bf2c      	ite	cs
 801918e:	b29b      	uxthcs	r3, r3
 8019190:	b280      	uxthcc	r0, r0
 8019192:	2dff      	cmp	r5, #255	@ 0xff
 8019194:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8019196:	eb02 0705 	add.w	r7, r2, r5
 801919a:	b2bd      	uxth	r5, r7
 801919c:	9500      	str	r5, [sp, #0]
 801919e:	d12f      	bne.n	8019200 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 80191a0:	465e      	mov	r6, fp
 80191a2:	9d00      	ldr	r5, [sp, #0]
 80191a4:	42aa      	cmp	r2, r5
 80191a6:	f040 8084 	bne.w	80192b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 80191aa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80191ac:	458c      	cmp	ip, r1
 80191ae:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80191b2:	d3d8      	bcc.n	8019166 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 80191b4:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80191b6:	9904      	ldr	r1, [sp, #16]
 80191b8:	8812      	ldrh	r2, [r2, #0]
 80191ba:	1a52      	subs	r2, r2, r1
 80191bc:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80191c0:	9a08      	ldr	r2, [sp, #32]
 80191c2:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80191c4:	3201      	adds	r2, #1
 80191c6:	428a      	cmp	r2, r1
 80191c8:	9208      	str	r2, [sp, #32]
 80191ca:	f040 8092 	bne.w	80192f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 80191ce:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80191d2:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 80191d6:	9b04      	ldr	r3, [sp, #16]
 80191d8:	eba5 050c 	sub.w	r5, r5, ip
 80191dc:	b2ad      	uxth	r5, r5
 80191de:	2d00      	cmp	r5, #0
 80191e0:	bf08      	it	eq
 80191e2:	4619      	moveq	r1, r3
 80191e4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80191e6:	bf18      	it	ne
 80191e8:	2100      	movne	r1, #0
 80191ea:	3301      	adds	r3, #1
 80191ec:	930d      	str	r3, [sp, #52]	@ 0x34
 80191ee:	b289      	uxth	r1, r1
 80191f0:	e700      	b.n	8018ff4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80191f2:	bf00      	nop
 80191f4:	20013b6c 	.word	0x20013b6c
 80191f8:	20013b64 	.word	0x20013b64
 80191fc:	fffff7fb 	.word	0xfffff7fb
 8019200:	46d9      	mov	r9, fp
 8019202:	9d00      	ldr	r5, [sp, #0]
 8019204:	42aa      	cmp	r2, r5
 8019206:	d0d0      	beq.n	80191aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8019208:	1c55      	adds	r5, r2, #1
 801920a:	4422      	add	r2, r4
 801920c:	9517      	str	r5, [sp, #92]	@ 0x5c
 801920e:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8019212:	9a06      	ldr	r2, [sp, #24]
 8019214:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019218:	4472      	add	r2, lr
 801921a:	9212      	str	r2, [sp, #72]	@ 0x48
 801921c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801921e:	f8b9 2000 	ldrh.w	r2, [r9]
 8019222:	f897 a002 	ldrb.w	sl, [r7, #2]
 8019226:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8019228:	1216      	asrs	r6, r2, #8
 801922a:	fb1a fa07 	smulbb	sl, sl, r7
 801922e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8019232:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8019234:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8019238:	fb06 a607 	mla	r6, r6, r7, sl
 801923c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801923e:	f897 a001 	ldrb.w	sl, [r7, #1]
 8019242:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8019244:	10d5      	asrs	r5, r2, #3
 8019246:	fb1a fa07 	smulbb	sl, sl, r7
 801924a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801924e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8019250:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019254:	fb05 a507 	mla	r5, r5, r7, sl
 8019258:	9f06      	ldr	r7, [sp, #24]
 801925a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801925e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8019260:	00d2      	lsls	r2, r2, #3
 8019262:	fb1e fe07 	smulbb	lr, lr, r7
 8019266:	b2d2      	uxtb	r2, r2
 8019268:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801926a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801926e:	b2b6      	uxth	r6, r6
 8019270:	fb02 e207 	mla	r2, r2, r7, lr
 8019274:	b292      	uxth	r2, r2
 8019276:	b2ad      	uxth	r5, r5
 8019278:	f106 0a01 	add.w	sl, r6, #1
 801927c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8019280:	f102 0e01 	add.w	lr, r2, #1
 8019284:	f105 0a01 	add.w	sl, r5, #1
 8019288:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801928c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019290:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8019294:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019298:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801929c:	ea4e 0606 	orr.w	r6, lr, r6
 80192a0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80192a4:	ea46 060a 	orr.w	r6, r6, sl
 80192a8:	f829 6b02 	strh.w	r6, [r9], #2
 80192ac:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80192b0:	e7a7      	b.n	8019202 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 80192b2:	f102 0e01 	add.w	lr, r2, #1
 80192b6:	4422      	add	r2, r4
 80192b8:	9f06      	ldr	r7, [sp, #24]
 80192ba:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 80192be:	9a06      	ldr	r2, [sp, #24]
 80192c0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80192c4:	eb02 0a05 	add.w	sl, r2, r5
 80192c8:	4a13      	ldr	r2, [pc, #76]	@ (8019318 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 80192ca:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80192ce:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80192d2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80192d6:	00d2      	lsls	r2, r2, #3
 80192d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80192dc:	ea49 0202 	orr.w	r2, r9, r2
 80192e0:	f817 9005 	ldrb.w	r9, [r7, r5]
 80192e4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80192e8:	f826 2b02 	strh.w	r2, [r6], #2
 80192ec:	fa1f f28e 	uxth.w	r2, lr
 80192f0:	e757      	b.n	80191a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 80192f2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80192f6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80192fa:	1a2d      	subs	r5, r5, r0
 80192fc:	b2ad      	uxth	r5, r5
 80192fe:	2d00      	cmp	r5, #0
 8019300:	bf18      	it	ne
 8019302:	2000      	movne	r0, #0
 8019304:	e730      	b.n	8019168 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8019306:	4b05      	ldr	r3, [pc, #20]	@ (801931c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8019308:	6818      	ldr	r0, [r3, #0]
 801930a:	6803      	ldr	r3, [r0, #0]
 801930c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801930e:	4798      	blx	r3
 8019310:	b01f      	add	sp, #124	@ 0x7c
 8019312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019316:	bf00      	nop
 8019318:	fffff800 	.word	0xfffff800
 801931c:	20013b6c 	.word	0x20013b6c

08019320 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8019320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019324:	b091      	sub	sp, #68	@ 0x44
 8019326:	469b      	mov	fp, r3
 8019328:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801932c:	4616      	mov	r6, r2
 801932e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 8019332:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019336:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801933a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801933e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8019342:	4604      	mov	r4, r0
 8019344:	460d      	mov	r5, r1
 8019346:	4640      	mov	r0, r8
 8019348:	4659      	mov	r1, fp
 801934a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801934e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8019352:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8019356:	f7f2 f9bf 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 801935a:	4631      	mov	r1, r6
 801935c:	4640      	mov	r0, r8
 801935e:	f7f2 f9bb 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 8019362:	4b74      	ldr	r3, [pc, #464]	@ (8019534 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8019364:	8818      	ldrh	r0, [r3, #0]
 8019366:	4b74      	ldr	r3, [pc, #464]	@ (8019538 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8019368:	8819      	ldrh	r1, [r3, #0]
 801936a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801936e:	2b00      	cmp	r3, #0
 8019370:	b202      	sxth	r2, r0
 8019372:	b20e      	sxth	r6, r1
 8019374:	da07      	bge.n	8019386 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8019376:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801937a:	4463      	add	r3, ip
 801937c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8019380:	2300      	movs	r3, #0
 8019382:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8019386:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801938a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801938e:	1ad2      	subs	r2, r2, r3
 8019390:	4594      	cmp	ip, r2
 8019392:	bfc4      	itt	gt
 8019394:	1ac2      	subgt	r2, r0, r3
 8019396:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801939a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801939e:	2a00      	cmp	r2, #0
 80193a0:	da07      	bge.n	80193b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80193a2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 80193a6:	4462      	add	r2, ip
 80193a8:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80193ac:	2200      	movs	r2, #0
 80193ae:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80193b2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 80193b6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80193ba:	eba6 060a 	sub.w	r6, r6, sl
 80193be:	42b2      	cmp	r2, r6
 80193c0:	bfc4      	itt	gt
 80193c2:	eba1 020a 	subgt.w	r2, r1, sl
 80193c6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 80193ca:	4a5c      	ldr	r2, [pc, #368]	@ (801953c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80193cc:	7812      	ldrb	r2, [r2, #0]
 80193ce:	b9a2      	cbnz	r2, 80193fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80193d0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80193d4:	4286      	cmp	r6, r0
 80193d6:	4640      	mov	r0, r8
 80193d8:	9303      	str	r3, [sp, #12]
 80193da:	bf14      	ite	ne
 80193dc:	2600      	movne	r6, #0
 80193de:	2601      	moveq	r6, #1
 80193e0:	f7f2 f9bd 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 80193e4:	9b03      	ldr	r3, [sp, #12]
 80193e6:	b160      	cbz	r0, 8019402 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80193e8:	2300      	movs	r3, #0
 80193ea:	8023      	strh	r3, [r4, #0]
 80193ec:	8063      	strh	r3, [r4, #2]
 80193ee:	80a3      	strh	r3, [r4, #4]
 80193f0:	4620      	mov	r0, r4
 80193f2:	80e3      	strh	r3, [r4, #6]
 80193f4:	b011      	add	sp, #68	@ 0x44
 80193f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193fa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80193fe:	428e      	cmp	r6, r1
 8019400:	e7e9      	b.n	80193d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8019402:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8019406:	9205      	str	r2, [sp, #20]
 8019408:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801940c:	9206      	str	r2, [sp, #24]
 801940e:	f8bb 2000 	ldrh.w	r2, [fp]
 8019412:	900e      	str	r0, [sp, #56]	@ 0x38
 8019414:	1a9b      	subs	r3, r3, r2
 8019416:	b21b      	sxth	r3, r3
 8019418:	9303      	str	r3, [sp, #12]
 801941a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801941e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8019422:	ebaa 0a03 	sub.w	sl, sl, r3
 8019426:	fa0f f38a 	sxth.w	r3, sl
 801942a:	9304      	str	r3, [sp, #16]
 801942c:	9b03      	ldr	r3, [sp, #12]
 801942e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8019432:	9b04      	ldr	r3, [sp, #16]
 8019434:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8019438:	9b05      	ldr	r3, [sp, #20]
 801943a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801943e:	a90e      	add	r1, sp, #56	@ 0x38
 8019440:	9b06      	ldr	r3, [sp, #24]
 8019442:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8019446:	a80c      	add	r0, sp, #48	@ 0x30
 8019448:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801944c:	f7f7 fd2c 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019450:	4640      	mov	r0, r8
 8019452:	f7f7 fd01 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019456:	a80e      	add	r0, sp, #56	@ 0x38
 8019458:	f7f7 fcfe 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801945c:	4b38      	ldr	r3, [pc, #224]	@ (8019540 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801945e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8019462:	881b      	ldrh	r3, [r3, #0]
 8019464:	9307      	str	r3, [sp, #28]
 8019466:	682b      	ldr	r3, [r5, #0]
 8019468:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8019544 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801946c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801946e:	4628      	mov	r0, r5
 8019470:	4798      	blx	r3
 8019472:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8019476:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801947a:	4681      	mov	r9, r0
 801947c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8019480:	f8db 0000 	ldr.w	r0, [fp]
 8019484:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8019486:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801948a:	6803      	ldr	r3, [r0, #0]
 801948c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801948e:	4798      	blx	r3
 8019490:	4607      	mov	r7, r0
 8019492:	f8db 0000 	ldr.w	r0, [fp]
 8019496:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801949a:	6803      	ldr	r3, [r0, #0]
 801949c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80194a0:	9109      	str	r1, [sp, #36]	@ 0x24
 80194a2:	9208      	str	r2, [sp, #32]
 80194a4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80194a6:	4798      	blx	r3
 80194a8:	f010 0f01 	tst.w	r0, #1
 80194ac:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80194b0:	d012      	beq.n	80194d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80194b2:	f8db 0000 	ldr.w	r0, [fp]
 80194b6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80194ba:	6803      	ldr	r3, [r0, #0]
 80194bc:	9200      	str	r2, [sp, #0]
 80194be:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 80194c0:	e898 0006 	ldmia.w	r8, {r1, r2}
 80194c4:	462b      	mov	r3, r5
 80194c6:	47b0      	blx	r6
 80194c8:	9b03      	ldr	r3, [sp, #12]
 80194ca:	8023      	strh	r3, [r4, #0]
 80194cc:	9b04      	ldr	r3, [sp, #16]
 80194ce:	8063      	strh	r3, [r4, #2]
 80194d0:	9b05      	ldr	r3, [sp, #20]
 80194d2:	80a3      	strh	r3, [r4, #4]
 80194d4:	9b06      	ldr	r3, [sp, #24]
 80194d6:	e78b      	b.n	80193f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80194d8:	fb09 f202 	mul.w	r2, r9, r2
 80194dc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80194e0:	440f      	add	r7, r1
 80194e2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 80194e6:	b166      	cbz	r6, 8019502 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80194e8:	9a07      	ldr	r2, [sp, #28]
 80194ea:	4592      	cmp	sl, r2
 80194ec:	d109      	bne.n	8019502 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80194ee:	f8db 0000 	ldr.w	r0, [fp]
 80194f2:	6802      	ldr	r2, [r0, #0]
 80194f4:	fb09 f303 	mul.w	r3, r9, r3
 80194f8:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 80194fa:	4629      	mov	r1, r5
 80194fc:	463a      	mov	r2, r7
 80194fe:	47b0      	blx	r6
 8019500:	e7e2      	b.n	80194c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8019502:	fb0a f303 	mul.w	r3, sl, r3
 8019506:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8019544 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801950a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801950e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8019512:	4545      	cmp	r5, r8
 8019514:	d2d8      	bcs.n	80194c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8019516:	f8db 0000 	ldr.w	r0, [fp]
 801951a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801951e:	6802      	ldr	r2, [r0, #0]
 8019520:	4629      	mov	r1, r5
 8019522:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 8019526:	005b      	lsls	r3, r3, #1
 8019528:	463a      	mov	r2, r7
 801952a:	47d0      	blx	sl
 801952c:	444f      	add	r7, r9
 801952e:	4435      	add	r5, r6
 8019530:	e7ef      	b.n	8019512 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8019532:	bf00      	nop
 8019534:	20013b5e 	.word	0x20013b5e
 8019538:	20013b60 	.word	0x20013b60
 801953c:	20013b62 	.word	0x20013b62
 8019540:	20013b64 	.word	0x20013b64
 8019544:	20013b6c 	.word	0x20013b6c

08019548 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8019548:	b5f0      	push	{r4, r5, r6, r7, lr}
 801954a:	4606      	mov	r6, r0
 801954c:	b087      	sub	sp, #28
 801954e:	460c      	mov	r4, r1
 8019550:	4617      	mov	r7, r2
 8019552:	461d      	mov	r5, r3
 8019554:	b333      	cbz	r3, 80195a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8019556:	4608      	mov	r0, r1
 8019558:	f7f2 f901 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 801955c:	bb10      	cbnz	r0, 80195a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801955e:	6820      	ldr	r0, [r4, #0]
 8019560:	6861      	ldr	r1, [r4, #4]
 8019562:	4c1c      	ldr	r4, [pc, #112]	@ (80195d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8019564:	ab04      	add	r3, sp, #16
 8019566:	c303      	stmia	r3!, {r0, r1}
 8019568:	a804      	add	r0, sp, #16
 801956a:	f7f7 fc75 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801956e:	6820      	ldr	r0, [r4, #0]
 8019570:	6803      	ldr	r3, [r0, #0]
 8019572:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8019574:	4798      	blx	r3
 8019576:	2dff      	cmp	r5, #255	@ 0xff
 8019578:	d016      	beq.n	80195a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801957a:	f010 0f08 	tst.w	r0, #8
 801957e:	6820      	ldr	r0, [r4, #0]
 8019580:	d015      	beq.n	80195ae <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8019582:	2400      	movs	r4, #0
 8019584:	6801      	ldr	r1, [r0, #0]
 8019586:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801958a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801958e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8019592:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8019596:	9401      	str	r4, [sp, #4]
 8019598:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801959c:	9400      	str	r4, [sp, #0]
 801959e:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 80195a0:	4639      	mov	r1, r7
 80195a2:	47a0      	blx	r4
 80195a4:	b007      	add	sp, #28
 80195a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80195a8:	f010 0f02 	tst.w	r0, #2
 80195ac:	e7e7      	b.n	801957e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80195ae:	6803      	ldr	r3, [r0, #0]
 80195b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80195b2:	4798      	blx	r3
 80195b4:	4b08      	ldr	r3, [pc, #32]	@ (80195d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80195b6:	881a      	ldrh	r2, [r3, #0]
 80195b8:	6833      	ldr	r3, [r6, #0]
 80195ba:	e9cd 7500 	strd	r7, r5, [sp]
 80195be:	4601      	mov	r1, r0
 80195c0:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 80195c2:	4630      	mov	r0, r6
 80195c4:	ab04      	add	r3, sp, #16
 80195c6:	47a8      	blx	r5
 80195c8:	6820      	ldr	r0, [r4, #0]
 80195ca:	6803      	ldr	r3, [r0, #0]
 80195cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80195ce:	4798      	blx	r3
 80195d0:	e7e8      	b.n	80195a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80195d2:	bf00      	nop
 80195d4:	20013b6c 	.word	0x20013b6c
 80195d8:	20013b64 	.word	0x20013b64

080195dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80195dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80195e0:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 80195e4:	9e08      	ldr	r6, [sp, #32]
 80195e6:	4688      	mov	r8, r1
 80195e8:	4614      	mov	r4, r2
 80195ea:	461d      	mov	r5, r3
 80195ec:	2f00      	cmp	r7, #0
 80195ee:	f000 80a9 	beq.w	8019744 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80195f2:	4618      	mov	r0, r3
 80195f4:	f7f2 f8b3 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 80195f8:	2800      	cmp	r0, #0
 80195fa:	f040 80a3 	bne.w	8019744 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80195fe:	f9b5 1000 	ldrsh.w	r1, [r5]
 8019602:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8019606:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801960a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801960e:	fb04 1303 	mla	r3, r4, r3, r1
 8019612:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8019616:	4365      	muls	r5, r4
 8019618:	2fff      	cmp	r7, #255	@ 0xff
 801961a:	eba4 0200 	sub.w	r2, r4, r0
 801961e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8019622:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8019626:	d04a      	beq.n	80196be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8019628:	b2bc      	uxth	r4, r7
 801962a:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801962e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8019632:	fa5f f788 	uxtb.w	r7, r8
 8019636:	b2f3      	uxtb	r3, r6
 8019638:	0040      	lsls	r0, r0, #1
 801963a:	fb0e fe04 	mul.w	lr, lr, r4
 801963e:	4367      	muls	r7, r4
 8019640:	4363      	muls	r3, r4
 8019642:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8019646:	fa1f fc8c 	uxth.w	ip, ip
 801964a:	42a9      	cmp	r1, r5
 801964c:	d27a      	bcs.n	8019744 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801964e:	eb01 0900 	add.w	r9, r1, r0
 8019652:	4549      	cmp	r1, r9
 8019654:	d231      	bcs.n	80196ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8019656:	880a      	ldrh	r2, [r1, #0]
 8019658:	1214      	asrs	r4, r2, #8
 801965a:	10d6      	asrs	r6, r2, #3
 801965c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8019660:	00d2      	lsls	r2, r2, #3
 8019662:	b2d2      	uxtb	r2, r2
 8019664:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019668:	fb14 f40c 	smulbb	r4, r4, ip
 801966c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019670:	4474      	add	r4, lr
 8019672:	fb12 f20c 	smulbb	r2, r2, ip
 8019676:	b2a4      	uxth	r4, r4
 8019678:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801967c:	441a      	add	r2, r3
 801967e:	b292      	uxth	r2, r2
 8019680:	f104 0a01 	add.w	sl, r4, #1
 8019684:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8019688:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801968c:	fb16 f60c 	smulbb	r6, r6, ip
 8019690:	f102 0a01 	add.w	sl, r2, #1
 8019694:	443e      	add	r6, r7
 8019696:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801969a:	b2b6      	uxth	r6, r6
 801969c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80196a0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80196a4:	4322      	orrs	r2, r4
 80196a6:	1c74      	adds	r4, r6, #1
 80196a8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80196ac:	0976      	lsrs	r6, r6, #5
 80196ae:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80196b2:	4332      	orrs	r2, r6
 80196b4:	f821 2b02 	strh.w	r2, [r1], #2
 80196b8:	e7cb      	b.n	8019652 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80196ba:	4441      	add	r1, r8
 80196bc:	e7c5      	b.n	801964a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80196be:	4f22      	ldr	r7, [pc, #136]	@ (8019748 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 80196c0:	0973      	lsrs	r3, r6, #5
 80196c2:	ea08 0707 	and.w	r7, r8, r7
 80196c6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80196ca:	433b      	orrs	r3, r7
 80196cc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80196d0:	4333      	orrs	r3, r6
 80196d2:	07e7      	lsls	r7, r4, #31
 80196d4:	b29b      	uxth	r3, r3
 80196d6:	d50b      	bpl.n	80196f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80196d8:	0040      	lsls	r0, r0, #1
 80196da:	0052      	lsls	r2, r2, #1
 80196dc:	42a9      	cmp	r1, r5
 80196de:	d231      	bcs.n	8019744 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80196e0:	180c      	adds	r4, r1, r0
 80196e2:	42a1      	cmp	r1, r4
 80196e4:	d202      	bcs.n	80196ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 80196e6:	f821 3b02 	strh.w	r3, [r1], #2
 80196ea:	e7fa      	b.n	80196e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 80196ec:	4411      	add	r1, r2
 80196ee:	e7f5      	b.n	80196dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 80196f0:	078e      	lsls	r6, r1, #30
 80196f2:	d008      	beq.n	8019706 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80196f4:	0066      	lsls	r6, r4, #1
 80196f6:	460a      	mov	r2, r1
 80196f8:	42aa      	cmp	r2, r5
 80196fa:	d202      	bcs.n	8019702 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 80196fc:	8013      	strh	r3, [r2, #0]
 80196fe:	4432      	add	r2, r6
 8019700:	e7fa      	b.n	80196f8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8019702:	3102      	adds	r1, #2
 8019704:	3801      	subs	r0, #1
 8019706:	07c2      	lsls	r2, r0, #31
 8019708:	d50b      	bpl.n	8019722 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801970a:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801970e:	3a01      	subs	r2, #1
 8019710:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8019714:	0066      	lsls	r6, r4, #1
 8019716:	42aa      	cmp	r2, r5
 8019718:	d202      	bcs.n	8019720 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801971a:	8013      	strh	r3, [r2, #0]
 801971c:	4432      	add	r2, r6
 801971e:	e7fa      	b.n	8019716 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8019720:	3801      	subs	r0, #1
 8019722:	b178      	cbz	r0, 8019744 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8019724:	1040      	asrs	r0, r0, #1
 8019726:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801972a:	0080      	lsls	r0, r0, #2
 801972c:	0064      	lsls	r4, r4, #1
 801972e:	42a9      	cmp	r1, r5
 8019730:	d208      	bcs.n	8019744 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8019732:	180e      	adds	r6, r1, r0
 8019734:	460a      	mov	r2, r1
 8019736:	42b2      	cmp	r2, r6
 8019738:	d202      	bcs.n	8019740 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801973a:	f842 3b04 	str.w	r3, [r2], #4
 801973e:	e7fa      	b.n	8019736 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8019740:	4421      	add	r1, r4
 8019742:	e7f4      	b.n	801972e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8019744:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019748:	00fff800 	.word	0x00fff800

0801974c <_ZN8touchgfx8LCD16bppC1Ev>:
 801974c:	2200      	movs	r2, #0
 801974e:	4912      	ldr	r1, [pc, #72]	@ (8019798 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8019750:	6001      	str	r1, [r0, #0]
 8019752:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8019756:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801975a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801975e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8019762:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8019766:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801976a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801976e:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8019772:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8019776:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801977a:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801977e:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8019782:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8019786:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801978a:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801978e:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8019792:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 8019796:	4770      	bx	lr
 8019798:	08027a00 	.word	0x08027a00

0801979c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801979c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197a0:	460d      	mov	r5, r1
 80197a2:	b08d      	sub	sp, #52	@ 0x34
 80197a4:	4604      	mov	r4, r0
 80197a6:	6808      	ldr	r0, [r1, #0]
 80197a8:	6849      	ldr	r1, [r1, #4]
 80197aa:	4699      	mov	r9, r3
 80197ac:	ab08      	add	r3, sp, #32
 80197ae:	c303      	stmia	r3!, {r0, r1}
 80197b0:	6810      	ldr	r0, [r2, #0]
 80197b2:	6851      	ldr	r1, [r2, #4]
 80197b4:	ab0a      	add	r3, sp, #40	@ 0x28
 80197b6:	c303      	stmia	r3!, {r0, r1}
 80197b8:	a808      	add	r0, sp, #32
 80197ba:	f7f7 fb4d 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80197be:	4629      	mov	r1, r5
 80197c0:	a80a      	add	r0, sp, #40	@ 0x28
 80197c2:	f7f7 fb71 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80197c6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80197ca:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 80197ce:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 80197d2:	4d63      	ldr	r5, [pc, #396]	@ (8019960 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80197d4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 80197d8:	6828      	ldr	r0, [r5, #0]
 80197da:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80197de:	fb11 2103 	smlabb	r1, r1, r3, r2
 80197e2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80197e6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80197ea:	440a      	add	r2, r1
 80197ec:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80197f0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 80197f4:	4413      	add	r3, r2
 80197f6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80197fa:	6803      	ldr	r3, [r0, #0]
 80197fc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80197fe:	4798      	blx	r3
 8019800:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8019804:	d119      	bne.n	801983a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8019806:	f010 0f20 	tst.w	r0, #32
 801980a:	6828      	ldr	r0, [r5, #0]
 801980c:	d018      	beq.n	8019840 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801980e:	2500      	movs	r5, #0
 8019810:	6801      	ldr	r1, [r0, #0]
 8019812:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8019816:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801981a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801981e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8019822:	9502      	str	r5, [sp, #8]
 8019824:	b2b6      	uxth	r6, r6
 8019826:	fa1f f588 	uxth.w	r5, r8
 801982a:	9601      	str	r6, [sp, #4]
 801982c:	9500      	str	r5, [sp, #0]
 801982e:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 8019830:	4621      	mov	r1, r4
 8019832:	47a8      	blx	r5
 8019834:	b00d      	add	sp, #52	@ 0x34
 8019836:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801983a:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801983e:	e7e4      	b.n	801980a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8019840:	6803      	ldr	r3, [r0, #0]
 8019842:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019844:	4798      	blx	r3
 8019846:	4947      	ldr	r1, [pc, #284]	@ (8019964 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8019848:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801984c:	880b      	ldrh	r3, [r1, #0]
 801984e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8019852:	fb03 5202 	mla	r2, r3, r2, r5
 8019856:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801985a:	4373      	muls	r3, r6
 801985c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019860:	9307      	str	r3, [sp, #28]
 8019862:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8019866:	9306      	str	r3, [sp, #24]
 8019868:	468a      	mov	sl, r1
 801986a:	9b07      	ldr	r3, [sp, #28]
 801986c:	4298      	cmp	r0, r3
 801986e:	d270      	bcs.n	8019952 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8019870:	9b06      	ldr	r3, [sp, #24]
 8019872:	4621      	mov	r1, r4
 8019874:	eb00 0b03 	add.w	fp, r0, r3
 8019878:	4558      	cmp	r0, fp
 801987a:	d25d      	bcs.n	8019938 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801987c:	f851 4b04 	ldr.w	r4, [r1], #4
 8019880:	0e23      	lsrs	r3, r4, #24
 8019882:	d014      	beq.n	80198ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8019884:	2bff      	cmp	r3, #255	@ 0xff
 8019886:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801988a:	d112      	bne.n	80198b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801988c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8019890:	d10f      	bne.n	80198b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8019892:	0963      	lsrs	r3, r4, #5
 8019894:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8019898:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801989c:	f02c 0c07 	bic.w	ip, ip, #7
 80198a0:	ea43 0c0c 	orr.w	ip, r3, ip
 80198a4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80198a8:	ea4c 0404 	orr.w	r4, ip, r4
 80198ac:	8004      	strh	r4, [r0, #0]
 80198ae:	3002      	adds	r0, #2
 80198b0:	e7e2      	b.n	8019878 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80198b2:	fb09 f303 	mul.w	r3, r9, r3
 80198b6:	8807      	ldrh	r7, [r0, #0]
 80198b8:	1c5a      	adds	r2, r3, #1
 80198ba:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80198be:	1212      	asrs	r2, r2, #8
 80198c0:	123e      	asrs	r6, r7, #8
 80198c2:	b293      	uxth	r3, r2
 80198c4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80198c8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80198cc:	43d2      	mvns	r2, r2
 80198ce:	b2d2      	uxtb	r2, r2
 80198d0:	10fd      	asrs	r5, r7, #3
 80198d2:	fb1e fe03 	smulbb	lr, lr, r3
 80198d6:	00ff      	lsls	r7, r7, #3
 80198d8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80198dc:	fb06 e602 	mla	r6, r6, r2, lr
 80198e0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80198e4:	b2ff      	uxtb	r7, r7
 80198e6:	fa5f fc8c 	uxtb.w	ip, ip
 80198ea:	b2e4      	uxtb	r4, r4
 80198ec:	b2b6      	uxth	r6, r6
 80198ee:	fb1c fc03 	smulbb	ip, ip, r3
 80198f2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80198f6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80198fa:	fb14 f403 	smulbb	r4, r4, r3
 80198fe:	fb05 c502 	mla	r5, r5, r2, ip
 8019902:	f106 0e01 	add.w	lr, r6, #1
 8019906:	fb07 4702 	mla	r7, r7, r2, r4
 801990a:	b2ad      	uxth	r5, r5
 801990c:	b2bf      	uxth	r7, r7
 801990e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8019912:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8019916:	f105 0c01 	add.w	ip, r5, #1
 801991a:	1c7e      	adds	r6, r7, #1
 801991c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8019920:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8019924:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019928:	096d      	lsrs	r5, r5, #5
 801992a:	ea46 060e 	orr.w	r6, r6, lr
 801992e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019932:	432e      	orrs	r6, r5
 8019934:	8006      	strh	r6, [r0, #0]
 8019936:	e7ba      	b.n	80198ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8019938:	f8ba 3000 	ldrh.w	r3, [sl]
 801993c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8019940:	eba3 0308 	sub.w	r3, r3, r8
 8019944:	eba4 0408 	sub.w	r4, r4, r8
 8019948:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801994c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8019950:	e78b      	b.n	801986a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8019952:	4b03      	ldr	r3, [pc, #12]	@ (8019960 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8019954:	6818      	ldr	r0, [r3, #0]
 8019956:	6803      	ldr	r3, [r0, #0]
 8019958:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801995a:	4798      	blx	r3
 801995c:	e76a      	b.n	8019834 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801995e:	bf00      	nop
 8019960:	20013b6c 	.word	0x20013b6c
 8019964:	20013b64 	.word	0x20013b64

08019968 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8019968:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801996c:	460c      	mov	r4, r1
 801996e:	b085      	sub	sp, #20
 8019970:	6810      	ldr	r0, [r2, #0]
 8019972:	6851      	ldr	r1, [r2, #4]
 8019974:	466d      	mov	r5, sp
 8019976:	c503      	stmia	r5!, {r0, r1}
 8019978:	6818      	ldr	r0, [r3, #0]
 801997a:	6859      	ldr	r1, [r3, #4]
 801997c:	4616      	mov	r6, r2
 801997e:	c503      	stmia	r5!, {r0, r1}
 8019980:	4668      	mov	r0, sp
 8019982:	f7f7 fa69 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019986:	4631      	mov	r1, r6
 8019988:	a802      	add	r0, sp, #8
 801998a:	f7f7 fa8d 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801998e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8019992:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8019996:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801999a:	4d28      	ldr	r5, [pc, #160]	@ (8019a3c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801999c:	4e28      	ldr	r6, [pc, #160]	@ (8019a40 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801999e:	6828      	ldr	r0, [r5, #0]
 80199a0:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80199a4:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80199a8:	fb11 2103 	smlabb	r1, r1, r3, r2
 80199ac:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80199b0:	f8bd 1000 	ldrh.w	r1, [sp]
 80199b4:	440a      	add	r2, r1
 80199b6:	f8ad 2008 	strh.w	r2, [sp, #8]
 80199ba:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80199be:	4413      	add	r3, r2
 80199c0:	f8ad 300a 	strh.w	r3, [sp, #10]
 80199c4:	6803      	ldr	r3, [r0, #0]
 80199c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80199c8:	4798      	blx	r3
 80199ca:	8833      	ldrh	r3, [r6, #0]
 80199cc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80199d0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80199d4:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8019a44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80199d8:	fb03 1202 	mla	r2, r3, r2, r1
 80199dc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80199e0:	fb08 f303 	mul.w	r3, r8, r3
 80199e4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80199e8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80199ec:	4298      	cmp	r0, r3
 80199ee:	d21d      	bcs.n	8019a2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80199f0:	eb00 080c 	add.w	r8, r0, ip
 80199f4:	4540      	cmp	r0, r8
 80199f6:	d20f      	bcs.n	8019a18 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80199f8:	f854 1b04 	ldr.w	r1, [r4], #4
 80199fc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8019a00:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8019a04:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019a08:	ea42 0209 	orr.w	r2, r2, r9
 8019a0c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8019a10:	430a      	orrs	r2, r1
 8019a12:	f820 2b02 	strh.w	r2, [r0], #2
 8019a16:	e7ed      	b.n	80199f4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8019a18:	8832      	ldrh	r2, [r6, #0]
 8019a1a:	1bd2      	subs	r2, r2, r7
 8019a1c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019a20:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8019a24:	1bd2      	subs	r2, r2, r7
 8019a26:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8019a2a:	e7df      	b.n	80199ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8019a2c:	6828      	ldr	r0, [r5, #0]
 8019a2e:	6803      	ldr	r3, [r0, #0]
 8019a30:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019a32:	4798      	blx	r3
 8019a34:	b005      	add	sp, #20
 8019a36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019a3a:	bf00      	nop
 8019a3c:	20013b6c 	.word	0x20013b6c
 8019a40:	20013b64 	.word	0x20013b64
 8019a44:	fffff800 	.word	0xfffff800

08019a48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8019a48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019a4c:	460e      	mov	r6, r1
 8019a4e:	b08e      	sub	sp, #56	@ 0x38
 8019a50:	4604      	mov	r4, r0
 8019a52:	6808      	ldr	r0, [r1, #0]
 8019a54:	6849      	ldr	r1, [r1, #4]
 8019a56:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 8019c30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8019a5a:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8019c34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8019a5e:	461d      	mov	r5, r3
 8019a60:	ab0a      	add	r3, sp, #40	@ 0x28
 8019a62:	c303      	stmia	r3!, {r0, r1}
 8019a64:	6810      	ldr	r0, [r2, #0]
 8019a66:	6851      	ldr	r1, [r2, #4]
 8019a68:	ab0c      	add	r3, sp, #48	@ 0x30
 8019a6a:	c303      	stmia	r3!, {r0, r1}
 8019a6c:	a80a      	add	r0, sp, #40	@ 0x28
 8019a6e:	f7f7 f9f3 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019a72:	4631      	mov	r1, r6
 8019a74:	a80c      	add	r0, sp, #48	@ 0x30
 8019a76:	f7f7 fa17 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019a7a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8019a7e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8019a82:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8019a86:	f8d8 0000 	ldr.w	r0, [r8]
 8019a8a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8019a8e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8019a92:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019a96:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8019a9a:	440c      	add	r4, r1
 8019a9c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8019aa0:	440a      	add	r2, r1
 8019aa2:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8019aa6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8019aaa:	4413      	add	r3, r2
 8019aac:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8019ab0:	6803      	ldr	r3, [r0, #0]
 8019ab2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8019ab4:	4798      	blx	r3
 8019ab6:	2dff      	cmp	r5, #255	@ 0xff
 8019ab8:	d124      	bne.n	8019b04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8019aba:	f010 0f01 	tst.w	r0, #1
 8019abe:	f8d8 0000 	ldr.w	r0, [r8]
 8019ac2:	d022      	beq.n	8019b0a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8019ac4:	2100      	movs	r1, #0
 8019ac6:	f8d0 c000 	ldr.w	ip, [r0]
 8019aca:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8019ace:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8019ad2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8019ad6:	f04f 0e01 	mov.w	lr, #1
 8019ada:	f8cd e018 	str.w	lr, [sp, #24]
 8019ade:	f8b9 e000 	ldrh.w	lr, [r9]
 8019ae2:	9503      	str	r5, [sp, #12]
 8019ae4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8019ae8:	b2b6      	uxth	r6, r6
 8019aea:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8019aee:	9102      	str	r1, [sp, #8]
 8019af0:	b2bf      	uxth	r7, r7
 8019af2:	9601      	str	r6, [sp, #4]
 8019af4:	9700      	str	r7, [sp, #0]
 8019af6:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 8019afa:	4621      	mov	r1, r4
 8019afc:	47a8      	blx	r5
 8019afe:	b00e      	add	sp, #56	@ 0x38
 8019b00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019b04:	f010 0f04 	tst.w	r0, #4
 8019b08:	e7d9      	b.n	8019abe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8019b0a:	6803      	ldr	r3, [r0, #0]
 8019b0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019b0e:	4798      	blx	r3
 8019b10:	f8b9 3000 	ldrh.w	r3, [r9]
 8019b14:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8019b18:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8019b1c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8019b20:	fb03 1202 	mla	r2, r3, r2, r1
 8019b24:	ebac 0c07 	sub.w	ip, ip, r7
 8019b28:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019b2c:	435e      	muls	r6, r3
 8019b2e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8019b32:	2dff      	cmp	r5, #255	@ 0xff
 8019b34:	eba3 0707 	sub.w	r7, r3, r7
 8019b38:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019b3c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8019b40:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8019b44:	d049      	beq.n	8019bda <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8019b46:	43eb      	mvns	r3, r5
 8019b48:	fa1f f985 	uxth.w	r9, r5
 8019b4c:	b2db      	uxtb	r3, r3
 8019b4e:	42b0      	cmp	r0, r6
 8019b50:	d266      	bcs.n	8019c20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8019b52:	eb00 0a0e 	add.w	sl, r0, lr
 8019b56:	4550      	cmp	r0, sl
 8019b58:	4621      	mov	r1, r4
 8019b5a:	f104 0403 	add.w	r4, r4, #3
 8019b5e:	d25b      	bcs.n	8019c18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8019b60:	8802      	ldrh	r2, [r0, #0]
 8019b62:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8019b66:	ea4f 2822 	mov.w	r8, r2, asr #8
 8019b6a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8019b6e:	fb11 f109 	smulbb	r1, r1, r9
 8019b72:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8019b76:	10d5      	asrs	r5, r2, #3
 8019b78:	fb08 1803 	mla	r8, r8, r3, r1
 8019b7c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8019b80:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019b84:	fb11 f109 	smulbb	r1, r1, r9
 8019b88:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019b8c:	fb05 1503 	mla	r5, r5, r3, r1
 8019b90:	00d2      	lsls	r2, r2, #3
 8019b92:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8019b96:	b2d2      	uxtb	r2, r2
 8019b98:	fb11 f109 	smulbb	r1, r1, r9
 8019b9c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019ba0:	fa1f f888 	uxth.w	r8, r8
 8019ba4:	fb02 1203 	mla	r2, r2, r3, r1
 8019ba8:	b292      	uxth	r2, r2
 8019baa:	f108 0101 	add.w	r1, r8, #1
 8019bae:	b2ad      	uxth	r5, r5
 8019bb0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8019bb4:	1c51      	adds	r1, r2, #1
 8019bb6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019bba:	1c69      	adds	r1, r5, #1
 8019bbc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8019bc0:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8019bc4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019bc8:	096d      	lsrs	r5, r5, #5
 8019bca:	ea42 0208 	orr.w	r2, r2, r8
 8019bce:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019bd2:	432a      	orrs	r2, r5
 8019bd4:	f820 2b02 	strh.w	r2, [r0], #2
 8019bd8:	e7bd      	b.n	8019b56 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8019bda:	4a14      	ldr	r2, [pc, #80]	@ (8019c2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8019bdc:	42b0      	cmp	r0, r6
 8019bde:	d21f      	bcs.n	8019c20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8019be0:	eb00 050e 	add.w	r5, r0, lr
 8019be4:	42a8      	cmp	r0, r5
 8019be6:	4621      	mov	r1, r4
 8019be8:	f104 0403 	add.w	r4, r4, #3
 8019bec:	d210      	bcs.n	8019c10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8019bee:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8019bf2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8019bf6:	00db      	lsls	r3, r3, #3
 8019bf8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8019bfc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019c00:	430b      	orrs	r3, r1
 8019c02:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8019c06:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8019c0a:	f820 3b02 	strh.w	r3, [r0], #2
 8019c0e:	e7e9      	b.n	8019be4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8019c10:	4438      	add	r0, r7
 8019c12:	eb01 040c 	add.w	r4, r1, ip
 8019c16:	e7e1      	b.n	8019bdc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8019c18:	4438      	add	r0, r7
 8019c1a:	eb01 040c 	add.w	r4, r1, ip
 8019c1e:	e796      	b.n	8019b4e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8019c20:	4b03      	ldr	r3, [pc, #12]	@ (8019c30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8019c22:	6818      	ldr	r0, [r3, #0]
 8019c24:	6803      	ldr	r3, [r0, #0]
 8019c26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019c28:	4798      	blx	r3
 8019c2a:	e768      	b.n	8019afe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8019c2c:	fffff800 	.word	0xfffff800
 8019c30:	20013b6c 	.word	0x20013b6c
 8019c34:	20013b64 	.word	0x20013b64

08019c38 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8019c38:	b4f0      	push	{r4, r5, r6, r7}
 8019c3a:	4616      	mov	r6, r2
 8019c3c:	2e01      	cmp	r6, #1
 8019c3e:	461c      	mov	r4, r3
 8019c40:	460d      	mov	r5, r1
 8019c42:	9a04      	ldr	r2, [sp, #16]
 8019c44:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8019c48:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8019c4c:	d012      	beq.n	8019c74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8019c4e:	d303      	bcc.n	8019c58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8019c50:	2e02      	cmp	r6, #2
 8019c52:	d00a      	beq.n	8019c6a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8019c54:	bcf0      	pop	{r4, r5, r6, r7}
 8019c56:	4770      	bx	lr
 8019c58:	6805      	ldr	r5, [r0, #0]
 8019c5a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8019c5e:	68ed      	ldr	r5, [r5, #12]
 8019c60:	4613      	mov	r3, r2
 8019c62:	46ac      	mov	ip, r5
 8019c64:	4622      	mov	r2, r4
 8019c66:	bcf0      	pop	{r4, r5, r6, r7}
 8019c68:	4760      	bx	ip
 8019c6a:	4621      	mov	r1, r4
 8019c6c:	4628      	mov	r0, r5
 8019c6e:	bcf0      	pop	{r4, r5, r6, r7}
 8019c70:	f7ff bd94 	b.w	801979c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019c74:	4621      	mov	r1, r4
 8019c76:	4628      	mov	r0, r5
 8019c78:	bcf0      	pop	{r4, r5, r6, r7}
 8019c7a:	f7ff bee5 	b.w	8019a48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08019c80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8019c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c84:	4681      	mov	r9, r0
 8019c86:	b093      	sub	sp, #76	@ 0x4c
 8019c88:	6810      	ldr	r0, [r2, #0]
 8019c8a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8019c8e:	4f6d      	ldr	r7, [pc, #436]	@ (8019e44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8019c90:	4688      	mov	r8, r1
 8019c92:	6851      	ldr	r1, [r2, #4]
 8019c94:	ac0e      	add	r4, sp, #56	@ 0x38
 8019c96:	c403      	stmia	r4!, {r0, r1}
 8019c98:	6818      	ldr	r0, [r3, #0]
 8019c9a:	6859      	ldr	r1, [r3, #4]
 8019c9c:	ac10      	add	r4, sp, #64	@ 0x40
 8019c9e:	4616      	mov	r6, r2
 8019ca0:	c403      	stmia	r4!, {r0, r1}
 8019ca2:	a80e      	add	r0, sp, #56	@ 0x38
 8019ca4:	f7f7 f8d8 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019ca8:	4631      	mov	r1, r6
 8019caa:	a810      	add	r0, sp, #64	@ 0x40
 8019cac:	f7f7 f8fc 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019cb0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8019cb4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8019cb8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8019cbc:	4e62      	ldr	r6, [pc, #392]	@ (8019e48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8019cbe:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8019cc2:	6830      	ldr	r0, [r6, #0]
 8019cc4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8019cc8:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019ccc:	4489      	add	r9, r1
 8019cce:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8019cd2:	440a      	add	r2, r1
 8019cd4:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8019cd8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8019cdc:	4413      	add	r3, r2
 8019cde:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8019ce2:	6803      	ldr	r3, [r0, #0]
 8019ce4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8019ce6:	4798      	blx	r3
 8019ce8:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8019cec:	6830      	ldr	r0, [r6, #0]
 8019cee:	d01d      	beq.n	8019d2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8019cf0:	2200      	movs	r2, #0
 8019cf2:	6801      	ldr	r1, [r0, #0]
 8019cf4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8019cf8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8019cfc:	220b      	movs	r2, #11
 8019cfe:	9207      	str	r2, [sp, #28]
 8019d00:	883a      	ldrh	r2, [r7, #0]
 8019d02:	9206      	str	r2, [sp, #24]
 8019d04:	2201      	movs	r2, #1
 8019d06:	e9cd a204 	strd	sl, r2, [sp, #16]
 8019d0a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8019d0e:	9203      	str	r2, [sp, #12]
 8019d10:	b2a4      	uxth	r4, r4
 8019d12:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8019d16:	9200      	str	r2, [sp, #0]
 8019d18:	b2ad      	uxth	r5, r5
 8019d1a:	9502      	str	r5, [sp, #8]
 8019d1c:	9401      	str	r4, [sp, #4]
 8019d1e:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 8019d20:	4642      	mov	r2, r8
 8019d22:	4649      	mov	r1, r9
 8019d24:	47a0      	blx	r4
 8019d26:	b013      	add	sp, #76	@ 0x4c
 8019d28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d2c:	6803      	ldr	r3, [r0, #0]
 8019d2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019d30:	4798      	blx	r3
 8019d32:	883b      	ldrh	r3, [r7, #0]
 8019d34:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8019d38:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8019d3c:	fb03 1202 	mla	r2, r3, r2, r1
 8019d40:	435d      	muls	r5, r3
 8019d42:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019d46:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8019d4a:	920c      	str	r2, [sp, #48]	@ 0x30
 8019d4c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8019d50:	1b12      	subs	r2, r2, r4
 8019d52:	920d      	str	r2, [sp, #52]	@ 0x34
 8019d54:	0062      	lsls	r2, r4, #1
 8019d56:	1b1c      	subs	r4, r3, r4
 8019d58:	0063      	lsls	r3, r4, #1
 8019d5a:	920a      	str	r2, [sp, #40]	@ 0x28
 8019d5c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019d5e:	f04f 0e04 	mov.w	lr, #4
 8019d62:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019d64:	4298      	cmp	r0, r3
 8019d66:	d266      	bcs.n	8019e36 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8019d68:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019d6a:	eb00 0b03 	add.w	fp, r0, r3
 8019d6e:	4558      	cmp	r0, fp
 8019d70:	d25c      	bcs.n	8019e2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8019d72:	f819 3b01 	ldrb.w	r3, [r9], #1
 8019d76:	fb1e e303 	smlabb	r3, lr, r3, lr
 8019d7a:	f858 2003 	ldr.w	r2, [r8, r3]
 8019d7e:	0e11      	lsrs	r1, r2, #24
 8019d80:	d012      	beq.n	8019da8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8019d82:	29ff      	cmp	r1, #255	@ 0xff
 8019d84:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8019d88:	d110      	bne.n	8019dac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8019d8a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8019d8e:	d10d      	bne.n	8019dac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8019d90:	0953      	lsrs	r3, r2, #5
 8019d92:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8019d96:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019d9a:	f027 0707 	bic.w	r7, r7, #7
 8019d9e:	431f      	orrs	r7, r3
 8019da0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019da4:	433a      	orrs	r2, r7
 8019da6:	8002      	strh	r2, [r0, #0]
 8019da8:	3002      	adds	r0, #2
 8019daa:	e7e0      	b.n	8019d6e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8019dac:	fb0a f101 	mul.w	r1, sl, r1
 8019db0:	8806      	ldrh	r6, [r0, #0]
 8019db2:	1c4b      	adds	r3, r1, #1
 8019db4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8019db8:	1235      	asrs	r5, r6, #8
 8019dba:	10f4      	asrs	r4, r6, #3
 8019dbc:	121b      	asrs	r3, r3, #8
 8019dbe:	00f6      	lsls	r6, r6, #3
 8019dc0:	b299      	uxth	r1, r3
 8019dc2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8019dc6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019dca:	b2f6      	uxtb	r6, r6
 8019dcc:	43db      	mvns	r3, r3
 8019dce:	b2d2      	uxtb	r2, r2
 8019dd0:	b2db      	uxtb	r3, r3
 8019dd2:	fb1c fc01 	smulbb	ip, ip, r1
 8019dd6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8019dda:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8019dde:	fb12 f201 	smulbb	r2, r2, r1
 8019de2:	fb05 c503 	mla	r5, r5, r3, ip
 8019de6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8019dea:	b2ff      	uxtb	r7, r7
 8019dec:	fb06 2203 	mla	r2, r6, r3, r2
 8019df0:	b2ad      	uxth	r5, r5
 8019df2:	fb17 f701 	smulbb	r7, r7, r1
 8019df6:	b292      	uxth	r2, r2
 8019df8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8019dfc:	fb04 7403 	mla	r4, r4, r3, r7
 8019e00:	f105 0c01 	add.w	ip, r5, #1
 8019e04:	1c57      	adds	r7, r2, #1
 8019e06:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8019e0a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8019e0e:	b2a4      	uxth	r4, r4
 8019e10:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019e14:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019e18:	433d      	orrs	r5, r7
 8019e1a:	1c67      	adds	r7, r4, #1
 8019e1c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8019e20:	0964      	lsrs	r4, r4, #5
 8019e22:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8019e26:	4325      	orrs	r5, r4
 8019e28:	8005      	strh	r5, [r0, #0]
 8019e2a:	e7bd      	b.n	8019da8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8019e2c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019e2e:	4418      	add	r0, r3
 8019e30:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019e32:	4499      	add	r9, r3
 8019e34:	e795      	b.n	8019d62 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8019e36:	4b04      	ldr	r3, [pc, #16]	@ (8019e48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8019e38:	6818      	ldr	r0, [r3, #0]
 8019e3a:	6803      	ldr	r3, [r0, #0]
 8019e3c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019e3e:	4798      	blx	r3
 8019e40:	e771      	b.n	8019d26 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8019e42:	bf00      	nop
 8019e44:	20013b64 	.word	0x20013b64
 8019e48:	20013b6c 	.word	0x20013b6c

08019e4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8019e4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e50:	b087      	sub	sp, #28
 8019e52:	4680      	mov	r8, r0
 8019e54:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8019e58:	460d      	mov	r5, r1
 8019e5a:	4614      	mov	r4, r2
 8019e5c:	2e00      	cmp	r6, #0
 8019e5e:	f000 80b9 	beq.w	8019fd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8019e62:	6810      	ldr	r0, [r2, #0]
 8019e64:	6851      	ldr	r1, [r2, #4]
 8019e66:	af02      	add	r7, sp, #8
 8019e68:	c703      	stmia	r7!, {r0, r1}
 8019e6a:	6818      	ldr	r0, [r3, #0]
 8019e6c:	6859      	ldr	r1, [r3, #4]
 8019e6e:	af04      	add	r7, sp, #16
 8019e70:	c703      	stmia	r7!, {r0, r1}
 8019e72:	a802      	add	r0, sp, #8
 8019e74:	f7f6 fff0 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019e78:	4621      	mov	r1, r4
 8019e7a:	a804      	add	r0, sp, #16
 8019e7c:	f7f7 f814 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019e80:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019e84:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019e88:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8019e8c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8019e90:	fb14 2103 	smlabb	r1, r4, r3, r2
 8019e94:	eb08 0401 	add.w	r4, r8, r1
 8019e98:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8019e9c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8019ea0:	440a      	add	r2, r1
 8019ea2:	f8ad 2010 	strh.w	r2, [sp, #16]
 8019ea6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019eaa:	4413      	add	r3, r2
 8019eac:	f8ad 3012 	strh.w	r3, [sp, #18]
 8019eb0:	4b4a      	ldr	r3, [pc, #296]	@ (8019fdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8019eb2:	6818      	ldr	r0, [r3, #0]
 8019eb4:	6803      	ldr	r3, [r0, #0]
 8019eb6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019eb8:	4798      	blx	r3
 8019eba:	4b49      	ldr	r3, [pc, #292]	@ (8019fe0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8019ebc:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8019ec0:	881a      	ldrh	r2, [r3, #0]
 8019ec2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8019ec6:	2eff      	cmp	r6, #255	@ 0xff
 8019ec8:	fb02 c101 	mla	r1, r2, r1, ip
 8019ecc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8019ed0:	fb02 f207 	mul.w	r2, r2, r7
 8019ed4:	f105 0104 	add.w	r1, r5, #4
 8019ed8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8019edc:	461d      	mov	r5, r3
 8019ede:	d05a      	beq.n	8019f96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8019ee0:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8019ee4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019ee8:	b2b6      	uxth	r6, r6
 8019eea:	fa1f fe8e 	uxth.w	lr, lr
 8019eee:	9301      	str	r3, [sp, #4]
 8019ef0:	4282      	cmp	r2, r0
 8019ef2:	d96a      	bls.n	8019fca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8019ef4:	eb00 0b0a 	add.w	fp, r0, sl
 8019ef8:	4583      	cmp	fp, r0
 8019efa:	d940      	bls.n	8019f7e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8019efc:	f814 3b01 	ldrb.w	r3, [r4], #1
 8019f00:	8805      	ldrh	r5, [r0, #0]
 8019f02:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8019f06:	122f      	asrs	r7, r5, #8
 8019f08:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019f0c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019f10:	fb17 f70e 	smulbb	r7, r7, lr
 8019f14:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019f18:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019f1c:	00ed      	lsls	r5, r5, #3
 8019f1e:	fb0c 7c06 	mla	ip, ip, r6, r7
 8019f22:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8019f26:	10df      	asrs	r7, r3, #3
 8019f28:	b2ed      	uxtb	r5, r5
 8019f2a:	00db      	lsls	r3, r3, #3
 8019f2c:	fa1f fc8c 	uxth.w	ip, ip
 8019f30:	fb19 f90e 	smulbb	r9, r9, lr
 8019f34:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019f38:	b2db      	uxtb	r3, r3
 8019f3a:	fb15 f50e 	smulbb	r5, r5, lr
 8019f3e:	fb07 9706 	mla	r7, r7, r6, r9
 8019f42:	fb03 5306 	mla	r3, r3, r6, r5
 8019f46:	f10c 0901 	add.w	r9, ip, #1
 8019f4a:	b29b      	uxth	r3, r3
 8019f4c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8019f50:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8019f54:	f103 0c01 	add.w	ip, r3, #1
 8019f58:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019f5c:	b2bf      	uxth	r7, r7
 8019f5e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019f62:	ea4c 0c09 	orr.w	ip, ip, r9
 8019f66:	f107 0901 	add.w	r9, r7, #1
 8019f6a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8019f6e:	097f      	lsrs	r7, r7, #5
 8019f70:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019f74:	ea4c 0c07 	orr.w	ip, ip, r7
 8019f78:	f820 cb02 	strh.w	ip, [r0], #2
 8019f7c:	e7bc      	b.n	8019ef8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8019f7e:	9b01      	ldr	r3, [sp, #4]
 8019f80:	881b      	ldrh	r3, [r3, #0]
 8019f82:	eba3 0308 	sub.w	r3, r3, r8
 8019f86:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019f8a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8019f8e:	eba3 0308 	sub.w	r3, r3, r8
 8019f92:	441c      	add	r4, r3
 8019f94:	e7ac      	b.n	8019ef0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8019f96:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019f9a:	4282      	cmp	r2, r0
 8019f9c:	d915      	bls.n	8019fca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8019f9e:	eb00 060a 	add.w	r6, r0, sl
 8019fa2:	4286      	cmp	r6, r0
 8019fa4:	d906      	bls.n	8019fb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8019fa6:	f814 3b01 	ldrb.w	r3, [r4], #1
 8019faa:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8019fae:	f820 3b02 	strh.w	r3, [r0], #2
 8019fb2:	e7f6      	b.n	8019fa2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8019fb4:	882b      	ldrh	r3, [r5, #0]
 8019fb6:	eba3 0308 	sub.w	r3, r3, r8
 8019fba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019fbe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8019fc2:	eba3 0308 	sub.w	r3, r3, r8
 8019fc6:	441c      	add	r4, r3
 8019fc8:	e7e7      	b.n	8019f9a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8019fca:	4b04      	ldr	r3, [pc, #16]	@ (8019fdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8019fcc:	6818      	ldr	r0, [r3, #0]
 8019fce:	6803      	ldr	r3, [r0, #0]
 8019fd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019fd2:	4798      	blx	r3
 8019fd4:	b007      	add	sp, #28
 8019fd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019fda:	bf00      	nop
 8019fdc:	20013b6c 	.word	0x20013b6c
 8019fe0:	20013b64 	.word	0x20013b64

08019fe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8019fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fe8:	b091      	sub	sp, #68	@ 0x44
 8019fea:	4680      	mov	r8, r0
 8019fec:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8019ff0:	460f      	mov	r7, r1
 8019ff2:	4614      	mov	r4, r2
 8019ff4:	2d00      	cmp	r5, #0
 8019ff6:	d051      	beq.n	801a09c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8019ff8:	6810      	ldr	r0, [r2, #0]
 8019ffa:	6851      	ldr	r1, [r2, #4]
 8019ffc:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801a200 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801a000:	ae0c      	add	r6, sp, #48	@ 0x30
 801a002:	c603      	stmia	r6!, {r0, r1}
 801a004:	6818      	ldr	r0, [r3, #0]
 801a006:	6859      	ldr	r1, [r3, #4]
 801a008:	ae0e      	add	r6, sp, #56	@ 0x38
 801a00a:	c603      	stmia	r6!, {r0, r1}
 801a00c:	a80c      	add	r0, sp, #48	@ 0x30
 801a00e:	f7f6 ff23 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a012:	4621      	mov	r1, r4
 801a014:	a80e      	add	r0, sp, #56	@ 0x38
 801a016:	f7f6 ff47 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a01a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801a01e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801a022:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801a026:	f8d9 0000 	ldr.w	r0, [r9]
 801a02a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801a02e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801a032:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a036:	eb08 0401 	add.w	r4, r8, r1
 801a03a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801a03e:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801a204 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801a042:	440a      	add	r2, r1
 801a044:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801a048:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801a04c:	4413      	add	r3, r2
 801a04e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801a052:	6803      	ldr	r3, [r0, #0]
 801a054:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a056:	4798      	blx	r3
 801a058:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801a05c:	f8d9 0000 	ldr.w	r0, [r9]
 801a060:	d01f      	beq.n	801a0a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801a062:	2200      	movs	r2, #0
 801a064:	6801      	ldr	r1, [r0, #0]
 801a066:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801a06a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801a06e:	220b      	movs	r2, #11
 801a070:	9207      	str	r2, [sp, #28]
 801a072:	f8b8 2000 	ldrh.w	r2, [r8]
 801a076:	9206      	str	r2, [sp, #24]
 801a078:	2201      	movs	r2, #1
 801a07a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801a07e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801a082:	9203      	str	r2, [sp, #12]
 801a084:	fa1f f28a 	uxth.w	r2, sl
 801a088:	9202      	str	r2, [sp, #8]
 801a08a:	b2b6      	uxth	r6, r6
 801a08c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801a090:	9200      	str	r2, [sp, #0]
 801a092:	9601      	str	r6, [sp, #4]
 801a094:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 801a096:	463a      	mov	r2, r7
 801a098:	4621      	mov	r1, r4
 801a09a:	47a8      	blx	r5
 801a09c:	b011      	add	sp, #68	@ 0x44
 801a09e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a0a2:	6803      	ldr	r3, [r0, #0]
 801a0a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a0a6:	4798      	blx	r3
 801a0a8:	f8b8 2000 	ldrh.w	r2, [r8]
 801a0ac:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801a0b0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801a0b4:	2dff      	cmp	r5, #255	@ 0xff
 801a0b6:	fb02 1303 	mla	r3, r2, r3, r1
 801a0ba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a0be:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801a0c2:	fb0a fa02 	mul.w	sl, sl, r2
 801a0c6:	d062      	beq.n	801a18e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801a0c8:	ea6f 0c05 	mvn.w	ip, r5
 801a0cc:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801a0d0:	930a      	str	r3, [sp, #40]	@ 0x28
 801a0d2:	b2ad      	uxth	r5, r5
 801a0d4:	fa5f fc8c 	uxtb.w	ip, ip
 801a0d8:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801a0dc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a0de:	4298      	cmp	r0, r3
 801a0e0:	f080 8085 	bcs.w	801a1ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801a0e4:	eb00 0b09 	add.w	fp, r0, r9
 801a0e8:	4558      	cmp	r0, fp
 801a0ea:	d246      	bcs.n	801a17a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801a0ec:	f814 eb01 	ldrb.w	lr, [r4], #1
 801a0f0:	2303      	movs	r3, #3
 801a0f2:	2204      	movs	r2, #4
 801a0f4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801a0f8:	eb07 0a0e 	add.w	sl, r7, lr
 801a0fc:	8803      	ldrh	r3, [r0, #0]
 801a0fe:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801a102:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a106:	1219      	asrs	r1, r3, #8
 801a108:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a10c:	fb18 f805 	smulbb	r8, r8, r5
 801a110:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801a114:	10da      	asrs	r2, r3, #3
 801a116:	fb01 810c 	mla	r1, r1, ip, r8
 801a11a:	00db      	lsls	r3, r3, #3
 801a11c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a120:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801a124:	b2db      	uxtb	r3, r3
 801a126:	fb18 f805 	smulbb	r8, r8, r5
 801a12a:	fb1e fe05 	smulbb	lr, lr, r5
 801a12e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801a132:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801a136:	b289      	uxth	r1, r1
 801a138:	fb02 820c 	mla	r2, r2, ip, r8
 801a13c:	fb03 e30c 	mla	r3, r3, ip, lr
 801a140:	b292      	uxth	r2, r2
 801a142:	b29b      	uxth	r3, r3
 801a144:	f101 0801 	add.w	r8, r1, #1
 801a148:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801a14c:	f103 0e01 	add.w	lr, r3, #1
 801a150:	f102 0801 	add.w	r8, r2, #1
 801a154:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801a158:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801a15c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801a160:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a164:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a168:	ea4e 0101 	orr.w	r1, lr, r1
 801a16c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801a170:	ea41 0108 	orr.w	r1, r1, r8
 801a174:	f820 1b02 	strh.w	r1, [r0], #2
 801a178:	e7b6      	b.n	801a0e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801a17a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a17c:	881b      	ldrh	r3, [r3, #0]
 801a17e:	1b9b      	subs	r3, r3, r6
 801a180:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a184:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801a188:	1b9b      	subs	r3, r3, r6
 801a18a:	441c      	add	r4, r3
 801a18c:	e7a6      	b.n	801a0dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801a18e:	491b      	ldr	r1, [pc, #108]	@ (801a1fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801a190:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801a194:	2203      	movs	r2, #3
 801a196:	2504      	movs	r5, #4
 801a198:	4550      	cmp	r0, sl
 801a19a:	d228      	bcs.n	801a1ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801a19c:	eb00 0c09 	add.w	ip, r0, r9
 801a1a0:	4560      	cmp	r0, ip
 801a1a2:	4623      	mov	r3, r4
 801a1a4:	d219      	bcs.n	801a1da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801a1a6:	f893 e000 	ldrb.w	lr, [r3]
 801a1aa:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801a1ae:	eb07 0b0e 	add.w	fp, r7, lr
 801a1b2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a1b6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801a1ba:	f89b b001 	ldrb.w	fp, [fp, #1]
 801a1be:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801a1c2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801a1c6:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801a1ca:	ea43 030b 	orr.w	r3, r3, fp
 801a1ce:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801a1d2:	3401      	adds	r4, #1
 801a1d4:	f820 3b02 	strh.w	r3, [r0], #2
 801a1d8:	e7e2      	b.n	801a1a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801a1da:	f8b8 3000 	ldrh.w	r3, [r8]
 801a1de:	1b9b      	subs	r3, r3, r6
 801a1e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a1e4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801a1e8:	1b9b      	subs	r3, r3, r6
 801a1ea:	441c      	add	r4, r3
 801a1ec:	e7d4      	b.n	801a198 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801a1ee:	4b04      	ldr	r3, [pc, #16]	@ (801a200 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801a1f0:	6818      	ldr	r0, [r3, #0]
 801a1f2:	6803      	ldr	r3, [r0, #0]
 801a1f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a1f6:	4798      	blx	r3
 801a1f8:	e750      	b.n	801a09c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801a1fa:	bf00      	nop
 801a1fc:	fffff800 	.word	0xfffff800
 801a200:	20013b6c 	.word	0x20013b6c
 801a204:	20013b64 	.word	0x20013b64

0801a208 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801a208:	b4f0      	push	{r4, r5, r6, r7}
 801a20a:	460c      	mov	r4, r1
 801a20c:	4611      	mov	r1, r2
 801a20e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801a212:	780f      	ldrb	r7, [r1, #0]
 801a214:	784e      	ldrb	r6, [r1, #1]
 801a216:	2f01      	cmp	r7, #1
 801a218:	461a      	mov	r2, r3
 801a21a:	9b04      	ldr	r3, [sp, #16]
 801a21c:	d038      	beq.n	801a290 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801a21e:	d31f      	bcc.n	801a260 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801a220:	2f02      	cmp	r7, #2
 801a222:	d14d      	bne.n	801a2c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a224:	2e03      	cmp	r6, #3
 801a226:	d84b      	bhi.n	801a2c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a228:	e8df f006 	tbb	[pc, r6]
 801a22c:	17140702 	.word	0x17140702
 801a230:	9504      	str	r5, [sp, #16]
 801a232:	4620      	mov	r0, r4
 801a234:	bcf0      	pop	{r4, r5, r6, r7}
 801a236:	f7ff be09 	b.w	8019e4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801a23a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801a23c:	2800      	cmp	r0, #0
 801a23e:	d03f      	beq.n	801a2c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a240:	6806      	ldr	r6, [r0, #0]
 801a242:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801a246:	68b5      	ldr	r5, [r6, #8]
 801a248:	4613      	mov	r3, r2
 801a24a:	46ac      	mov	ip, r5
 801a24c:	460a      	mov	r2, r1
 801a24e:	4621      	mov	r1, r4
 801a250:	bcf0      	pop	{r4, r5, r6, r7}
 801a252:	4760      	bx	ip
 801a254:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801a258:	e7f0      	b.n	801a23c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801a25a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801a25e:	e7ed      	b.n	801a23c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801a260:	2e03      	cmp	r6, #3
 801a262:	d82d      	bhi.n	801a2c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a264:	e8df f006 	tbb	[pc, r6]
 801a268:	110e0702 	.word	0x110e0702
 801a26c:	9504      	str	r5, [sp, #16]
 801a26e:	4620      	mov	r0, r4
 801a270:	bcf0      	pop	{r4, r5, r6, r7}
 801a272:	f7ff bd05 	b.w	8019c80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801a276:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801a278:	b310      	cbz	r0, 801a2c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a27a:	6806      	ldr	r6, [r0, #0]
 801a27c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801a280:	68f5      	ldr	r5, [r6, #12]
 801a282:	e7e1      	b.n	801a248 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801a284:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801a288:	e7f6      	b.n	801a278 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801a28a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801a28e:	e7f3      	b.n	801a278 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801a290:	2e03      	cmp	r6, #3
 801a292:	d815      	bhi.n	801a2c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a294:	e8df f006 	tbb	[pc, r6]
 801a298:	110e0702 	.word	0x110e0702
 801a29c:	9504      	str	r5, [sp, #16]
 801a29e:	4620      	mov	r0, r4
 801a2a0:	bcf0      	pop	{r4, r5, r6, r7}
 801a2a2:	f7ff be9f 	b.w	8019fe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801a2a6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801a2a8:	b150      	cbz	r0, 801a2c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801a2aa:	6806      	ldr	r6, [r0, #0]
 801a2ac:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801a2b0:	6935      	ldr	r5, [r6, #16]
 801a2b2:	e7c9      	b.n	801a248 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801a2b4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801a2b8:	e7f6      	b.n	801a2a8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801a2ba:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801a2be:	e7f3      	b.n	801a2a8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801a2c0:	bcf0      	pop	{r4, r5, r6, r7}
 801a2c2:	4770      	bx	lr

0801a2c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801a2c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2c8:	4604      	mov	r4, r0
 801a2ca:	b087      	sub	sp, #28
 801a2cc:	6810      	ldr	r0, [r2, #0]
 801a2ce:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801a2d2:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801a50c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801a2d6:	460e      	mov	r6, r1
 801a2d8:	6851      	ldr	r1, [r2, #4]
 801a2da:	ad02      	add	r5, sp, #8
 801a2dc:	c503      	stmia	r5!, {r0, r1}
 801a2de:	6818      	ldr	r0, [r3, #0]
 801a2e0:	6859      	ldr	r1, [r3, #4]
 801a2e2:	ad04      	add	r5, sp, #16
 801a2e4:	4617      	mov	r7, r2
 801a2e6:	c503      	stmia	r5!, {r0, r1}
 801a2e8:	a802      	add	r0, sp, #8
 801a2ea:	f7f6 fdb5 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a2ee:	4639      	mov	r1, r7
 801a2f0:	a804      	add	r0, sp, #16
 801a2f2:	f7f6 fdd9 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a2f6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801a2fa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a2fe:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801a302:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801a306:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801a30a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a30e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801a312:	440e      	add	r6, r1
 801a314:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801a318:	440a      	add	r2, r1
 801a31a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a31e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a322:	4413      	add	r3, r2
 801a324:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a328:	4b77      	ldr	r3, [pc, #476]	@ (801a508 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801a32a:	6818      	ldr	r0, [r3, #0]
 801a32c:	6803      	ldr	r3, [r0, #0]
 801a32e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a330:	4798      	blx	r3
 801a332:	f8b9 b000 	ldrh.w	fp, [r9]
 801a336:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a33a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801a33e:	fb0b 2303 	mla	r3, fp, r3, r2
 801a342:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a346:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801a34a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801a34e:	fb05 f50b 	mul.w	r5, r5, fp
 801a352:	9300      	str	r3, [sp, #0]
 801a354:	d069      	beq.n	801a42a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801a356:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801a35a:	4558      	cmp	r0, fp
 801a35c:	f080 80cc 	bcs.w	801a4f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801a360:	9b00      	ldr	r3, [sp, #0]
 801a362:	18c3      	adds	r3, r0, r3
 801a364:	9301      	str	r3, [sp, #4]
 801a366:	4631      	mov	r1, r6
 801a368:	9b01      	ldr	r3, [sp, #4]
 801a36a:	4298      	cmp	r0, r3
 801a36c:	d24f      	bcs.n	801a40e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801a36e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801a372:	2a00      	cmp	r2, #0
 801a374:	d048      	beq.n	801a408 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801a376:	fb0a f202 	mul.w	r2, sl, r2
 801a37a:	1c53      	adds	r3, r2, #1
 801a37c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a380:	121b      	asrs	r3, r3, #8
 801a382:	d041      	beq.n	801a408 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801a384:	8802      	ldrh	r2, [r0, #0]
 801a386:	f8b4 c000 	ldrh.w	ip, [r4]
 801a38a:	b29e      	uxth	r6, r3
 801a38c:	1215      	asrs	r5, r2, #8
 801a38e:	43db      	mvns	r3, r3
 801a390:	b2db      	uxtb	r3, r3
 801a392:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a396:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a39a:	fb15 f503 	smulbb	r5, r5, r3
 801a39e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801a3a2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a3a6:	00d2      	lsls	r2, r2, #3
 801a3a8:	fb07 5706 	mla	r7, r7, r6, r5
 801a3ac:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801a3b0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a3b4:	b2d2      	uxtb	r2, r2
 801a3b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a3ba:	b2bf      	uxth	r7, r7
 801a3bc:	fb1e fe03 	smulbb	lr, lr, r3
 801a3c0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a3c4:	fa5f fc8c 	uxtb.w	ip, ip
 801a3c8:	fb12 f203 	smulbb	r2, r2, r3
 801a3cc:	fb05 e506 	mla	r5, r5, r6, lr
 801a3d0:	fb0c 2c06 	mla	ip, ip, r6, r2
 801a3d4:	f107 0e01 	add.w	lr, r7, #1
 801a3d8:	fa1f fc8c 	uxth.w	ip, ip
 801a3dc:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801a3e0:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801a3e4:	f10c 0701 	add.w	r7, ip, #1
 801a3e8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a3ec:	b2ad      	uxth	r5, r5
 801a3ee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a3f2:	ea47 070e 	orr.w	r7, r7, lr
 801a3f6:	f105 0e01 	add.w	lr, r5, #1
 801a3fa:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801a3fe:	096d      	lsrs	r5, r5, #5
 801a400:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a404:	432f      	orrs	r7, r5
 801a406:	8007      	strh	r7, [r0, #0]
 801a408:	3002      	adds	r0, #2
 801a40a:	3402      	adds	r4, #2
 801a40c:	e7ac      	b.n	801a368 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801a40e:	f8b9 3000 	ldrh.w	r3, [r9]
 801a412:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801a416:	eba3 0308 	sub.w	r3, r3, r8
 801a41a:	eba6 0608 	sub.w	r6, r6, r8
 801a41e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801a422:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a426:	440e      	add	r6, r1
 801a428:	e797      	b.n	801a35a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801a42a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801a42e:	42a8      	cmp	r0, r5
 801a430:	d262      	bcs.n	801a4f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801a432:	9b00      	ldr	r3, [sp, #0]
 801a434:	4631      	mov	r1, r6
 801a436:	eb00 0b03 	add.w	fp, r0, r3
 801a43a:	4558      	cmp	r0, fp
 801a43c:	d24e      	bcs.n	801a4dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801a43e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801a442:	b12b      	cbz	r3, 801a450 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801a444:	2bff      	cmp	r3, #255	@ 0xff
 801a446:	f8b4 e000 	ldrh.w	lr, [r4]
 801a44a:	d104      	bne.n	801a456 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801a44c:	f8a0 e000 	strh.w	lr, [r0]
 801a450:	3002      	adds	r0, #2
 801a452:	3402      	adds	r4, #2
 801a454:	e7f1      	b.n	801a43a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801a456:	8802      	ldrh	r2, [r0, #0]
 801a458:	b29f      	uxth	r7, r3
 801a45a:	1216      	asrs	r6, r2, #8
 801a45c:	43db      	mvns	r3, r3
 801a45e:	b2db      	uxtb	r3, r3
 801a460:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a464:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a468:	fb16 f603 	smulbb	r6, r6, r3
 801a46c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801a470:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a474:	00d2      	lsls	r2, r2, #3
 801a476:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a47a:	b2d2      	uxtb	r2, r2
 801a47c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a480:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801a484:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a488:	fb1a fa03 	smulbb	sl, sl, r3
 801a48c:	fa1f fc8c 	uxth.w	ip, ip
 801a490:	fb12 f303 	smulbb	r3, r2, r3
 801a494:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a498:	fa5f fe8e 	uxtb.w	lr, lr
 801a49c:	fb06 a607 	mla	r6, r6, r7, sl
 801a4a0:	f10c 0201 	add.w	r2, ip, #1
 801a4a4:	fb0e 3307 	mla	r3, lr, r7, r3
 801a4a8:	b2b6      	uxth	r6, r6
 801a4aa:	b29b      	uxth	r3, r3
 801a4ac:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a4b0:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801a4b4:	f106 0a01 	add.w	sl, r6, #1
 801a4b8:	f103 0c01 	add.w	ip, r3, #1
 801a4bc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a4c0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801a4c4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a4c8:	0976      	lsrs	r6, r6, #5
 801a4ca:	ea4c 0c02 	orr.w	ip, ip, r2
 801a4ce:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801a4d2:	ea4c 0c06 	orr.w	ip, ip, r6
 801a4d6:	f8a0 c000 	strh.w	ip, [r0]
 801a4da:	e7b9      	b.n	801a450 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801a4dc:	f8b9 3000 	ldrh.w	r3, [r9]
 801a4e0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801a4e4:	eba3 0308 	sub.w	r3, r3, r8
 801a4e8:	eba6 0608 	sub.w	r6, r6, r8
 801a4ec:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801a4f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a4f4:	440e      	add	r6, r1
 801a4f6:	e79a      	b.n	801a42e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801a4f8:	4b03      	ldr	r3, [pc, #12]	@ (801a508 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801a4fa:	6818      	ldr	r0, [r3, #0]
 801a4fc:	6803      	ldr	r3, [r0, #0]
 801a4fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a500:	4798      	blx	r3
 801a502:	b007      	add	sp, #28
 801a504:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a508:	20013b6c 	.word	0x20013b6c
 801a50c:	20013b64 	.word	0x20013b64

0801a510 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801a510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a514:	b089      	sub	sp, #36	@ 0x24
 801a516:	4607      	mov	r7, r0
 801a518:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801a51c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a51e:	4688      	mov	r8, r1
 801a520:	4692      	mov	sl, r2
 801a522:	4699      	mov	r9, r3
 801a524:	2e00      	cmp	r6, #0
 801a526:	d048      	beq.n	801a5ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a528:	4608      	mov	r0, r1
 801a52a:	f7fa f81d 	bl	8014568 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801a52e:	4605      	mov	r5, r0
 801a530:	4640      	mov	r0, r8
 801a532:	f7fa f84d 	bl	80145d0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801a536:	f8ad 000e 	strh.w	r0, [sp, #14]
 801a53a:	4640      	mov	r0, r8
 801a53c:	f8ad a008 	strh.w	sl, [sp, #8]
 801a540:	f8ad 500c 	strh.w	r5, [sp, #12]
 801a544:	f8ad 900a 	strh.w	r9, [sp, #10]
 801a548:	f7fa f900 	bl	801474c <_ZNK8touchgfx6Bitmap7getDataEv>
 801a54c:	4605      	mov	r5, r0
 801a54e:	4640      	mov	r0, r8
 801a550:	f7fa f92c 	bl	80147ac <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801a554:	4682      	mov	sl, r0
 801a556:	4640      	mov	r0, r8
 801a558:	f7fa f97c 	bl	8014854 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801a55c:	2810      	cmp	r0, #16
 801a55e:	d82c      	bhi.n	801a5ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a560:	e8df f010 	tbh	[pc, r0, lsl #1]
 801a564:	00ba00ca 	.word	0x00ba00ca
 801a568:	002b0011 	.word	0x002b0011
 801a56c:	002b002b 	.word	0x002b002b
 801a570:	002b002b 	.word	0x002b002b
 801a574:	002b002b 	.word	0x002b002b
 801a578:	00c1002b 	.word	0x00c1002b
 801a57c:	002b002b 	.word	0x002b002b
 801a580:	002b0180 	.word	0x002b0180
 801a584:	0173      	.short	0x0173
 801a586:	4bbc      	ldr	r3, [pc, #752]	@ (801a878 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801a588:	6818      	ldr	r0, [r3, #0]
 801a58a:	6803      	ldr	r3, [r0, #0]
 801a58c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a58e:	4798      	blx	r3
 801a590:	2eff      	cmp	r6, #255	@ 0xff
 801a592:	d101      	bne.n	801a598 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801a594:	0683      	lsls	r3, r0, #26
 801a596:	d506      	bpl.n	801a5a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801a598:	4633      	mov	r3, r6
 801a59a:	4622      	mov	r2, r4
 801a59c:	a902      	add	r1, sp, #8
 801a59e:	4628      	mov	r0, r5
 801a5a0:	f7ff f8fc 	bl	801979c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a5a4:	e009      	b.n	801a5ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a5a6:	4640      	mov	r0, r8
 801a5a8:	f7fa f898 	bl	80146dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a5ac:	b940      	cbnz	r0, 801a5c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801a5ae:	4623      	mov	r3, r4
 801a5b0:	aa02      	add	r2, sp, #8
 801a5b2:	4629      	mov	r1, r5
 801a5b4:	4638      	mov	r0, r7
 801a5b6:	f7ff f9d7 	bl	8019968 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801a5ba:	b009      	add	sp, #36	@ 0x24
 801a5bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5c0:	f10d 0918 	add.w	r9, sp, #24
 801a5c4:	4641      	mov	r1, r8
 801a5c6:	4648      	mov	r0, r9
 801a5c8:	f7fa f836 	bl	8014638 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801a5cc:	e899 0003 	ldmia.w	r9, {r0, r1}
 801a5d0:	f10d 0810 	add.w	r8, sp, #16
 801a5d4:	e888 0003 	stmia.w	r8, {r0, r1}
 801a5d8:	4640      	mov	r0, r8
 801a5da:	4621      	mov	r1, r4
 801a5dc:	f7f1 f87c 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 801a5e0:	4640      	mov	r0, r8
 801a5e2:	f7f1 f8bc 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 801a5e6:	2800      	cmp	r0, #0
 801a5e8:	d1d6      	bne.n	801a598 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801a5ea:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a5ee:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a5f2:	4293      	cmp	r3, r2
 801a5f4:	dd12      	ble.n	801a61c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801a5f6:	1a9b      	subs	r3, r3, r2
 801a5f8:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a5fc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a600:	f8ad 0018 	strh.w	r0, [sp, #24]
 801a604:	f8ad 201a 	strh.w	r2, [sp, #26]
 801a608:	f8ad 101c 	strh.w	r1, [sp, #28]
 801a60c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a610:	464a      	mov	r2, r9
 801a612:	4633      	mov	r3, r6
 801a614:	a902      	add	r1, sp, #8
 801a616:	4628      	mov	r0, r5
 801a618:	f7ff f8c0 	bl	801979c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a61c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801a620:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a624:	4293      	cmp	r3, r2
 801a626:	dd12      	ble.n	801a64e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801a628:	1a9b      	subs	r3, r3, r2
 801a62a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801a62e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801a632:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a636:	f8ad 001a 	strh.w	r0, [sp, #26]
 801a63a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a63e:	f8ad 101e 	strh.w	r1, [sp, #30]
 801a642:	23ff      	movs	r3, #255	@ 0xff
 801a644:	464a      	mov	r2, r9
 801a646:	a902      	add	r1, sp, #8
 801a648:	4628      	mov	r0, r5
 801a64a:	f7ff f8a7 	bl	801979c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a64e:	4643      	mov	r3, r8
 801a650:	aa02      	add	r2, sp, #8
 801a652:	4629      	mov	r1, r5
 801a654:	4638      	mov	r0, r7
 801a656:	f7ff f987 	bl	8019968 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801a65a:	88a2      	ldrh	r2, [r4, #4]
 801a65c:	8823      	ldrh	r3, [r4, #0]
 801a65e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801a662:	4413      	add	r3, r2
 801a664:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a668:	440a      	add	r2, r1
 801a66a:	b29b      	uxth	r3, r3
 801a66c:	b292      	uxth	r2, r2
 801a66e:	b211      	sxth	r1, r2
 801a670:	b218      	sxth	r0, r3
 801a672:	4288      	cmp	r0, r1
 801a674:	dd12      	ble.n	801a69c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801a676:	1a9b      	subs	r3, r3, r2
 801a678:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801a67c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801a680:	f8ad 1018 	strh.w	r1, [sp, #24]
 801a684:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a688:	f8ad 001e 	strh.w	r0, [sp, #30]
 801a68c:	23ff      	movs	r3, #255	@ 0xff
 801a68e:	464a      	mov	r2, r9
 801a690:	a902      	add	r1, sp, #8
 801a692:	4628      	mov	r0, r5
 801a694:	f8ad 601a 	strh.w	r6, [sp, #26]
 801a698:	f7ff f880 	bl	801979c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801a69c:	88e2      	ldrh	r2, [r4, #6]
 801a69e:	8863      	ldrh	r3, [r4, #2]
 801a6a0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801a6a4:	4413      	add	r3, r2
 801a6a6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801a6aa:	440a      	add	r2, r1
 801a6ac:	b29b      	uxth	r3, r3
 801a6ae:	b292      	uxth	r2, r2
 801a6b0:	b211      	sxth	r1, r2
 801a6b2:	b218      	sxth	r0, r3
 801a6b4:	4288      	cmp	r0, r1
 801a6b6:	dd80      	ble.n	801a5ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a6b8:	1a9b      	subs	r3, r3, r2
 801a6ba:	f9b4 6000 	ldrsh.w	r6, [r4]
 801a6be:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a6c2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a6c6:	f8ad 6018 	strh.w	r6, [sp, #24]
 801a6ca:	f8ad 101a 	strh.w	r1, [sp, #26]
 801a6ce:	f8ad 001c 	strh.w	r0, [sp, #28]
 801a6d2:	23ff      	movs	r3, #255	@ 0xff
 801a6d4:	464a      	mov	r2, r9
 801a6d6:	e761      	b.n	801a59c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801a6d8:	4633      	mov	r3, r6
 801a6da:	4622      	mov	r2, r4
 801a6dc:	a902      	add	r1, sp, #8
 801a6de:	4628      	mov	r0, r5
 801a6e0:	f7ff f9b2 	bl	8019a48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801a6e4:	e769      	b.n	801a5ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a6e6:	e9cd 4600 	strd	r4, r6, [sp]
 801a6ea:	ab02      	add	r3, sp, #8
 801a6ec:	4652      	mov	r2, sl
 801a6ee:	4629      	mov	r1, r5
 801a6f0:	4638      	mov	r0, r7
 801a6f2:	f7ff fd89 	bl	801a208 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801a6f6:	e760      	b.n	801a5ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a6f8:	4640      	mov	r0, r8
 801a6fa:	f7f9 ffef 	bl	80146dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801a6fe:	b948      	cbnz	r0, 801a714 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 801a700:	683b      	ldr	r3, [r7, #0]
 801a702:	e9cd 6000 	strd	r6, r0, [sp]
 801a706:	aa02      	add	r2, sp, #8
 801a708:	68de      	ldr	r6, [r3, #12]
 801a70a:	4629      	mov	r1, r5
 801a70c:	4623      	mov	r3, r4
 801a70e:	4638      	mov	r0, r7
 801a710:	47b0      	blx	r6
 801a712:	e752      	b.n	801a5ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a714:	f10d 0918 	add.w	r9, sp, #24
 801a718:	4641      	mov	r1, r8
 801a71a:	4648      	mov	r0, r9
 801a71c:	f7f9 ff8c 	bl	8014638 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801a720:	e899 0003 	ldmia.w	r9, {r0, r1}
 801a724:	f10d 0810 	add.w	r8, sp, #16
 801a728:	e888 0003 	stmia.w	r8, {r0, r1}
 801a72c:	4640      	mov	r0, r8
 801a72e:	4621      	mov	r1, r4
 801a730:	f7f0 ffd2 	bl	800b6d8 <_ZN8touchgfx4RectaNERKS0_>
 801a734:	4640      	mov	r0, r8
 801a736:	f7f1 f812 	bl	800b75e <_ZNK8touchgfx4Rect7isEmptyEv>
 801a73a:	b138      	cbz	r0, 801a74c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 801a73c:	9600      	str	r6, [sp, #0]
 801a73e:	4623      	mov	r3, r4
 801a740:	aa02      	add	r2, sp, #8
 801a742:	4651      	mov	r1, sl
 801a744:	4628      	mov	r0, r5
 801a746:	f7ff fdbd 	bl	801a2c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a74a:	e736      	b.n	801a5ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a74c:	683b      	ldr	r3, [r7, #0]
 801a74e:	e9cd 6000 	strd	r6, r0, [sp]
 801a752:	aa02      	add	r2, sp, #8
 801a754:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801a758:	4629      	mov	r1, r5
 801a75a:	4643      	mov	r3, r8
 801a75c:	4638      	mov	r0, r7
 801a75e:	47d8      	blx	fp
 801a760:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801a764:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a768:	4293      	cmp	r3, r2
 801a76a:	dd13      	ble.n	801a794 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 801a76c:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a770:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a774:	f8ad 0018 	strh.w	r0, [sp, #24]
 801a778:	1a9b      	subs	r3, r3, r2
 801a77a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801a77e:	f8ad 101c 	strh.w	r1, [sp, #28]
 801a782:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a786:	9600      	str	r6, [sp, #0]
 801a788:	464b      	mov	r3, r9
 801a78a:	aa02      	add	r2, sp, #8
 801a78c:	4651      	mov	r1, sl
 801a78e:	4628      	mov	r0, r5
 801a790:	f7ff fd98 	bl	801a2c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a794:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801a798:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a79c:	4293      	cmp	r3, r2
 801a79e:	dd13      	ble.n	801a7c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801a7a0:	1a9b      	subs	r3, r3, r2
 801a7a2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801a7a6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801a7aa:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a7ae:	f8ad 001a 	strh.w	r0, [sp, #26]
 801a7b2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a7b6:	f8ad 101e 	strh.w	r1, [sp, #30]
 801a7ba:	9600      	str	r6, [sp, #0]
 801a7bc:	464b      	mov	r3, r9
 801a7be:	aa02      	add	r2, sp, #8
 801a7c0:	4651      	mov	r1, sl
 801a7c2:	4628      	mov	r0, r5
 801a7c4:	f7ff fd7e 	bl	801a2c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a7c8:	88a2      	ldrh	r2, [r4, #4]
 801a7ca:	8823      	ldrh	r3, [r4, #0]
 801a7cc:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801a7d0:	4413      	add	r3, r2
 801a7d2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a7d6:	440a      	add	r2, r1
 801a7d8:	b29b      	uxth	r3, r3
 801a7da:	b292      	uxth	r2, r2
 801a7dc:	b211      	sxth	r1, r2
 801a7de:	b218      	sxth	r0, r3
 801a7e0:	4288      	cmp	r0, r1
 801a7e2:	dd13      	ble.n	801a80c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 801a7e4:	1a9b      	subs	r3, r3, r2
 801a7e6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801a7ea:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801a7ee:	f8ad 1018 	strh.w	r1, [sp, #24]
 801a7f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a7f6:	f8ad 001e 	strh.w	r0, [sp, #30]
 801a7fa:	9600      	str	r6, [sp, #0]
 801a7fc:	464b      	mov	r3, r9
 801a7fe:	aa02      	add	r2, sp, #8
 801a800:	4651      	mov	r1, sl
 801a802:	4628      	mov	r0, r5
 801a804:	f8ad 701a 	strh.w	r7, [sp, #26]
 801a808:	f7ff fd5c 	bl	801a2c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801a80c:	88e2      	ldrh	r2, [r4, #6]
 801a80e:	8863      	ldrh	r3, [r4, #2]
 801a810:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801a814:	4413      	add	r3, r2
 801a816:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801a81a:	440a      	add	r2, r1
 801a81c:	b29b      	uxth	r3, r3
 801a81e:	b292      	uxth	r2, r2
 801a820:	b211      	sxth	r1, r2
 801a822:	b218      	sxth	r0, r3
 801a824:	4288      	cmp	r0, r1
 801a826:	f77f aec8 	ble.w	801a5ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a82a:	f9b4 7000 	ldrsh.w	r7, [r4]
 801a82e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a832:	f8ad 7018 	strh.w	r7, [sp, #24]
 801a836:	1a9b      	subs	r3, r3, r2
 801a838:	f8ad 301e 	strh.w	r3, [sp, #30]
 801a83c:	f8ad 101a 	strh.w	r1, [sp, #26]
 801a840:	f8ad 001c 	strh.w	r0, [sp, #28]
 801a844:	9600      	str	r6, [sp, #0]
 801a846:	464b      	mov	r3, r9
 801a848:	e77a      	b.n	801a740 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801a84a:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801a84e:	2800      	cmp	r0, #0
 801a850:	f43f aeb3 	beq.w	801a5ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a854:	6803      	ldr	r3, [r0, #0]
 801a856:	9600      	str	r6, [sp, #0]
 801a858:	68de      	ldr	r6, [r3, #12]
 801a85a:	4623      	mov	r3, r4
 801a85c:	aa02      	add	r2, sp, #8
 801a85e:	4629      	mov	r1, r5
 801a860:	47b0      	blx	r6
 801a862:	e6aa      	b.n	801a5ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a864:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801a868:	2800      	cmp	r0, #0
 801a86a:	f43f aea6 	beq.w	801a5ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801a86e:	6803      	ldr	r3, [r0, #0]
 801a870:	9600      	str	r6, [sp, #0]
 801a872:	689e      	ldr	r6, [r3, #8]
 801a874:	e7f1      	b.n	801a85a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801a876:	bf00      	nop
 801a878:	20013b6c 	.word	0x20013b6c

0801a87c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801a87c:	b180      	cbz	r0, 801a8a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801a87e:	2903      	cmp	r1, #3
 801a880:	d81c      	bhi.n	801a8bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801a882:	e8df f001 	tbb	[pc, r1]
 801a886:	1d02      	.short	0x1d02
 801a888:	1f08      	.short	0x1f08
 801a88a:	4b10      	ldr	r3, [pc, #64]	@ (801a8cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801a88c:	8818      	ldrh	r0, [r3, #0]
 801a88e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a892:	4240      	negs	r0, r0
 801a894:	4770      	bx	lr
 801a896:	4b0d      	ldr	r3, [pc, #52]	@ (801a8cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801a898:	8818      	ldrh	r0, [r3, #0]
 801a89a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a89e:	4770      	bx	lr
 801a8a0:	2903      	cmp	r1, #3
 801a8a2:	d80b      	bhi.n	801a8bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801a8a4:	a301      	add	r3, pc, #4	@ (adr r3, 801a8ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801a8a6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801a8aa:	bf00      	nop
 801a8ac:	0801a8c1 	.word	0x0801a8c1
 801a8b0:	0801a897 	.word	0x0801a897
 801a8b4:	0801a8c5 	.word	0x0801a8c5
 801a8b8:	0801a88b 	.word	0x0801a88b
 801a8bc:	2000      	movs	r0, #0
 801a8be:	4770      	bx	lr
 801a8c0:	2001      	movs	r0, #1
 801a8c2:	4770      	bx	lr
 801a8c4:	f04f 30ff 	mov.w	r0, #4294967295
 801a8c8:	4770      	bx	lr
 801a8ca:	bf00      	nop
 801a8cc:	20013b64 	.word	0x20013b64

0801a8d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801a8d0:	b180      	cbz	r0, 801a8f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801a8d2:	2903      	cmp	r1, #3
 801a8d4:	d81c      	bhi.n	801a910 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801a8d6:	e8df f001 	tbb	[pc, r1]
 801a8da:	021d      	.short	0x021d
 801a8dc:	071f      	.short	0x071f
 801a8de:	4b10      	ldr	r3, [pc, #64]	@ (801a920 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801a8e0:	8818      	ldrh	r0, [r3, #0]
 801a8e2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a8e6:	4770      	bx	lr
 801a8e8:	4b0d      	ldr	r3, [pc, #52]	@ (801a920 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801a8ea:	8818      	ldrh	r0, [r3, #0]
 801a8ec:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801a8f0:	4240      	negs	r0, r0
 801a8f2:	4770      	bx	lr
 801a8f4:	2903      	cmp	r1, #3
 801a8f6:	d80b      	bhi.n	801a910 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801a8f8:	a301      	add	r3, pc, #4	@ (adr r3, 801a900 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801a8fa:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801a8fe:	bf00      	nop
 801a900:	0801a8df 	.word	0x0801a8df
 801a904:	0801a919 	.word	0x0801a919
 801a908:	0801a8e9 	.word	0x0801a8e9
 801a90c:	0801a915 	.word	0x0801a915
 801a910:	2000      	movs	r0, #0
 801a912:	4770      	bx	lr
 801a914:	2001      	movs	r0, #1
 801a916:	4770      	bx	lr
 801a918:	f04f 30ff 	mov.w	r0, #4294967295
 801a91c:	4770      	bx	lr
 801a91e:	bf00      	nop
 801a920:	20013b64 	.word	0x20013b64

0801a924 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801a924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a928:	b099      	sub	sp, #100	@ 0x64
 801a92a:	910d      	str	r1, [sp, #52]	@ 0x34
 801a92c:	a914      	add	r1, sp, #80	@ 0x50
 801a92e:	e881 000c 	stmia.w	r1, {r2, r3}
 801a932:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801a936:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a938:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801a93c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801a940:	9310      	str	r3, [sp, #64]	@ 0x40
 801a942:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801a946:	9308      	str	r3, [sp, #32]
 801a948:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801a94c:	9309      	str	r3, [sp, #36]	@ 0x24
 801a94e:	7b4b      	ldrb	r3, [r1, #13]
 801a950:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801a954:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801a958:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801a95c:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 801a95e:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 801a962:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801a966:	ea4f 1843 	mov.w	r8, r3, lsl #5
 801a96a:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 801a96e:	f891 8006 	ldrb.w	r8, [r1, #6]
 801a972:	ea58 0800 	orrs.w	r8, r8, r0
 801a976:	f000 81ce 	beq.w	801ad16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801a97a:	011b      	lsls	r3, r3, #4
 801a97c:	79c8      	ldrb	r0, [r1, #7]
 801a97e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801a982:	4303      	orrs	r3, r0
 801a984:	930c      	str	r3, [sp, #48]	@ 0x30
 801a986:	f000 81c6 	beq.w	801ad16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801a98a:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801a98e:	b29b      	uxth	r3, r3
 801a990:	2d00      	cmp	r5, #0
 801a992:	f000 812c 	beq.w	801abee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 801a996:	1aed      	subs	r5, r5, r3
 801a998:	b2ad      	uxth	r5, r5
 801a99a:	0429      	lsls	r1, r5, #16
 801a99c:	d502      	bpl.n	801a9a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 801a99e:	1b64      	subs	r4, r4, r5
 801a9a0:	b224      	sxth	r4, r4
 801a9a2:	2500      	movs	r5, #0
 801a9a4:	f9b2 0000 	ldrsh.w	r0, [r2]
 801a9a8:	8891      	ldrh	r1, [r2, #4]
 801a9aa:	4284      	cmp	r4, r0
 801a9ac:	b283      	uxth	r3, r0
 801a9ae:	bfb8      	it	lt
 801a9b0:	18ed      	addlt	r5, r5, r3
 801a9b2:	440b      	add	r3, r1
 801a9b4:	b21b      	sxth	r3, r3
 801a9b6:	930a      	str	r3, [sp, #40]	@ 0x28
 801a9b8:	88d3      	ldrh	r3, [r2, #6]
 801a9ba:	8852      	ldrh	r2, [r2, #2]
 801a9bc:	4413      	add	r3, r2
 801a9be:	b21b      	sxth	r3, r3
 801a9c0:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a9c2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a9c4:	930e      	str	r3, [sp, #56]	@ 0x38
 801a9c6:	bfb8      	it	lt
 801a9c8:	1b2c      	sublt	r4, r5, r4
 801a9ca:	4bb5      	ldr	r3, [pc, #724]	@ (801aca0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 801a9cc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a9ce:	f893 b000 	ldrb.w	fp, [r3]
 801a9d2:	bfbc      	itt	lt
 801a9d4:	b2a5      	uxthlt	r5, r4
 801a9d6:	4604      	movlt	r4, r0
 801a9d8:	4653      	mov	r3, sl
 801a9da:	4621      	mov	r1, r4
 801a9dc:	a814      	add	r0, sp, #80	@ 0x50
 801a9de:	f7f6 f8b0 	bl	8010b42 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801a9e2:	4621      	mov	r1, r4
 801a9e4:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801a9e8:	4653      	mov	r3, sl
 801a9ea:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a9ec:	a814      	add	r0, sp, #80	@ 0x50
 801a9ee:	f7f6 f8c5 	bl	8010b7c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801a9f2:	a918      	add	r1, sp, #96	@ 0x60
 801a9f4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801a9f8:	a817      	add	r0, sp, #92	@ 0x5c
 801a9fa:	f7f6 f9eb 	bl	8010dd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801a9fe:	f1ba 0f00 	cmp.w	sl, #0
 801aa02:	f040 80f7 	bne.w	801abf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 801aa06:	f1bb 0f01 	cmp.w	fp, #1
 801aa0a:	f040 80fb 	bne.w	801ac04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 801aa0e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801aa10:	2b00      	cmp	r3, #0
 801aa12:	f040 81a8 	bne.w	801ad66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 801aa16:	fa1f f288 	uxth.w	r2, r8
 801aa1a:	b905      	cbnz	r5, 801aa1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 801aa1c:	b15e      	cbz	r6, 801aa36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 801aa1e:	9808      	ldr	r0, [sp, #32]
 801aa20:	fb06 5302 	mla	r3, r6, r2, r5
 801aa24:	4343      	muls	r3, r0
 801aa26:	4631      	mov	r1, r6
 801aa28:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 801aa2c:	f003 0607 	and.w	r6, r3, #7
 801aa30:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801aa32:	1a5b      	subs	r3, r3, r1
 801aa34:	930e      	str	r3, [sp, #56]	@ 0x38
 801aa36:	f10b 31ff 	add.w	r1, fp, #4294967295
 801aa3a:	424b      	negs	r3, r1
 801aa3c:	414b      	adcs	r3, r1
 801aa3e:	4618      	mov	r0, r3
 801aa40:	4651      	mov	r1, sl
 801aa42:	930c      	str	r3, [sp, #48]	@ 0x30
 801aa44:	f7ff ff1a 	bl	801a87c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801aa48:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801aa4a:	4683      	mov	fp, r0
 801aa4c:	4618      	mov	r0, r3
 801aa4e:	f7ff ff3f 	bl	801a8d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801aa52:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801aa54:	4603      	mov	r3, r0
 801aa56:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801aa58:	eba1 0a00 	sub.w	sl, r1, r0
 801aa5c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801aa5e:	458a      	cmp	sl, r1
 801aa60:	bfa8      	it	ge
 801aa62:	468a      	movge	sl, r1
 801aa64:	f1ba 0f00 	cmp.w	sl, #0
 801aa68:	f340 8155 	ble.w	801ad16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801aa6c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801aa6e:	1b64      	subs	r4, r4, r5
 801aa70:	1b0c      	subs	r4, r1, r4
 801aa72:	4544      	cmp	r4, r8
 801aa74:	bfd4      	ite	le
 801aa76:	ebc5 0504 	rsble	r5, r5, r4
 801aa7a:	ebc5 0508 	rsbgt	r5, r5, r8
 801aa7e:	2d00      	cmp	r5, #0
 801aa80:	f340 8149 	ble.w	801ad16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801aa84:	9908      	ldr	r1, [sp, #32]
 801aa86:	1b52      	subs	r2, r2, r5
 801aa88:	434a      	muls	r2, r1
 801aa8a:	920e      	str	r2, [sp, #56]	@ 0x38
 801aa8c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801aa8e:	2a00      	cmp	r2, #0
 801aa90:	f040 8175 	bne.w	801ad7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 801aa94:	4a83      	ldr	r2, [pc, #524]	@ (801aca4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 801aa96:	930a      	str	r3, [sp, #40]	@ 0x28
 801aa98:	6810      	ldr	r0, [r2, #0]
 801aa9a:	6802      	ldr	r2, [r0, #0]
 801aa9c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801aa9e:	4790      	blx	r2
 801aaa0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801aaa2:	9908      	ldr	r1, [sp, #32]
 801aaa4:	2201      	movs	r2, #1
 801aaa6:	408a      	lsls	r2, r1
 801aaa8:	3a01      	subs	r2, #1
 801aaaa:	497f      	ldr	r1, [pc, #508]	@ (801aca8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 801aaac:	b2d2      	uxtb	r2, r2
 801aaae:	880c      	ldrh	r4, [r1, #0]
 801aab0:	920c      	str	r2, [sp, #48]	@ 0x30
 801aab2:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 801aab6:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 801aaba:	fb04 1202 	mla	r2, r4, r2, r1
 801aabe:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801aac2:	ea4f 2419 	mov.w	r4, r9, lsr #8
 801aac6:	920a      	str	r2, [sp, #40]	@ 0x28
 801aac8:	f3c9 4207 	ubfx	r2, r9, #16, #8
 801aacc:	9212      	str	r2, [sp, #72]	@ 0x48
 801aace:	b2e2      	uxtb	r2, r4
 801aad0:	9211      	str	r2, [sp, #68]	@ 0x44
 801aad2:	fa5f f289 	uxtb.w	r2, r9
 801aad6:	9210      	str	r2, [sp, #64]	@ 0x40
 801aad8:	4a74      	ldr	r2, [pc, #464]	@ (801acac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 801aada:	ea4f 1159 	mov.w	r1, r9, lsr #5
 801aade:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801aae2:	4022      	ands	r2, r4
 801aae4:	430a      	orrs	r2, r1
 801aae6:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 801aaea:	ea42 0209 	orr.w	r2, r2, r9
 801aaee:	ea4f 014b 	mov.w	r1, fp, lsl #1
 801aaf2:	b292      	uxth	r2, r2
 801aaf4:	fb05 3b1b 	mls	fp, r5, fp, r3
 801aaf8:	920f      	str	r2, [sp, #60]	@ 0x3c
 801aafa:	460b      	mov	r3, r1
 801aafc:	783a      	ldrb	r2, [r7, #0]
 801aafe:	910b      	str	r1, [sp, #44]	@ 0x2c
 801ab00:	436b      	muls	r3, r5
 801ab02:	4132      	asrs	r2, r6
 801ab04:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 801ab08:	b2d2      	uxtb	r2, r2
 801ab0a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ab0c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801ab10:	f0c0 8149 	bcc.w	801ada6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 801ab14:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801ab18:	46a9      	mov	r9, r5
 801ab1a:	f119 39ff 	adds.w	r9, r9, #4294967295
 801ab1e:	f0c0 8132 	bcc.w	801ad86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 801ab22:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ab24:	4013      	ands	r3, r2
 801ab26:	d054      	beq.n	801abd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 801ab28:	20ff      	movs	r0, #255	@ 0xff
 801ab2a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801ab2c:	fb90 f1f1 	sdiv	r1, r0, r1
 801ab30:	434b      	muls	r3, r1
 801ab32:	2bfe      	cmp	r3, #254	@ 0xfe
 801ab34:	dd03      	ble.n	801ab3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 801ab36:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801ab38:	4281      	cmp	r1, r0
 801ab3a:	f000 8122 	beq.w	801ad82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 801ab3e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801ab40:	f8b8 4000 	ldrh.w	r4, [r8]
 801ab44:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801ab46:	fb11 f303 	smulbb	r3, r1, r3
 801ab4a:	b29b      	uxth	r3, r3
 801ab4c:	1c59      	adds	r1, r3, #1
 801ab4e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ab52:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ab56:	fa1f fe83 	uxth.w	lr, r3
 801ab5a:	1221      	asrs	r1, r4, #8
 801ab5c:	fb10 fb0e 	smulbb	fp, r0, lr
 801ab60:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ab64:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801ab66:	43db      	mvns	r3, r3
 801ab68:	b2db      	uxtb	r3, r3
 801ab6a:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801ab6e:	fb01 b103 	mla	r1, r1, r3, fp
 801ab72:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 801ab76:	fb10 fb0e 	smulbb	fp, r0, lr
 801ab7a:	00e4      	lsls	r4, r4, #3
 801ab7c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801ab7e:	b2e4      	uxtb	r4, r4
 801ab80:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ab84:	fb10 fe0e 	smulbb	lr, r0, lr
 801ab88:	fb04 e403 	mla	r4, r4, r3, lr
 801ab8c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801ab90:	b289      	uxth	r1, r1
 801ab92:	b2a4      	uxth	r4, r4
 801ab94:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 801ab98:	fb0c bc03 	mla	ip, ip, r3, fp
 801ab9c:	1c4b      	adds	r3, r1, #1
 801ab9e:	f104 0b01 	add.w	fp, r4, #1
 801aba2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801aba6:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 801abaa:	fa1f fc8c 	uxth.w	ip, ip
 801abae:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801abb2:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801abb6:	ea4b 0101 	orr.w	r1, fp, r1
 801abba:	f10c 0b01 	add.w	fp, ip, #1
 801abbe:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 801abc2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801abc6:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801abca:	ea41 010b 	orr.w	r1, r1, fp
 801abce:	f8a8 1000 	strh.w	r1, [r8]
 801abd2:	9b08      	ldr	r3, [sp, #32]
 801abd4:	441e      	add	r6, r3
 801abd6:	b2b6      	uxth	r6, r6
 801abd8:	2e07      	cmp	r6, #7
 801abda:	bf98      	it	ls
 801abdc:	411a      	asrls	r2, r3
 801abde:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801abe0:	bf89      	itett	hi
 801abe2:	787a      	ldrbhi	r2, [r7, #1]
 801abe4:	b2d2      	uxtbls	r2, r2
 801abe6:	3701      	addhi	r7, #1
 801abe8:	2600      	movhi	r6, #0
 801abea:	4498      	add	r8, r3
 801abec:	e795      	b.n	801ab1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 801abee:	441c      	add	r4, r3
 801abf0:	b224      	sxth	r4, r4
 801abf2:	e6d7      	b.n	801a9a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 801abf4:	f1ba 0f01 	cmp.w	sl, #1
 801abf8:	f47f af09 	bne.w	801aa0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801abfc:	f1bb 0f01 	cmp.w	fp, #1
 801ac00:	f47f af05 	bne.w	801aa0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801ac04:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ac06:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801ac08:	1a99      	subs	r1, r3, r2
 801ac0a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ac0c:	1b9b      	subs	r3, r3, r6
 801ac0e:	4299      	cmp	r1, r3
 801ac10:	bfa8      	it	ge
 801ac12:	4619      	movge	r1, r3
 801ac14:	2900      	cmp	r1, #0
 801ac16:	9112      	str	r1, [sp, #72]	@ 0x48
 801ac18:	dd7d      	ble.n	801ad16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801ac1a:	4a22      	ldr	r2, [pc, #136]	@ (801aca4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 801ac1c:	9211      	str	r2, [sp, #68]	@ 0x44
 801ac1e:	6810      	ldr	r0, [r2, #0]
 801ac20:	6803      	ldr	r3, [r0, #0]
 801ac22:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801ac24:	4798      	blx	r3
 801ac26:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801ac2a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801ac2c:	d006      	beq.n	801ac3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801ac2e:	9b08      	ldr	r3, [sp, #32]
 801ac30:	2b04      	cmp	r3, #4
 801ac32:	d133      	bne.n	801ac9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 801ac34:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ac36:	3300      	adds	r3, #0
 801ac38:	bf18      	it	ne
 801ac3a:	2301      	movne	r3, #1
 801ac3c:	0582      	lsls	r2, r0, #22
 801ac3e:	fa1f fc88 	uxth.w	ip, r8
 801ac42:	f140 80b9 	bpl.w	801adb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 801ac46:	9808      	ldr	r0, [sp, #32]
 801ac48:	2808      	cmp	r0, #8
 801ac4a:	f040 80b5 	bne.w	801adb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 801ac4e:	2b00      	cmp	r3, #0
 801ac50:	d064      	beq.n	801ad1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 801ac52:	f10c 0c01 	add.w	ip, ip, #1
 801ac56:	f02c 0301 	bic.w	r3, ip, #1
 801ac5a:	b29b      	uxth	r3, r3
 801ac5c:	bb45      	cbnz	r5, 801acb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 801ac5e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ac60:	eb08 0004 	add.w	r0, r8, r4
 801ac64:	4290      	cmp	r0, r2
 801ac66:	dc23      	bgt.n	801acb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 801ac68:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ac6a:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 801ac6e:	6810      	ldr	r0, [r2, #0]
 801ac70:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801ac74:	6804      	ldr	r4, [r0, #0]
 801ac76:	9506      	str	r5, [sp, #24]
 801ac78:	f44f 7580 	mov.w	r5, #256	@ 0x100
 801ac7c:	9505      	str	r5, [sp, #20]
 801ac7e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ac80:	9302      	str	r3, [sp, #8]
 801ac82:	b289      	uxth	r1, r1
 801ac84:	e9cd 3100 	strd	r3, r1, [sp]
 801ac88:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801ac8c:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 801ac90:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 801ac92:	4673      	mov	r3, lr
 801ac94:	fb06 710c 	mla	r1, r6, ip, r7
 801ac98:	47a0      	blx	r4
 801ac9a:	e03c      	b.n	801ad16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801ac9c:	2300      	movs	r3, #0
 801ac9e:	e7cd      	b.n	801ac3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801aca0:	20013b62 	.word	0x20013b62
 801aca4:	20013b6c 	.word	0x20013b6c
 801aca8:	20013b64 	.word	0x20013b64
 801acac:	00fff800 	.word	0x00fff800
 801acb0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801acb2:	eba4 0e05 	sub.w	lr, r4, r5
 801acb6:	eba2 0e0e 	sub.w	lr, r2, lr
 801acba:	45c6      	cmp	lr, r8
 801acbc:	bfd4      	ite	le
 801acbe:	ebc5 0e0e 	rsble	lr, r5, lr
 801acc2:	ebc5 0e08 	rsbgt	lr, r5, r8
 801acc6:	f1be 0f00 	cmp.w	lr, #0
 801acca:	d024      	beq.n	801ad16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801accc:	07e8      	lsls	r0, r5, #31
 801acce:	f53f ae9e 	bmi.w	801aa0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801acd2:	f01e 0001 	ands.w	r0, lr, #1
 801acd6:	f47f ae9a 	bne.w	801aa0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801acda:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801acdc:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 801ace0:	6814      	ldr	r4, [r2, #0]
 801ace2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801ace6:	086d      	lsrs	r5, r5, #1
 801ace8:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 801acec:	fb06 560c 	mla	r6, r6, ip, r5
 801acf0:	6825      	ldr	r5, [r4, #0]
 801acf2:	9006      	str	r0, [sp, #24]
 801acf4:	f44f 7080 	mov.w	r0, #256	@ 0x100
 801acf8:	9005      	str	r0, [sp, #20]
 801acfa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801acfc:	9302      	str	r3, [sp, #8]
 801acfe:	e9cd 9003 	strd	r9, r0, [sp, #12]
 801ad02:	b289      	uxth	r1, r1
 801ad04:	fa1f f38e 	uxth.w	r3, lr
 801ad08:	9101      	str	r1, [sp, #4]
 801ad0a:	9300      	str	r3, [sp, #0]
 801ad0c:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 801ad0e:	4643      	mov	r3, r8
 801ad10:	19b9      	adds	r1, r7, r6
 801ad12:	4620      	mov	r0, r4
 801ad14:	47a8      	blx	r5
 801ad16:	b019      	add	sp, #100	@ 0x64
 801ad18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad1c:	4a28      	ldr	r2, [pc, #160]	@ (801adc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 801ad1e:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 801ad22:	6810      	ldr	r0, [r2, #0]
 801ad24:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801ad28:	f8d0 a000 	ldr.w	sl, [r0]
 801ad2c:	9306      	str	r3, [sp, #24]
 801ad2e:	f44f 7300 	mov.w	r3, #512	@ 0x200
 801ad32:	9305      	str	r3, [sp, #20]
 801ad34:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ad36:	f8cd c008 	str.w	ip, [sp, #8]
 801ad3a:	e9cd 9303 	strd	r9, r3, [sp, #12]
 801ad3e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ad40:	1b64      	subs	r4, r4, r5
 801ad42:	1b1c      	subs	r4, r3, r4
 801ad44:	fb06 5608 	mla	r6, r6, r8, r5
 801ad48:	4544      	cmp	r4, r8
 801ad4a:	bfd4      	ite	le
 801ad4c:	ebc5 0504 	rsble	r5, r5, r4
 801ad50:	ebc5 0508 	rsbgt	r5, r5, r8
 801ad54:	b289      	uxth	r1, r1
 801ad56:	b2ad      	uxth	r5, r5
 801ad58:	9101      	str	r1, [sp, #4]
 801ad5a:	9500      	str	r5, [sp, #0]
 801ad5c:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 801ad60:	4673      	mov	r3, lr
 801ad62:	19b9      	adds	r1, r7, r6
 801ad64:	e798      	b.n	801ac98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 801ad66:	2208      	movs	r2, #8
 801ad68:	9b08      	ldr	r3, [sp, #32]
 801ad6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad6e:	1e5a      	subs	r2, r3, #1
 801ad70:	4442      	add	r2, r8
 801ad72:	fb92 f2f3 	sdiv	r2, r2, r3
 801ad76:	fb12 f203 	smulbb	r2, r2, r3
 801ad7a:	b292      	uxth	r2, r2
 801ad7c:	e64d      	b.n	801aa1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 801ad7e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801ad80:	e68f      	b.n	801aaa2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 801ad82:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ad84:	e723      	b.n	801abce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 801ad86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ad88:	b143      	cbz	r3, 801ad9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 801ad8a:	441e      	add	r6, r3
 801ad8c:	b2b6      	uxth	r6, r6
 801ad8e:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 801ad92:	f006 0607 	and.w	r6, r6, #7
 801ad96:	783a      	ldrb	r2, [r7, #0]
 801ad98:	4132      	asrs	r2, r6
 801ad9a:	b2d2      	uxtb	r2, r2
 801ad9c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801ad9e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801ada0:	4419      	add	r1, r3
 801ada2:	910a      	str	r1, [sp, #40]	@ 0x28
 801ada4:	e6b2      	b.n	801ab0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 801ada6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ada8:	2b00      	cmp	r3, #0
 801adaa:	d1b4      	bne.n	801ad16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801adac:	4b04      	ldr	r3, [pc, #16]	@ (801adc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 801adae:	6818      	ldr	r0, [r3, #0]
 801adb0:	6803      	ldr	r3, [r0, #0]
 801adb2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801adb4:	4798      	blx	r3
 801adb6:	e7ae      	b.n	801ad16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801adb8:	2b00      	cmp	r3, #0
 801adba:	f47f af4a 	bne.w	801ac52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 801adbe:	e626      	b.n	801aa0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 801adc0:	20013b6c 	.word	0x20013b6c

0801adc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801adc4:	b538      	push	{r3, r4, r5, lr}
 801adc6:	4c15      	ldr	r4, [pc, #84]	@ (801ae1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801adc8:	7823      	ldrb	r3, [r4, #0]
 801adca:	f3bf 8f5b 	dmb	ish
 801adce:	07da      	lsls	r2, r3, #31
 801add0:	4605      	mov	r5, r0
 801add2:	d40b      	bmi.n	801adec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801add4:	4620      	mov	r0, r4
 801add6:	f008 fc48 	bl	802366a <__cxa_guard_acquire>
 801adda:	b138      	cbz	r0, 801adec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801addc:	4620      	mov	r0, r4
 801adde:	f008 fc50 	bl	8023682 <__cxa_guard_release>
 801ade2:	4a0f      	ldr	r2, [pc, #60]	@ (801ae20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801ade4:	490f      	ldr	r1, [pc, #60]	@ (801ae24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801ade6:	4810      	ldr	r0, [pc, #64]	@ (801ae28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801ade8:	f008 fc38 	bl	802365c <__aeabi_atexit>
 801adec:	4c0f      	ldr	r4, [pc, #60]	@ (801ae2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801adee:	7823      	ldrb	r3, [r4, #0]
 801adf0:	f3bf 8f5b 	dmb	ish
 801adf4:	07db      	lsls	r3, r3, #31
 801adf6:	d40b      	bmi.n	801ae10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801adf8:	4620      	mov	r0, r4
 801adfa:	f008 fc36 	bl	802366a <__cxa_guard_acquire>
 801adfe:	b138      	cbz	r0, 801ae10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801ae00:	4620      	mov	r0, r4
 801ae02:	f008 fc3e 	bl	8023682 <__cxa_guard_release>
 801ae06:	4a06      	ldr	r2, [pc, #24]	@ (801ae20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801ae08:	4909      	ldr	r1, [pc, #36]	@ (801ae30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801ae0a:	480a      	ldr	r0, [pc, #40]	@ (801ae34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801ae0c:	f008 fc26 	bl	802365c <__aeabi_atexit>
 801ae10:	4b05      	ldr	r3, [pc, #20]	@ (801ae28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801ae12:	616b      	str	r3, [r5, #20]
 801ae14:	4b07      	ldr	r3, [pc, #28]	@ (801ae34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801ae16:	61ab      	str	r3, [r5, #24]
 801ae18:	bd38      	pop	{r3, r4, r5, pc}
 801ae1a:	bf00      	nop
 801ae1c:	20013c50 	.word	0x20013c50
 801ae20:	20000000 	.word	0x20000000
 801ae24:	08016ecd 	.word	0x08016ecd
 801ae28:	200001e8 	.word	0x200001e8
 801ae2c:	20013c54 	.word	0x20013c54
 801ae30:	08016ecb 	.word	0x08016ecb
 801ae34:	200001ec 	.word	0x200001ec

0801ae38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801ae38:	b538      	push	{r3, r4, r5, lr}
 801ae3a:	4c15      	ldr	r4, [pc, #84]	@ (801ae90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801ae3c:	7823      	ldrb	r3, [r4, #0]
 801ae3e:	f3bf 8f5b 	dmb	ish
 801ae42:	07da      	lsls	r2, r3, #31
 801ae44:	4605      	mov	r5, r0
 801ae46:	d40b      	bmi.n	801ae60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801ae48:	4620      	mov	r0, r4
 801ae4a:	f008 fc0e 	bl	802366a <__cxa_guard_acquire>
 801ae4e:	b138      	cbz	r0, 801ae60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801ae50:	4620      	mov	r0, r4
 801ae52:	f008 fc16 	bl	8023682 <__cxa_guard_release>
 801ae56:	4a0f      	ldr	r2, [pc, #60]	@ (801ae94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801ae58:	490f      	ldr	r1, [pc, #60]	@ (801ae98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801ae5a:	4810      	ldr	r0, [pc, #64]	@ (801ae9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801ae5c:	f008 fbfe 	bl	802365c <__aeabi_atexit>
 801ae60:	4c0f      	ldr	r4, [pc, #60]	@ (801aea0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801ae62:	7823      	ldrb	r3, [r4, #0]
 801ae64:	f3bf 8f5b 	dmb	ish
 801ae68:	07db      	lsls	r3, r3, #31
 801ae6a:	d40b      	bmi.n	801ae84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801ae6c:	4620      	mov	r0, r4
 801ae6e:	f008 fbfc 	bl	802366a <__cxa_guard_acquire>
 801ae72:	b138      	cbz	r0, 801ae84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801ae74:	4620      	mov	r0, r4
 801ae76:	f008 fc04 	bl	8023682 <__cxa_guard_release>
 801ae7a:	4a06      	ldr	r2, [pc, #24]	@ (801ae94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801ae7c:	4909      	ldr	r1, [pc, #36]	@ (801aea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801ae7e:	480a      	ldr	r0, [pc, #40]	@ (801aea8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801ae80:	f008 fbec 	bl	802365c <__aeabi_atexit>
 801ae84:	4b05      	ldr	r3, [pc, #20]	@ (801ae9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801ae86:	60eb      	str	r3, [r5, #12]
 801ae88:	4b07      	ldr	r3, [pc, #28]	@ (801aea8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801ae8a:	612b      	str	r3, [r5, #16]
 801ae8c:	bd38      	pop	{r3, r4, r5, pc}
 801ae8e:	bf00      	nop
 801ae90:	20013c28 	.word	0x20013c28
 801ae94:	20000000 	.word	0x20000000
 801ae98:	08016ed1 	.word	0x08016ed1
 801ae9c:	200001c0 	.word	0x200001c0
 801aea0:	20013c2c 	.word	0x20013c2c
 801aea4:	08016ecf 	.word	0x08016ecf
 801aea8:	200001c4 	.word	0x200001c4

0801aeac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801aeac:	b510      	push	{r4, lr}
 801aeae:	4604      	mov	r4, r0
 801aeb0:	f7ff ff88 	bl	801adc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801aeb4:	4620      	mov	r0, r4
 801aeb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801aeba:	f7ff bfbd 	b.w	801ae38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801aec0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801aec0:	b538      	push	{r3, r4, r5, lr}
 801aec2:	4c15      	ldr	r4, [pc, #84]	@ (801af18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801aec4:	7823      	ldrb	r3, [r4, #0]
 801aec6:	f3bf 8f5b 	dmb	ish
 801aeca:	07da      	lsls	r2, r3, #31
 801aecc:	4605      	mov	r5, r0
 801aece:	d40b      	bmi.n	801aee8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801aed0:	4620      	mov	r0, r4
 801aed2:	f008 fbca 	bl	802366a <__cxa_guard_acquire>
 801aed6:	b138      	cbz	r0, 801aee8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801aed8:	4620      	mov	r0, r4
 801aeda:	f008 fbd2 	bl	8023682 <__cxa_guard_release>
 801aede:	4a0f      	ldr	r2, [pc, #60]	@ (801af1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801aee0:	490f      	ldr	r1, [pc, #60]	@ (801af20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801aee2:	4810      	ldr	r0, [pc, #64]	@ (801af24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801aee4:	f008 fbba 	bl	802365c <__aeabi_atexit>
 801aee8:	4c0f      	ldr	r4, [pc, #60]	@ (801af28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801aeea:	7823      	ldrb	r3, [r4, #0]
 801aeec:	f3bf 8f5b 	dmb	ish
 801aef0:	07db      	lsls	r3, r3, #31
 801aef2:	d40b      	bmi.n	801af0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801aef4:	4620      	mov	r0, r4
 801aef6:	f008 fbb8 	bl	802366a <__cxa_guard_acquire>
 801aefa:	b138      	cbz	r0, 801af0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801aefc:	4620      	mov	r0, r4
 801aefe:	f008 fbc0 	bl	8023682 <__cxa_guard_release>
 801af02:	4a06      	ldr	r2, [pc, #24]	@ (801af1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801af04:	4909      	ldr	r1, [pc, #36]	@ (801af2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801af06:	480a      	ldr	r0, [pc, #40]	@ (801af30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801af08:	f008 fba8 	bl	802365c <__aeabi_atexit>
 801af0c:	4b05      	ldr	r3, [pc, #20]	@ (801af24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801af0e:	626b      	str	r3, [r5, #36]	@ 0x24
 801af10:	4b07      	ldr	r3, [pc, #28]	@ (801af30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801af12:	62ab      	str	r3, [r5, #40]	@ 0x28
 801af14:	bd38      	pop	{r3, r4, r5, pc}
 801af16:	bf00      	nop
 801af18:	20013c58 	.word	0x20013c58
 801af1c:	20000000 	.word	0x20000000
 801af20:	08016ec5 	.word	0x08016ec5
 801af24:	200001f0 	.word	0x200001f0
 801af28:	20013c5c 	.word	0x20013c5c
 801af2c:	08016ec3 	.word	0x08016ec3
 801af30:	200001f4 	.word	0x200001f4

0801af34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801af34:	b538      	push	{r3, r4, r5, lr}
 801af36:	4c15      	ldr	r4, [pc, #84]	@ (801af8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801af38:	7823      	ldrb	r3, [r4, #0]
 801af3a:	f3bf 8f5b 	dmb	ish
 801af3e:	07da      	lsls	r2, r3, #31
 801af40:	4605      	mov	r5, r0
 801af42:	d40b      	bmi.n	801af5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801af44:	4620      	mov	r0, r4
 801af46:	f008 fb90 	bl	802366a <__cxa_guard_acquire>
 801af4a:	b138      	cbz	r0, 801af5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801af4c:	4620      	mov	r0, r4
 801af4e:	f008 fb98 	bl	8023682 <__cxa_guard_release>
 801af52:	4a0f      	ldr	r2, [pc, #60]	@ (801af90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801af54:	490f      	ldr	r1, [pc, #60]	@ (801af94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801af56:	4810      	ldr	r0, [pc, #64]	@ (801af98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801af58:	f008 fb80 	bl	802365c <__aeabi_atexit>
 801af5c:	4c0f      	ldr	r4, [pc, #60]	@ (801af9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801af5e:	7823      	ldrb	r3, [r4, #0]
 801af60:	f3bf 8f5b 	dmb	ish
 801af64:	07db      	lsls	r3, r3, #31
 801af66:	d40b      	bmi.n	801af80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801af68:	4620      	mov	r0, r4
 801af6a:	f008 fb7e 	bl	802366a <__cxa_guard_acquire>
 801af6e:	b138      	cbz	r0, 801af80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801af70:	4620      	mov	r0, r4
 801af72:	f008 fb86 	bl	8023682 <__cxa_guard_release>
 801af76:	4a06      	ldr	r2, [pc, #24]	@ (801af90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801af78:	4909      	ldr	r1, [pc, #36]	@ (801afa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801af7a:	480a      	ldr	r0, [pc, #40]	@ (801afa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801af7c:	f008 fb6e 	bl	802365c <__aeabi_atexit>
 801af80:	4b05      	ldr	r3, [pc, #20]	@ (801af98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801af82:	61eb      	str	r3, [r5, #28]
 801af84:	4b07      	ldr	r3, [pc, #28]	@ (801afa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801af86:	622b      	str	r3, [r5, #32]
 801af88:	bd38      	pop	{r3, r4, r5, pc}
 801af8a:	bf00      	nop
 801af8c:	20013c30 	.word	0x20013c30
 801af90:	20000000 	.word	0x20000000
 801af94:	08016ec9 	.word	0x08016ec9
 801af98:	200001c8 	.word	0x200001c8
 801af9c:	20013c34 	.word	0x20013c34
 801afa0:	08016ec7 	.word	0x08016ec7
 801afa4:	200001cc 	.word	0x200001cc

0801afa8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801afa8:	b510      	push	{r4, lr}
 801afaa:	4604      	mov	r4, r0
 801afac:	f7ff ff88 	bl	801aec0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801afb0:	4620      	mov	r0, r4
 801afb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801afb6:	f7ff bfbd 	b.w	801af34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801afbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801afbc:	b538      	push	{r3, r4, r5, lr}
 801afbe:	4c15      	ldr	r4, [pc, #84]	@ (801b014 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801afc0:	7823      	ldrb	r3, [r4, #0]
 801afc2:	f3bf 8f5b 	dmb	ish
 801afc6:	07da      	lsls	r2, r3, #31
 801afc8:	4605      	mov	r5, r0
 801afca:	d40b      	bmi.n	801afe4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801afcc:	4620      	mov	r0, r4
 801afce:	f008 fb4c 	bl	802366a <__cxa_guard_acquire>
 801afd2:	b138      	cbz	r0, 801afe4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801afd4:	4620      	mov	r0, r4
 801afd6:	f008 fb54 	bl	8023682 <__cxa_guard_release>
 801afda:	4a0f      	ldr	r2, [pc, #60]	@ (801b018 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801afdc:	490f      	ldr	r1, [pc, #60]	@ (801b01c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801afde:	4810      	ldr	r0, [pc, #64]	@ (801b020 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801afe0:	f008 fb3c 	bl	802365c <__aeabi_atexit>
 801afe4:	4c0f      	ldr	r4, [pc, #60]	@ (801b024 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801afe6:	7823      	ldrb	r3, [r4, #0]
 801afe8:	f3bf 8f5b 	dmb	ish
 801afec:	07db      	lsls	r3, r3, #31
 801afee:	d40b      	bmi.n	801b008 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801aff0:	4620      	mov	r0, r4
 801aff2:	f008 fb3a 	bl	802366a <__cxa_guard_acquire>
 801aff6:	b138      	cbz	r0, 801b008 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801aff8:	4620      	mov	r0, r4
 801affa:	f008 fb42 	bl	8023682 <__cxa_guard_release>
 801affe:	4a06      	ldr	r2, [pc, #24]	@ (801b018 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801b000:	4909      	ldr	r1, [pc, #36]	@ (801b028 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801b002:	480a      	ldr	r0, [pc, #40]	@ (801b02c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801b004:	f008 fb2a 	bl	802365c <__aeabi_atexit>
 801b008:	4b05      	ldr	r3, [pc, #20]	@ (801b020 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801b00a:	636b      	str	r3, [r5, #52]	@ 0x34
 801b00c:	4b07      	ldr	r3, [pc, #28]	@ (801b02c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801b00e:	63ab      	str	r3, [r5, #56]	@ 0x38
 801b010:	bd38      	pop	{r3, r4, r5, pc}
 801b012:	bf00      	nop
 801b014:	20013c68 	.word	0x20013c68
 801b018:	20000000 	.word	0x20000000
 801b01c:	08016ebd 	.word	0x08016ebd
 801b020:	20000200 	.word	0x20000200
 801b024:	20013c6c 	.word	0x20013c6c
 801b028:	08016ebb 	.word	0x08016ebb
 801b02c:	20000204 	.word	0x20000204

0801b030 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801b030:	b538      	push	{r3, r4, r5, lr}
 801b032:	4c15      	ldr	r4, [pc, #84]	@ (801b088 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801b034:	7823      	ldrb	r3, [r4, #0]
 801b036:	f3bf 8f5b 	dmb	ish
 801b03a:	07da      	lsls	r2, r3, #31
 801b03c:	4605      	mov	r5, r0
 801b03e:	d40b      	bmi.n	801b058 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801b040:	4620      	mov	r0, r4
 801b042:	f008 fb12 	bl	802366a <__cxa_guard_acquire>
 801b046:	b138      	cbz	r0, 801b058 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801b048:	4620      	mov	r0, r4
 801b04a:	f008 fb1a 	bl	8023682 <__cxa_guard_release>
 801b04e:	4a0f      	ldr	r2, [pc, #60]	@ (801b08c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801b050:	490f      	ldr	r1, [pc, #60]	@ (801b090 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801b052:	4810      	ldr	r0, [pc, #64]	@ (801b094 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801b054:	f008 fb02 	bl	802365c <__aeabi_atexit>
 801b058:	4c0f      	ldr	r4, [pc, #60]	@ (801b098 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801b05a:	7823      	ldrb	r3, [r4, #0]
 801b05c:	f3bf 8f5b 	dmb	ish
 801b060:	07db      	lsls	r3, r3, #31
 801b062:	d40b      	bmi.n	801b07c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801b064:	4620      	mov	r0, r4
 801b066:	f008 fb00 	bl	802366a <__cxa_guard_acquire>
 801b06a:	b138      	cbz	r0, 801b07c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801b06c:	4620      	mov	r0, r4
 801b06e:	f008 fb08 	bl	8023682 <__cxa_guard_release>
 801b072:	4a06      	ldr	r2, [pc, #24]	@ (801b08c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801b074:	4909      	ldr	r1, [pc, #36]	@ (801b09c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801b076:	480a      	ldr	r0, [pc, #40]	@ (801b0a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801b078:	f008 faf0 	bl	802365c <__aeabi_atexit>
 801b07c:	4b05      	ldr	r3, [pc, #20]	@ (801b094 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801b07e:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801b080:	4b07      	ldr	r3, [pc, #28]	@ (801b0a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801b082:	632b      	str	r3, [r5, #48]	@ 0x30
 801b084:	bd38      	pop	{r3, r4, r5, pc}
 801b086:	bf00      	nop
 801b088:	20013c38 	.word	0x20013c38
 801b08c:	20000000 	.word	0x20000000
 801b090:	08016ec1 	.word	0x08016ec1
 801b094:	200001d0 	.word	0x200001d0
 801b098:	20013c3c 	.word	0x20013c3c
 801b09c:	08016ebf 	.word	0x08016ebf
 801b0a0:	200001d4 	.word	0x200001d4

0801b0a4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801b0a4:	b510      	push	{r4, lr}
 801b0a6:	4604      	mov	r4, r0
 801b0a8:	f7ff ff88 	bl	801afbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801b0ac:	4620      	mov	r0, r4
 801b0ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b0b2:	f7ff bfbd 	b.w	801b030 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801b0b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801b0b8:	b538      	push	{r3, r4, r5, lr}
 801b0ba:	4c15      	ldr	r4, [pc, #84]	@ (801b110 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801b0bc:	7823      	ldrb	r3, [r4, #0]
 801b0be:	f3bf 8f5b 	dmb	ish
 801b0c2:	07da      	lsls	r2, r3, #31
 801b0c4:	4605      	mov	r5, r0
 801b0c6:	d40b      	bmi.n	801b0e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801b0c8:	4620      	mov	r0, r4
 801b0ca:	f008 face 	bl	802366a <__cxa_guard_acquire>
 801b0ce:	b138      	cbz	r0, 801b0e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801b0d0:	4620      	mov	r0, r4
 801b0d2:	f008 fad6 	bl	8023682 <__cxa_guard_release>
 801b0d6:	4a0f      	ldr	r2, [pc, #60]	@ (801b114 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801b0d8:	490f      	ldr	r1, [pc, #60]	@ (801b118 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801b0da:	4810      	ldr	r0, [pc, #64]	@ (801b11c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801b0dc:	f008 fabe 	bl	802365c <__aeabi_atexit>
 801b0e0:	4c0f      	ldr	r4, [pc, #60]	@ (801b120 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801b0e2:	7823      	ldrb	r3, [r4, #0]
 801b0e4:	f3bf 8f5b 	dmb	ish
 801b0e8:	07db      	lsls	r3, r3, #31
 801b0ea:	d40b      	bmi.n	801b104 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801b0ec:	4620      	mov	r0, r4
 801b0ee:	f008 fabc 	bl	802366a <__cxa_guard_acquire>
 801b0f2:	b138      	cbz	r0, 801b104 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801b0f4:	4620      	mov	r0, r4
 801b0f6:	f008 fac4 	bl	8023682 <__cxa_guard_release>
 801b0fa:	4a06      	ldr	r2, [pc, #24]	@ (801b114 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801b0fc:	4909      	ldr	r1, [pc, #36]	@ (801b124 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801b0fe:	480a      	ldr	r0, [pc, #40]	@ (801b128 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801b100:	f008 faac 	bl	802365c <__aeabi_atexit>
 801b104:	4b05      	ldr	r3, [pc, #20]	@ (801b11c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801b106:	656b      	str	r3, [r5, #84]	@ 0x54
 801b108:	4b07      	ldr	r3, [pc, #28]	@ (801b128 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801b10a:	65ab      	str	r3, [r5, #88]	@ 0x58
 801b10c:	bd38      	pop	{r3, r4, r5, pc}
 801b10e:	bf00      	nop
 801b110:	20013c70 	.word	0x20013c70
 801b114:	20000000 	.word	0x20000000
 801b118:	08016ead 	.word	0x08016ead
 801b11c:	20000208 	.word	0x20000208
 801b120:	20013c74 	.word	0x20013c74
 801b124:	08016eab 	.word	0x08016eab
 801b128:	2000020c 	.word	0x2000020c

0801b12c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801b12c:	b538      	push	{r3, r4, r5, lr}
 801b12e:	4c15      	ldr	r4, [pc, #84]	@ (801b184 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801b130:	7823      	ldrb	r3, [r4, #0]
 801b132:	f3bf 8f5b 	dmb	ish
 801b136:	07da      	lsls	r2, r3, #31
 801b138:	4605      	mov	r5, r0
 801b13a:	d40b      	bmi.n	801b154 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801b13c:	4620      	mov	r0, r4
 801b13e:	f008 fa94 	bl	802366a <__cxa_guard_acquire>
 801b142:	b138      	cbz	r0, 801b154 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801b144:	4620      	mov	r0, r4
 801b146:	f008 fa9c 	bl	8023682 <__cxa_guard_release>
 801b14a:	4a0f      	ldr	r2, [pc, #60]	@ (801b188 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801b14c:	490f      	ldr	r1, [pc, #60]	@ (801b18c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801b14e:	4810      	ldr	r0, [pc, #64]	@ (801b190 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801b150:	f008 fa84 	bl	802365c <__aeabi_atexit>
 801b154:	4c0f      	ldr	r4, [pc, #60]	@ (801b194 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801b156:	7823      	ldrb	r3, [r4, #0]
 801b158:	f3bf 8f5b 	dmb	ish
 801b15c:	07db      	lsls	r3, r3, #31
 801b15e:	d40b      	bmi.n	801b178 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801b160:	4620      	mov	r0, r4
 801b162:	f008 fa82 	bl	802366a <__cxa_guard_acquire>
 801b166:	b138      	cbz	r0, 801b178 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801b168:	4620      	mov	r0, r4
 801b16a:	f008 fa8a 	bl	8023682 <__cxa_guard_release>
 801b16e:	4a06      	ldr	r2, [pc, #24]	@ (801b188 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801b170:	4909      	ldr	r1, [pc, #36]	@ (801b198 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801b172:	480a      	ldr	r0, [pc, #40]	@ (801b19c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801b174:	f008 fa72 	bl	802365c <__aeabi_atexit>
 801b178:	4b05      	ldr	r3, [pc, #20]	@ (801b190 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801b17a:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801b17c:	4b07      	ldr	r3, [pc, #28]	@ (801b19c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801b17e:	652b      	str	r3, [r5, #80]	@ 0x50
 801b180:	bd38      	pop	{r3, r4, r5, pc}
 801b182:	bf00      	nop
 801b184:	20013c78 	.word	0x20013c78
 801b188:	20000000 	.word	0x20000000
 801b18c:	08016eb1 	.word	0x08016eb1
 801b190:	20000210 	.word	0x20000210
 801b194:	20013c7c 	.word	0x20013c7c
 801b198:	08016eaf 	.word	0x08016eaf
 801b19c:	20000214 	.word	0x20000214

0801b1a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801b1a0:	b538      	push	{r3, r4, r5, lr}
 801b1a2:	4c15      	ldr	r4, [pc, #84]	@ (801b1f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801b1a4:	7823      	ldrb	r3, [r4, #0]
 801b1a6:	f3bf 8f5b 	dmb	ish
 801b1aa:	07da      	lsls	r2, r3, #31
 801b1ac:	4605      	mov	r5, r0
 801b1ae:	d40b      	bmi.n	801b1c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801b1b0:	4620      	mov	r0, r4
 801b1b2:	f008 fa5a 	bl	802366a <__cxa_guard_acquire>
 801b1b6:	b138      	cbz	r0, 801b1c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801b1b8:	4620      	mov	r0, r4
 801b1ba:	f008 fa62 	bl	8023682 <__cxa_guard_release>
 801b1be:	4a0f      	ldr	r2, [pc, #60]	@ (801b1fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801b1c0:	490f      	ldr	r1, [pc, #60]	@ (801b200 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801b1c2:	4810      	ldr	r0, [pc, #64]	@ (801b204 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801b1c4:	f008 fa4a 	bl	802365c <__aeabi_atexit>
 801b1c8:	4c0f      	ldr	r4, [pc, #60]	@ (801b208 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801b1ca:	7823      	ldrb	r3, [r4, #0]
 801b1cc:	f3bf 8f5b 	dmb	ish
 801b1d0:	07db      	lsls	r3, r3, #31
 801b1d2:	d40b      	bmi.n	801b1ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801b1d4:	4620      	mov	r0, r4
 801b1d6:	f008 fa48 	bl	802366a <__cxa_guard_acquire>
 801b1da:	b138      	cbz	r0, 801b1ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801b1dc:	4620      	mov	r0, r4
 801b1de:	f008 fa50 	bl	8023682 <__cxa_guard_release>
 801b1e2:	4a06      	ldr	r2, [pc, #24]	@ (801b1fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801b1e4:	4909      	ldr	r1, [pc, #36]	@ (801b20c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801b1e6:	480a      	ldr	r0, [pc, #40]	@ (801b210 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801b1e8:	f008 fa38 	bl	802365c <__aeabi_atexit>
 801b1ec:	4b05      	ldr	r3, [pc, #20]	@ (801b204 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801b1ee:	646b      	str	r3, [r5, #68]	@ 0x44
 801b1f0:	4b07      	ldr	r3, [pc, #28]	@ (801b210 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801b1f2:	64ab      	str	r3, [r5, #72]	@ 0x48
 801b1f4:	bd38      	pop	{r3, r4, r5, pc}
 801b1f6:	bf00      	nop
 801b1f8:	20013c40 	.word	0x20013c40
 801b1fc:	20000000 	.word	0x20000000
 801b200:	08016eb5 	.word	0x08016eb5
 801b204:	200001d8 	.word	0x200001d8
 801b208:	20013c44 	.word	0x20013c44
 801b20c:	08016eb3 	.word	0x08016eb3
 801b210:	200001dc 	.word	0x200001dc

0801b214 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801b214:	b538      	push	{r3, r4, r5, lr}
 801b216:	4c15      	ldr	r4, [pc, #84]	@ (801b26c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801b218:	7823      	ldrb	r3, [r4, #0]
 801b21a:	f3bf 8f5b 	dmb	ish
 801b21e:	07da      	lsls	r2, r3, #31
 801b220:	4605      	mov	r5, r0
 801b222:	d40b      	bmi.n	801b23c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801b224:	4620      	mov	r0, r4
 801b226:	f008 fa20 	bl	802366a <__cxa_guard_acquire>
 801b22a:	b138      	cbz	r0, 801b23c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801b22c:	4620      	mov	r0, r4
 801b22e:	f008 fa28 	bl	8023682 <__cxa_guard_release>
 801b232:	4a0f      	ldr	r2, [pc, #60]	@ (801b270 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801b234:	490f      	ldr	r1, [pc, #60]	@ (801b274 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801b236:	4810      	ldr	r0, [pc, #64]	@ (801b278 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801b238:	f008 fa10 	bl	802365c <__aeabi_atexit>
 801b23c:	4c0f      	ldr	r4, [pc, #60]	@ (801b27c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801b23e:	7823      	ldrb	r3, [r4, #0]
 801b240:	f3bf 8f5b 	dmb	ish
 801b244:	07db      	lsls	r3, r3, #31
 801b246:	d40b      	bmi.n	801b260 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801b248:	4620      	mov	r0, r4
 801b24a:	f008 fa0e 	bl	802366a <__cxa_guard_acquire>
 801b24e:	b138      	cbz	r0, 801b260 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801b250:	4620      	mov	r0, r4
 801b252:	f008 fa16 	bl	8023682 <__cxa_guard_release>
 801b256:	4a06      	ldr	r2, [pc, #24]	@ (801b270 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801b258:	4909      	ldr	r1, [pc, #36]	@ (801b280 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801b25a:	480a      	ldr	r0, [pc, #40]	@ (801b284 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801b25c:	f008 f9fe 	bl	802365c <__aeabi_atexit>
 801b260:	4b05      	ldr	r3, [pc, #20]	@ (801b278 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801b262:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801b264:	4b07      	ldr	r3, [pc, #28]	@ (801b284 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801b266:	642b      	str	r3, [r5, #64]	@ 0x40
 801b268:	bd38      	pop	{r3, r4, r5, pc}
 801b26a:	bf00      	nop
 801b26c:	20013c60 	.word	0x20013c60
 801b270:	20000000 	.word	0x20000000
 801b274:	08016eb9 	.word	0x08016eb9
 801b278:	200001f8 	.word	0x200001f8
 801b27c:	20013c64 	.word	0x20013c64
 801b280:	08016eb7 	.word	0x08016eb7
 801b284:	200001fc 	.word	0x200001fc

0801b288 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801b288:	b510      	push	{r4, lr}
 801b28a:	4604      	mov	r4, r0
 801b28c:	f7ff ff14 	bl	801b0b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801b290:	4620      	mov	r0, r4
 801b292:	f7ff ff85 	bl	801b1a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801b296:	4620      	mov	r0, r4
 801b298:	f7ff ff48 	bl	801b12c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801b29c:	4620      	mov	r0, r4
 801b29e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b2a2:	f7ff bfb7 	b.w	801b214 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801b2a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801b2a8:	b538      	push	{r3, r4, r5, lr}
 801b2aa:	4c15      	ldr	r4, [pc, #84]	@ (801b300 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801b2ac:	7823      	ldrb	r3, [r4, #0]
 801b2ae:	f3bf 8f5b 	dmb	ish
 801b2b2:	07da      	lsls	r2, r3, #31
 801b2b4:	4605      	mov	r5, r0
 801b2b6:	d40b      	bmi.n	801b2d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801b2b8:	4620      	mov	r0, r4
 801b2ba:	f008 f9d6 	bl	802366a <__cxa_guard_acquire>
 801b2be:	b138      	cbz	r0, 801b2d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801b2c0:	4620      	mov	r0, r4
 801b2c2:	f008 f9de 	bl	8023682 <__cxa_guard_release>
 801b2c6:	4a0f      	ldr	r2, [pc, #60]	@ (801b304 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801b2c8:	490f      	ldr	r1, [pc, #60]	@ (801b308 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801b2ca:	4810      	ldr	r0, [pc, #64]	@ (801b30c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801b2cc:	f008 f9c6 	bl	802365c <__aeabi_atexit>
 801b2d0:	4c0f      	ldr	r4, [pc, #60]	@ (801b310 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801b2d2:	7823      	ldrb	r3, [r4, #0]
 801b2d4:	f3bf 8f5b 	dmb	ish
 801b2d8:	07db      	lsls	r3, r3, #31
 801b2da:	d40b      	bmi.n	801b2f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801b2dc:	4620      	mov	r0, r4
 801b2de:	f008 f9c4 	bl	802366a <__cxa_guard_acquire>
 801b2e2:	b138      	cbz	r0, 801b2f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801b2e4:	4620      	mov	r0, r4
 801b2e6:	f008 f9cc 	bl	8023682 <__cxa_guard_release>
 801b2ea:	4a06      	ldr	r2, [pc, #24]	@ (801b304 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801b2ec:	4909      	ldr	r1, [pc, #36]	@ (801b314 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801b2ee:	480a      	ldr	r0, [pc, #40]	@ (801b318 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801b2f0:	f008 f9b4 	bl	802365c <__aeabi_atexit>
 801b2f4:	4b05      	ldr	r3, [pc, #20]	@ (801b30c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801b2f6:	666b      	str	r3, [r5, #100]	@ 0x64
 801b2f8:	4b07      	ldr	r3, [pc, #28]	@ (801b318 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801b2fa:	66ab      	str	r3, [r5, #104]	@ 0x68
 801b2fc:	bd38      	pop	{r3, r4, r5, pc}
 801b2fe:	bf00      	nop
 801b300:	20013c48 	.word	0x20013c48
 801b304:	20000000 	.word	0x20000000
 801b308:	08016ea5 	.word	0x08016ea5
 801b30c:	200001e0 	.word	0x200001e0
 801b310:	20013c4c 	.word	0x20013c4c
 801b314:	08016ea3 	.word	0x08016ea3
 801b318:	200001e4 	.word	0x200001e4

0801b31c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801b31c:	b538      	push	{r3, r4, r5, lr}
 801b31e:	4c15      	ldr	r4, [pc, #84]	@ (801b374 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801b320:	7823      	ldrb	r3, [r4, #0]
 801b322:	f3bf 8f5b 	dmb	ish
 801b326:	07da      	lsls	r2, r3, #31
 801b328:	4605      	mov	r5, r0
 801b32a:	d40b      	bmi.n	801b344 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801b32c:	4620      	mov	r0, r4
 801b32e:	f008 f99c 	bl	802366a <__cxa_guard_acquire>
 801b332:	b138      	cbz	r0, 801b344 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801b334:	4620      	mov	r0, r4
 801b336:	f008 f9a4 	bl	8023682 <__cxa_guard_release>
 801b33a:	4a0f      	ldr	r2, [pc, #60]	@ (801b378 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801b33c:	490f      	ldr	r1, [pc, #60]	@ (801b37c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801b33e:	4810      	ldr	r0, [pc, #64]	@ (801b380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801b340:	f008 f98c 	bl	802365c <__aeabi_atexit>
 801b344:	4c0f      	ldr	r4, [pc, #60]	@ (801b384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801b346:	7823      	ldrb	r3, [r4, #0]
 801b348:	f3bf 8f5b 	dmb	ish
 801b34c:	07db      	lsls	r3, r3, #31
 801b34e:	d40b      	bmi.n	801b368 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801b350:	4620      	mov	r0, r4
 801b352:	f008 f98a 	bl	802366a <__cxa_guard_acquire>
 801b356:	b138      	cbz	r0, 801b368 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801b358:	4620      	mov	r0, r4
 801b35a:	f008 f992 	bl	8023682 <__cxa_guard_release>
 801b35e:	4a06      	ldr	r2, [pc, #24]	@ (801b378 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801b360:	4909      	ldr	r1, [pc, #36]	@ (801b388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801b362:	480a      	ldr	r0, [pc, #40]	@ (801b38c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801b364:	f008 f97a 	bl	802365c <__aeabi_atexit>
 801b368:	4b05      	ldr	r3, [pc, #20]	@ (801b380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801b36a:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801b36c:	4b07      	ldr	r3, [pc, #28]	@ (801b38c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801b36e:	662b      	str	r3, [r5, #96]	@ 0x60
 801b370:	bd38      	pop	{r3, r4, r5, pc}
 801b372:	bf00      	nop
 801b374:	20013c20 	.word	0x20013c20
 801b378:	20000000 	.word	0x20000000
 801b37c:	08016ea9 	.word	0x08016ea9
 801b380:	200001b8 	.word	0x200001b8
 801b384:	20013c24 	.word	0x20013c24
 801b388:	08016ea7 	.word	0x08016ea7
 801b38c:	200001bc 	.word	0x200001bc

0801b390 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801b390:	b510      	push	{r4, lr}
 801b392:	4604      	mov	r4, r0
 801b394:	f7ff ff88 	bl	801b2a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801b398:	4620      	mov	r0, r4
 801b39a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b39e:	f7ff bfbd 	b.w	801b31c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801b3a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801b3a4:	b538      	push	{r3, r4, r5, lr}
 801b3a6:	4c15      	ldr	r4, [pc, #84]	@ (801b3fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801b3a8:	7823      	ldrb	r3, [r4, #0]
 801b3aa:	f3bf 8f5b 	dmb	ish
 801b3ae:	07da      	lsls	r2, r3, #31
 801b3b0:	4605      	mov	r5, r0
 801b3b2:	d40b      	bmi.n	801b3cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801b3b4:	4620      	mov	r0, r4
 801b3b6:	f008 f958 	bl	802366a <__cxa_guard_acquire>
 801b3ba:	b138      	cbz	r0, 801b3cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801b3bc:	4620      	mov	r0, r4
 801b3be:	f008 f960 	bl	8023682 <__cxa_guard_release>
 801b3c2:	4a0f      	ldr	r2, [pc, #60]	@ (801b400 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801b3c4:	490f      	ldr	r1, [pc, #60]	@ (801b404 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801b3c6:	4810      	ldr	r0, [pc, #64]	@ (801b408 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801b3c8:	f008 f948 	bl	802365c <__aeabi_atexit>
 801b3cc:	4c0f      	ldr	r4, [pc, #60]	@ (801b40c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801b3ce:	7823      	ldrb	r3, [r4, #0]
 801b3d0:	f3bf 8f5b 	dmb	ish
 801b3d4:	07db      	lsls	r3, r3, #31
 801b3d6:	d40b      	bmi.n	801b3f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801b3d8:	4620      	mov	r0, r4
 801b3da:	f008 f946 	bl	802366a <__cxa_guard_acquire>
 801b3de:	b138      	cbz	r0, 801b3f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801b3e0:	4620      	mov	r0, r4
 801b3e2:	f008 f94e 	bl	8023682 <__cxa_guard_release>
 801b3e6:	4a06      	ldr	r2, [pc, #24]	@ (801b400 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801b3e8:	4909      	ldr	r1, [pc, #36]	@ (801b410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801b3ea:	480a      	ldr	r0, [pc, #40]	@ (801b414 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801b3ec:	f008 f936 	bl	802365c <__aeabi_atexit>
 801b3f0:	4b05      	ldr	r3, [pc, #20]	@ (801b408 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801b3f2:	676b      	str	r3, [r5, #116]	@ 0x74
 801b3f4:	4b07      	ldr	r3, [pc, #28]	@ (801b414 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801b3f6:	67ab      	str	r3, [r5, #120]	@ 0x78
 801b3f8:	bd38      	pop	{r3, r4, r5, pc}
 801b3fa:	bf00      	nop
 801b3fc:	20013c18 	.word	0x20013c18
 801b400:	20000000 	.word	0x20000000
 801b404:	08016e9d 	.word	0x08016e9d
 801b408:	200001b0 	.word	0x200001b0
 801b40c:	20013c1c 	.word	0x20013c1c
 801b410:	08016e9b 	.word	0x08016e9b
 801b414:	200001b4 	.word	0x200001b4

0801b418 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801b418:	b538      	push	{r3, r4, r5, lr}
 801b41a:	4c15      	ldr	r4, [pc, #84]	@ (801b470 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801b41c:	7823      	ldrb	r3, [r4, #0]
 801b41e:	f3bf 8f5b 	dmb	ish
 801b422:	07da      	lsls	r2, r3, #31
 801b424:	4605      	mov	r5, r0
 801b426:	d40b      	bmi.n	801b440 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801b428:	4620      	mov	r0, r4
 801b42a:	f008 f91e 	bl	802366a <__cxa_guard_acquire>
 801b42e:	b138      	cbz	r0, 801b440 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801b430:	4620      	mov	r0, r4
 801b432:	f008 f926 	bl	8023682 <__cxa_guard_release>
 801b436:	4a0f      	ldr	r2, [pc, #60]	@ (801b474 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801b438:	490f      	ldr	r1, [pc, #60]	@ (801b478 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801b43a:	4810      	ldr	r0, [pc, #64]	@ (801b47c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801b43c:	f008 f90e 	bl	802365c <__aeabi_atexit>
 801b440:	4c0f      	ldr	r4, [pc, #60]	@ (801b480 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801b442:	7823      	ldrb	r3, [r4, #0]
 801b444:	f3bf 8f5b 	dmb	ish
 801b448:	07db      	lsls	r3, r3, #31
 801b44a:	d40b      	bmi.n	801b464 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801b44c:	4620      	mov	r0, r4
 801b44e:	f008 f90c 	bl	802366a <__cxa_guard_acquire>
 801b452:	b138      	cbz	r0, 801b464 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801b454:	4620      	mov	r0, r4
 801b456:	f008 f914 	bl	8023682 <__cxa_guard_release>
 801b45a:	4a06      	ldr	r2, [pc, #24]	@ (801b474 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801b45c:	4909      	ldr	r1, [pc, #36]	@ (801b484 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801b45e:	480a      	ldr	r0, [pc, #40]	@ (801b488 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801b460:	f008 f8fc 	bl	802365c <__aeabi_atexit>
 801b464:	4b05      	ldr	r3, [pc, #20]	@ (801b47c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801b466:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801b468:	4b07      	ldr	r3, [pc, #28]	@ (801b488 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801b46a:	672b      	str	r3, [r5, #112]	@ 0x70
 801b46c:	bd38      	pop	{r3, r4, r5, pc}
 801b46e:	bf00      	nop
 801b470:	20013c10 	.word	0x20013c10
 801b474:	20000000 	.word	0x20000000
 801b478:	08016ea1 	.word	0x08016ea1
 801b47c:	200001a8 	.word	0x200001a8
 801b480:	20013c14 	.word	0x20013c14
 801b484:	08016e9f 	.word	0x08016e9f
 801b488:	200001ac 	.word	0x200001ac

0801b48c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801b48c:	b510      	push	{r4, lr}
 801b48e:	4604      	mov	r4, r0
 801b490:	f7ff ff88 	bl	801b3a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801b494:	4620      	mov	r0, r4
 801b496:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b49a:	f7ff bfbd 	b.w	801b418 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801b49e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801b49e:	b510      	push	{r4, lr}
 801b4a0:	4604      	mov	r4, r0
 801b4a2:	f7ff fff3 	bl	801b48c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801b4a6:	4620      	mov	r0, r4
 801b4a8:	f7ff ff72 	bl	801b390 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801b4ac:	4620      	mov	r0, r4
 801b4ae:	f7ff fdf9 	bl	801b0a4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801b4b2:	4620      	mov	r0, r4
 801b4b4:	f7ff fcfa 	bl	801aeac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801b4b8:	4620      	mov	r0, r4
 801b4ba:	f7ff fd75 	bl	801afa8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801b4be:	4620      	mov	r0, r4
 801b4c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b4c4:	f7ff bee0 	b.w	801b288 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801b4c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801b4c8:	b538      	push	{r3, r4, r5, lr}
 801b4ca:	4c0b      	ldr	r4, [pc, #44]	@ (801b4f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801b4cc:	7823      	ldrb	r3, [r4, #0]
 801b4ce:	f3bf 8f5b 	dmb	ish
 801b4d2:	07db      	lsls	r3, r3, #31
 801b4d4:	4605      	mov	r5, r0
 801b4d6:	d40b      	bmi.n	801b4f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801b4d8:	4620      	mov	r0, r4
 801b4da:	f008 f8c6 	bl	802366a <__cxa_guard_acquire>
 801b4de:	b138      	cbz	r0, 801b4f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801b4e0:	4620      	mov	r0, r4
 801b4e2:	f008 f8ce 	bl	8023682 <__cxa_guard_release>
 801b4e6:	4a05      	ldr	r2, [pc, #20]	@ (801b4fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801b4e8:	4905      	ldr	r1, [pc, #20]	@ (801b500 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801b4ea:	4806      	ldr	r0, [pc, #24]	@ (801b504 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801b4ec:	f008 f8b6 	bl	802365c <__aeabi_atexit>
 801b4f0:	4b04      	ldr	r3, [pc, #16]	@ (801b504 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801b4f2:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801b4f4:	bd38      	pop	{r3, r4, r5, pc}
 801b4f6:	bf00      	nop
 801b4f8:	20013c04 	.word	0x20013c04
 801b4fc:	20000000 	.word	0x20000000
 801b500:	08016e99 	.word	0x08016e99
 801b504:	200001a0 	.word	0x200001a0

0801b508 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801b508:	b538      	push	{r3, r4, r5, lr}
 801b50a:	4c0b      	ldr	r4, [pc, #44]	@ (801b538 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801b50c:	7823      	ldrb	r3, [r4, #0]
 801b50e:	f3bf 8f5b 	dmb	ish
 801b512:	07db      	lsls	r3, r3, #31
 801b514:	4605      	mov	r5, r0
 801b516:	d40b      	bmi.n	801b530 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801b518:	4620      	mov	r0, r4
 801b51a:	f008 f8a6 	bl	802366a <__cxa_guard_acquire>
 801b51e:	b138      	cbz	r0, 801b530 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801b520:	4620      	mov	r0, r4
 801b522:	f008 f8ae 	bl	8023682 <__cxa_guard_release>
 801b526:	4a05      	ldr	r2, [pc, #20]	@ (801b53c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801b528:	4905      	ldr	r1, [pc, #20]	@ (801b540 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801b52a:	4806      	ldr	r0, [pc, #24]	@ (801b544 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801b52c:	f008 f896 	bl	802365c <__aeabi_atexit>
 801b530:	4b04      	ldr	r3, [pc, #16]	@ (801b544 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801b532:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801b536:	bd38      	pop	{r3, r4, r5, pc}
 801b538:	20013c08 	.word	0x20013c08
 801b53c:	20000000 	.word	0x20000000
 801b540:	08016e97 	.word	0x08016e97
 801b544:	200001a4 	.word	0x200001a4

0801b548 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801b548:	b570      	push	{r4, r5, r6, lr}
 801b54a:	4d0d      	ldr	r5, [pc, #52]	@ (801b580 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801b54c:	4c0d      	ldr	r4, [pc, #52]	@ (801b584 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801b54e:	782b      	ldrb	r3, [r5, #0]
 801b550:	f3bf 8f5b 	dmb	ish
 801b554:	f013 0f01 	tst.w	r3, #1
 801b558:	4606      	mov	r6, r0
 801b55a:	d10d      	bne.n	801b578 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801b55c:	4628      	mov	r0, r5
 801b55e:	f008 f884 	bl	802366a <__cxa_guard_acquire>
 801b562:	b148      	cbz	r0, 801b578 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801b564:	4b08      	ldr	r3, [pc, #32]	@ (801b588 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801b566:	6023      	str	r3, [r4, #0]
 801b568:	4628      	mov	r0, r5
 801b56a:	f008 f88a 	bl	8023682 <__cxa_guard_release>
 801b56e:	4a07      	ldr	r2, [pc, #28]	@ (801b58c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801b570:	4907      	ldr	r1, [pc, #28]	@ (801b590 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801b572:	4620      	mov	r0, r4
 801b574:	f008 f872 	bl	802365c <__aeabi_atexit>
 801b578:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801b57c:	bd70      	pop	{r4, r5, r6, pc}
 801b57e:	bf00      	nop
 801b580:	20013c0c 	.word	0x20013c0c
 801b584:	20013d84 	.word	0x20013d84
 801b588:	0802779c 	.word	0x0802779c
 801b58c:	20000000 	.word	0x20000000
 801b590:	08016e95 	.word	0x08016e95

0801b594 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801b594:	b510      	push	{r4, lr}
 801b596:	4604      	mov	r4, r0
 801b598:	f7ff ff96 	bl	801b4c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801b59c:	4620      	mov	r0, r4
 801b59e:	f7ff ffb3 	bl	801b508 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801b5a2:	4620      	mov	r0, r4
 801b5a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b5a8:	f7ff bfce 	b.w	801b548 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801b5ac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801b5ac:	b570      	push	{r4, r5, r6, lr}
 801b5ae:	4d0d      	ldr	r5, [pc, #52]	@ (801b5e4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801b5b0:	4c0d      	ldr	r4, [pc, #52]	@ (801b5e8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801b5b2:	782b      	ldrb	r3, [r5, #0]
 801b5b4:	f3bf 8f5b 	dmb	ish
 801b5b8:	f013 0f01 	tst.w	r3, #1
 801b5bc:	4606      	mov	r6, r0
 801b5be:	d10d      	bne.n	801b5dc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801b5c0:	4628      	mov	r0, r5
 801b5c2:	f008 f852 	bl	802366a <__cxa_guard_acquire>
 801b5c6:	b148      	cbz	r0, 801b5dc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801b5c8:	4b08      	ldr	r3, [pc, #32]	@ (801b5ec <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801b5ca:	6023      	str	r3, [r4, #0]
 801b5cc:	4628      	mov	r0, r5
 801b5ce:	f008 f858 	bl	8023682 <__cxa_guard_release>
 801b5d2:	4a07      	ldr	r2, [pc, #28]	@ (801b5f0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801b5d4:	4907      	ldr	r1, [pc, #28]	@ (801b5f4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801b5d6:	4620      	mov	r0, r4
 801b5d8:	f008 f840 	bl	802365c <__aeabi_atexit>
 801b5dc:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801b5e0:	bd70      	pop	{r4, r5, r6, pc}
 801b5e2:	bf00      	nop
 801b5e4:	20013c00 	.word	0x20013c00
 801b5e8:	20013c80 	.word	0x20013c80
 801b5ec:	080277b8 	.word	0x080277b8
 801b5f0:	20000000 	.word	0x20000000
 801b5f4:	08016e93 	.word	0x08016e93

0801b5f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801b5f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b5fc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801b600:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801b604:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801b608:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801b60c:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801b610:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801b614:	8808      	ldrh	r0, [r1, #0]
 801b616:	fb05 4c0e 	mla	ip, r5, lr, r4
 801b61a:	2d00      	cmp	r5, #0
 801b61c:	eb02 0a0c 	add.w	sl, r2, ip
 801b620:	f2c0 80b0 	blt.w	801b784 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801b624:	45ab      	cmp	fp, r5
 801b626:	f340 80ad 	ble.w	801b784 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801b62a:	2c00      	cmp	r4, #0
 801b62c:	f2c0 80a8 	blt.w	801b780 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801b630:	45a6      	cmp	lr, r4
 801b632:	f340 80a5 	ble.w	801b780 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801b636:	f812 200c 	ldrb.w	r2, [r2, ip]
 801b63a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801b63e:	1c62      	adds	r2, r4, #1
 801b640:	f100 80a3 	bmi.w	801b78a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801b644:	4596      	cmp	lr, r2
 801b646:	f340 80a0 	ble.w	801b78a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801b64a:	f1b9 0f00 	cmp.w	r9, #0
 801b64e:	f000 809c 	beq.w	801b78a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801b652:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801b656:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801b65a:	3501      	adds	r5, #1
 801b65c:	f100 8099 	bmi.w	801b792 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801b660:	45ab      	cmp	fp, r5
 801b662:	f340 8096 	ble.w	801b792 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801b666:	2f00      	cmp	r7, #0
 801b668:	f000 8093 	beq.w	801b792 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801b66c:	2c00      	cmp	r4, #0
 801b66e:	f2c0 808e 	blt.w	801b78e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801b672:	45a6      	cmp	lr, r4
 801b674:	f340 808b 	ble.w	801b78e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801b678:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801b67c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801b680:	3401      	adds	r4, #1
 801b682:	f100 8089 	bmi.w	801b798 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801b686:	45a6      	cmp	lr, r4
 801b688:	f340 8086 	ble.w	801b798 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801b68c:	f1b9 0f00 	cmp.w	r9, #0
 801b690:	f000 8082 	beq.w	801b798 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801b694:	44d6      	add	lr, sl
 801b696:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b69a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801b69e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801b6a2:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801b6a6:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801b6aa:	fb19 fe07 	smulbb	lr, r9, r7
 801b6ae:	ea44 0808 	orr.w	r8, r4, r8
 801b6b2:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801b6b6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801b6ba:	f1c7 0210 	rsb	r2, r7, #16
 801b6be:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801b6c2:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801b6c6:	ea44 0c0c 	orr.w	ip, r4, ip
 801b6ca:	eba2 0209 	sub.w	r2, r2, r9
 801b6ce:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801b6d2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801b6d6:	fb04 f40c 	mul.w	r4, r4, ip
 801b6da:	fb02 4808 	mla	r8, r2, r8, r4
 801b6de:	041a      	lsls	r2, r3, #16
 801b6e0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b6e4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b6e8:	4313      	orrs	r3, r2
 801b6ea:	042a      	lsls	r2, r5, #16
 801b6ec:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801b6f0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801b6f4:	fb0e 8303 	mla	r3, lr, r3, r8
 801b6f8:	432a      	orrs	r2, r5
 801b6fa:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801b6fe:	fb07 3202 	mla	r2, r7, r2, r3
 801b702:	0d53      	lsrs	r3, r2, #21
 801b704:	0952      	lsrs	r2, r2, #5
 801b706:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b70a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b70e:	431a      	orrs	r2, r3
 801b710:	b293      	uxth	r3, r2
 801b712:	b2b4      	uxth	r4, r6
 801b714:	1202      	asrs	r2, r0, #8
 801b716:	43f6      	mvns	r6, r6
 801b718:	b2f6      	uxtb	r6, r6
 801b71a:	121d      	asrs	r5, r3, #8
 801b71c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b720:	fb12 f206 	smulbb	r2, r2, r6
 801b724:	10c7      	asrs	r7, r0, #3
 801b726:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b72a:	00c0      	lsls	r0, r0, #3
 801b72c:	fb05 2504 	mla	r5, r5, r4, r2
 801b730:	b2c0      	uxtb	r0, r0
 801b732:	10da      	asrs	r2, r3, #3
 801b734:	00db      	lsls	r3, r3, #3
 801b736:	b2db      	uxtb	r3, r3
 801b738:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b73c:	fb10 f006 	smulbb	r0, r0, r6
 801b740:	b2ad      	uxth	r5, r5
 801b742:	fb03 0004 	mla	r0, r3, r4, r0
 801b746:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b74a:	fb17 f706 	smulbb	r7, r7, r6
 801b74e:	b280      	uxth	r0, r0
 801b750:	1c6b      	adds	r3, r5, #1
 801b752:	fb02 7204 	mla	r2, r2, r4, r7
 801b756:	b292      	uxth	r2, r2
 801b758:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b75c:	1c43      	adds	r3, r0, #1
 801b75e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b762:	1c50      	adds	r0, r2, #1
 801b764:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801b768:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b76c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b770:	0952      	lsrs	r2, r2, #5
 801b772:	432b      	orrs	r3, r5
 801b774:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b778:	4313      	orrs	r3, r2
 801b77a:	800b      	strh	r3, [r1, #0]
 801b77c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b780:	4680      	mov	r8, r0
 801b782:	e75c      	b.n	801b63e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801b784:	4684      	mov	ip, r0
 801b786:	4680      	mov	r8, r0
 801b788:	e767      	b.n	801b65a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801b78a:	4684      	mov	ip, r0
 801b78c:	e765      	b.n	801b65a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801b78e:	4605      	mov	r5, r0
 801b790:	e776      	b.n	801b680 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801b792:	4603      	mov	r3, r0
 801b794:	4605      	mov	r5, r0
 801b796:	e782      	b.n	801b69e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801b798:	4603      	mov	r3, r0
 801b79a:	e780      	b.n	801b69e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801b79c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b79c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7a0:	b099      	sub	sp, #100	@ 0x64
 801b7a2:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801b7a6:	9215      	str	r2, [sp, #84]	@ 0x54
 801b7a8:	9309      	str	r3, [sp, #36]	@ 0x24
 801b7aa:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801b7ac:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801b7b0:	930d      	str	r3, [sp, #52]	@ 0x34
 801b7b2:	910c      	str	r1, [sp, #48]	@ 0x30
 801b7b4:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801b7b8:	9016      	str	r0, [sp, #88]	@ 0x58
 801b7ba:	6850      	ldr	r0, [r2, #4]
 801b7bc:	6812      	ldr	r2, [r2, #0]
 801b7be:	fb00 1303 	mla	r3, r0, r3, r1
 801b7c2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801b7c6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b7c8:	681b      	ldr	r3, [r3, #0]
 801b7ca:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b7cc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b7ce:	685e      	ldr	r6, [r3, #4]
 801b7d0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b7d2:	43db      	mvns	r3, r3
 801b7d4:	b2db      	uxtb	r3, r3
 801b7d6:	3604      	adds	r6, #4
 801b7d8:	930a      	str	r3, [sp, #40]	@ 0x28
 801b7da:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b7dc:	2b00      	cmp	r3, #0
 801b7de:	dc03      	bgt.n	801b7e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b7e0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801b7e2:	2b00      	cmp	r3, #0
 801b7e4:	f340 8225 	ble.w	801bc32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801b7e8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b7ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b7ee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b7f2:	1e48      	subs	r0, r1, #1
 801b7f4:	1e57      	subs	r7, r2, #1
 801b7f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b7f8:	2b00      	cmp	r3, #0
 801b7fa:	f340 80e3 	ble.w	801b9c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b7fe:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801b802:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b806:	d406      	bmi.n	801b816 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b808:	4584      	cmp	ip, r0
 801b80a:	da04      	bge.n	801b816 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b80c:	2b00      	cmp	r3, #0
 801b80e:	db02      	blt.n	801b816 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b810:	42bb      	cmp	r3, r7
 801b812:	f2c0 80d8 	blt.w	801b9c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b816:	f11c 0c01 	adds.w	ip, ip, #1
 801b81a:	f100 80c9 	bmi.w	801b9b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b81e:	4561      	cmp	r1, ip
 801b820:	f2c0 80c6 	blt.w	801b9b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b824:	3301      	adds	r3, #1
 801b826:	f100 80c3 	bmi.w	801b9b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b82a:	429a      	cmp	r2, r3
 801b82c:	f2c0 80c0 	blt.w	801b9b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b830:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801b834:	4647      	mov	r7, r8
 801b836:	f1bb 0f00 	cmp.w	fp, #0
 801b83a:	f340 80e3 	ble.w	801ba04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801b83e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801b840:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b842:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b846:	689b      	ldr	r3, [r3, #8]
 801b848:	ea5f 422a 	movs.w	r2, sl, asr #16
 801b84c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b850:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801b854:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b858:	f100 8121 	bmi.w	801ba9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b85c:	f103 39ff 	add.w	r9, r3, #4294967295
 801b860:	454a      	cmp	r2, r9
 801b862:	f280 811c 	bge.w	801ba9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b866:	f1bc 0f00 	cmp.w	ip, #0
 801b86a:	f2c0 8118 	blt.w	801ba9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b86e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801b872:	45cc      	cmp	ip, r9
 801b874:	f280 8113 	bge.w	801ba9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801b878:	b21b      	sxth	r3, r3
 801b87a:	fb0c 2203 	mla	r2, ip, r3, r2
 801b87e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b880:	eb04 0902 	add.w	r9, r4, r2
 801b884:	5ca2      	ldrb	r2, [r4, r2]
 801b886:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801b88a:	2800      	cmp	r0, #0
 801b88c:	f000 80fe 	beq.w	801ba8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b890:	f899 2001 	ldrb.w	r2, [r9, #1]
 801b894:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801b898:	9211      	str	r2, [sp, #68]	@ 0x44
 801b89a:	b151      	cbz	r1, 801b8b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b89c:	eb09 0203 	add.w	r2, r9, r3
 801b8a0:	f819 3003 	ldrb.w	r3, [r9, r3]
 801b8a4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b8a8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b8aa:	7853      	ldrb	r3, [r2, #1]
 801b8ac:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b8b0:	9312      	str	r3, [sp, #72]	@ 0x48
 801b8b2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b8b4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b8b6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b8ba:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b8be:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b8c2:	ea4c 0c03 	orr.w	ip, ip, r3
 801b8c6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801b8c8:	041b      	lsls	r3, r3, #16
 801b8ca:	fb10 f201 	smulbb	r2, r0, r1
 801b8ce:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801b8d2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b8d6:	10d2      	asrs	r2, r2, #3
 801b8d8:	4323      	orrs	r3, r4
 801b8da:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801b8de:	4353      	muls	r3, r2
 801b8e0:	fb09 330c 	mla	r3, r9, ip, r3
 801b8e4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801b8e8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b8ec:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801b8f0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801b8f4:	f1c1 0c10 	rsb	ip, r1, #16
 801b8f8:	ebac 0c00 	sub.w	ip, ip, r0
 801b8fc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801b900:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801b904:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b906:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b908:	0418      	lsls	r0, r3, #16
 801b90a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801b90e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b912:	4318      	orrs	r0, r3
 801b914:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801b918:	fb02 c200 	mla	r2, r2, r0, ip
 801b91c:	0d53      	lsrs	r3, r2, #21
 801b91e:	0952      	lsrs	r2, r2, #5
 801b920:	8838      	ldrh	r0, [r7, #0]
 801b922:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b926:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b92a:	431a      	orrs	r2, r3
 801b92c:	b292      	uxth	r2, r2
 801b92e:	1201      	asrs	r1, r0, #8
 801b930:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801b934:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801b938:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b93c:	fb11 f104 	smulbb	r1, r1, r4
 801b940:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801b944:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b948:	00c0      	lsls	r0, r0, #3
 801b94a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801b94e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b952:	10d1      	asrs	r1, r2, #3
 801b954:	b2c0      	uxtb	r0, r0
 801b956:	00d2      	lsls	r2, r2, #3
 801b958:	b2d2      	uxtb	r2, r2
 801b95a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b95e:	fb1e fe04 	smulbb	lr, lr, r4
 801b962:	fb10 f004 	smulbb	r0, r0, r4
 801b966:	fa1f fc8c 	uxth.w	ip, ip
 801b96a:	fb01 e103 	mla	r1, r1, r3, lr
 801b96e:	fb02 0303 	mla	r3, r2, r3, r0
 801b972:	b29a      	uxth	r2, r3
 801b974:	f10c 0301 	add.w	r3, ip, #1
 801b978:	b289      	uxth	r1, r1
 801b97a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b97e:	1c53      	adds	r3, r2, #1
 801b980:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b984:	1c4a      	adds	r2, r1, #1
 801b986:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b98a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b98e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b992:	0949      	lsrs	r1, r1, #5
 801b994:	ea43 030c 	orr.w	r3, r3, ip
 801b998:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b99c:	430b      	orrs	r3, r1
 801b99e:	803b      	strh	r3, [r7, #0]
 801b9a0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801b9a2:	449a      	add	sl, r3
 801b9a4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b9a6:	3702      	adds	r7, #2
 801b9a8:	441d      	add	r5, r3
 801b9aa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b9ae:	e742      	b.n	801b836 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b9b0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801b9b2:	449a      	add	sl, r3
 801b9b4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b9b6:	441d      	add	r5, r3
 801b9b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b9ba:	3b01      	subs	r3, #1
 801b9bc:	9309      	str	r3, [sp, #36]	@ 0x24
 801b9be:	f108 0802 	add.w	r8, r8, #2
 801b9c2:	e718      	b.n	801b7f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801b9c4:	d023      	beq.n	801ba0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801b9c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b9c8:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801b9ca:	3b01      	subs	r3, #1
 801b9cc:	fb00 a003 	mla	r0, r0, r3, sl
 801b9d0:	1400      	asrs	r0, r0, #16
 801b9d2:	f53f af2d 	bmi.w	801b830 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b9d6:	3901      	subs	r1, #1
 801b9d8:	4288      	cmp	r0, r1
 801b9da:	f6bf af29 	bge.w	801b830 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b9de:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801b9e0:	fb01 5303 	mla	r3, r1, r3, r5
 801b9e4:	141b      	asrs	r3, r3, #16
 801b9e6:	f53f af23 	bmi.w	801b830 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b9ea:	3a01      	subs	r2, #1
 801b9ec:	4293      	cmp	r3, r2
 801b9ee:	f6bf af1f 	bge.w	801b830 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b9f2:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801b9f6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801b9fa:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801b9fe:	f1be 0f00 	cmp.w	lr, #0
 801ba02:	dc6c      	bgt.n	801bade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ba04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ba06:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ba0a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801ba0e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ba10:	2b00      	cmp	r3, #0
 801ba12:	f340 810e 	ble.w	801bc32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ba16:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba1a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ba1e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ba22:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801ba24:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba28:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba30:	eef0 6a62 	vmov.f32	s13, s5
 801ba34:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba40:	ee16 aa90 	vmov	sl, s13
 801ba44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba48:	eef0 6a43 	vmov.f32	s13, s6
 801ba4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba50:	ee12 2a90 	vmov	r2, s5
 801ba54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba58:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba5c:	ee13 2a10 	vmov	r2, s6
 801ba60:	9325      	str	r3, [sp, #148]	@ 0x94
 801ba62:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801ba64:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba68:	9326      	str	r3, [sp, #152]	@ 0x98
 801ba6a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ba6c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801ba6e:	3b01      	subs	r3, #1
 801ba70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba74:	930c      	str	r3, [sp, #48]	@ 0x30
 801ba76:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801ba78:	bf08      	it	eq
 801ba7a:	4613      	moveq	r3, r2
 801ba7c:	ee16 5a90 	vmov	r5, s13
 801ba80:	9309      	str	r3, [sp, #36]	@ 0x24
 801ba82:	eeb0 3a67 	vmov.f32	s6, s15
 801ba86:	eef0 2a47 	vmov.f32	s5, s14
 801ba8a:	e6a6      	b.n	801b7da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ba8c:	2900      	cmp	r1, #0
 801ba8e:	f43f af10 	beq.w	801b8b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ba92:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ba96:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ba9a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ba9c:	e709      	b.n	801b8b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ba9e:	f112 0901 	adds.w	r9, r2, #1
 801baa2:	f53f af7d 	bmi.w	801b9a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801baa6:	454b      	cmp	r3, r9
 801baa8:	f6ff af7a 	blt.w	801b9a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801baac:	f11c 0901 	adds.w	r9, ip, #1
 801bab0:	f53f af76 	bmi.w	801b9a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801bab4:	45ce      	cmp	lr, r9
 801bab6:	f6ff af73 	blt.w	801b9a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801baba:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801babc:	9202      	str	r2, [sp, #8]
 801babe:	b21b      	sxth	r3, r3
 801bac0:	fa0f f28e 	sxth.w	r2, lr
 801bac4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801bac8:	e9cd c003 	strd	ip, r0, [sp, #12]
 801bacc:	9201      	str	r2, [sp, #4]
 801bace:	9300      	str	r3, [sp, #0]
 801bad0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bad2:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801bad4:	4633      	mov	r3, r6
 801bad6:	4639      	mov	r1, r7
 801bad8:	f7ff fd8e 	bl	801b5f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801badc:	e760      	b.n	801b9a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801bade:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801bae0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bae2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801bae6:	ea4f 422a 	mov.w	r2, sl, asr #16
 801baea:	1429      	asrs	r1, r5, #16
 801baec:	fb03 2101 	mla	r1, r3, r1, r2
 801baf0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801baf2:	440a      	add	r2, r1
 801baf4:	5c61      	ldrb	r1, [r4, r1]
 801baf6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801bafa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bafe:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801bb02:	f1bc 0f00 	cmp.w	ip, #0
 801bb06:	f000 808c 	beq.w	801bc22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801bb0a:	7857      	ldrb	r7, [r2, #1]
 801bb0c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801bb10:	9413      	str	r4, [sp, #76]	@ 0x4c
 801bb12:	b140      	cbz	r0, 801bb26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bb14:	18d7      	adds	r7, r2, r3
 801bb16:	5cd3      	ldrb	r3, [r2, r3]
 801bb18:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801bb1c:	9310      	str	r3, [sp, #64]	@ 0x40
 801bb1e:	787b      	ldrb	r3, [r7, #1]
 801bb20:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801bb24:	9314      	str	r3, [sp, #80]	@ 0x50
 801bb26:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801bb28:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bb2a:	fb1c f200 	smulbb	r2, ip, r0
 801bb2e:	041f      	lsls	r7, r3, #16
 801bb30:	10d2      	asrs	r2, r2, #3
 801bb32:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801bb36:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801bb3a:	431f      	orrs	r7, r3
 801bb3c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801bb40:	9317      	str	r3, [sp, #92]	@ 0x5c
 801bb42:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801bb44:	041b      	lsls	r3, r3, #16
 801bb46:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801bb4a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801bb4e:	ea43 030b 	orr.w	r3, r3, fp
 801bb52:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801bb54:	4353      	muls	r3, r2
 801bb56:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801bb5a:	fb04 3707 	mla	r7, r4, r7, r3
 801bb5e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801bb62:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801bb66:	ea43 0b01 	orr.w	fp, r3, r1
 801bb6a:	f1c0 0110 	rsb	r1, r0, #16
 801bb6e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bb70:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801bb72:	eba1 0c0c 	sub.w	ip, r1, ip
 801bb76:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801bb7a:	fb0c 770b 	mla	r7, ip, fp, r7
 801bb7e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801bb82:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801bb86:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801bb8a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801bb8e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801bb92:	fb02 770c 	mla	r7, r2, ip, r7
 801bb96:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801bb98:	0d79      	lsrs	r1, r7, #21
 801bb9a:	097f      	lsrs	r7, r7, #5
 801bb9c:	8812      	ldrh	r2, [r2, #0]
 801bb9e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801bba2:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801bba6:	430f      	orrs	r7, r1
 801bba8:	b2bb      	uxth	r3, r7
 801bbaa:	1211      	asrs	r1, r2, #8
 801bbac:	1218      	asrs	r0, r3, #8
 801bbae:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801bbb2:	fb11 f104 	smulbb	r1, r1, r4
 801bbb6:	10d7      	asrs	r7, r2, #3
 801bbb8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801bbbc:	00d2      	lsls	r2, r2, #3
 801bbbe:	fb00 1009 	mla	r0, r0, r9, r1
 801bbc2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801bbc6:	10d9      	asrs	r1, r3, #3
 801bbc8:	b2d2      	uxtb	r2, r2
 801bbca:	00db      	lsls	r3, r3, #3
 801bbcc:	fb17 f704 	smulbb	r7, r7, r4
 801bbd0:	fb12 f204 	smulbb	r2, r2, r4
 801bbd4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801bbd8:	b2db      	uxtb	r3, r3
 801bbda:	b280      	uxth	r0, r0
 801bbdc:	fb01 7109 	mla	r1, r1, r9, r7
 801bbe0:	fb03 2309 	mla	r3, r3, r9, r2
 801bbe4:	b29b      	uxth	r3, r3
 801bbe6:	b289      	uxth	r1, r1
 801bbe8:	1c42      	adds	r2, r0, #1
 801bbea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bbee:	1c4f      	adds	r7, r1, #1
 801bbf0:	1c5a      	adds	r2, r3, #1
 801bbf2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801bbf6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801bbfa:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801bbfe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bc02:	0949      	lsrs	r1, r1, #5
 801bc04:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bc06:	4310      	orrs	r0, r2
 801bc08:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801bc0c:	4308      	orrs	r0, r1
 801bc0e:	f823 0b02 	strh.w	r0, [r3], #2
 801bc12:	930e      	str	r3, [sp, #56]	@ 0x38
 801bc14:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801bc16:	449a      	add	sl, r3
 801bc18:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801bc1a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801bc1e:	441d      	add	r5, r3
 801bc20:	e6ed      	b.n	801b9fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801bc22:	2800      	cmp	r0, #0
 801bc24:	f43f af7f 	beq.w	801bb26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bc28:	5cd3      	ldrb	r3, [r2, r3]
 801bc2a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801bc2e:	9310      	str	r3, [sp, #64]	@ 0x40
 801bc30:	e779      	b.n	801bb26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bc32:	b019      	add	sp, #100	@ 0x64
 801bc34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bc38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801bc38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bc3c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801bc40:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801bc44:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801bc48:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801bc4c:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801bc50:	8808      	ldrh	r0, [r1, #0]
 801bc52:	fb08 470e 	mla	r7, r8, lr, r4
 801bc56:	f1b8 0f00 	cmp.w	r8, #0
 801bc5a:	eb02 0907 	add.w	r9, r2, r7
 801bc5e:	db67      	blt.n	801bd30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801bc60:	45c2      	cmp	sl, r8
 801bc62:	dd65      	ble.n	801bd30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801bc64:	2c00      	cmp	r4, #0
 801bc66:	db61      	blt.n	801bd2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801bc68:	45a6      	cmp	lr, r4
 801bc6a:	dd5f      	ble.n	801bd2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801bc6c:	5dd2      	ldrb	r2, [r2, r7]
 801bc6e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801bc72:	1c62      	adds	r2, r4, #1
 801bc74:	d45f      	bmi.n	801bd36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801bc76:	4596      	cmp	lr, r2
 801bc78:	dd5d      	ble.n	801bd36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801bc7a:	2d00      	cmp	r5, #0
 801bc7c:	d05b      	beq.n	801bd36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801bc7e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801bc82:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801bc86:	f118 0801 	adds.w	r8, r8, #1
 801bc8a:	d458      	bmi.n	801bd3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801bc8c:	45c2      	cmp	sl, r8
 801bc8e:	dd56      	ble.n	801bd3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801bc90:	2e00      	cmp	r6, #0
 801bc92:	d054      	beq.n	801bd3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801bc94:	2c00      	cmp	r4, #0
 801bc96:	db50      	blt.n	801bd3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801bc98:	45a6      	cmp	lr, r4
 801bc9a:	dd4e      	ble.n	801bd3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801bc9c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801bca0:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801bca4:	3401      	adds	r4, #1
 801bca6:	d407      	bmi.n	801bcb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801bca8:	45a6      	cmp	lr, r4
 801bcaa:	dd05      	ble.n	801bcb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801bcac:	b125      	cbz	r5, 801bcb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801bcae:	44ce      	add	lr, r9
 801bcb0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801bcb4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801bcb8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801bcbc:	fb15 f406 	smulbb	r4, r5, r6
 801bcc0:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801bcc4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801bcc8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801bccc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801bcd0:	ea43 0c0c 	orr.w	ip, r3, ip
 801bcd4:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801bcd8:	f1c6 0310 	rsb	r3, r6, #16
 801bcdc:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801bce0:	1b5b      	subs	r3, r3, r5
 801bce2:	ea4e 0707 	orr.w	r7, lr, r7
 801bce6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801bcea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801bcee:	437d      	muls	r5, r7
 801bcf0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801bcf4:	0403      	lsls	r3, r0, #16
 801bcf6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801bcfa:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801bcfe:	4318      	orrs	r0, r3
 801bd00:	0413      	lsls	r3, r2, #16
 801bd02:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801bd06:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801bd0a:	4313      	orrs	r3, r2
 801bd0c:	fb04 c000 	mla	r0, r4, r0, ip
 801bd10:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801bd14:	fb06 0003 	mla	r0, r6, r3, r0
 801bd18:	0d43      	lsrs	r3, r0, #21
 801bd1a:	0940      	lsrs	r0, r0, #5
 801bd1c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bd20:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801bd24:	4318      	orrs	r0, r3
 801bd26:	8008      	strh	r0, [r1, #0]
 801bd28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bd2c:	4684      	mov	ip, r0
 801bd2e:	e7a0      	b.n	801bc72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801bd30:	4607      	mov	r7, r0
 801bd32:	4684      	mov	ip, r0
 801bd34:	e7a7      	b.n	801bc86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801bd36:	4607      	mov	r7, r0
 801bd38:	e7a5      	b.n	801bc86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801bd3a:	4602      	mov	r2, r0
 801bd3c:	e7b2      	b.n	801bca4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801bd3e:	4602      	mov	r2, r0
 801bd40:	e7ba      	b.n	801bcb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801bd42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bd42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd46:	b093      	sub	sp, #76	@ 0x4c
 801bd48:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801bd4c:	920f      	str	r2, [sp, #60]	@ 0x3c
 801bd4e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801bd50:	9108      	str	r1, [sp, #32]
 801bd52:	9306      	str	r3, [sp, #24]
 801bd54:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801bd58:	9010      	str	r0, [sp, #64]	@ 0x40
 801bd5a:	6850      	ldr	r0, [r2, #4]
 801bd5c:	6812      	ldr	r2, [r2, #0]
 801bd5e:	fb00 1303 	mla	r3, r0, r3, r1
 801bd62:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801bd66:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bd68:	681b      	ldr	r3, [r3, #0]
 801bd6a:	9307      	str	r3, [sp, #28]
 801bd6c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bd6e:	685f      	ldr	r7, [r3, #4]
 801bd70:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801bd74:	3704      	adds	r7, #4
 801bd76:	9b08      	ldr	r3, [sp, #32]
 801bd78:	2b00      	cmp	r3, #0
 801bd7a:	dc03      	bgt.n	801bd84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801bd7c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801bd7e:	2b00      	cmp	r3, #0
 801bd80:	f340 81b2 	ble.w	801c0e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801bd84:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bd86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bd8a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bd8e:	1e48      	subs	r0, r1, #1
 801bd90:	f102 3cff 	add.w	ip, r2, #4294967295
 801bd94:	9b06      	ldr	r3, [sp, #24]
 801bd96:	2b00      	cmp	r3, #0
 801bd98:	f340 80a9 	ble.w	801beee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801bd9c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801bda0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801bda4:	d406      	bmi.n	801bdb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bda6:	4586      	cmp	lr, r0
 801bda8:	da04      	bge.n	801bdb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bdaa:	2b00      	cmp	r3, #0
 801bdac:	db02      	blt.n	801bdb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bdae:	4563      	cmp	r3, ip
 801bdb0:	f2c0 809e 	blt.w	801bef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801bdb4:	f11e 0e01 	adds.w	lr, lr, #1
 801bdb8:	f100 808f 	bmi.w	801beda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bdbc:	4571      	cmp	r1, lr
 801bdbe:	f2c0 808c 	blt.w	801beda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bdc2:	3301      	adds	r3, #1
 801bdc4:	f100 8089 	bmi.w	801beda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bdc8:	429a      	cmp	r2, r3
 801bdca:	f2c0 8086 	blt.w	801beda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bdce:	f8dd b018 	ldr.w	fp, [sp, #24]
 801bdd2:	46c8      	mov	r8, r9
 801bdd4:	f1bb 0f00 	cmp.w	fp, #0
 801bdd8:	f340 80a6 	ble.w	801bf28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801bddc:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801bdde:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bde0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801bde4:	689b      	ldr	r3, [r3, #8]
 801bde6:	1422      	asrs	r2, r4, #16
 801bde8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801bdec:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801bdf0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801bdf4:	f100 80e3 	bmi.w	801bfbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801bdf8:	f103 3aff 	add.w	sl, r3, #4294967295
 801bdfc:	4552      	cmp	r2, sl
 801bdfe:	f280 80de 	bge.w	801bfbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801be02:	f1bc 0f00 	cmp.w	ip, #0
 801be06:	f2c0 80da 	blt.w	801bfbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801be0a:	f10e 3aff 	add.w	sl, lr, #4294967295
 801be0e:	45d4      	cmp	ip, sl
 801be10:	f280 80d5 	bge.w	801bfbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801be14:	b21b      	sxth	r3, r3
 801be16:	fb0c 2203 	mla	r2, ip, r3, r2
 801be1a:	9d07      	ldr	r5, [sp, #28]
 801be1c:	eb05 0a02 	add.w	sl, r5, r2
 801be20:	5caa      	ldrb	r2, [r5, r2]
 801be22:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801be26:	2800      	cmp	r0, #0
 801be28:	f000 80c0 	beq.w	801bfac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801be2c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801be30:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801be34:	920b      	str	r2, [sp, #44]	@ 0x2c
 801be36:	b151      	cbz	r1, 801be4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801be38:	eb0a 0203 	add.w	r2, sl, r3
 801be3c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801be40:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801be44:	9309      	str	r3, [sp, #36]	@ 0x24
 801be46:	7853      	ldrb	r3, [r2, #1]
 801be48:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801be4c:	930c      	str	r3, [sp, #48]	@ 0x30
 801be4e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801be50:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801be52:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801be56:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801be5a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801be5e:	ea4c 0c03 	orr.w	ip, ip, r3
 801be62:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801be64:	041b      	lsls	r3, r3, #16
 801be66:	fb10 f201 	smulbb	r2, r0, r1
 801be6a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801be6e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801be72:	10d2      	asrs	r2, r2, #3
 801be74:	432b      	orrs	r3, r5
 801be76:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801be7a:	4353      	muls	r3, r2
 801be7c:	fb0a 330c 	mla	r3, sl, ip, r3
 801be80:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801be84:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801be88:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801be8c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801be90:	f1c1 0c10 	rsb	ip, r1, #16
 801be94:	ebac 0c00 	sub.w	ip, ip, r0
 801be98:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801be9c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801bea0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bea2:	0418      	lsls	r0, r3, #16
 801bea4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801bea8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801beac:	4318      	orrs	r0, r3
 801beae:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801beb2:	fb02 c200 	mla	r2, r2, r0, ip
 801beb6:	0d53      	lsrs	r3, r2, #21
 801beb8:	0952      	lsrs	r2, r2, #5
 801beba:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bebe:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801bec2:	431a      	orrs	r2, r3
 801bec4:	f8a8 2000 	strh.w	r2, [r8]
 801bec8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801beca:	441c      	add	r4, r3
 801becc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bece:	f108 0802 	add.w	r8, r8, #2
 801bed2:	441e      	add	r6, r3
 801bed4:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bed8:	e77c      	b.n	801bdd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801beda:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801bedc:	441c      	add	r4, r3
 801bede:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bee0:	441e      	add	r6, r3
 801bee2:	9b06      	ldr	r3, [sp, #24]
 801bee4:	3b01      	subs	r3, #1
 801bee6:	9306      	str	r3, [sp, #24]
 801bee8:	f109 0902 	add.w	r9, r9, #2
 801beec:	e752      	b.n	801bd94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801beee:	d020      	beq.n	801bf32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bef0:	9b06      	ldr	r3, [sp, #24]
 801bef2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801bef4:	3b01      	subs	r3, #1
 801bef6:	fb00 4003 	mla	r0, r0, r3, r4
 801befa:	1400      	asrs	r0, r0, #16
 801befc:	f53f af67 	bmi.w	801bdce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bf00:	3901      	subs	r1, #1
 801bf02:	4288      	cmp	r0, r1
 801bf04:	f6bf af63 	bge.w	801bdce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bf08:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801bf0a:	fb01 6303 	mla	r3, r1, r3, r6
 801bf0e:	141b      	asrs	r3, r3, #16
 801bf10:	f53f af5d 	bmi.w	801bdce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bf14:	3a01      	subs	r2, #1
 801bf16:	4293      	cmp	r3, r2
 801bf18:	f6bf af59 	bge.w	801bdce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bf1c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801bf20:	46ca      	mov	sl, r9
 801bf22:	f1b8 0f00 	cmp.w	r8, #0
 801bf26:	dc67      	bgt.n	801bff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801bf28:	9b06      	ldr	r3, [sp, #24]
 801bf2a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801bf2e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801bf32:	9b08      	ldr	r3, [sp, #32]
 801bf34:	2b00      	cmp	r3, #0
 801bf36:	f340 80d7 	ble.w	801c0e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801bf3a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bf3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bf42:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bf46:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bf48:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bf4c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bf50:	eeb0 6a62 	vmov.f32	s12, s5
 801bf54:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bf58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bf5c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bf60:	ee16 4a10 	vmov	r4, s12
 801bf64:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bf68:	eeb0 6a43 	vmov.f32	s12, s6
 801bf6c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bf70:	ee12 2a90 	vmov	r2, s5
 801bf74:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bf78:	fb92 f3f3 	sdiv	r3, r2, r3
 801bf7c:	ee13 2a10 	vmov	r2, s6
 801bf80:	931f      	str	r3, [sp, #124]	@ 0x7c
 801bf82:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bf84:	fb92 f3f3 	sdiv	r3, r2, r3
 801bf88:	9320      	str	r3, [sp, #128]	@ 0x80
 801bf8a:	9b08      	ldr	r3, [sp, #32]
 801bf8c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801bf8e:	3b01      	subs	r3, #1
 801bf90:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bf94:	9308      	str	r3, [sp, #32]
 801bf96:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bf98:	bf08      	it	eq
 801bf9a:	4613      	moveq	r3, r2
 801bf9c:	ee16 6a10 	vmov	r6, s12
 801bfa0:	9306      	str	r3, [sp, #24]
 801bfa2:	eeb0 3a67 	vmov.f32	s6, s15
 801bfa6:	eef0 2a47 	vmov.f32	s5, s14
 801bfaa:	e6e4      	b.n	801bd76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801bfac:	2900      	cmp	r1, #0
 801bfae:	f43f af4e 	beq.w	801be4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801bfb2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801bfb6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801bfba:	9309      	str	r3, [sp, #36]	@ 0x24
 801bfbc:	e747      	b.n	801be4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801bfbe:	f112 0a01 	adds.w	sl, r2, #1
 801bfc2:	d481      	bmi.n	801bec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bfc4:	4553      	cmp	r3, sl
 801bfc6:	f6ff af7f 	blt.w	801bec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bfca:	f11c 0a01 	adds.w	sl, ip, #1
 801bfce:	f53f af7b 	bmi.w	801bec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bfd2:	45d6      	cmp	lr, sl
 801bfd4:	f6ff af78 	blt.w	801bec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bfd8:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801bfdc:	b21b      	sxth	r3, r3
 801bfde:	fa0f f28e 	sxth.w	r2, lr
 801bfe2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801bfe6:	9201      	str	r2, [sp, #4]
 801bfe8:	9300      	str	r3, [sp, #0]
 801bfea:	9a07      	ldr	r2, [sp, #28]
 801bfec:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801bfee:	463b      	mov	r3, r7
 801bff0:	4641      	mov	r1, r8
 801bff2:	f7ff fe21 	bl	801bc38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801bff6:	e767      	b.n	801bec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bff8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bffa:	9d07      	ldr	r5, [sp, #28]
 801bffc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801c000:	1422      	asrs	r2, r4, #16
 801c002:	1431      	asrs	r1, r6, #16
 801c004:	fb03 2101 	mla	r1, r3, r1, r2
 801c008:	9a07      	ldr	r2, [sp, #28]
 801c00a:	440a      	add	r2, r1
 801c00c:	5c69      	ldrb	r1, [r5, r1]
 801c00e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801c012:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c016:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801c01a:	f1be 0f00 	cmp.w	lr, #0
 801c01e:	d05c      	beq.n	801c0da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801c020:	f892 c001 	ldrb.w	ip, [r2, #1]
 801c024:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801c028:	950d      	str	r5, [sp, #52]	@ 0x34
 801c02a:	b150      	cbz	r0, 801c042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801c02c:	eb02 0c03 	add.w	ip, r2, r3
 801c030:	5cd3      	ldrb	r3, [r2, r3]
 801c032:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c036:	930a      	str	r3, [sp, #40]	@ 0x28
 801c038:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801c03c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c040:	930e      	str	r3, [sp, #56]	@ 0x38
 801c042:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c044:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801c046:	fb1e f200 	smulbb	r2, lr, r0
 801c04a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c04e:	10d2      	asrs	r2, r2, #3
 801c050:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c054:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801c058:	ea4c 0c03 	orr.w	ip, ip, r3
 801c05c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801c060:	9311      	str	r3, [sp, #68]	@ 0x44
 801c062:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c064:	041b      	lsls	r3, r3, #16
 801c066:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801c06a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801c06e:	ea43 030b 	orr.w	r3, r3, fp
 801c072:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c074:	4353      	muls	r3, r2
 801c076:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801c07a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801c07e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801c082:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801c086:	ea43 0b01 	orr.w	fp, r3, r1
 801c08a:	f1c0 0110 	rsb	r1, r0, #16
 801c08e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c090:	eba1 0e0e 	sub.w	lr, r1, lr
 801c094:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801c098:	fb0e cc0b 	mla	ip, lr, fp, ip
 801c09c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801c0a0:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801c0a4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801c0a8:	ea4b 0e0e 	orr.w	lr, fp, lr
 801c0ac:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801c0b0:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c0b4:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801c0b8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c0bc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c0c0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801c0c4:	ea43 0c0c 	orr.w	ip, r3, ip
 801c0c8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c0ca:	f82a cb02 	strh.w	ip, [sl], #2
 801c0ce:	441c      	add	r4, r3
 801c0d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c0d2:	f108 38ff 	add.w	r8, r8, #4294967295
 801c0d6:	441e      	add	r6, r3
 801c0d8:	e723      	b.n	801bf22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c0da:	2800      	cmp	r0, #0
 801c0dc:	d0b1      	beq.n	801c042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801c0de:	5cd3      	ldrb	r3, [r2, r3]
 801c0e0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801c0e4:	930a      	str	r3, [sp, #40]	@ 0x28
 801c0e6:	e7ac      	b.n	801c042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801c0e8:	b013      	add	sp, #76	@ 0x4c
 801c0ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c0ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801c0ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0f2:	880d      	ldrh	r5, [r1, #0]
 801c0f4:	b087      	sub	sp, #28
 801c0f6:	10ef      	asrs	r7, r5, #3
 801c0f8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801c0fc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c100:	00ed      	lsls	r5, r5, #3
 801c102:	9701      	str	r7, [sp, #4]
 801c104:	b2ed      	uxtb	r5, r5
 801c106:	9502      	str	r5, [sp, #8]
 801c108:	9d01      	ldr	r5, [sp, #4]
 801c10a:	9103      	str	r1, [sp, #12]
 801c10c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801c110:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801c114:	9902      	ldr	r1, [sp, #8]
 801c116:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801c11a:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801c11e:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801c122:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801c126:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801c12a:	022d      	lsls	r5, r5, #8
 801c12c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801c130:	fb06 0709 	mla	r7, r6, r9, r0
 801c134:	430d      	orrs	r5, r1
 801c136:	2e00      	cmp	r6, #0
 801c138:	eb02 0c07 	add.w	ip, r2, r7
 801c13c:	9505      	str	r5, [sp, #20]
 801c13e:	f2c0 80b6 	blt.w	801c2ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801c142:	45b3      	cmp	fp, r6
 801c144:	f340 80b3 	ble.w	801c2ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801c148:	2800      	cmp	r0, #0
 801c14a:	f2c0 80ae 	blt.w	801c2aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801c14e:	4581      	cmp	r9, r0
 801c150:	f340 80ab 	ble.w	801c2aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801c154:	5dd7      	ldrb	r7, [r2, r7]
 801c156:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801c15a:	441f      	add	r7, r3
 801c15c:	1c42      	adds	r2, r0, #1
 801c15e:	f100 80a9 	bmi.w	801c2b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801c162:	4591      	cmp	r9, r2
 801c164:	f340 80a6 	ble.w	801c2b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801c168:	2c00      	cmp	r4, #0
 801c16a:	f000 80a3 	beq.w	801c2b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801c16e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801c172:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c176:	441d      	add	r5, r3
 801c178:	3601      	adds	r6, #1
 801c17a:	f100 809f 	bmi.w	801c2bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801c17e:	45b3      	cmp	fp, r6
 801c180:	f340 809c 	ble.w	801c2bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801c184:	f1be 0f00 	cmp.w	lr, #0
 801c188:	f000 8098 	beq.w	801c2bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801c18c:	2800      	cmp	r0, #0
 801c18e:	f2c0 8093 	blt.w	801c2b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801c192:	4581      	cmp	r9, r0
 801c194:	f340 8090 	ble.w	801c2b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801c198:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801c19c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801c1a0:	441e      	add	r6, r3
 801c1a2:	3001      	adds	r0, #1
 801c1a4:	f100 808d 	bmi.w	801c2c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801c1a8:	4581      	cmp	r9, r0
 801c1aa:	f340 808a 	ble.w	801c2c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801c1ae:	2c00      	cmp	r4, #0
 801c1b0:	f000 8087 	beq.w	801c2c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801c1b4:	44e1      	add	r9, ip
 801c1b6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801c1ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c1be:	4413      	add	r3, r2
 801c1c0:	b2a4      	uxth	r4, r4
 801c1c2:	fa1f fe8e 	uxth.w	lr, lr
 801c1c6:	fb04 fb0e 	mul.w	fp, r4, lr
 801c1ca:	0124      	lsls	r4, r4, #4
 801c1cc:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801c1d0:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801c1d4:	eba4 040b 	sub.w	r4, r4, fp
 801c1d8:	fa1f f08e 	uxth.w	r0, lr
 801c1dc:	b2a2      	uxth	r2, r4
 801c1de:	78ac      	ldrb	r4, [r5, #2]
 801c1e0:	f897 c002 	ldrb.w	ip, [r7, #2]
 801c1e4:	9901      	ldr	r1, [sp, #4]
 801c1e6:	eba9 0900 	sub.w	r9, r9, r0
 801c1ea:	fa1f f989 	uxth.w	r9, r9
 801c1ee:	4354      	muls	r4, r2
 801c1f0:	fb09 440c 	mla	r4, r9, ip, r4
 801c1f4:	f896 c002 	ldrb.w	ip, [r6, #2]
 801c1f8:	fb00 440c 	mla	r4, r0, ip, r4
 801c1fc:	f893 c002 	ldrb.w	ip, [r3, #2]
 801c200:	fa1f fe88 	uxth.w	lr, r8
 801c204:	ea6f 0808 	mvn.w	r8, r8
 801c208:	fa5f f888 	uxtb.w	r8, r8
 801c20c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801c210:	fb1a fa08 	smulbb	sl, sl, r8
 801c214:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801c218:	fb0c ac0e 	mla	ip, ip, lr, sl
 801c21c:	f895 a001 	ldrb.w	sl, [r5, #1]
 801c220:	787c      	ldrb	r4, [r7, #1]
 801c222:	782d      	ldrb	r5, [r5, #0]
 801c224:	783f      	ldrb	r7, [r7, #0]
 801c226:	fb02 fa0a 	mul.w	sl, r2, sl
 801c22a:	fb09 aa04 	mla	sl, r9, r4, sl
 801c22e:	7874      	ldrb	r4, [r6, #1]
 801c230:	436a      	muls	r2, r5
 801c232:	7835      	ldrb	r5, [r6, #0]
 801c234:	fb00 aa04 	mla	sl, r0, r4, sl
 801c238:	fb09 2207 	mla	r2, r9, r7, r2
 801c23c:	785c      	ldrb	r4, [r3, #1]
 801c23e:	781b      	ldrb	r3, [r3, #0]
 801c240:	fb00 2005 	mla	r0, r0, r5, r2
 801c244:	fb0b a404 	mla	r4, fp, r4, sl
 801c248:	fb0b 0b03 	mla	fp, fp, r3, r0
 801c24c:	9b02      	ldr	r3, [sp, #8]
 801c24e:	fb11 fa08 	smulbb	sl, r1, r8
 801c252:	fa1f fc8c 	uxth.w	ip, ip
 801c256:	fb13 f808 	smulbb	r8, r3, r8
 801c25a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801c25e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801c262:	fb04 a40e 	mla	r4, r4, lr, sl
 801c266:	f10c 0301 	add.w	r3, ip, #1
 801c26a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801c26e:	fa1f fe8e 	uxth.w	lr, lr
 801c272:	b2a4      	uxth	r4, r4
 801c274:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801c278:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801c27c:	f104 0a01 	add.w	sl, r4, #1
 801c280:	f10e 0c01 	add.w	ip, lr, #1
 801c284:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c288:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c28c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c290:	0964      	lsrs	r4, r4, #5
 801c292:	ea4c 0c03 	orr.w	ip, ip, r3
 801c296:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801c29a:	9b03      	ldr	r3, [sp, #12]
 801c29c:	ea4c 0c04 	orr.w	ip, ip, r4
 801c2a0:	f8a3 c000 	strh.w	ip, [r3]
 801c2a4:	b007      	add	sp, #28
 801c2a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c2aa:	af05      	add	r7, sp, #20
 801c2ac:	e756      	b.n	801c15c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801c2ae:	ad05      	add	r5, sp, #20
 801c2b0:	462f      	mov	r7, r5
 801c2b2:	e761      	b.n	801c178 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801c2b4:	ad05      	add	r5, sp, #20
 801c2b6:	e75f      	b.n	801c178 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801c2b8:	ae05      	add	r6, sp, #20
 801c2ba:	e772      	b.n	801c1a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801c2bc:	ab05      	add	r3, sp, #20
 801c2be:	461e      	mov	r6, r3
 801c2c0:	e77e      	b.n	801c1c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801c2c2:	ab05      	add	r3, sp, #20
 801c2c4:	e77c      	b.n	801c1c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801c2c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c2c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2ca:	b095      	sub	sp, #84	@ 0x54
 801c2cc:	9212      	str	r2, [sp, #72]	@ 0x48
 801c2ce:	9309      	str	r3, [sp, #36]	@ 0x24
 801c2d0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801c2d2:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801c2d6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c2d8:	910e      	str	r1, [sp, #56]	@ 0x38
 801c2da:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801c2de:	9013      	str	r0, [sp, #76]	@ 0x4c
 801c2e0:	6850      	ldr	r0, [r2, #4]
 801c2e2:	6812      	ldr	r2, [r2, #0]
 801c2e4:	fb00 1303 	mla	r3, r0, r3, r1
 801c2e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c2ec:	930a      	str	r3, [sp, #40]	@ 0x28
 801c2ee:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c2f0:	681b      	ldr	r3, [r3, #0]
 801c2f2:	930d      	str	r3, [sp, #52]	@ 0x34
 801c2f4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c2f6:	685c      	ldr	r4, [r3, #4]
 801c2f8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c2fa:	43db      	mvns	r3, r3
 801c2fc:	b2db      	uxtb	r3, r3
 801c2fe:	3404      	adds	r4, #4
 801c300:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c302:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c304:	2b00      	cmp	r3, #0
 801c306:	dc03      	bgt.n	801c310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c308:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801c30a:	2b00      	cmp	r3, #0
 801c30c:	f340 8255 	ble.w	801c7ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801c310:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c312:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c316:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c31a:	1e48      	subs	r0, r1, #1
 801c31c:	1e55      	subs	r5, r2, #1
 801c31e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c320:	2b00      	cmp	r3, #0
 801c322:	f340 80f9 	ble.w	801c518 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801c326:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801c328:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c32a:	1436      	asrs	r6, r6, #16
 801c32c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c330:	d406      	bmi.n	801c340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c332:	4286      	cmp	r6, r0
 801c334:	da04      	bge.n	801c340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c336:	2b00      	cmp	r3, #0
 801c338:	db02      	blt.n	801c340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c33a:	42ab      	cmp	r3, r5
 801c33c:	f2c0 80ed 	blt.w	801c51a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801c340:	3601      	adds	r6, #1
 801c342:	f100 80da 	bmi.w	801c4fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c346:	42b1      	cmp	r1, r6
 801c348:	f2c0 80d7 	blt.w	801c4fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c34c:	3301      	adds	r3, #1
 801c34e:	f100 80d4 	bmi.w	801c4fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c352:	429a      	cmp	r2, r3
 801c354:	f2c0 80d1 	blt.w	801c4fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c358:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c35a:	9311      	str	r3, [sp, #68]	@ 0x44
 801c35c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c35e:	930c      	str	r3, [sp, #48]	@ 0x30
 801c360:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c362:	2b00      	cmp	r3, #0
 801c364:	f340 80fa 	ble.w	801c55c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801c368:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801c36a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c36c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801c36e:	68c6      	ldr	r6, [r0, #12]
 801c370:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801c372:	141d      	asrs	r5, r3, #16
 801c374:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801c378:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c37a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801c37c:	1400      	asrs	r0, r0, #16
 801c37e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801c382:	6892      	ldr	r2, [r2, #8]
 801c384:	f100 813e 	bmi.w	801c604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c388:	1e57      	subs	r7, r2, #1
 801c38a:	42b8      	cmp	r0, r7
 801c38c:	f280 813a 	bge.w	801c604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c390:	2d00      	cmp	r5, #0
 801c392:	f2c0 8137 	blt.w	801c604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c396:	1e77      	subs	r7, r6, #1
 801c398:	42bd      	cmp	r5, r7
 801c39a:	f280 8133 	bge.w	801c604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c39e:	b212      	sxth	r2, r2
 801c3a0:	fb05 0002 	mla	r0, r5, r2, r0
 801c3a4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c3a6:	f815 a000 	ldrb.w	sl, [r5, r0]
 801c3aa:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801c3ae:	182e      	adds	r6, r5, r0
 801c3b0:	eb04 050a 	add.w	r5, r4, sl
 801c3b4:	2b00      	cmp	r3, #0
 801c3b6:	f000 8117 	beq.w	801c5e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801c3ba:	f896 c001 	ldrb.w	ip, [r6, #1]
 801c3be:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801c3c2:	44a4      	add	ip, r4
 801c3c4:	2900      	cmp	r1, #0
 801c3c6:	f000 8117 	beq.w	801c5f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801c3ca:	18b0      	adds	r0, r6, r2
 801c3cc:	5cb2      	ldrb	r2, [r6, r2]
 801c3ce:	7840      	ldrb	r0, [r0, #1]
 801c3d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c3d4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c3d8:	4422      	add	r2, r4
 801c3da:	4420      	add	r0, r4
 801c3dc:	b29b      	uxth	r3, r3
 801c3de:	b289      	uxth	r1, r1
 801c3e0:	fb03 f901 	mul.w	r9, r3, r1
 801c3e4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c3e8:	011b      	lsls	r3, r3, #4
 801c3ea:	b289      	uxth	r1, r1
 801c3ec:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801c3f0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801c3f4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801c3f6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801c3fa:	f8b6 e000 	ldrh.w	lr, [r6]
 801c3fe:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801c402:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801c406:	eba3 0309 	sub.w	r3, r3, r9
 801c40a:	b29b      	uxth	r3, r3
 801c40c:	eba8 0801 	sub.w	r8, r8, r1
 801c410:	fa1f f888 	uxth.w	r8, r8
 801c414:	435f      	muls	r7, r3
 801c416:	fb08 770b 	mla	r7, r8, fp, r7
 801c41a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801c41e:	9310      	str	r3, [sp, #64]	@ 0x40
 801c420:	fb01 770b 	mla	r7, r1, fp, r7
 801c424:	f890 b002 	ldrb.w	fp, [r0, #2]
 801c428:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c42a:	fb09 770b 	mla	r7, r9, fp, r7
 801c42e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801c432:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801c436:	fb1b fb03 	smulbb	fp, fp, r3
 801c43a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c43e:	fb07 b706 	mla	r7, r7, r6, fp
 801c442:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c444:	f895 b001 	ldrb.w	fp, [r5, #1]
 801c448:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801c44c:	f89c c000 	ldrb.w	ip, [ip]
 801c450:	435d      	muls	r5, r3
 801c452:	fb08 550b 	mla	r5, r8, fp, r5
 801c456:	f892 b001 	ldrb.w	fp, [r2, #1]
 801c45a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c45c:	fb01 550b 	mla	r5, r1, fp, r5
 801c460:	f890 b001 	ldrb.w	fp, [r0, #1]
 801c464:	fb09 550b 	mla	r5, r9, fp, r5
 801c468:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801c46c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801c470:	fb1b fb03 	smulbb	fp, fp, r3
 801c474:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c476:	fb03 f30c 	mul.w	r3, r3, ip
 801c47a:	f892 c000 	ldrb.w	ip, [r2]
 801c47e:	fb08 330a 	mla	r3, r8, sl, r3
 801c482:	fb01 330c 	mla	r3, r1, ip, r3
 801c486:	f890 c000 	ldrb.w	ip, [r0]
 801c48a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c48e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801c492:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c494:	fa5f fe8e 	uxtb.w	lr, lr
 801c498:	b2bf      	uxth	r7, r7
 801c49a:	fb1e fe03 	smulbb	lr, lr, r3
 801c49e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801c4a2:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801c4a6:	fb05 b506 	mla	r5, r5, r6, fp
 801c4aa:	1c7b      	adds	r3, r7, #1
 801c4ac:	fb0c e606 	mla	r6, ip, r6, lr
 801c4b0:	b2ad      	uxth	r5, r5
 801c4b2:	b2b6      	uxth	r6, r6
 801c4b4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c4b8:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801c4bc:	f105 0b01 	add.w	fp, r5, #1
 801c4c0:	1c77      	adds	r7, r6, #1
 801c4c2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801c4c6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801c4ca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c4ce:	096d      	lsrs	r5, r5, #5
 801c4d0:	431f      	orrs	r7, r3
 801c4d2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c4d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c4d8:	433d      	orrs	r5, r7
 801c4da:	801d      	strh	r5, [r3, #0]
 801c4dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c4de:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801c4e0:	3302      	adds	r3, #2
 801c4e2:	930c      	str	r3, [sp, #48]	@ 0x30
 801c4e4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c4e6:	4413      	add	r3, r2
 801c4e8:	931f      	str	r3, [sp, #124]	@ 0x7c
 801c4ea:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801c4ec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c4ee:	4413      	add	r3, r2
 801c4f0:	9320      	str	r3, [sp, #128]	@ 0x80
 801c4f2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c4f4:	3b01      	subs	r3, #1
 801c4f6:	9311      	str	r3, [sp, #68]	@ 0x44
 801c4f8:	e732      	b.n	801c360 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c4fa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c4fc:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801c4fe:	4433      	add	r3, r6
 801c500:	931f      	str	r3, [sp, #124]	@ 0x7c
 801c502:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801c504:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c506:	4433      	add	r3, r6
 801c508:	9320      	str	r3, [sp, #128]	@ 0x80
 801c50a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c50c:	3b01      	subs	r3, #1
 801c50e:	9309      	str	r3, [sp, #36]	@ 0x24
 801c510:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c512:	3302      	adds	r3, #2
 801c514:	930a      	str	r3, [sp, #40]	@ 0x28
 801c516:	e702      	b.n	801c31e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c518:	d027      	beq.n	801c56a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801c51a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c51c:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801c51e:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801c520:	3b01      	subs	r3, #1
 801c522:	fb00 5003 	mla	r0, r0, r3, r5
 801c526:	1400      	asrs	r0, r0, #16
 801c528:	f53f af16 	bmi.w	801c358 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c52c:	3901      	subs	r1, #1
 801c52e:	4288      	cmp	r0, r1
 801c530:	f6bf af12 	bge.w	801c358 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c534:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801c536:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801c538:	fb01 0303 	mla	r3, r1, r3, r0
 801c53c:	141b      	asrs	r3, r3, #16
 801c53e:	f53f af0b 	bmi.w	801c358 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c542:	3a01      	subs	r2, #1
 801c544:	4293      	cmp	r3, r2
 801c546:	f6bf af07 	bge.w	801c358 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c54a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c54c:	9311      	str	r3, [sp, #68]	@ 0x44
 801c54e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801c552:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c554:	930c      	str	r3, [sp, #48]	@ 0x30
 801c556:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c558:	2b00      	cmp	r3, #0
 801c55a:	dc70      	bgt.n	801c63e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801c55c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c55e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c560:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c564:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c568:	930a      	str	r3, [sp, #40]	@ 0x28
 801c56a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c56c:	2b00      	cmp	r3, #0
 801c56e:	f340 8124 	ble.w	801c7ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801c572:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c576:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c57a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c57e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c580:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c584:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c588:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c58c:	eef0 6a62 	vmov.f32	s13, s5
 801c590:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c594:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c598:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c59c:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801c5a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c5a4:	eef0 6a43 	vmov.f32	s13, s6
 801c5a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c5ac:	ee12 2a90 	vmov	r2, s5
 801c5b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c5b4:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5b8:	ee13 2a10 	vmov	r2, s6
 801c5bc:	9321      	str	r3, [sp, #132]	@ 0x84
 801c5be:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c5c0:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5c4:	9322      	str	r3, [sp, #136]	@ 0x88
 801c5c6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c5c8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c5ca:	3b01      	subs	r3, #1
 801c5cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c5d0:	930e      	str	r3, [sp, #56]	@ 0x38
 801c5d2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c5d4:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801c5d8:	bf08      	it	eq
 801c5da:	4613      	moveq	r3, r2
 801c5dc:	9309      	str	r3, [sp, #36]	@ 0x24
 801c5de:	eeb0 3a67 	vmov.f32	s6, s15
 801c5e2:	eef0 2a47 	vmov.f32	s5, s14
 801c5e6:	e68c      	b.n	801c302 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c5e8:	b149      	cbz	r1, 801c5fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801c5ea:	5cb2      	ldrb	r2, [r6, r2]
 801c5ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c5f0:	4422      	add	r2, r4
 801c5f2:	4628      	mov	r0, r5
 801c5f4:	46ac      	mov	ip, r5
 801c5f6:	e6f1      	b.n	801c3dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c5f8:	4628      	mov	r0, r5
 801c5fa:	462a      	mov	r2, r5
 801c5fc:	e6ee      	b.n	801c3dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c5fe:	4628      	mov	r0, r5
 801c600:	462a      	mov	r2, r5
 801c602:	e7f7      	b.n	801c5f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801c604:	1c47      	adds	r7, r0, #1
 801c606:	f53f af69 	bmi.w	801c4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c60a:	42ba      	cmp	r2, r7
 801c60c:	f6ff af66 	blt.w	801c4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c610:	1c6f      	adds	r7, r5, #1
 801c612:	f53f af63 	bmi.w	801c4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c616:	42be      	cmp	r6, r7
 801c618:	f6ff af60 	blt.w	801c4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c61c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801c61e:	9002      	str	r0, [sp, #8]
 801c620:	b236      	sxth	r6, r6
 801c622:	b212      	sxth	r2, r2
 801c624:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801c628:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801c62c:	9200      	str	r2, [sp, #0]
 801c62e:	9601      	str	r6, [sp, #4]
 801c630:	4623      	mov	r3, r4
 801c632:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801c636:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801c638:	f7ff fd59 	bl	801c0ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801c63c:	e74e      	b.n	801c4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801c63e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801c640:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801c642:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801c644:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c646:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801c64a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801c64c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801c650:	142d      	asrs	r5, r5, #16
 801c652:	1400      	asrs	r0, r0, #16
 801c654:	fb02 5000 	mla	r0, r2, r0, r5
 801c658:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801c65a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801c65e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801c662:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801c666:	182e      	adds	r6, r5, r0
 801c668:	eb04 0509 	add.w	r5, r4, r9
 801c66c:	2b00      	cmp	r3, #0
 801c66e:	f000 8096 	beq.w	801c79e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801c672:	7877      	ldrb	r7, [r6, #1]
 801c674:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801c678:	4427      	add	r7, r4
 801c67a:	2900      	cmp	r1, #0
 801c67c:	f000 8097 	beq.w	801c7ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801c680:	18b0      	adds	r0, r6, r2
 801c682:	5cb2      	ldrb	r2, [r6, r2]
 801c684:	7840      	ldrb	r0, [r0, #1]
 801c686:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c68a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c68e:	4422      	add	r2, r4
 801c690:	4420      	add	r0, r4
 801c692:	b29b      	uxth	r3, r3
 801c694:	b289      	uxth	r1, r1
 801c696:	fb03 f801 	mul.w	r8, r3, r1
 801c69a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801c69c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801c6a0:	f8b6 c000 	ldrh.w	ip, [r6]
 801c6a4:	78be      	ldrb	r6, [r7, #2]
 801c6a6:	f814 9009 	ldrb.w	r9, [r4, r9]
 801c6aa:	011b      	lsls	r3, r3, #4
 801c6ac:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801c6b0:	b289      	uxth	r1, r1
 801c6b2:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801c6b6:	eba3 0308 	sub.w	r3, r3, r8
 801c6ba:	b29b      	uxth	r3, r3
 801c6bc:	ebae 0e01 	sub.w	lr, lr, r1
 801c6c0:	fa1f fe8e 	uxth.w	lr, lr
 801c6c4:	435e      	muls	r6, r3
 801c6c6:	fb0e 660b 	mla	r6, lr, fp, r6
 801c6ca:	f892 b002 	ldrb.w	fp, [r2, #2]
 801c6ce:	9310      	str	r3, [sp, #64]	@ 0x40
 801c6d0:	fb01 660b 	mla	r6, r1, fp, r6
 801c6d4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801c6d8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c6da:	fb08 660b 	mla	r6, r8, fp, r6
 801c6de:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801c6e2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801c6e6:	fb1b fb03 	smulbb	fp, fp, r3
 801c6ea:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801c6ee:	fb06 b60a 	mla	r6, r6, sl, fp
 801c6f2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c6f4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801c6f8:	787d      	ldrb	r5, [r7, #1]
 801c6fa:	783f      	ldrb	r7, [r7, #0]
 801c6fc:	435d      	muls	r5, r3
 801c6fe:	fb0e 550b 	mla	r5, lr, fp, r5
 801c702:	f892 b001 	ldrb.w	fp, [r2, #1]
 801c706:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c708:	fb01 550b 	mla	r5, r1, fp, r5
 801c70c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801c710:	fb08 550b 	mla	r5, r8, fp, r5
 801c714:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c718:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801c71c:	fb1b fb03 	smulbb	fp, fp, r3
 801c720:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c722:	437b      	muls	r3, r7
 801c724:	7817      	ldrb	r7, [r2, #0]
 801c726:	fb0e 3309 	mla	r3, lr, r9, r3
 801c72a:	fb01 3307 	mla	r3, r1, r7, r3
 801c72e:	7807      	ldrb	r7, [r0, #0]
 801c730:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c734:	fb08 3707 	mla	r7, r8, r7, r3
 801c738:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c73a:	fa5f fc8c 	uxtb.w	ip, ip
 801c73e:	fb1c fc03 	smulbb	ip, ip, r3
 801c742:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801c746:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c74a:	fb05 b50a 	mla	r5, r5, sl, fp
 801c74e:	fb07 c70a 	mla	r7, r7, sl, ip
 801c752:	b2b6      	uxth	r6, r6
 801c754:	b2ad      	uxth	r5, r5
 801c756:	b2bf      	uxth	r7, r7
 801c758:	1c73      	adds	r3, r6, #1
 801c75a:	1c7a      	adds	r2, r7, #1
 801c75c:	f105 0b01 	add.w	fp, r5, #1
 801c760:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801c764:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801c768:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801c76c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c770:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801c774:	096d      	lsrs	r5, r5, #5
 801c776:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c778:	4316      	orrs	r6, r2
 801c77a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c77e:	432e      	orrs	r6, r5
 801c780:	f823 6b02 	strh.w	r6, [r3], #2
 801c784:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801c786:	930c      	str	r3, [sp, #48]	@ 0x30
 801c788:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801c78a:	4413      	add	r3, r2
 801c78c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801c78e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801c790:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c792:	4413      	add	r3, r2
 801c794:	9320      	str	r3, [sp, #128]	@ 0x80
 801c796:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c798:	3b01      	subs	r3, #1
 801c79a:	9311      	str	r3, [sp, #68]	@ 0x44
 801c79c:	e6db      	b.n	801c556 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801c79e:	b149      	cbz	r1, 801c7b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c7a0:	5cb2      	ldrb	r2, [r6, r2]
 801c7a2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c7a6:	4422      	add	r2, r4
 801c7a8:	4628      	mov	r0, r5
 801c7aa:	462f      	mov	r7, r5
 801c7ac:	e771      	b.n	801c692 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801c7ae:	4628      	mov	r0, r5
 801c7b0:	462a      	mov	r2, r5
 801c7b2:	e76e      	b.n	801c692 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801c7b4:	4628      	mov	r0, r5
 801c7b6:	462a      	mov	r2, r5
 801c7b8:	e7f7      	b.n	801c7aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c7ba:	b015      	add	sp, #84	@ 0x54
 801c7bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c7c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801c7c0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7c4:	880f      	ldrh	r7, [r1, #0]
 801c7c6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801c7ca:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801c7ce:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801c7d2:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801c7d6:	023c      	lsls	r4, r7, #8
 801c7d8:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801c7dc:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801c7e0:	017c      	lsls	r4, r7, #5
 801c7e2:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801c7e6:	00ff      	lsls	r7, r7, #3
 801c7e8:	ea4b 0404 	orr.w	r4, fp, r4
 801c7ec:	b2ff      	uxtb	r7, r7
 801c7ee:	fb05 ca0e 	mla	sl, r5, lr, ip
 801c7f2:	4327      	orrs	r7, r4
 801c7f4:	2d00      	cmp	r5, #0
 801c7f6:	eb02 080a 	add.w	r8, r2, sl
 801c7fa:	9701      	str	r7, [sp, #4]
 801c7fc:	db7e      	blt.n	801c8fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801c7fe:	45a9      	cmp	r9, r5
 801c800:	dd7c      	ble.n	801c8fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801c802:	f1bc 0f00 	cmp.w	ip, #0
 801c806:	db77      	blt.n	801c8f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801c808:	45e6      	cmp	lr, ip
 801c80a:	dd75      	ble.n	801c8f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801c80c:	f812 700a 	ldrb.w	r7, [r2, sl]
 801c810:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801c814:	441f      	add	r7, r3
 801c816:	f11c 0201 	adds.w	r2, ip, #1
 801c81a:	d472      	bmi.n	801c902 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801c81c:	4596      	cmp	lr, r2
 801c81e:	dd70      	ble.n	801c902 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801c820:	2800      	cmp	r0, #0
 801c822:	d06e      	beq.n	801c902 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801c824:	f898 4001 	ldrb.w	r4, [r8, #1]
 801c828:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801c82c:	441c      	add	r4, r3
 801c82e:	3501      	adds	r5, #1
 801c830:	d46b      	bmi.n	801c90a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801c832:	45a9      	cmp	r9, r5
 801c834:	dd69      	ble.n	801c90a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801c836:	2e00      	cmp	r6, #0
 801c838:	d067      	beq.n	801c90a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801c83a:	f1bc 0f00 	cmp.w	ip, #0
 801c83e:	db62      	blt.n	801c906 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801c840:	45e6      	cmp	lr, ip
 801c842:	dd60      	ble.n	801c906 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801c844:	f818 500e 	ldrb.w	r5, [r8, lr]
 801c848:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c84c:	441d      	add	r5, r3
 801c84e:	f11c 0201 	adds.w	r2, ip, #1
 801c852:	d45d      	bmi.n	801c910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801c854:	4596      	cmp	lr, r2
 801c856:	dd5b      	ble.n	801c910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801c858:	2800      	cmp	r0, #0
 801c85a:	d059      	beq.n	801c910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801c85c:	44c6      	add	lr, r8
 801c85e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c862:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c866:	4413      	add	r3, r2
 801c868:	b280      	uxth	r0, r0
 801c86a:	b2b2      	uxth	r2, r6
 801c86c:	fb00 f602 	mul.w	r6, r0, r2
 801c870:	0100      	lsls	r0, r0, #4
 801c872:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801c876:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801c87a:	1b80      	subs	r0, r0, r6
 801c87c:	fa1f fc82 	uxth.w	ip, r2
 801c880:	b282      	uxth	r2, r0
 801c882:	78a0      	ldrb	r0, [r4, #2]
 801c884:	f897 e002 	ldrb.w	lr, [r7, #2]
 801c888:	f897 9000 	ldrb.w	r9, [r7]
 801c88c:	787f      	ldrb	r7, [r7, #1]
 801c88e:	eba8 080c 	sub.w	r8, r8, ip
 801c892:	fa1f f888 	uxth.w	r8, r8
 801c896:	4350      	muls	r0, r2
 801c898:	fb08 0e0e 	mla	lr, r8, lr, r0
 801c89c:	78a8      	ldrb	r0, [r5, #2]
 801c89e:	fb0c e000 	mla	r0, ip, r0, lr
 801c8a2:	f893 e002 	ldrb.w	lr, [r3, #2]
 801c8a6:	fb06 0e0e 	mla	lr, r6, lr, r0
 801c8aa:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801c8ae:	f894 e000 	ldrb.w	lr, [r4]
 801c8b2:	fb02 fe0e 	mul.w	lr, r2, lr
 801c8b6:	fb08 e909 	mla	r9, r8, r9, lr
 801c8ba:	f895 e000 	ldrb.w	lr, [r5]
 801c8be:	fb0c 990e 	mla	r9, ip, lr, r9
 801c8c2:	f893 e000 	ldrb.w	lr, [r3]
 801c8c6:	785b      	ldrb	r3, [r3, #1]
 801c8c8:	fb06 9e0e 	mla	lr, r6, lr, r9
 801c8cc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c8d0:	ea4e 0e00 	orr.w	lr, lr, r0
 801c8d4:	7860      	ldrb	r0, [r4, #1]
 801c8d6:	4350      	muls	r0, r2
 801c8d8:	786a      	ldrb	r2, [r5, #1]
 801c8da:	fb08 0007 	mla	r0, r8, r7, r0
 801c8de:	fb0c 0202 	mla	r2, ip, r2, r0
 801c8e2:	fb06 2303 	mla	r3, r6, r3, r2
 801c8e6:	095b      	lsrs	r3, r3, #5
 801c8e8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c8ec:	ea4e 0303 	orr.w	r3, lr, r3
 801c8f0:	800b      	strh	r3, [r1, #0]
 801c8f2:	b003      	add	sp, #12
 801c8f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c8f8:	af01      	add	r7, sp, #4
 801c8fa:	e78c      	b.n	801c816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801c8fc:	ac01      	add	r4, sp, #4
 801c8fe:	4627      	mov	r7, r4
 801c900:	e795      	b.n	801c82e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801c902:	ac01      	add	r4, sp, #4
 801c904:	e793      	b.n	801c82e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801c906:	ad01      	add	r5, sp, #4
 801c908:	e7a1      	b.n	801c84e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801c90a:	ab01      	add	r3, sp, #4
 801c90c:	461d      	mov	r5, r3
 801c90e:	e7ab      	b.n	801c868 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801c910:	ab01      	add	r3, sp, #4
 801c912:	e7a9      	b.n	801c868 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801c914 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c918:	b08f      	sub	sp, #60	@ 0x3c
 801c91a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801c91e:	920c      	str	r2, [sp, #48]	@ 0x30
 801c920:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801c922:	910a      	str	r1, [sp, #40]	@ 0x28
 801c924:	9306      	str	r3, [sp, #24]
 801c926:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801c92a:	900d      	str	r0, [sp, #52]	@ 0x34
 801c92c:	6850      	ldr	r0, [r2, #4]
 801c92e:	6812      	ldr	r2, [r2, #0]
 801c930:	fb00 1303 	mla	r3, r0, r3, r1
 801c934:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c938:	9307      	str	r3, [sp, #28]
 801c93a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c93c:	681b      	ldr	r3, [r3, #0]
 801c93e:	9308      	str	r3, [sp, #32]
 801c940:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c942:	685c      	ldr	r4, [r3, #4]
 801c944:	3404      	adds	r4, #4
 801c946:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c948:	2b00      	cmp	r3, #0
 801c94a:	dc03      	bgt.n	801c954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801c94c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c94e:	2b00      	cmp	r3, #0
 801c950:	f340 81d6 	ble.w	801cd00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801c954:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c956:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c95a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c95e:	1e48      	subs	r0, r1, #1
 801c960:	1e56      	subs	r6, r2, #1
 801c962:	9b06      	ldr	r3, [sp, #24]
 801c964:	2b00      	cmp	r3, #0
 801c966:	f340 80b7 	ble.w	801cad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801c96a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801c96e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c972:	d406      	bmi.n	801c982 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c974:	4287      	cmp	r7, r0
 801c976:	da04      	bge.n	801c982 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c978:	2b00      	cmp	r3, #0
 801c97a:	db02      	blt.n	801c982 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c97c:	42b3      	cmp	r3, r6
 801c97e:	f2c0 80ac 	blt.w	801cada <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801c982:	3701      	adds	r7, #1
 801c984:	f100 809d 	bmi.w	801cac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801c988:	42b9      	cmp	r1, r7
 801c98a:	f2c0 809a 	blt.w	801cac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801c98e:	3301      	adds	r3, #1
 801c990:	f100 8097 	bmi.w	801cac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801c994:	429a      	cmp	r2, r3
 801c996:	f2c0 8094 	blt.w	801cac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801c99a:	9b06      	ldr	r3, [sp, #24]
 801c99c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c99e:	9b07      	ldr	r3, [sp, #28]
 801c9a0:	9309      	str	r3, [sp, #36]	@ 0x24
 801c9a2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c9a4:	2b00      	cmp	r3, #0
 801c9a6:	f340 80b5 	ble.w	801cb14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c9aa:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801c9ac:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801c9ae:	68c7      	ldr	r7, [r0, #12]
 801c9b0:	6892      	ldr	r2, [r2, #8]
 801c9b2:	ea5f 402b 	movs.w	r0, fp, asr #16
 801c9b6:	ea4f 4625 	mov.w	r6, r5, asr #16
 801c9ba:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801c9be:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c9c2:	f100 80fb 	bmi.w	801cbbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801c9c6:	f102 3cff 	add.w	ip, r2, #4294967295
 801c9ca:	4560      	cmp	r0, ip
 801c9cc:	f280 80f6 	bge.w	801cbbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801c9d0:	2e00      	cmp	r6, #0
 801c9d2:	f2c0 80f3 	blt.w	801cbbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801c9d6:	f107 3cff 	add.w	ip, r7, #4294967295
 801c9da:	4566      	cmp	r6, ip
 801c9dc:	f280 80ee 	bge.w	801cbbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801c9e0:	b212      	sxth	r2, r2
 801c9e2:	fb06 0002 	mla	r0, r6, r2, r0
 801c9e6:	9e08      	ldr	r6, [sp, #32]
 801c9e8:	1837      	adds	r7, r6, r0
 801c9ea:	5c30      	ldrb	r0, [r6, r0]
 801c9ec:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801c9f0:	eb04 0c08 	add.w	ip, r4, r8
 801c9f4:	2b00      	cmp	r3, #0
 801c9f6:	f000 80d3 	beq.w	801cba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c9fa:	787e      	ldrb	r6, [r7, #1]
 801c9fc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ca00:	4426      	add	r6, r4
 801ca02:	2900      	cmp	r1, #0
 801ca04:	f000 80d4 	beq.w	801cbb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801ca08:	18b8      	adds	r0, r7, r2
 801ca0a:	5cba      	ldrb	r2, [r7, r2]
 801ca0c:	7840      	ldrb	r0, [r0, #1]
 801ca0e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ca12:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ca16:	4422      	add	r2, r4
 801ca18:	4420      	add	r0, r4
 801ca1a:	b29b      	uxth	r3, r3
 801ca1c:	b289      	uxth	r1, r1
 801ca1e:	fb03 f901 	mul.w	r9, r3, r1
 801ca22:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ca26:	011b      	lsls	r3, r3, #4
 801ca28:	b289      	uxth	r1, r1
 801ca2a:	78b7      	ldrb	r7, [r6, #2]
 801ca2c:	f89c a002 	ldrb.w	sl, [ip, #2]
 801ca30:	f89c c001 	ldrb.w	ip, [ip, #1]
 801ca34:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801ca38:	eba3 0309 	sub.w	r3, r3, r9
 801ca3c:	b29b      	uxth	r3, r3
 801ca3e:	ebae 0e01 	sub.w	lr, lr, r1
 801ca42:	fa1f fe8e 	uxth.w	lr, lr
 801ca46:	435f      	muls	r7, r3
 801ca48:	fb0e 770a 	mla	r7, lr, sl, r7
 801ca4c:	f892 a002 	ldrb.w	sl, [r2, #2]
 801ca50:	fb01 770a 	mla	r7, r1, sl, r7
 801ca54:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ca58:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ca5c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ca60:	f896 8000 	ldrb.w	r8, [r6]
 801ca64:	7876      	ldrb	r6, [r6, #1]
 801ca66:	fb03 f808 	mul.w	r8, r3, r8
 801ca6a:	fb0e 8807 	mla	r8, lr, r7, r8
 801ca6e:	7817      	ldrb	r7, [r2, #0]
 801ca70:	fb01 8807 	mla	r8, r1, r7, r8
 801ca74:	7807      	ldrb	r7, [r0, #0]
 801ca76:	fb09 8707 	mla	r7, r9, r7, r8
 801ca7a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801ca7e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ca82:	ea47 070a 	orr.w	r7, r7, sl
 801ca86:	4373      	muls	r3, r6
 801ca88:	f892 a001 	ldrb.w	sl, [r2, #1]
 801ca8c:	fb0e 330c 	mla	r3, lr, ip, r3
 801ca90:	fb01 310a 	mla	r1, r1, sl, r3
 801ca94:	f890 a001 	ldrb.w	sl, [r0, #1]
 801ca98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ca9a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801ca9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801caa2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801caa6:	ea47 070a 	orr.w	r7, r7, sl
 801caaa:	801f      	strh	r7, [r3, #0]
 801caac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801caae:	3302      	adds	r3, #2
 801cab0:	9309      	str	r3, [sp, #36]	@ 0x24
 801cab2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801cab4:	449b      	add	fp, r3
 801cab6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cab8:	441d      	add	r5, r3
 801caba:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801cabc:	3b01      	subs	r3, #1
 801cabe:	930b      	str	r3, [sp, #44]	@ 0x2c
 801cac0:	e76f      	b.n	801c9a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cac2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801cac4:	449b      	add	fp, r3
 801cac6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cac8:	441d      	add	r5, r3
 801caca:	9b06      	ldr	r3, [sp, #24]
 801cacc:	3b01      	subs	r3, #1
 801cace:	9306      	str	r3, [sp, #24]
 801cad0:	9b07      	ldr	r3, [sp, #28]
 801cad2:	3302      	adds	r3, #2
 801cad4:	9307      	str	r3, [sp, #28]
 801cad6:	e744      	b.n	801c962 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801cad8:	d023      	beq.n	801cb22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801cada:	9b06      	ldr	r3, [sp, #24]
 801cadc:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801cade:	3b01      	subs	r3, #1
 801cae0:	fb00 b003 	mla	r0, r0, r3, fp
 801cae4:	1400      	asrs	r0, r0, #16
 801cae6:	f53f af58 	bmi.w	801c99a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801caea:	3901      	subs	r1, #1
 801caec:	4288      	cmp	r0, r1
 801caee:	f6bf af54 	bge.w	801c99a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801caf2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801caf4:	fb01 5303 	mla	r3, r1, r3, r5
 801caf8:	141b      	asrs	r3, r3, #16
 801cafa:	f53f af4e 	bmi.w	801c99a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cafe:	3a01      	subs	r2, #1
 801cb00:	4293      	cmp	r3, r2
 801cb02:	f6bf af4a 	bge.w	801c99a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cb06:	9b06      	ldr	r3, [sp, #24]
 801cb08:	9309      	str	r3, [sp, #36]	@ 0x24
 801cb0a:	9b07      	ldr	r3, [sp, #28]
 801cb0c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801cb0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cb10:	2b00      	cmp	r3, #0
 801cb12:	dc70      	bgt.n	801cbf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801cb14:	9b06      	ldr	r3, [sp, #24]
 801cb16:	9a07      	ldr	r2, [sp, #28]
 801cb18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cb1c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cb20:	9307      	str	r3, [sp, #28]
 801cb22:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cb24:	2b00      	cmp	r3, #0
 801cb26:	f340 80eb 	ble.w	801cd00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801cb2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cb2e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cb32:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cb36:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801cb38:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cb3c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cb40:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb44:	eef0 6a62 	vmov.f32	s13, s5
 801cb48:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cb4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb50:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cb54:	ee16 ba90 	vmov	fp, s13
 801cb58:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cb5c:	eef0 6a43 	vmov.f32	s13, s6
 801cb60:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cb64:	ee12 2a90 	vmov	r2, s5
 801cb68:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cb6c:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb70:	ee13 2a10 	vmov	r2, s6
 801cb74:	931b      	str	r3, [sp, #108]	@ 0x6c
 801cb76:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801cb78:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb7c:	931c      	str	r3, [sp, #112]	@ 0x70
 801cb7e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cb80:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801cb82:	3b01      	subs	r3, #1
 801cb84:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb88:	930a      	str	r3, [sp, #40]	@ 0x28
 801cb8a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801cb8c:	bf08      	it	eq
 801cb8e:	4613      	moveq	r3, r2
 801cb90:	ee16 5a90 	vmov	r5, s13
 801cb94:	9306      	str	r3, [sp, #24]
 801cb96:	eeb0 3a67 	vmov.f32	s6, s15
 801cb9a:	eef0 2a47 	vmov.f32	s5, s14
 801cb9e:	e6d2      	b.n	801c946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801cba0:	b149      	cbz	r1, 801cbb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cba2:	5cba      	ldrb	r2, [r7, r2]
 801cba4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cba8:	4422      	add	r2, r4
 801cbaa:	4660      	mov	r0, ip
 801cbac:	4666      	mov	r6, ip
 801cbae:	e734      	b.n	801ca1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801cbb0:	4660      	mov	r0, ip
 801cbb2:	4662      	mov	r2, ip
 801cbb4:	e731      	b.n	801ca1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801cbb6:	4660      	mov	r0, ip
 801cbb8:	4662      	mov	r2, ip
 801cbba:	e7f7      	b.n	801cbac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801cbbc:	f110 0c01 	adds.w	ip, r0, #1
 801cbc0:	f53f af74 	bmi.w	801caac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cbc4:	4562      	cmp	r2, ip
 801cbc6:	f6ff af71 	blt.w	801caac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cbca:	f116 0c01 	adds.w	ip, r6, #1
 801cbce:	f53f af6d 	bmi.w	801caac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cbd2:	4567      	cmp	r7, ip
 801cbd4:	f6ff af6a 	blt.w	801caac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cbd8:	b23f      	sxth	r7, r7
 801cbda:	b212      	sxth	r2, r2
 801cbdc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801cbe0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801cbe4:	9200      	str	r2, [sp, #0]
 801cbe6:	9701      	str	r7, [sp, #4]
 801cbe8:	4623      	mov	r3, r4
 801cbea:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801cbee:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801cbf0:	f7ff fde6 	bl	801c7c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801cbf4:	e75a      	b.n	801caac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cbf6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801cbf8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801cbfc:	ea4f 462b 	mov.w	r6, fp, asr #16
 801cc00:	1428      	asrs	r0, r5, #16
 801cc02:	fb02 6000 	mla	r0, r2, r0, r6
 801cc06:	9e08      	ldr	r6, [sp, #32]
 801cc08:	f816 8000 	ldrb.w	r8, [r6, r0]
 801cc0c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801cc10:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801cc14:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801cc18:	1837      	adds	r7, r6, r0
 801cc1a:	eb04 0c08 	add.w	ip, r4, r8
 801cc1e:	2b00      	cmp	r3, #0
 801cc20:	d060      	beq.n	801cce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801cc22:	787e      	ldrb	r6, [r7, #1]
 801cc24:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801cc28:	4426      	add	r6, r4
 801cc2a:	2900      	cmp	r1, #0
 801cc2c:	d062      	beq.n	801ccf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801cc2e:	18b8      	adds	r0, r7, r2
 801cc30:	5cba      	ldrb	r2, [r7, r2]
 801cc32:	7840      	ldrb	r0, [r0, #1]
 801cc34:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801cc38:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801cc3c:	4422      	add	r2, r4
 801cc3e:	4420      	add	r0, r4
 801cc40:	b29b      	uxth	r3, r3
 801cc42:	b289      	uxth	r1, r1
 801cc44:	fb03 f901 	mul.w	r9, r3, r1
 801cc48:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801cc4c:	011b      	lsls	r3, r3, #4
 801cc4e:	b289      	uxth	r1, r1
 801cc50:	78b7      	ldrb	r7, [r6, #2]
 801cc52:	f89c a002 	ldrb.w	sl, [ip, #2]
 801cc56:	f89c c001 	ldrb.w	ip, [ip, #1]
 801cc5a:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801cc5e:	eba3 0309 	sub.w	r3, r3, r9
 801cc62:	b29b      	uxth	r3, r3
 801cc64:	ebae 0e01 	sub.w	lr, lr, r1
 801cc68:	fa1f fe8e 	uxth.w	lr, lr
 801cc6c:	435f      	muls	r7, r3
 801cc6e:	fb0e 770a 	mla	r7, lr, sl, r7
 801cc72:	f892 a002 	ldrb.w	sl, [r2, #2]
 801cc76:	fb01 770a 	mla	r7, r1, sl, r7
 801cc7a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801cc7e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801cc82:	f814 7008 	ldrb.w	r7, [r4, r8]
 801cc86:	f896 8000 	ldrb.w	r8, [r6]
 801cc8a:	7876      	ldrb	r6, [r6, #1]
 801cc8c:	fb03 f808 	mul.w	r8, r3, r8
 801cc90:	fb0e 8807 	mla	r8, lr, r7, r8
 801cc94:	7817      	ldrb	r7, [r2, #0]
 801cc96:	fb01 8807 	mla	r8, r1, r7, r8
 801cc9a:	7807      	ldrb	r7, [r0, #0]
 801cc9c:	fb09 8707 	mla	r7, r9, r7, r8
 801cca0:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801cca4:	4373      	muls	r3, r6
 801cca6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ccaa:	7856      	ldrb	r6, [r2, #1]
 801ccac:	ea47 070a 	orr.w	r7, r7, sl
 801ccb0:	fb0e 330c 	mla	r3, lr, ip, r3
 801ccb4:	f890 a001 	ldrb.w	sl, [r0, #1]
 801ccb8:	fb01 3306 	mla	r3, r1, r6, r3
 801ccbc:	fb09 3a0a 	mla	sl, r9, sl, r3
 801ccc0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ccc4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ccc6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801ccca:	ea47 070a 	orr.w	r7, r7, sl
 801ccce:	f823 7b02 	strh.w	r7, [r3], #2
 801ccd2:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ccd4:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ccd6:	449b      	add	fp, r3
 801ccd8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ccda:	441d      	add	r5, r3
 801ccdc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ccde:	3b01      	subs	r3, #1
 801cce0:	9309      	str	r3, [sp, #36]	@ 0x24
 801cce2:	e714      	b.n	801cb0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801cce4:	b149      	cbz	r1, 801ccfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801cce6:	5cba      	ldrb	r2, [r7, r2]
 801cce8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ccec:	4422      	add	r2, r4
 801ccee:	4660      	mov	r0, ip
 801ccf0:	4666      	mov	r6, ip
 801ccf2:	e7a5      	b.n	801cc40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801ccf4:	4660      	mov	r0, ip
 801ccf6:	4662      	mov	r2, ip
 801ccf8:	e7a2      	b.n	801cc40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801ccfa:	4660      	mov	r0, ip
 801ccfc:	4662      	mov	r2, ip
 801ccfe:	e7f7      	b.n	801ccf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801cd00:	b00f      	add	sp, #60	@ 0x3c
 801cd02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cd06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801cd06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd0a:	b085      	sub	sp, #20
 801cd0c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801cd10:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801cd14:	9102      	str	r1, [sp, #8]
 801cd16:	2c00      	cmp	r4, #0
 801cd18:	fb04 710c 	mla	r1, r4, ip, r7
 801cd1c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801cd20:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801cd24:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801cd28:	eb02 0e01 	add.w	lr, r2, r1
 801cd2c:	f2c0 8122 	blt.w	801cf74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801cd30:	45a0      	cmp	r8, r4
 801cd32:	f340 811f 	ble.w	801cf74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801cd36:	2f00      	cmp	r7, #0
 801cd38:	f2c0 811a 	blt.w	801cf70 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801cd3c:	45bc      	cmp	ip, r7
 801cd3e:	f340 8117 	ble.w	801cf70 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801cd42:	5c52      	ldrb	r2, [r2, r1]
 801cd44:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801cd48:	1c7a      	adds	r2, r7, #1
 801cd4a:	f100 8116 	bmi.w	801cf7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801cd4e:	4594      	cmp	ip, r2
 801cd50:	f340 8113 	ble.w	801cf7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801cd54:	2e00      	cmp	r6, #0
 801cd56:	f000 8112 	beq.w	801cf7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801cd5a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801cd5e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801cd62:	3401      	adds	r4, #1
 801cd64:	f100 810f 	bmi.w	801cf86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801cd68:	45a0      	cmp	r8, r4
 801cd6a:	f340 810c 	ble.w	801cf86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801cd6e:	2800      	cmp	r0, #0
 801cd70:	f000 810c 	beq.w	801cf8c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801cd74:	2f00      	cmp	r7, #0
 801cd76:	f2c0 8104 	blt.w	801cf82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801cd7a:	45bc      	cmp	ip, r7
 801cd7c:	f340 8101 	ble.w	801cf82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801cd80:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801cd84:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801cd88:	3701      	adds	r7, #1
 801cd8a:	f100 8102 	bmi.w	801cf92 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801cd8e:	45bc      	cmp	ip, r7
 801cd90:	f340 80ff 	ble.w	801cf92 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801cd94:	2e00      	cmp	r6, #0
 801cd96:	f000 80fe 	beq.w	801cf96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801cd9a:	44f4      	add	ip, lr
 801cd9c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801cda0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801cda4:	b2b6      	uxth	r6, r6
 801cda6:	b280      	uxth	r0, r0
 801cda8:	fb00 fe06 	mul.w	lr, r0, r6
 801cdac:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801cdb0:	0136      	lsls	r6, r6, #4
 801cdb2:	eba6 070e 	sub.w	r7, r6, lr
 801cdb6:	b280      	uxth	r0, r0
 801cdb8:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801cdbc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801cdc0:	b2bf      	uxth	r7, r7
 801cdc2:	1a1b      	subs	r3, r3, r0
 801cdc4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801cdc8:	b29b      	uxth	r3, r3
 801cdca:	fb0a f607 	mul.w	r6, sl, r7
 801cdce:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801cdd2:	fb0b 6603 	mla	r6, fp, r3, r6
 801cdd6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801cdda:	fb00 6609 	mla	r6, r0, r9, r6
 801cdde:	fb0e 6608 	mla	r6, lr, r8, r6
 801cde2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801cde6:	9600      	str	r6, [sp, #0]
 801cde8:	2e00      	cmp	r6, #0
 801cdea:	f000 80be 	beq.w	801cf6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801cdee:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801cdf2:	fb0b fc0c 	mul.w	ip, fp, ip
 801cdf6:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801cdfa:	fb0b f505 	mul.w	r5, fp, r5
 801cdfe:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ce02:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801ce06:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ce0a:	44dc      	add	ip, fp
 801ce0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ce10:	9501      	str	r5, [sp, #4]
 801ce12:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801ce16:	9503      	str	r5, [sp, #12]
 801ce18:	9d01      	ldr	r5, [sp, #4]
 801ce1a:	9e02      	ldr	r6, [sp, #8]
 801ce1c:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801ce20:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ce24:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801ce28:	fb0a fc0c 	mul.w	ip, sl, ip
 801ce2c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ce30:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ce34:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ce38:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ce3c:	4465      	add	r5, ip
 801ce3e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ce42:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801ce46:	fb09 fc0c 	mul.w	ip, r9, ip
 801ce4a:	fb09 f904 	mul.w	r9, r9, r4
 801ce4e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801ce52:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ce56:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801ce5a:	fb08 f404 	mul.w	r4, r8, r4
 801ce5e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ce62:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ce66:	fb08 f802 	mul.w	r8, r8, r2
 801ce6a:	fb0a fa01 	mul.w	sl, sl, r1
 801ce6e:	0a22      	lsrs	r2, r4, #8
 801ce70:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801ce74:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801ce78:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801ce7c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ce80:	4414      	add	r4, r2
 801ce82:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ce86:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801ce8a:	0a2d      	lsrs	r5, r5, #8
 801ce8c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ce90:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ce94:	9a03      	ldr	r2, [sp, #12]
 801ce96:	8836      	ldrh	r6, [r6, #0]
 801ce98:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801ce9c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801cea0:	437d      	muls	r5, r7
 801cea2:	4461      	add	r1, ip
 801cea4:	0a24      	lsrs	r4, r4, #8
 801cea6:	fb02 5503 	mla	r5, r2, r3, r5
 801ceaa:	0a09      	lsrs	r1, r1, #8
 801ceac:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801ceb0:	fb04 540e 	mla	r4, r4, lr, r5
 801ceb4:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801ceb8:	fb01 4100 	mla	r1, r1, r0, r4
 801cebc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cec0:	0a09      	lsrs	r1, r1, #8
 801cec2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cec6:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801ceca:	fb07 f70a 	mul.w	r7, r7, sl
 801cece:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ced2:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801ced6:	fb03 7101 	mla	r1, r3, r1, r7
 801ceda:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cede:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801cee2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801cee6:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801ceea:	fb00 e101 	mla	r1, r0, r1, lr
 801ceee:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801cef2:	9a00      	ldr	r2, [sp, #0]
 801cef4:	b287      	uxth	r7, r0
 801cef6:	437a      	muls	r2, r7
 801cef8:	0a09      	lsrs	r1, r1, #8
 801cefa:	1c53      	adds	r3, r2, #1
 801cefc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801cf00:	4321      	orrs	r1, r4
 801cf02:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cf06:	1235      	asrs	r5, r6, #8
 801cf08:	0c0a      	lsrs	r2, r1, #16
 801cf0a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801cf0e:	b2db      	uxtb	r3, r3
 801cf10:	fb12 f207 	smulbb	r2, r2, r7
 801cf14:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cf18:	fb05 2503 	mla	r5, r5, r3, r2
 801cf1c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801cf20:	10f2      	asrs	r2, r6, #3
 801cf22:	b2c8      	uxtb	r0, r1
 801cf24:	00f6      	lsls	r6, r6, #3
 801cf26:	fb14 f407 	smulbb	r4, r4, r7
 801cf2a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801cf2e:	b2f6      	uxtb	r6, r6
 801cf30:	fb10 f007 	smulbb	r0, r0, r7
 801cf34:	fb02 4203 	mla	r2, r2, r3, r4
 801cf38:	b2ad      	uxth	r5, r5
 801cf3a:	fb06 0303 	mla	r3, r6, r3, r0
 801cf3e:	b299      	uxth	r1, r3
 801cf40:	b294      	uxth	r4, r2
 801cf42:	1c6b      	adds	r3, r5, #1
 801cf44:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cf48:	1c62      	adds	r2, r4, #1
 801cf4a:	1c4b      	adds	r3, r1, #1
 801cf4c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801cf50:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801cf54:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cf58:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cf5c:	0952      	lsrs	r2, r2, #5
 801cf5e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cf62:	432b      	orrs	r3, r5
 801cf64:	4313      	orrs	r3, r2
 801cf66:	9a02      	ldr	r2, [sp, #8]
 801cf68:	8013      	strh	r3, [r2, #0]
 801cf6a:	b005      	add	sp, #20
 801cf6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf70:	2500      	movs	r5, #0
 801cf72:	e6e9      	b.n	801cd48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801cf74:	2100      	movs	r1, #0
 801cf76:	460d      	mov	r5, r1
 801cf78:	e6f3      	b.n	801cd62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801cf7a:	2100      	movs	r1, #0
 801cf7c:	e6f1      	b.n	801cd62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801cf7e:	4631      	mov	r1, r6
 801cf80:	e6ef      	b.n	801cd62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801cf82:	2400      	movs	r4, #0
 801cf84:	e700      	b.n	801cd88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801cf86:	2200      	movs	r2, #0
 801cf88:	4614      	mov	r4, r2
 801cf8a:	e70b      	b.n	801cda4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801cf8c:	4602      	mov	r2, r0
 801cf8e:	4604      	mov	r4, r0
 801cf90:	e708      	b.n	801cda4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801cf92:	2200      	movs	r2, #0
 801cf94:	e706      	b.n	801cda4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801cf96:	4632      	mov	r2, r6
 801cf98:	e704      	b.n	801cda4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801cf9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cf9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf9e:	b09f      	sub	sp, #124	@ 0x7c
 801cfa0:	921b      	str	r2, [sp, #108]	@ 0x6c
 801cfa2:	9309      	str	r3, [sp, #36]	@ 0x24
 801cfa4:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801cfa6:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801cfaa:	931c      	str	r3, [sp, #112]	@ 0x70
 801cfac:	9119      	str	r1, [sp, #100]	@ 0x64
 801cfae:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801cfb2:	901d      	str	r0, [sp, #116]	@ 0x74
 801cfb4:	6850      	ldr	r0, [r2, #4]
 801cfb6:	6812      	ldr	r2, [r2, #0]
 801cfb8:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801cfba:	fb00 1303 	mla	r3, r0, r3, r1
 801cfbe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cfc2:	930c      	str	r3, [sp, #48]	@ 0x30
 801cfc4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801cfc6:	681b      	ldr	r3, [r3, #0]
 801cfc8:	9312      	str	r3, [sp, #72]	@ 0x48
 801cfca:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801cfcc:	685e      	ldr	r6, [r3, #4]
 801cfce:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801cfd2:	930d      	str	r3, [sp, #52]	@ 0x34
 801cfd4:	3604      	adds	r6, #4
 801cfd6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801cfd8:	2b00      	cmp	r3, #0
 801cfda:	dc03      	bgt.n	801cfe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cfdc:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801cfde:	2b00      	cmp	r3, #0
 801cfe0:	f340 8388 	ble.w	801d6f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801cfe4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801cfe6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cfea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cfee:	1e48      	subs	r0, r1, #1
 801cff0:	1e57      	subs	r7, r2, #1
 801cff2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cff4:	2b00      	cmp	r3, #0
 801cff6:	f340 8195 	ble.w	801d324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801cffa:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801cffc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d000:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d004:	d406      	bmi.n	801d014 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d006:	4584      	cmp	ip, r0
 801d008:	da04      	bge.n	801d014 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d00a:	2b00      	cmp	r3, #0
 801d00c:	db02      	blt.n	801d014 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d00e:	42bb      	cmp	r3, r7
 801d010:	f2c0 8189 	blt.w	801d326 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801d014:	f11c 0c01 	adds.w	ip, ip, #1
 801d018:	f100 8177 	bmi.w	801d30a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d01c:	4561      	cmp	r1, ip
 801d01e:	f2c0 8174 	blt.w	801d30a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d022:	3301      	adds	r3, #1
 801d024:	f100 8171 	bmi.w	801d30a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d028:	429a      	cmp	r2, r3
 801d02a:	f2c0 816e 	blt.w	801d30a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d02e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d030:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801d032:	931a      	str	r3, [sp, #104]	@ 0x68
 801d034:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801d036:	2b00      	cmp	r3, #0
 801d038:	f340 8193 	ble.w	801d362 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801d03c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801d03e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d042:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801d044:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801d048:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801d04a:	141b      	asrs	r3, r3, #16
 801d04c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801d050:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d054:	f100 81d6 	bmi.w	801d404 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801d058:	f100 38ff 	add.w	r8, r0, #4294967295
 801d05c:	4543      	cmp	r3, r8
 801d05e:	f280 81d1 	bge.w	801d404 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801d062:	f1bc 0f00 	cmp.w	ip, #0
 801d066:	f2c0 81cd 	blt.w	801d404 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801d06a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d06e:	45c4      	cmp	ip, r8
 801d070:	f280 81c8 	bge.w	801d404 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801d074:	b200      	sxth	r0, r0
 801d076:	fb0c 3300 	mla	r3, ip, r0, r3
 801d07a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d07c:	eb04 0803 	add.w	r8, r4, r3
 801d080:	5ce3      	ldrb	r3, [r4, r3]
 801d082:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d086:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801d08a:	2a00      	cmp	r2, #0
 801d08c:	f000 81af 	beq.w	801d3ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801d090:	f898 c001 	ldrb.w	ip, [r8, #1]
 801d094:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801d098:	940e      	str	r4, [sp, #56]	@ 0x38
 801d09a:	0e24      	lsrs	r4, r4, #24
 801d09c:	9415      	str	r4, [sp, #84]	@ 0x54
 801d09e:	b179      	cbz	r1, 801d0c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d0a0:	eb08 0c00 	add.w	ip, r8, r0
 801d0a4:	f818 0000 	ldrb.w	r0, [r8, r0]
 801d0a8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801d0ac:	900a      	str	r0, [sp, #40]	@ 0x28
 801d0ae:	0e00      	lsrs	r0, r0, #24
 801d0b0:	9013      	str	r0, [sp, #76]	@ 0x4c
 801d0b2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801d0b6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801d0ba:	900f      	str	r0, [sp, #60]	@ 0x3c
 801d0bc:	0e00      	lsrs	r0, r0, #24
 801d0be:	9016      	str	r0, [sp, #88]	@ 0x58
 801d0c0:	b292      	uxth	r2, r2
 801d0c2:	b289      	uxth	r1, r1
 801d0c4:	fb02 f901 	mul.w	r9, r2, r1
 801d0c8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d0cc:	0112      	lsls	r2, r2, #4
 801d0ce:	eba2 0809 	sub.w	r8, r2, r9
 801d0d2:	b289      	uxth	r1, r1
 801d0d4:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801d0d8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801d0da:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d0dc:	fa1f f888 	uxth.w	r8, r8
 801d0e0:	1a52      	subs	r2, r2, r1
 801d0e2:	b292      	uxth	r2, r2
 801d0e4:	fb08 f000 	mul.w	r0, r8, r0
 801d0e8:	fb02 000e 	mla	r0, r2, lr, r0
 801d0ec:	fb01 0004 	mla	r0, r1, r4, r0
 801d0f0:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801d0f2:	fb09 0004 	mla	r0, r9, r4, r0
 801d0f6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d0fa:	2800      	cmp	r0, #0
 801d0fc:	f000 80fa 	beq.w	801d2f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d100:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801d104:	d01b      	beq.n	801d13e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801d106:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801d10a:	fb0e fa0a 	mul.w	sl, lr, sl
 801d10e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d112:	fb0e fe03 	mul.w	lr, lr, r3
 801d116:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d11a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d11e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801d122:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801d126:	4453      	add	r3, sl
 801d128:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d12c:	0a1b      	lsrs	r3, r3, #8
 801d12e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d132:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d136:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801d13a:	ea43 030c 	orr.w	r3, r3, ip
 801d13e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d140:	2cff      	cmp	r4, #255	@ 0xff
 801d142:	d021      	beq.n	801d188 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d144:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d146:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801d14a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d14c:	fb04 fb0b 	mul.w	fp, r4, fp
 801d150:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d152:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d156:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d158:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d15c:	fb04 fa0a 	mul.w	sl, r4, sl
 801d160:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d164:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d168:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d16c:	44de      	add	lr, fp
 801d16e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d172:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d176:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d17a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d17e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d182:	ea4e 040a 	orr.w	r4, lr, sl
 801d186:	940e      	str	r4, [sp, #56]	@ 0x38
 801d188:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d18a:	2cff      	cmp	r4, #255	@ 0xff
 801d18c:	d021      	beq.n	801d1d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801d18e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d190:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801d194:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d196:	fb04 fb0b 	mul.w	fp, r4, fp
 801d19a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d19c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d1a0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d1a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d1a6:	fb04 fa0a 	mul.w	sl, r4, sl
 801d1aa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d1ae:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d1b2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d1b6:	44de      	add	lr, fp
 801d1b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d1bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d1c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d1c4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d1c8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d1cc:	ea4e 040a 	orr.w	r4, lr, sl
 801d1d0:	940a      	str	r4, [sp, #40]	@ 0x28
 801d1d2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801d1d4:	2cff      	cmp	r4, #255	@ 0xff
 801d1d6:	d021      	beq.n	801d21c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801d1d8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d1da:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801d1de:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801d1e0:	fb04 fb0b 	mul.w	fp, r4, fp
 801d1e4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d1e6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d1ea:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801d1ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d1f0:	fb04 fa0a 	mul.w	sl, r4, sl
 801d1f4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d1f8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d1fc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d200:	44de      	add	lr, fp
 801d202:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d206:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d20a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d20e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d212:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d216:	ea4e 040a 	orr.w	r4, lr, sl
 801d21a:	940f      	str	r4, [sp, #60]	@ 0x3c
 801d21c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d21e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d222:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d224:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801d228:	fb08 fc0c 	mul.w	ip, r8, ip
 801d22c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801d230:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801d234:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d236:	fb01 cc0e 	mla	ip, r1, lr, ip
 801d23a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801d23e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d240:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d244:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801d248:	fb08 f80e 	mul.w	r8, r8, lr
 801d24c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d250:	fb02 8303 	mla	r3, r2, r3, r8
 801d254:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d256:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d258:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801d25c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d25e:	fb01 330a 	mla	r3, r1, sl, r3
 801d262:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801d266:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801d268:	fb09 3901 	mla	r9, r9, r1, r3
 801d26c:	4342      	muls	r2, r0
 801d26e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d272:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d276:	883b      	ldrh	r3, [r7, #0]
 801d278:	1c50      	adds	r0, r2, #1
 801d27a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d27e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801d282:	ea4c 0c09 	orr.w	ip, ip, r9
 801d286:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801d28a:	1219      	asrs	r1, r3, #8
 801d28c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801d290:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801d294:	b2c0      	uxtb	r0, r0
 801d296:	fb12 f204 	smulbb	r2, r2, r4
 801d29a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801d29e:	fb01 2100 	mla	r1, r1, r0, r2
 801d2a2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801d2a6:	10da      	asrs	r2, r3, #3
 801d2a8:	fa5f fc8c 	uxtb.w	ip, ip
 801d2ac:	00db      	lsls	r3, r3, #3
 801d2ae:	fb1c fc04 	smulbb	ip, ip, r4
 801d2b2:	b2db      	uxtb	r3, r3
 801d2b4:	b289      	uxth	r1, r1
 801d2b6:	fb03 c300 	mla	r3, r3, r0, ip
 801d2ba:	fa1f fc83 	uxth.w	ip, r3
 801d2be:	1c4b      	adds	r3, r1, #1
 801d2c0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d2c4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801d2c8:	fb1e fe04 	smulbb	lr, lr, r4
 801d2cc:	f10c 0301 	add.w	r3, ip, #1
 801d2d0:	fb02 e200 	mla	r2, r2, r0, lr
 801d2d4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801d2d8:	b292      	uxth	r2, r2
 801d2da:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801d2de:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d2e2:	430b      	orrs	r3, r1
 801d2e4:	1c51      	adds	r1, r2, #1
 801d2e6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d2ea:	0952      	lsrs	r2, r2, #5
 801d2ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d2f0:	4313      	orrs	r3, r2
 801d2f2:	803b      	strh	r3, [r7, #0]
 801d2f4:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801d2f6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801d2f8:	441a      	add	r2, r3
 801d2fa:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d2fc:	9229      	str	r2, [sp, #164]	@ 0xa4
 801d2fe:	441d      	add	r5, r3
 801d300:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801d302:	3b01      	subs	r3, #1
 801d304:	3702      	adds	r7, #2
 801d306:	931a      	str	r3, [sp, #104]	@ 0x68
 801d308:	e694      	b.n	801d034 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d30a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801d30c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801d30e:	441c      	add	r4, r3
 801d310:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d312:	9429      	str	r4, [sp, #164]	@ 0xa4
 801d314:	441d      	add	r5, r3
 801d316:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d318:	3b01      	subs	r3, #1
 801d31a:	9309      	str	r3, [sp, #36]	@ 0x24
 801d31c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d31e:	3302      	adds	r3, #2
 801d320:	930c      	str	r3, [sp, #48]	@ 0x30
 801d322:	e666      	b.n	801cff2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d324:	d024      	beq.n	801d370 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801d326:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d328:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801d32a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801d32c:	3b01      	subs	r3, #1
 801d32e:	fb00 4003 	mla	r0, r0, r3, r4
 801d332:	1400      	asrs	r0, r0, #16
 801d334:	f53f ae7b 	bmi.w	801d02e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d338:	3901      	subs	r1, #1
 801d33a:	4288      	cmp	r0, r1
 801d33c:	f6bf ae77 	bge.w	801d02e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d340:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801d342:	fb01 5303 	mla	r3, r1, r3, r5
 801d346:	141b      	asrs	r3, r3, #16
 801d348:	f53f ae71 	bmi.w	801d02e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d34c:	3a01      	subs	r2, #1
 801d34e:	4293      	cmp	r3, r2
 801d350:	f6bf ae6d 	bge.w	801d02e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d354:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801d358:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801d35c:	f1bb 0f00 	cmp.w	fp, #0
 801d360:	dc70      	bgt.n	801d444 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801d362:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d364:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d368:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d36a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d36e:	930c      	str	r3, [sp, #48]	@ 0x30
 801d370:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801d372:	2b00      	cmp	r3, #0
 801d374:	f340 81be 	ble.w	801d6f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801d378:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d37c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d380:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d384:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d386:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d38a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d38e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d392:	eef0 6a62 	vmov.f32	s13, s5
 801d396:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d39a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d39e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d3a2:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801d3a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d3aa:	eef0 6a43 	vmov.f32	s13, s6
 801d3ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d3b2:	ee12 2a90 	vmov	r2, s5
 801d3b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d3ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801d3be:	ee13 2a10 	vmov	r2, s6
 801d3c2:	932b      	str	r3, [sp, #172]	@ 0xac
 801d3c4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d3c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d3ca:	932c      	str	r3, [sp, #176]	@ 0xb0
 801d3cc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801d3ce:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801d3d0:	3b01      	subs	r3, #1
 801d3d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d3d6:	9319      	str	r3, [sp, #100]	@ 0x64
 801d3d8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d3da:	bf08      	it	eq
 801d3dc:	4613      	moveq	r3, r2
 801d3de:	ee16 5a90 	vmov	r5, s13
 801d3e2:	9309      	str	r3, [sp, #36]	@ 0x24
 801d3e4:	eeb0 3a67 	vmov.f32	s6, s15
 801d3e8:	eef0 2a47 	vmov.f32	s5, s14
 801d3ec:	e5f3      	b.n	801cfd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d3ee:	2900      	cmp	r1, #0
 801d3f0:	f43f ae66 	beq.w	801d0c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d3f4:	f818 0000 	ldrb.w	r0, [r8, r0]
 801d3f8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801d3fc:	900a      	str	r0, [sp, #40]	@ 0x28
 801d3fe:	0e00      	lsrs	r0, r0, #24
 801d400:	9013      	str	r0, [sp, #76]	@ 0x4c
 801d402:	e65d      	b.n	801d0c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d404:	f113 0801 	adds.w	r8, r3, #1
 801d408:	f53f af74 	bmi.w	801d2f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d40c:	4540      	cmp	r0, r8
 801d40e:	f6ff af71 	blt.w	801d2f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d412:	f11c 0801 	adds.w	r8, ip, #1
 801d416:	f53f af6d 	bmi.w	801d2f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d41a:	45c6      	cmp	lr, r8
 801d41c:	f6ff af6a 	blt.w	801d2f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d420:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801d422:	9302      	str	r3, [sp, #8]
 801d424:	b200      	sxth	r0, r0
 801d426:	fa0f f38e 	sxth.w	r3, lr
 801d42a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801d42e:	e9cd c203 	strd	ip, r2, [sp, #12]
 801d432:	9301      	str	r3, [sp, #4]
 801d434:	9000      	str	r0, [sp, #0]
 801d436:	4633      	mov	r3, r6
 801d438:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801d43a:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801d43c:	4639      	mov	r1, r7
 801d43e:	f7ff fc62 	bl	801cd06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801d442:	e757      	b.n	801d2f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d444:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801d446:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801d448:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d44c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801d44e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d452:	1427      	asrs	r7, r4, #16
 801d454:	142b      	asrs	r3, r5, #16
 801d456:	fb01 7303 	mla	r3, r1, r3, r7
 801d45a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d45c:	18e7      	adds	r7, r4, r3
 801d45e:	5ce3      	ldrb	r3, [r4, r3]
 801d460:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d464:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d468:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d46c:	2a00      	cmp	r2, #0
 801d46e:	f000 8137 	beq.w	801d6e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801d472:	f897 e001 	ldrb.w	lr, [r7, #1]
 801d476:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801d47a:	9410      	str	r4, [sp, #64]	@ 0x40
 801d47c:	0e24      	lsrs	r4, r4, #24
 801d47e:	9417      	str	r4, [sp, #92]	@ 0x5c
 801d480:	b170      	cbz	r0, 801d4a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801d482:	eb07 0e01 	add.w	lr, r7, r1
 801d486:	5c79      	ldrb	r1, [r7, r1]
 801d488:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d48c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801d48e:	0e09      	lsrs	r1, r1, #24
 801d490:	9114      	str	r1, [sp, #80]	@ 0x50
 801d492:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801d496:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d49a:	9111      	str	r1, [sp, #68]	@ 0x44
 801d49c:	0e09      	lsrs	r1, r1, #24
 801d49e:	9118      	str	r1, [sp, #96]	@ 0x60
 801d4a0:	b292      	uxth	r2, r2
 801d4a2:	b280      	uxth	r0, r0
 801d4a4:	fb02 f800 	mul.w	r8, r2, r0
 801d4a8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801d4ac:	0112      	lsls	r2, r2, #4
 801d4ae:	eba2 0e08 	sub.w	lr, r2, r8
 801d4b2:	b280      	uxth	r0, r0
 801d4b4:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801d4b8:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801d4ba:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d4bc:	fa1f fe8e 	uxth.w	lr, lr
 801d4c0:	1a12      	subs	r2, r2, r0
 801d4c2:	b292      	uxth	r2, r2
 801d4c4:	fb0e f101 	mul.w	r1, lr, r1
 801d4c8:	fb02 110c 	mla	r1, r2, ip, r1
 801d4cc:	fb00 1104 	mla	r1, r0, r4, r1
 801d4d0:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801d4d2:	fb08 1104 	mla	r1, r8, r4, r1
 801d4d6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d4da:	2900      	cmp	r1, #0
 801d4dc:	f000 80f5 	beq.w	801d6ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801d4e0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801d4e4:	d019      	beq.n	801d51a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801d4e6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801d4ea:	fb0c fa0a 	mul.w	sl, ip, sl
 801d4ee:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d4f2:	fb0c fc03 	mul.w	ip, ip, r3
 801d4f6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d4fa:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d4fe:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801d502:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801d506:	4453      	add	r3, sl
 801d508:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d50c:	0a1b      	lsrs	r3, r3, #8
 801d50e:	0a3f      	lsrs	r7, r7, #8
 801d510:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d514:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801d518:	433b      	orrs	r3, r7
 801d51a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801d51c:	2cff      	cmp	r4, #255	@ 0xff
 801d51e:	d020      	beq.n	801d562 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801d520:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d522:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d526:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801d528:	4367      	muls	r7, r4
 801d52a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d52c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d530:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801d532:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d536:	fb04 fa0a 	mul.w	sl, r4, sl
 801d53a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d53e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d542:	44bc      	add	ip, r7
 801d544:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d548:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d54c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d550:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d554:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d558:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d55c:	ea4c 040a 	orr.w	r4, ip, sl
 801d560:	9410      	str	r4, [sp, #64]	@ 0x40
 801d562:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d564:	2cff      	cmp	r4, #255	@ 0xff
 801d566:	d020      	beq.n	801d5aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801d568:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d56a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d56e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d570:	4367      	muls	r7, r4
 801d572:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d574:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d578:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d57a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d57e:	fb04 fa0a 	mul.w	sl, r4, sl
 801d582:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d586:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d58a:	44bc      	add	ip, r7
 801d58c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d590:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d594:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d598:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d59c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d5a0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d5a4:	ea4c 040a 	orr.w	r4, ip, sl
 801d5a8:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d5aa:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801d5ac:	2cff      	cmp	r4, #255	@ 0xff
 801d5ae:	d020      	beq.n	801d5f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801d5b0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d5b2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d5b6:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801d5b8:	4367      	muls	r7, r4
 801d5ba:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d5bc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d5c0:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801d5c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d5c6:	fb04 fa0a 	mul.w	sl, r4, sl
 801d5ca:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d5ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d5d2:	44bc      	add	ip, r7
 801d5d4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d5d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d5dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d5e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d5e4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d5e8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d5ec:	ea4c 040a 	orr.w	r4, ip, sl
 801d5f0:	9411      	str	r4, [sp, #68]	@ 0x44
 801d5f2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d5f4:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d5f8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d5fa:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801d5fe:	fb0e f707 	mul.w	r7, lr, r7
 801d602:	fb02 770c 	mla	r7, r2, ip, r7
 801d606:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d60a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d60c:	fb00 770c 	mla	r7, r0, ip, r7
 801d610:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d614:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d616:	fb08 770c 	mla	r7, r8, ip, r7
 801d61a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801d61e:	fb0e fe0c 	mul.w	lr, lr, ip
 801d622:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d626:	fb02 e303 	mla	r3, r2, r3, lr
 801d62a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801d62c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d62e:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801d632:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801d634:	fb00 330a 	mla	r3, r0, sl, r3
 801d638:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801d63c:	fb08 3c0c 	mla	ip, r8, ip, r3
 801d640:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d642:	f8b9 0000 	ldrh.w	r0, [r9]
 801d646:	434b      	muls	r3, r1
 801d648:	0a3f      	lsrs	r7, r7, #8
 801d64a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d64e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801d652:	1c59      	adds	r1, r3, #1
 801d654:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801d658:	ea47 070c 	orr.w	r7, r7, ip
 801d65c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d660:	1202      	asrs	r2, r0, #8
 801d662:	0c3b      	lsrs	r3, r7, #16
 801d664:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801d668:	b2c9      	uxtb	r1, r1
 801d66a:	fb13 f304 	smulbb	r3, r3, r4
 801d66e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801d672:	fb02 3201 	mla	r2, r2, r1, r3
 801d676:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801d67a:	10c3      	asrs	r3, r0, #3
 801d67c:	b2ff      	uxtb	r7, r7
 801d67e:	00c0      	lsls	r0, r0, #3
 801d680:	b292      	uxth	r2, r2
 801d682:	fb1c fc04 	smulbb	ip, ip, r4
 801d686:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801d68a:	b2c0      	uxtb	r0, r0
 801d68c:	fb17 f704 	smulbb	r7, r7, r4
 801d690:	fb03 c301 	mla	r3, r3, r1, ip
 801d694:	fb00 7001 	mla	r0, r0, r1, r7
 801d698:	f102 0c01 	add.w	ip, r2, #1
 801d69c:	b280      	uxth	r0, r0
 801d69e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801d6a2:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801d6a6:	1c42      	adds	r2, r0, #1
 801d6a8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801d6ac:	b29b      	uxth	r3, r3
 801d6ae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d6b2:	ea42 020c 	orr.w	r2, r2, ip
 801d6b6:	f103 0c01 	add.w	ip, r3, #1
 801d6ba:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801d6be:	095b      	lsrs	r3, r3, #5
 801d6c0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d6c4:	431a      	orrs	r2, r3
 801d6c6:	f8a9 2000 	strh.w	r2, [r9]
 801d6ca:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801d6cc:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801d6ce:	441a      	add	r2, r3
 801d6d0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d6d2:	9229      	str	r2, [sp, #164]	@ 0xa4
 801d6d4:	f109 0902 	add.w	r9, r9, #2
 801d6d8:	441d      	add	r5, r3
 801d6da:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d6de:	e63d      	b.n	801d35c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801d6e0:	2800      	cmp	r0, #0
 801d6e2:	f43f aedd 	beq.w	801d4a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801d6e6:	5c79      	ldrb	r1, [r7, r1]
 801d6e8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d6ec:	910b      	str	r1, [sp, #44]	@ 0x2c
 801d6ee:	0e09      	lsrs	r1, r1, #24
 801d6f0:	9114      	str	r1, [sp, #80]	@ 0x50
 801d6f2:	e6d5      	b.n	801d4a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801d6f4:	b01f      	add	sp, #124	@ 0x7c
 801d6f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d6fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801d6fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d6fe:	b089      	sub	sp, #36	@ 0x24
 801d700:	9101      	str	r1, [sp, #4]
 801d702:	9801      	ldr	r0, [sp, #4]
 801d704:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801d708:	8800      	ldrh	r0, [r0, #0]
 801d70a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801d70e:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801d712:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801d716:	1206      	asrs	r6, r0, #8
 801d718:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801d71c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801d720:	9602      	str	r6, [sp, #8]
 801d722:	10c6      	asrs	r6, r0, #3
 801d724:	00c0      	lsls	r0, r0, #3
 801d726:	b2c0      	uxtb	r0, r0
 801d728:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801d72c:	9004      	str	r0, [sp, #16]
 801d72e:	2f00      	cmp	r7, #0
 801d730:	fb07 100c 	mla	r0, r7, ip, r1
 801d734:	9603      	str	r6, [sp, #12]
 801d736:	eb02 0e00 	add.w	lr, r2, r0
 801d73a:	f2c0 810a 	blt.w	801d952 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801d73e:	45b8      	cmp	r8, r7
 801d740:	f340 8107 	ble.w	801d952 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801d744:	2900      	cmp	r1, #0
 801d746:	f2c0 8102 	blt.w	801d94e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801d74a:	458c      	cmp	ip, r1
 801d74c:	f340 80ff 	ble.w	801d94e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801d750:	5c12      	ldrb	r2, [r2, r0]
 801d752:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801d756:	1c4a      	adds	r2, r1, #1
 801d758:	f100 80fe 	bmi.w	801d958 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801d75c:	4594      	cmp	ip, r2
 801d75e:	f340 80fb 	ble.w	801d958 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801d762:	2d00      	cmp	r5, #0
 801d764:	f000 80fa 	beq.w	801d95c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801d768:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801d76c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801d770:	3701      	adds	r7, #1
 801d772:	f100 80f7 	bmi.w	801d964 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801d776:	45b8      	cmp	r8, r7
 801d778:	f340 80f4 	ble.w	801d964 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801d77c:	2c00      	cmp	r4, #0
 801d77e:	f000 80f4 	beq.w	801d96a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801d782:	2900      	cmp	r1, #0
 801d784:	eb0e 020c 	add.w	r2, lr, ip
 801d788:	f2c0 80ea 	blt.w	801d960 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801d78c:	458c      	cmp	ip, r1
 801d78e:	f340 80e7 	ble.w	801d960 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801d792:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801d796:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801d79a:	3101      	adds	r1, #1
 801d79c:	f100 80e8 	bmi.w	801d970 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801d7a0:	458c      	cmp	ip, r1
 801d7a2:	f340 80e5 	ble.w	801d970 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801d7a6:	2d00      	cmp	r5, #0
 801d7a8:	f000 80e4 	beq.w	801d974 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801d7ac:	7852      	ldrb	r2, [r2, #1]
 801d7ae:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801d7b2:	0e0b      	lsrs	r3, r1, #24
 801d7b4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801d7b8:	9300      	str	r3, [sp, #0]
 801d7ba:	b2a4      	uxth	r4, r4
 801d7bc:	b2ab      	uxth	r3, r5
 801d7be:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801d7c2:	fb03 f904 	mul.w	r9, r3, r4
 801d7c6:	fb0a f505 	mul.w	r5, sl, r5
 801d7ca:	011b      	lsls	r3, r3, #4
 801d7cc:	eba3 0e09 	sub.w	lr, r3, r9
 801d7d0:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801d7d4:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801d7d8:	0a28      	lsrs	r0, r5, #8
 801d7da:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801d7de:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801d7e2:	4405      	add	r5, r0
 801d7e4:	0a2d      	lsrs	r5, r5, #8
 801d7e6:	fb0a f303 	mul.w	r3, sl, r3
 801d7ea:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801d7ee:	9005      	str	r0, [sp, #20]
 801d7f0:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801d7f4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d7f8:	0a1b      	lsrs	r3, r3, #8
 801d7fa:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801d7fe:	9306      	str	r3, [sp, #24]
 801d800:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801d804:	fb0b f303 	mul.w	r3, fp, r3
 801d808:	0a1d      	lsrs	r5, r3, #8
 801d80a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801d80e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801d812:	fb0b f606 	mul.w	r6, fp, r6
 801d816:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801d81a:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801d81e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801d822:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801d826:	fb08 f707 	mul.w	r7, r8, r7
 801d82a:	441d      	add	r5, r3
 801d82c:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801d830:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801d834:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801d838:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801d83c:	fb08 fc0c 	mul.w	ip, r8, ip
 801d840:	0a1b      	lsrs	r3, r3, #8
 801d842:	9307      	str	r3, [sp, #28]
 801d844:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801d848:	0e0b      	lsrs	r3, r1, #24
 801d84a:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801d84e:	435f      	muls	r7, r3
 801d850:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801d854:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801d858:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801d85c:	4460      	add	r0, ip
 801d85e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d862:	b2a4      	uxth	r4, r4
 801d864:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d868:	0a2d      	lsrs	r5, r5, #8
 801d86a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801d86e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d872:	fa1f fe8e 	uxth.w	lr, lr
 801d876:	4359      	muls	r1, r3
 801d878:	1b12      	subs	r2, r2, r4
 801d87a:	9b05      	ldr	r3, [sp, #20]
 801d87c:	44bc      	add	ip, r7
 801d87e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801d882:	b292      	uxth	r2, r2
 801d884:	fb05 f50e 	mul.w	r5, r5, lr
 801d888:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d88c:	fb03 5502 	mla	r5, r3, r2, r5
 801d890:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d894:	9b06      	ldr	r3, [sp, #24]
 801d896:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801d89a:	0a36      	lsrs	r6, r6, #8
 801d89c:	0a00      	lsrs	r0, r0, #8
 801d89e:	fb0c 5509 	mla	r5, ip, r9, r5
 801d8a2:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801d8a6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801d8aa:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801d8ae:	fb00 5504 	mla	r5, r0, r4, r5
 801d8b2:	fb0e f606 	mul.w	r6, lr, r6
 801d8b6:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801d8ba:	0a09      	lsrs	r1, r1, #8
 801d8bc:	9b07      	ldr	r3, [sp, #28]
 801d8be:	fb02 6000 	mla	r0, r2, r0, r6
 801d8c2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801d8c6:	fb09 0001 	mla	r0, r9, r1, r0
 801d8ca:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d8ce:	fb0e fe0b 	mul.w	lr, lr, fp
 801d8d2:	fb04 0003 	mla	r0, r4, r3, r0
 801d8d6:	fb02 e20a 	mla	r2, r2, sl, lr
 801d8da:	9b00      	ldr	r3, [sp, #0]
 801d8dc:	fb04 2408 	mla	r4, r4, r8, r2
 801d8e0:	fb09 4903 	mla	r9, r9, r3, r4
 801d8e4:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801d8e8:	9b02      	ldr	r3, [sp, #8]
 801d8ea:	9a04      	ldr	r2, [sp, #16]
 801d8ec:	fa5f f989 	uxtb.w	r9, r9
 801d8f0:	fb03 f109 	mul.w	r1, r3, r9
 801d8f4:	9b03      	ldr	r3, [sp, #12]
 801d8f6:	0a2d      	lsrs	r5, r5, #8
 801d8f8:	0a00      	lsrs	r0, r0, #8
 801d8fa:	fb03 f309 	mul.w	r3, r3, r9
 801d8fe:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801d902:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801d906:	4305      	orrs	r5, r0
 801d908:	fb02 f909 	mul.w	r9, r2, r9
 801d90c:	1c58      	adds	r0, r3, #1
 801d90e:	1c4a      	adds	r2, r1, #1
 801d910:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d914:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d918:	0a2b      	lsrs	r3, r5, #8
 801d91a:	0c2a      	lsrs	r2, r5, #16
 801d91c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d920:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801d924:	00db      	lsls	r3, r3, #3
 801d926:	0212      	lsls	r2, r2, #8
 801d928:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801d92c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d930:	4313      	orrs	r3, r2
 801d932:	f109 0201 	add.w	r2, r9, #1
 801d936:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801d93a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801d93e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d942:	431d      	orrs	r5, r3
 801d944:	9b01      	ldr	r3, [sp, #4]
 801d946:	801d      	strh	r5, [r3, #0]
 801d948:	b009      	add	sp, #36	@ 0x24
 801d94a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d94e:	2000      	movs	r0, #0
 801d950:	e701      	b.n	801d756 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801d952:	2600      	movs	r6, #0
 801d954:	4630      	mov	r0, r6
 801d956:	e70b      	b.n	801d770 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801d958:	2600      	movs	r6, #0
 801d95a:	e709      	b.n	801d770 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801d95c:	462e      	mov	r6, r5
 801d95e:	e707      	b.n	801d770 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801d960:	2700      	movs	r7, #0
 801d962:	e71a      	b.n	801d79a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801d964:	2100      	movs	r1, #0
 801d966:	460f      	mov	r7, r1
 801d968:	e723      	b.n	801d7b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801d96a:	4621      	mov	r1, r4
 801d96c:	4627      	mov	r7, r4
 801d96e:	e720      	b.n	801d7b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801d970:	2100      	movs	r1, #0
 801d972:	e71e      	b.n	801d7b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801d974:	4629      	mov	r1, r5
 801d976:	e71c      	b.n	801d7b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801d978 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d97c:	b09b      	sub	sp, #108	@ 0x6c
 801d97e:	9218      	str	r2, [sp, #96]	@ 0x60
 801d980:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801d982:	9116      	str	r1, [sp, #88]	@ 0x58
 801d984:	9307      	str	r3, [sp, #28]
 801d986:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801d98a:	9019      	str	r0, [sp, #100]	@ 0x64
 801d98c:	6850      	ldr	r0, [r2, #4]
 801d98e:	6812      	ldr	r2, [r2, #0]
 801d990:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801d992:	fb00 1303 	mla	r3, r0, r3, r1
 801d996:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d99a:	930a      	str	r3, [sp, #40]	@ 0x28
 801d99c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d99e:	681b      	ldr	r3, [r3, #0]
 801d9a0:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d9a2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d9a4:	685e      	ldr	r6, [r3, #4]
 801d9a6:	3604      	adds	r6, #4
 801d9a8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801d9aa:	2b00      	cmp	r3, #0
 801d9ac:	dc03      	bgt.n	801d9b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d9ae:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d9b0:	2b00      	cmp	r3, #0
 801d9b2:	f340 8373 	ble.w	801e09c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801d9b6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d9b8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d9bc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d9c0:	1e48      	subs	r0, r1, #1
 801d9c2:	1e57      	subs	r7, r2, #1
 801d9c4:	9b07      	ldr	r3, [sp, #28]
 801d9c6:	2b00      	cmp	r3, #0
 801d9c8:	f340 8190 	ble.w	801dcec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801d9cc:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801d9ce:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d9d2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d9d6:	d406      	bmi.n	801d9e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d9d8:	4584      	cmp	ip, r0
 801d9da:	da04      	bge.n	801d9e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d9dc:	2b00      	cmp	r3, #0
 801d9de:	db02      	blt.n	801d9e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d9e0:	42bb      	cmp	r3, r7
 801d9e2:	f2c0 8184 	blt.w	801dcee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801d9e6:	f11c 0c01 	adds.w	ip, ip, #1
 801d9ea:	f100 8172 	bmi.w	801dcd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d9ee:	4561      	cmp	r1, ip
 801d9f0:	f2c0 816f 	blt.w	801dcd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d9f4:	3301      	adds	r3, #1
 801d9f6:	f100 816c 	bmi.w	801dcd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d9fa:	429a      	cmp	r2, r3
 801d9fc:	f2c0 8169 	blt.w	801dcd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801da00:	9b07      	ldr	r3, [sp, #28]
 801da02:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801da04:	9317      	str	r3, [sp, #92]	@ 0x5c
 801da06:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801da08:	2b00      	cmp	r3, #0
 801da0a:	f340 818e 	ble.w	801dd2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801da0e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801da10:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801da14:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801da16:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801da1a:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801da1c:	141b      	asrs	r3, r3, #16
 801da1e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801da22:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801da26:	f100 81d1 	bmi.w	801ddcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801da2a:	f101 38ff 	add.w	r8, r1, #4294967295
 801da2e:	4543      	cmp	r3, r8
 801da30:	f280 81cc 	bge.w	801ddcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801da34:	f1bc 0f00 	cmp.w	ip, #0
 801da38:	f2c0 81c8 	blt.w	801ddcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801da3c:	f10e 38ff 	add.w	r8, lr, #4294967295
 801da40:	45c4      	cmp	ip, r8
 801da42:	f280 81c3 	bge.w	801ddcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801da46:	b209      	sxth	r1, r1
 801da48:	fb0c 3301 	mla	r3, ip, r1, r3
 801da4c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801da4e:	eb04 0803 	add.w	r8, r4, r3
 801da52:	5ce3      	ldrb	r3, [r4, r3]
 801da54:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801da58:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801da5c:	2a00      	cmp	r2, #0
 801da5e:	f000 81aa 	beq.w	801ddb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801da62:	f898 c001 	ldrb.w	ip, [r8, #1]
 801da66:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801da6a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801da6c:	0e24      	lsrs	r4, r4, #24
 801da6e:	9412      	str	r4, [sp, #72]	@ 0x48
 801da70:	b178      	cbz	r0, 801da92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801da72:	eb08 0c01 	add.w	ip, r8, r1
 801da76:	f818 1001 	ldrb.w	r1, [r8, r1]
 801da7a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801da7e:	9108      	str	r1, [sp, #32]
 801da80:	0e09      	lsrs	r1, r1, #24
 801da82:	9110      	str	r1, [sp, #64]	@ 0x40
 801da84:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801da88:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801da8c:	910c      	str	r1, [sp, #48]	@ 0x30
 801da8e:	0e09      	lsrs	r1, r1, #24
 801da90:	9113      	str	r1, [sp, #76]	@ 0x4c
 801da92:	b292      	uxth	r2, r2
 801da94:	b280      	uxth	r0, r0
 801da96:	fb02 f900 	mul.w	r9, r2, r0
 801da9a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801da9e:	0112      	lsls	r2, r2, #4
 801daa0:	eba2 0809 	sub.w	r8, r2, r9
 801daa4:	b280      	uxth	r0, r0
 801daa6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801daaa:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801daac:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801daae:	fa1f f888 	uxth.w	r8, r8
 801dab2:	1a12      	subs	r2, r2, r0
 801dab4:	b292      	uxth	r2, r2
 801dab6:	fb08 f101 	mul.w	r1, r8, r1
 801daba:	fb02 110e 	mla	r1, r2, lr, r1
 801dabe:	fb00 1104 	mla	r1, r0, r4, r1
 801dac2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801dac4:	fb09 1104 	mla	r1, r9, r4, r1
 801dac8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801dacc:	2900      	cmp	r1, #0
 801dace:	f000 80f5 	beq.w	801dcbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801dad2:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801dad6:	d01b      	beq.n	801db10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dad8:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801dadc:	fb0e fa0a 	mul.w	sl, lr, sl
 801dae0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801dae4:	fb0e fe03 	mul.w	lr, lr, r3
 801dae8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801daec:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801daf0:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801daf4:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801daf8:	4453      	add	r3, sl
 801dafa:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801dafe:	0a1b      	lsrs	r3, r3, #8
 801db00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801db04:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801db08:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801db0c:	ea43 030c 	orr.w	r3, r3, ip
 801db10:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801db12:	2cff      	cmp	r4, #255	@ 0xff
 801db14:	d021      	beq.n	801db5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801db16:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801db18:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801db1c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801db1e:	fb04 fb0b 	mul.w	fp, r4, fp
 801db22:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801db24:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801db28:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801db2a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801db2e:	fb04 fa0a 	mul.w	sl, r4, sl
 801db32:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801db36:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801db3a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801db3e:	44de      	add	lr, fp
 801db40:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801db44:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801db48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801db4c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801db50:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801db54:	ea4e 040a 	orr.w	r4, lr, sl
 801db58:	940b      	str	r4, [sp, #44]	@ 0x2c
 801db5a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801db5c:	2cff      	cmp	r4, #255	@ 0xff
 801db5e:	d021      	beq.n	801dba4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801db60:	9c08      	ldr	r4, [sp, #32]
 801db62:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801db66:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801db68:	fb04 fb0b 	mul.w	fp, r4, fp
 801db6c:	9c08      	ldr	r4, [sp, #32]
 801db6e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801db72:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801db74:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801db78:	fb04 fa0a 	mul.w	sl, r4, sl
 801db7c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801db80:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801db84:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801db88:	44de      	add	lr, fp
 801db8a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801db8e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801db92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801db96:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801db9a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801db9e:	ea4e 040a 	orr.w	r4, lr, sl
 801dba2:	9408      	str	r4, [sp, #32]
 801dba4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801dba6:	2cff      	cmp	r4, #255	@ 0xff
 801dba8:	d021      	beq.n	801dbee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801dbaa:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801dbac:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801dbb0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801dbb2:	fb04 fb0b 	mul.w	fp, r4, fp
 801dbb6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801dbb8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801dbbc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801dbbe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801dbc2:	fb04 fa0a 	mul.w	sl, r4, sl
 801dbc6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801dbca:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801dbce:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801dbd2:	44de      	add	lr, fp
 801dbd4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dbd8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dbdc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dbe0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801dbe4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801dbe8:	ea4e 040a 	orr.w	r4, lr, sl
 801dbec:	940c      	str	r4, [sp, #48]	@ 0x30
 801dbee:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801dbf0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801dbf4:	9c08      	ldr	r4, [sp, #32]
 801dbf6:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801dbfa:	fb08 fc0c 	mul.w	ip, r8, ip
 801dbfe:	fb02 cc0e 	mla	ip, r2, lr, ip
 801dc02:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801dc06:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801dc08:	fb00 cc0e 	mla	ip, r0, lr, ip
 801dc0c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801dc10:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801dc12:	fb09 cc0e 	mla	ip, r9, lr, ip
 801dc16:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801dc1a:	fb08 f80e 	mul.w	r8, r8, lr
 801dc1e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801dc22:	fb02 8303 	mla	r3, r2, r3, r8
 801dc26:	9a08      	ldr	r2, [sp, #32]
 801dc28:	f8b7 8000 	ldrh.w	r8, [r7]
 801dc2c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801dc30:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801dc32:	fb00 330a 	mla	r3, r0, sl, r3
 801dc36:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801dc3a:	fb09 3900 	mla	r9, r9, r0, r3
 801dc3e:	43c9      	mvns	r1, r1
 801dc40:	ea4f 2228 	mov.w	r2, r8, asr #8
 801dc44:	fa5f fe81 	uxtb.w	lr, r1
 801dc48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dc4c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dc50:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801dc54:	fb02 f20e 	mul.w	r2, r2, lr
 801dc58:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801dc5c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801dc60:	ea4c 0c09 	orr.w	ip, ip, r9
 801dc64:	1c53      	adds	r3, r2, #1
 801dc66:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801dc6a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801dc6e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801dc72:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dc76:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801dc7a:	4a63      	ldr	r2, [pc, #396]	@ (801de08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801dc7c:	fb00 f00e 	mul.w	r0, r0, lr
 801dc80:	b2db      	uxtb	r3, r3
 801dc82:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801dc86:	1c43      	adds	r3, r0, #1
 801dc88:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801dc8c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801dc90:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801dc94:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801dc98:	b2c9      	uxtb	r1, r1
 801dc9a:	00db      	lsls	r3, r3, #3
 801dc9c:	fb01 f10e 	mul.w	r1, r1, lr
 801dca0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801dca4:	4313      	orrs	r3, r2
 801dca6:	1c4a      	adds	r2, r1, #1
 801dca8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801dcac:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801dcb0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801dcb4:	ea4c 0c03 	orr.w	ip, ip, r3
 801dcb8:	f8a7 c000 	strh.w	ip, [r7]
 801dcbc:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801dcbe:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801dcc0:	441a      	add	r2, r3
 801dcc2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801dcc4:	9225      	str	r2, [sp, #148]	@ 0x94
 801dcc6:	441d      	add	r5, r3
 801dcc8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801dcca:	3b01      	subs	r3, #1
 801dccc:	3702      	adds	r7, #2
 801dcce:	9317      	str	r3, [sp, #92]	@ 0x5c
 801dcd0:	e699      	b.n	801da06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801dcd2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801dcd4:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801dcd6:	441c      	add	r4, r3
 801dcd8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801dcda:	9425      	str	r4, [sp, #148]	@ 0x94
 801dcdc:	441d      	add	r5, r3
 801dcde:	9b07      	ldr	r3, [sp, #28]
 801dce0:	3b01      	subs	r3, #1
 801dce2:	9307      	str	r3, [sp, #28]
 801dce4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dce6:	3302      	adds	r3, #2
 801dce8:	930a      	str	r3, [sp, #40]	@ 0x28
 801dcea:	e66b      	b.n	801d9c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801dcec:	d024      	beq.n	801dd38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801dcee:	9b07      	ldr	r3, [sp, #28]
 801dcf0:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801dcf2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801dcf4:	3b01      	subs	r3, #1
 801dcf6:	fb00 4003 	mla	r0, r0, r3, r4
 801dcfa:	1400      	asrs	r0, r0, #16
 801dcfc:	f53f ae80 	bmi.w	801da00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801dd00:	3901      	subs	r1, #1
 801dd02:	4288      	cmp	r0, r1
 801dd04:	f6bf ae7c 	bge.w	801da00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801dd08:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801dd0a:	fb01 5303 	mla	r3, r1, r3, r5
 801dd0e:	141b      	asrs	r3, r3, #16
 801dd10:	f53f ae76 	bmi.w	801da00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801dd14:	3a01      	subs	r2, #1
 801dd16:	4293      	cmp	r3, r2
 801dd18:	f6bf ae72 	bge.w	801da00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801dd1c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801dd20:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801dd24:	f1bb 0f00 	cmp.w	fp, #0
 801dd28:	dc70      	bgt.n	801de0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801dd2a:	9b07      	ldr	r3, [sp, #28]
 801dd2c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801dd30:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dd32:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801dd36:	930a      	str	r3, [sp, #40]	@ 0x28
 801dd38:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801dd3a:	2b00      	cmp	r3, #0
 801dd3c:	f340 81ae 	ble.w	801e09c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801dd40:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dd44:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801dd48:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dd4c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dd4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dd52:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dd56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dd5a:	eef0 6a62 	vmov.f32	s13, s5
 801dd5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dd62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dd66:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dd6a:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801dd6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dd72:	eef0 6a43 	vmov.f32	s13, s6
 801dd76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dd7a:	ee12 2a90 	vmov	r2, s5
 801dd7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dd82:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd86:	ee13 2a10 	vmov	r2, s6
 801dd8a:	9327      	str	r3, [sp, #156]	@ 0x9c
 801dd8c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dd8e:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd92:	9328      	str	r3, [sp, #160]	@ 0xa0
 801dd94:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801dd96:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801dd98:	3b01      	subs	r3, #1
 801dd9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dd9e:	9316      	str	r3, [sp, #88]	@ 0x58
 801dda0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dda2:	bf08      	it	eq
 801dda4:	4613      	moveq	r3, r2
 801dda6:	ee16 5a90 	vmov	r5, s13
 801ddaa:	9307      	str	r3, [sp, #28]
 801ddac:	eeb0 3a67 	vmov.f32	s6, s15
 801ddb0:	eef0 2a47 	vmov.f32	s5, s14
 801ddb4:	e5f8      	b.n	801d9a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ddb6:	2800      	cmp	r0, #0
 801ddb8:	f43f ae6b 	beq.w	801da92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801ddbc:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ddc0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ddc4:	9108      	str	r1, [sp, #32]
 801ddc6:	0e09      	lsrs	r1, r1, #24
 801ddc8:	9110      	str	r1, [sp, #64]	@ 0x40
 801ddca:	e662      	b.n	801da92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801ddcc:	f113 0801 	adds.w	r8, r3, #1
 801ddd0:	f53f af74 	bmi.w	801dcbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ddd4:	4541      	cmp	r1, r8
 801ddd6:	f6ff af71 	blt.w	801dcbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ddda:	f11c 0801 	adds.w	r8, ip, #1
 801ddde:	f53f af6d 	bmi.w	801dcbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801dde2:	45c6      	cmp	lr, r8
 801dde4:	f6ff af6a 	blt.w	801dcbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801dde8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801ddec:	b209      	sxth	r1, r1
 801ddee:	fa0f f38e 	sxth.w	r3, lr
 801ddf2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801ddf6:	9301      	str	r3, [sp, #4]
 801ddf8:	9100      	str	r1, [sp, #0]
 801ddfa:	4633      	mov	r3, r6
 801ddfc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ddfe:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801de00:	4639      	mov	r1, r7
 801de02:	f7ff fc7a 	bl	801d6fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801de06:	e759      	b.n	801dcbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801de08:	fffff800 	.word	0xfffff800
 801de0c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801de0e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801de10:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801de14:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801de16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801de1a:	1427      	asrs	r7, r4, #16
 801de1c:	142b      	asrs	r3, r5, #16
 801de1e:	fb01 7303 	mla	r3, r1, r3, r7
 801de22:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801de24:	18e7      	adds	r7, r4, r3
 801de26:	5ce3      	ldrb	r3, [r4, r3]
 801de28:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801de2c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801de30:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801de34:	2a00      	cmp	r2, #0
 801de36:	f000 8127 	beq.w	801e088 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801de3a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801de3e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801de42:	940d      	str	r4, [sp, #52]	@ 0x34
 801de44:	0e24      	lsrs	r4, r4, #24
 801de46:	9414      	str	r4, [sp, #80]	@ 0x50
 801de48:	b170      	cbz	r0, 801de68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801de4a:	eb07 0e01 	add.w	lr, r7, r1
 801de4e:	5c79      	ldrb	r1, [r7, r1]
 801de50:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801de54:	9109      	str	r1, [sp, #36]	@ 0x24
 801de56:	0e09      	lsrs	r1, r1, #24
 801de58:	9111      	str	r1, [sp, #68]	@ 0x44
 801de5a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801de5e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801de62:	910e      	str	r1, [sp, #56]	@ 0x38
 801de64:	0e09      	lsrs	r1, r1, #24
 801de66:	9115      	str	r1, [sp, #84]	@ 0x54
 801de68:	b292      	uxth	r2, r2
 801de6a:	b280      	uxth	r0, r0
 801de6c:	fb02 f800 	mul.w	r8, r2, r0
 801de70:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801de74:	0112      	lsls	r2, r2, #4
 801de76:	eba2 0e08 	sub.w	lr, r2, r8
 801de7a:	b280      	uxth	r0, r0
 801de7c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801de80:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801de82:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801de84:	fa1f fe8e 	uxth.w	lr, lr
 801de88:	1a09      	subs	r1, r1, r0
 801de8a:	b289      	uxth	r1, r1
 801de8c:	fb0e f202 	mul.w	r2, lr, r2
 801de90:	fb01 220c 	mla	r2, r1, ip, r2
 801de94:	fb00 2204 	mla	r2, r0, r4, r2
 801de98:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801de9a:	fb08 2204 	mla	r2, r8, r4, r2
 801de9e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801dea2:	2a00      	cmp	r2, #0
 801dea4:	f000 80e5 	beq.w	801e072 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801dea8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801deac:	d019      	beq.n	801dee2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801deae:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801deb2:	fb0c fa0a 	mul.w	sl, ip, sl
 801deb6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801deba:	fb0c fc03 	mul.w	ip, ip, r3
 801debe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801dec2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801dec6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801deca:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801dece:	4453      	add	r3, sl
 801ded0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ded4:	0a1b      	lsrs	r3, r3, #8
 801ded6:	0a3f      	lsrs	r7, r7, #8
 801ded8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801dedc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801dee0:	433b      	orrs	r3, r7
 801dee2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801dee4:	2cff      	cmp	r4, #255	@ 0xff
 801dee6:	d020      	beq.n	801df2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801dee8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801deea:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801deee:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801def0:	4367      	muls	r7, r4
 801def2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801def4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801def8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801defa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801defe:	fb04 fa0a 	mul.w	sl, r4, sl
 801df02:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801df06:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801df0a:	44bc      	add	ip, r7
 801df0c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801df10:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801df14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801df18:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801df1c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801df20:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801df24:	ea4c 040a 	orr.w	r4, ip, sl
 801df28:	940d      	str	r4, [sp, #52]	@ 0x34
 801df2a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801df2c:	2cff      	cmp	r4, #255	@ 0xff
 801df2e:	d020      	beq.n	801df72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801df30:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801df32:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801df36:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801df38:	4367      	muls	r7, r4
 801df3a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801df3c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801df40:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801df42:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801df46:	fb04 fa0a 	mul.w	sl, r4, sl
 801df4a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801df4e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801df52:	44bc      	add	ip, r7
 801df54:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801df58:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801df5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801df60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801df64:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801df68:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801df6c:	ea4c 040a 	orr.w	r4, ip, sl
 801df70:	9409      	str	r4, [sp, #36]	@ 0x24
 801df72:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801df74:	2cff      	cmp	r4, #255	@ 0xff
 801df76:	d020      	beq.n	801dfba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801df78:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801df7a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801df7e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801df80:	4367      	muls	r7, r4
 801df82:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801df84:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801df88:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801df8a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801df8e:	fb04 fa0a 	mul.w	sl, r4, sl
 801df92:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801df96:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801df9a:	44bc      	add	ip, r7
 801df9c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801dfa0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dfa4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dfa8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dfac:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801dfb0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801dfb4:	ea4c 040a 	orr.w	r4, ip, sl
 801dfb8:	940e      	str	r4, [sp, #56]	@ 0x38
 801dfba:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801dfbc:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801dfc0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801dfc2:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801dfc6:	fb0e f707 	mul.w	r7, lr, r7
 801dfca:	fb01 770c 	mla	r7, r1, ip, r7
 801dfce:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801dfd2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801dfd4:	fb00 770c 	mla	r7, r0, ip, r7
 801dfd8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801dfdc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801dfde:	fb08 770c 	mla	r7, r8, ip, r7
 801dfe2:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801dfe6:	fb0e fe0c 	mul.w	lr, lr, ip
 801dfea:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801dfee:	fb01 e303 	mla	r3, r1, r3, lr
 801dff2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801dff4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801dff8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801dffa:	fb00 330a 	mla	r3, r0, sl, r3
 801dffe:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801e002:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e006:	f8b9 3000 	ldrh.w	r3, [r9]
 801e00a:	43d2      	mvns	r2, r2
 801e00c:	1218      	asrs	r0, r3, #8
 801e00e:	b2d2      	uxtb	r2, r2
 801e010:	10d9      	asrs	r1, r3, #3
 801e012:	0a3f      	lsrs	r7, r7, #8
 801e014:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e018:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e01c:	00db      	lsls	r3, r3, #3
 801e01e:	4350      	muls	r0, r2
 801e020:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801e024:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e028:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e02c:	b2db      	uxtb	r3, r3
 801e02e:	ea47 070c 	orr.w	r7, r7, ip
 801e032:	4351      	muls	r1, r2
 801e034:	4353      	muls	r3, r2
 801e036:	1c42      	adds	r2, r0, #1
 801e038:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e03c:	0c3a      	lsrs	r2, r7, #16
 801e03e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e042:	4a18      	ldr	r2, [pc, #96]	@ (801e0a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801e044:	b2c0      	uxtb	r0, r0
 801e046:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801e04a:	1c4a      	adds	r2, r1, #1
 801e04c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e050:	0a3a      	lsrs	r2, r7, #8
 801e052:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e056:	00c9      	lsls	r1, r1, #3
 801e058:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e05c:	4301      	orrs	r1, r0
 801e05e:	1c58      	adds	r0, r3, #1
 801e060:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e064:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801e068:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801e06c:	4308      	orrs	r0, r1
 801e06e:	f8a9 0000 	strh.w	r0, [r9]
 801e072:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801e074:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801e076:	441a      	add	r2, r3
 801e078:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e07a:	9225      	str	r2, [sp, #148]	@ 0x94
 801e07c:	f109 0902 	add.w	r9, r9, #2
 801e080:	441d      	add	r5, r3
 801e082:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e086:	e64d      	b.n	801dd24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801e088:	2800      	cmp	r0, #0
 801e08a:	f43f aeed 	beq.w	801de68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801e08e:	5c79      	ldrb	r1, [r7, r1]
 801e090:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e094:	9109      	str	r1, [sp, #36]	@ 0x24
 801e096:	0e09      	lsrs	r1, r1, #24
 801e098:	9111      	str	r1, [sp, #68]	@ 0x44
 801e09a:	e6e5      	b.n	801de68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801e09c:	b01b      	add	sp, #108	@ 0x6c
 801e09e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e0a2:	bf00      	nop
 801e0a4:	fffff800 	.word	0xfffff800

0801e0a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801e0a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e0ac:	b085      	sub	sp, #20
 801e0ae:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801e0b2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801e0b6:	9103      	str	r1, [sp, #12]
 801e0b8:	fb00 7406 	mla	r4, r0, r6, r7
 801e0bc:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801e0c0:	2800      	cmp	r0, #0
 801e0c2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801e0c6:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801e0ca:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801e0ce:	9501      	str	r5, [sp, #4]
 801e0d0:	eb03 0904 	add.w	r9, r3, r4
 801e0d4:	f2c0 8150 	blt.w	801e378 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801e0d8:	4583      	cmp	fp, r0
 801e0da:	f340 814d 	ble.w	801e378 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801e0de:	2f00      	cmp	r7, #0
 801e0e0:	f2c0 8146 	blt.w	801e370 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801e0e4:	42be      	cmp	r6, r7
 801e0e6:	f340 8143 	ble.w	801e370 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801e0ea:	f813 c004 	ldrb.w	ip, [r3, r4]
 801e0ee:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801e0f2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801e0f6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801e0fa:	4355      	muls	r5, r2
 801e0fc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e100:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801e104:	fb0c f203 	mul.w	r2, ip, r3
 801e108:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801e10c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801e110:	441d      	add	r5, r3
 801e112:	f102 0320 	add.w	r3, r2, #32
 801e116:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e11a:	0a1b      	lsrs	r3, r3, #8
 801e11c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801e120:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e124:	431c      	orrs	r4, r3
 801e126:	1c7b      	adds	r3, r7, #1
 801e128:	f100 812b 	bmi.w	801e382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801e12c:	429e      	cmp	r6, r3
 801e12e:	f340 8128 	ble.w	801e382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801e132:	2900      	cmp	r1, #0
 801e134:	f000 8128 	beq.w	801e388 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801e138:	9a01      	ldr	r2, [sp, #4]
 801e13a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801e13e:	8855      	ldrh	r5, [r2, #2]
 801e140:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801e144:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801e148:	fb08 f802 	mul.w	r8, r8, r2
 801e14c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e150:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801e154:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801e158:	435d      	muls	r5, r3
 801e15a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e15e:	44d0      	add	r8, sl
 801e160:	f105 0a20 	add.w	sl, r5, #32
 801e164:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801e168:	0a2d      	lsrs	r5, r5, #8
 801e16a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801e16e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e172:	432a      	orrs	r2, r5
 801e174:	3001      	adds	r0, #1
 801e176:	f100 810d 	bmi.w	801e394 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801e17a:	4583      	cmp	fp, r0
 801e17c:	f340 810a 	ble.w	801e394 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801e180:	f1be 0f00 	cmp.w	lr, #0
 801e184:	f000 810b 	beq.w	801e39e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801e188:	2f00      	cmp	r7, #0
 801e18a:	f2c0 8100 	blt.w	801e38e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801e18e:	42be      	cmp	r6, r7
 801e190:	f340 80fd 	ble.w	801e38e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801e194:	9801      	ldr	r0, [sp, #4]
 801e196:	f819 5006 	ldrb.w	r5, [r9, r6]
 801e19a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801e19e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801e1a2:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801e1a6:	fb0a fa00 	mul.w	sl, sl, r0
 801e1aa:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801e1ae:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801e1b2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801e1b6:	fb05 f808 	mul.w	r8, r5, r8
 801e1ba:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801e1be:	4482      	add	sl, r0
 801e1c0:	f108 0020 	add.w	r0, r8, #32
 801e1c4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e1c8:	0a00      	lsrs	r0, r0, #8
 801e1ca:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801e1ce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e1d2:	ea4b 0b00 	orr.w	fp, fp, r0
 801e1d6:	3701      	adds	r7, #1
 801e1d8:	f100 80e6 	bmi.w	801e3a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801e1dc:	42be      	cmp	r6, r7
 801e1de:	f340 80e3 	ble.w	801e3a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801e1e2:	2900      	cmp	r1, #0
 801e1e4:	f000 80e3 	beq.w	801e3ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801e1e8:	3601      	adds	r6, #1
 801e1ea:	9801      	ldr	r0, [sp, #4]
 801e1ec:	f819 7006 	ldrb.w	r7, [r9, r6]
 801e1f0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801e1f4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801e1f8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801e1fc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e200:	fb09 f906 	mul.w	r9, r9, r6
 801e204:	fb07 f800 	mul.w	r8, r7, r0
 801e208:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801e20c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801e210:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801e214:	44d1      	add	r9, sl
 801e216:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801e21a:	f108 0020 	add.w	r0, r8, #32
 801e21e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e222:	0a00      	lsrs	r0, r0, #8
 801e224:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e228:	4330      	orrs	r0, r6
 801e22a:	b28e      	uxth	r6, r1
 801e22c:	fa1f f98e 	uxth.w	r9, lr
 801e230:	fb06 f809 	mul.w	r8, r6, r9
 801e234:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801e238:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801e23c:	0136      	lsls	r6, r6, #4
 801e23e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e242:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801e246:	9601      	str	r6, [sp, #4]
 801e248:	ea4a 0404 	orr.w	r4, sl, r4
 801e24c:	fa1f f689 	uxth.w	r6, r9
 801e250:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801e254:	fb11 f90e 	smulbb	r9, r1, lr
 801e258:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801e25c:	9602      	str	r6, [sp, #8]
 801e25e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e262:	4626      	mov	r6, r4
 801e264:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e268:	f1ce 0410 	rsb	r4, lr, #16
 801e26c:	1a64      	subs	r4, r4, r1
 801e26e:	ea4a 0202 	orr.w	r2, sl, r2
 801e272:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801e276:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801e27a:	434a      	muls	r2, r1
 801e27c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801e280:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e284:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e288:	fb04 2406 	mla	r4, r4, r6, r2
 801e28c:	ea4a 0000 	orr.w	r0, sl, r0
 801e290:	fb09 4200 	mla	r2, r9, r0, r4
 801e294:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801e298:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e29c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801e2a0:	ea44 0b0b 	orr.w	fp, r4, fp
 801e2a4:	9c01      	ldr	r4, [sp, #4]
 801e2a6:	9e02      	ldr	r6, [sp, #8]
 801e2a8:	9903      	ldr	r1, [sp, #12]
 801e2aa:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801e2ae:	1ba4      	subs	r4, r4, r6
 801e2b0:	9e01      	ldr	r6, [sp, #4]
 801e2b2:	8808      	ldrh	r0, [r1, #0]
 801e2b4:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801e2b8:	eba6 0608 	sub.w	r6, r6, r8
 801e2bc:	b2b6      	uxth	r6, r6
 801e2be:	b2a4      	uxth	r4, r4
 801e2c0:	4373      	muls	r3, r6
 801e2c2:	fb0c 3304 	mla	r3, ip, r4, r3
 801e2c6:	9c02      	ldr	r4, [sp, #8]
 801e2c8:	fb04 3505 	mla	r5, r4, r5, r3
 801e2cc:	fb08 5707 	mla	r7, r8, r7, r5
 801e2d0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801e2d4:	b289      	uxth	r1, r1
 801e2d6:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801e2da:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801e2de:	434f      	muls	r7, r1
 801e2e0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e2e4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e2e8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e2ec:	1c7b      	adds	r3, r7, #1
 801e2ee:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e2f2:	ea42 0e0e 	orr.w	lr, r2, lr
 801e2f6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801e2fa:	fa1f f28e 	uxth.w	r2, lr
 801e2fe:	1203      	asrs	r3, r0, #8
 801e300:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801e304:	b2ff      	uxtb	r7, r7
 801e306:	1215      	asrs	r5, r2, #8
 801e308:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801e30c:	fb13 f307 	smulbb	r3, r3, r7
 801e310:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e314:	fb05 3501 	mla	r5, r5, r1, r3
 801e318:	10c3      	asrs	r3, r0, #3
 801e31a:	10d4      	asrs	r4, r2, #3
 801e31c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801e320:	fb13 f307 	smulbb	r3, r3, r7
 801e324:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801e328:	fb04 3401 	mla	r4, r4, r1, r3
 801e32c:	00c3      	lsls	r3, r0, #3
 801e32e:	00d2      	lsls	r2, r2, #3
 801e330:	b2db      	uxtb	r3, r3
 801e332:	fb13 f307 	smulbb	r3, r3, r7
 801e336:	b2d2      	uxtb	r2, r2
 801e338:	fb02 3101 	mla	r1, r2, r1, r3
 801e33c:	b2ad      	uxth	r5, r5
 801e33e:	b289      	uxth	r1, r1
 801e340:	b2a4      	uxth	r4, r4
 801e342:	1c6b      	adds	r3, r5, #1
 801e344:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e348:	1c62      	adds	r2, r4, #1
 801e34a:	1c4b      	adds	r3, r1, #1
 801e34c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e350:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801e354:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e358:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e35c:	0964      	lsrs	r4, r4, #5
 801e35e:	432b      	orrs	r3, r5
 801e360:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801e364:	9a03      	ldr	r2, [sp, #12]
 801e366:	4323      	orrs	r3, r4
 801e368:	8013      	strh	r3, [r2, #0]
 801e36a:	b005      	add	sp, #20
 801e36c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e370:	f04f 0c00 	mov.w	ip, #0
 801e374:	4664      	mov	r4, ip
 801e376:	e6d6      	b.n	801e126 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801e378:	2300      	movs	r3, #0
 801e37a:	469c      	mov	ip, r3
 801e37c:	461a      	mov	r2, r3
 801e37e:	461c      	mov	r4, r3
 801e380:	e6f8      	b.n	801e174 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801e382:	2300      	movs	r3, #0
 801e384:	461a      	mov	r2, r3
 801e386:	e6f5      	b.n	801e174 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801e388:	460b      	mov	r3, r1
 801e38a:	460a      	mov	r2, r1
 801e38c:	e6f2      	b.n	801e174 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801e38e:	2500      	movs	r5, #0
 801e390:	46ab      	mov	fp, r5
 801e392:	e720      	b.n	801e1d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801e394:	2700      	movs	r7, #0
 801e396:	463d      	mov	r5, r7
 801e398:	4638      	mov	r0, r7
 801e39a:	46bb      	mov	fp, r7
 801e39c:	e745      	b.n	801e22a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801e39e:	4677      	mov	r7, lr
 801e3a0:	4675      	mov	r5, lr
 801e3a2:	4670      	mov	r0, lr
 801e3a4:	46f3      	mov	fp, lr
 801e3a6:	e740      	b.n	801e22a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801e3a8:	2700      	movs	r7, #0
 801e3aa:	4638      	mov	r0, r7
 801e3ac:	e73d      	b.n	801e22a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801e3ae:	460f      	mov	r7, r1
 801e3b0:	4608      	mov	r0, r1
 801e3b2:	e73a      	b.n	801e22a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801e3b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e3b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e3b8:	b097      	sub	sp, #92	@ 0x5c
 801e3ba:	9214      	str	r2, [sp, #80]	@ 0x50
 801e3bc:	9308      	str	r3, [sp, #32]
 801e3be:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801e3c0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801e3c4:	9312      	str	r3, [sp, #72]	@ 0x48
 801e3c6:	9111      	str	r1, [sp, #68]	@ 0x44
 801e3c8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801e3cc:	9015      	str	r0, [sp, #84]	@ 0x54
 801e3ce:	6850      	ldr	r0, [r2, #4]
 801e3d0:	6812      	ldr	r2, [r2, #0]
 801e3d2:	fb00 1303 	mla	r3, r0, r3, r1
 801e3d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e3da:	9309      	str	r3, [sp, #36]	@ 0x24
 801e3dc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e3de:	681b      	ldr	r3, [r3, #0]
 801e3e0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e3e2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e3e4:	685b      	ldr	r3, [r3, #4]
 801e3e6:	930c      	str	r3, [sp, #48]	@ 0x30
 801e3e8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801e3ec:	930a      	str	r3, [sp, #40]	@ 0x28
 801e3ee:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801e3f0:	2b00      	cmp	r3, #0
 801e3f2:	dc03      	bgt.n	801e3fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e3f4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801e3f6:	2b00      	cmp	r3, #0
 801e3f8:	f340 83cb 	ble.w	801eb92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801e3fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e3fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e402:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e406:	1e48      	subs	r0, r1, #1
 801e408:	1e55      	subs	r5, r2, #1
 801e40a:	9b08      	ldr	r3, [sp, #32]
 801e40c:	2b00      	cmp	r3, #0
 801e40e:	f340 81a3 	ble.w	801e758 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801e412:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801e414:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e416:	1436      	asrs	r6, r6, #16
 801e418:	ea4f 4323 	mov.w	r3, r3, asr #16
 801e41c:	d406      	bmi.n	801e42c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e41e:	4286      	cmp	r6, r0
 801e420:	da04      	bge.n	801e42c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e422:	2b00      	cmp	r3, #0
 801e424:	db02      	blt.n	801e42c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e426:	42ab      	cmp	r3, r5
 801e428:	f2c0 8197 	blt.w	801e75a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801e42c:	3601      	adds	r6, #1
 801e42e:	f100 8184 	bmi.w	801e73a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801e432:	42b1      	cmp	r1, r6
 801e434:	f2c0 8181 	blt.w	801e73a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801e438:	3301      	adds	r3, #1
 801e43a:	f100 817e 	bmi.w	801e73a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801e43e:	429a      	cmp	r2, r3
 801e440:	f2c0 817b 	blt.w	801e73a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801e444:	9b08      	ldr	r3, [sp, #32]
 801e446:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801e448:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e44a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801e44e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e450:	2b00      	cmp	r3, #0
 801e452:	f340 81a4 	ble.w	801e79e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801e456:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e458:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801e45a:	1418      	asrs	r0, r3, #16
 801e45c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e45e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801e462:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e464:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801e468:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e46a:	142d      	asrs	r5, r5, #16
 801e46c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801e470:	f100 81f8 	bmi.w	801e864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801e474:	f102 3eff 	add.w	lr, r2, #4294967295
 801e478:	4575      	cmp	r5, lr
 801e47a:	f280 81f3 	bge.w	801e864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801e47e:	2800      	cmp	r0, #0
 801e480:	f2c0 81f0 	blt.w	801e864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801e484:	f103 3eff 	add.w	lr, r3, #4294967295
 801e488:	4570      	cmp	r0, lr
 801e48a:	f280 81eb 	bge.w	801e864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801e48e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e490:	b212      	sxth	r2, r2
 801e492:	fb00 5002 	mla	r0, r0, r2, r5
 801e496:	fa1f fe81 	uxth.w	lr, r1
 801e49a:	eb03 0a00 	add.w	sl, r3, r0
 801e49e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801e4a2:	f813 9000 	ldrb.w	r9, [r3, r0]
 801e4a6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e4aa:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801e4ae:	b29b      	uxth	r3, r3
 801e4b0:	f1bc 0f00 	cmp.w	ip, #0
 801e4b4:	f000 81b9 	beq.w	801e82a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801e4b8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801e4bc:	940d      	str	r4, [sp, #52]	@ 0x34
 801e4be:	eb0a 0b02 	add.w	fp, sl, r2
 801e4c2:	fa1f fa8c 	uxth.w	sl, ip
 801e4c6:	fb0a fe0e 	mul.w	lr, sl, lr
 801e4ca:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801e4ce:	fa1f fa8a 	uxth.w	sl, sl
 801e4d2:	eba5 050e 	sub.w	r5, r5, lr
 801e4d6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e4da:	940e      	str	r4, [sp, #56]	@ 0x38
 801e4dc:	eba3 030a 	sub.w	r3, r3, sl
 801e4e0:	b2ad      	uxth	r5, r5
 801e4e2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e4e4:	b29b      	uxth	r3, r3
 801e4e6:	fb08 f505 	mul.w	r5, r8, r5
 801e4ea:	fb09 5303 	mla	r3, r9, r3, r5
 801e4ee:	fb0a 3304 	mla	r3, sl, r4, r3
 801e4f2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e4f4:	fb0e 3304 	mla	r3, lr, r4, r3
 801e4f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e4fc:	2b00      	cmp	r3, #0
 801e4fe:	f000 810f 	beq.w	801e720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e502:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e504:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801e508:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801e50c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801e510:	f000 8190 	beq.w	801e834 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801e514:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801e518:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e51c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e520:	fb09 f000 	mul.w	r0, r9, r0
 801e524:	fb0a fe0e 	mul.w	lr, sl, lr
 801e528:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801e52c:	f100 0b20 	add.w	fp, r0, #32
 801e530:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801e534:	44ce      	add	lr, r9
 801e536:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801e53a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e53e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e542:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e546:	ea4e 0909 	orr.w	r9, lr, r9
 801e54a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801e54e:	8868      	ldrh	r0, [r5, #2]
 801e550:	d019      	beq.n	801e586 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801e552:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801e556:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e55a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e55e:	fb08 f800 	mul.w	r8, r8, r0
 801e562:	fb0a fe0e 	mul.w	lr, sl, lr
 801e566:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801e56a:	f108 0b20 	add.w	fp, r8, #32
 801e56e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801e572:	4486      	add	lr, r0
 801e574:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801e578:	0a00      	lsrs	r0, r0, #8
 801e57a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e57e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e582:	ea4e 0000 	orr.w	r0, lr, r0
 801e586:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801e58a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801e58e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801e592:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e596:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e59a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e59e:	ea4e 0909 	orr.w	r9, lr, r9
 801e5a2:	ea4a 0000 	orr.w	r0, sl, r0
 801e5a6:	f1bc 0f00 	cmp.w	ip, #0
 801e5aa:	f000 8145 	beq.w	801e838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801e5ae:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801e5b2:	3a01      	subs	r2, #1
 801e5b4:	0052      	lsls	r2, r2, #1
 801e5b6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e5b8:	3202      	adds	r2, #2
 801e5ba:	2cff      	cmp	r4, #255	@ 0xff
 801e5bc:	eb05 0e02 	add.w	lr, r5, r2
 801e5c0:	5aaa      	ldrh	r2, [r5, r2]
 801e5c2:	d018      	beq.n	801e5f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e5c4:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801e5c8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e5cc:	fb04 fa02 	mul.w	sl, r4, r2
 801e5d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e5d4:	fb08 f805 	mul.w	r8, r8, r5
 801e5d8:	f10a 0520 	add.w	r5, sl, #32
 801e5dc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801e5e0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801e5e4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e5e8:	4442      	add	r2, r8
 801e5ea:	0a2d      	lsrs	r5, r5, #8
 801e5ec:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801e5f0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e5f4:	432a      	orrs	r2, r5
 801e5f6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e5f8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801e5fc:	2cff      	cmp	r4, #255	@ 0xff
 801e5fe:	d01a      	beq.n	801e636 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801e600:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801e604:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e608:	fb04 fa05 	mul.w	sl, r4, r5
 801e60c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e610:	fb08 f80e 	mul.w	r8, r8, lr
 801e614:	f10a 0e20 	add.w	lr, sl, #32
 801e618:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801e61c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801e620:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e624:	4445      	add	r5, r8
 801e626:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e62a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801e62e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801e632:	ea45 050e 	orr.w	r5, r5, lr
 801e636:	fb1c fe01 	smulbb	lr, ip, r1
 801e63a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801e63e:	f1cc 0810 	rsb	r8, ip, #16
 801e642:	eba8 0801 	sub.w	r8, r8, r1
 801e646:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801e64a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801e64e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801e652:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801e656:	4341      	muls	r1, r0
 801e658:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e65c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e660:	ea4a 0202 	orr.w	r2, sl, r2
 801e664:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801e668:	fb09 1108 	mla	r1, r9, r8, r1
 801e66c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e670:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801e674:	fb0c 1102 	mla	r1, ip, r2, r1
 801e678:	ea4b 0505 	orr.w	r5, fp, r5
 801e67c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801e680:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e684:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e688:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e68c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e690:	ea42 0e0e 	orr.w	lr, r2, lr
 801e694:	fa1f f28e 	uxth.w	r2, lr
 801e698:	2bff      	cmp	r3, #255	@ 0xff
 801e69a:	d103      	bne.n	801e6a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e69c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801e69e:	29ff      	cmp	r1, #255	@ 0xff
 801e6a0:	f000 80de 	beq.w	801e860 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801e6a4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801e6a6:	8838      	ldrh	r0, [r7, #0]
 801e6a8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e6aa:	434b      	muls	r3, r1
 801e6ac:	f103 0c01 	add.w	ip, r3, #1
 801e6b0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801e6b4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801e6b8:	fa5f fc83 	uxtb.w	ip, r3
 801e6bc:	1203      	asrs	r3, r0, #8
 801e6be:	1215      	asrs	r5, r2, #8
 801e6c0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801e6c4:	fb13 f30c 	smulbb	r3, r3, ip
 801e6c8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e6cc:	fb05 3501 	mla	r5, r5, r1, r3
 801e6d0:	10c3      	asrs	r3, r0, #3
 801e6d2:	10d1      	asrs	r1, r2, #3
 801e6d4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801e6d8:	fb13 f30c 	smulbb	r3, r3, ip
 801e6dc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e6e0:	fb01 3104 	mla	r1, r1, r4, r3
 801e6e4:	00c3      	lsls	r3, r0, #3
 801e6e6:	00d2      	lsls	r2, r2, #3
 801e6e8:	b2db      	uxtb	r3, r3
 801e6ea:	b2d2      	uxtb	r2, r2
 801e6ec:	fb13 f30c 	smulbb	r3, r3, ip
 801e6f0:	b2ad      	uxth	r5, r5
 801e6f2:	fb02 3304 	mla	r3, r2, r4, r3
 801e6f6:	b29a      	uxth	r2, r3
 801e6f8:	1c6b      	adds	r3, r5, #1
 801e6fa:	b289      	uxth	r1, r1
 801e6fc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e700:	1c53      	adds	r3, r2, #1
 801e702:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e706:	1c4a      	adds	r2, r1, #1
 801e708:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e70c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e710:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e714:	0949      	lsrs	r1, r1, #5
 801e716:	432b      	orrs	r3, r5
 801e718:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e71c:	430b      	orrs	r3, r1
 801e71e:	803b      	strh	r3, [r7, #0]
 801e720:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e722:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801e724:	4413      	add	r3, r2
 801e726:	9321      	str	r3, [sp, #132]	@ 0x84
 801e728:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801e72a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e72c:	441a      	add	r2, r3
 801e72e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e730:	9222      	str	r2, [sp, #136]	@ 0x88
 801e732:	3b01      	subs	r3, #1
 801e734:	3702      	adds	r7, #2
 801e736:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e738:	e689      	b.n	801e44e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e73a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e73c:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801e73e:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801e740:	4433      	add	r3, r6
 801e742:	9321      	str	r3, [sp, #132]	@ 0x84
 801e744:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e746:	441c      	add	r4, r3
 801e748:	9b08      	ldr	r3, [sp, #32]
 801e74a:	9422      	str	r4, [sp, #136]	@ 0x88
 801e74c:	3b01      	subs	r3, #1
 801e74e:	9308      	str	r3, [sp, #32]
 801e750:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e752:	3302      	adds	r3, #2
 801e754:	9309      	str	r3, [sp, #36]	@ 0x24
 801e756:	e658      	b.n	801e40a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801e758:	d028      	beq.n	801e7ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801e75a:	9b08      	ldr	r3, [sp, #32]
 801e75c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801e75e:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801e760:	3b01      	subs	r3, #1
 801e762:	fb00 5003 	mla	r0, r0, r3, r5
 801e766:	1400      	asrs	r0, r0, #16
 801e768:	f53f ae6c 	bmi.w	801e444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e76c:	3901      	subs	r1, #1
 801e76e:	4288      	cmp	r0, r1
 801e770:	f6bf ae68 	bge.w	801e444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e774:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801e776:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801e778:	fb01 0303 	mla	r3, r1, r3, r0
 801e77c:	141b      	asrs	r3, r3, #16
 801e77e:	f53f ae61 	bmi.w	801e444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e782:	3a01      	subs	r2, #1
 801e784:	4293      	cmp	r3, r2
 801e786:	f6bf ae5d 	bge.w	801e444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e78a:	9b08      	ldr	r3, [sp, #32]
 801e78c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801e790:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e792:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801e796:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e798:	2b00      	cmp	r3, #0
 801e79a:	f300 8082 	bgt.w	801e8a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801e79e:	9b08      	ldr	r3, [sp, #32]
 801e7a0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e7a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e7a6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e7aa:	9309      	str	r3, [sp, #36]	@ 0x24
 801e7ac:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801e7ae:	2b00      	cmp	r3, #0
 801e7b0:	f340 81ef 	ble.w	801eb92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801e7b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e7b8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e7bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e7c0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e7c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e7c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e7ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e7ce:	eef0 6a62 	vmov.f32	s13, s5
 801e7d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e7d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e7da:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e7de:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801e7e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e7e6:	eef0 6a43 	vmov.f32	s13, s6
 801e7ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e7ee:	ee12 2a90 	vmov	r2, s5
 801e7f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e7f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e7fa:	ee13 2a10 	vmov	r2, s6
 801e7fe:	9323      	str	r3, [sp, #140]	@ 0x8c
 801e800:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e802:	fb92 f3f3 	sdiv	r3, r2, r3
 801e806:	9324      	str	r3, [sp, #144]	@ 0x90
 801e808:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801e80a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801e80c:	3b01      	subs	r3, #1
 801e80e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e812:	9311      	str	r3, [sp, #68]	@ 0x44
 801e814:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e816:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801e81a:	bf08      	it	eq
 801e81c:	4613      	moveq	r3, r2
 801e81e:	9308      	str	r3, [sp, #32]
 801e820:	eeb0 3a67 	vmov.f32	s6, s15
 801e824:	eef0 2a47 	vmov.f32	s5, s14
 801e828:	e5e1      	b.n	801e3ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e82a:	fb08 f505 	mul.w	r5, r8, r5
 801e82e:	fb09 5303 	mla	r3, r9, r3, r5
 801e832:	e661      	b.n	801e4f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801e834:	4681      	mov	r9, r0
 801e836:	e688      	b.n	801e54a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801e838:	f1c1 0210 	rsb	r2, r1, #16
 801e83c:	4341      	muls	r1, r0
 801e83e:	fb09 1902 	mla	r9, r9, r2, r1
 801e842:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e846:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801e84a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e84e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e852:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e856:	ea42 0909 	orr.w	r9, r2, r9
 801e85a:	fa1f f289 	uxth.w	r2, r9
 801e85e:	e71b      	b.n	801e698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801e860:	803a      	strh	r2, [r7, #0]
 801e862:	e75d      	b.n	801e720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e864:	f115 0e01 	adds.w	lr, r5, #1
 801e868:	f53f af5a 	bmi.w	801e720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e86c:	4572      	cmp	r2, lr
 801e86e:	f6ff af57 	blt.w	801e720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e872:	f110 0e01 	adds.w	lr, r0, #1
 801e876:	f53f af53 	bmi.w	801e720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e87a:	4573      	cmp	r3, lr
 801e87c:	f6ff af50 	blt.w	801e720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e880:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e882:	9502      	str	r5, [sp, #8]
 801e884:	b21b      	sxth	r3, r3
 801e886:	b212      	sxth	r2, r2
 801e888:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801e88c:	9301      	str	r3, [sp, #4]
 801e88e:	9200      	str	r2, [sp, #0]
 801e890:	e9cd c405 	strd	ip, r4, [sp, #20]
 801e894:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801e898:	4639      	mov	r1, r7
 801e89a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801e89c:	f7ff fc04 	bl	801e0a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801e8a0:	e73e      	b.n	801e720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e8a2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e8a4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e8a8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e8aa:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801e8ae:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e8b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e8b4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e8b6:	141f      	asrs	r7, r3, #16
 801e8b8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e8ba:	141b      	asrs	r3, r3, #16
 801e8bc:	fb01 3707 	mla	r7, r1, r7, r3
 801e8c0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e8c2:	fa1f fc82 	uxth.w	ip, r2
 801e8c6:	eb03 0a07 	add.w	sl, r3, r7
 801e8ca:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801e8ce:	f813 9007 	ldrb.w	r9, [r3, r7]
 801e8d2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e8d6:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801e8da:	b29b      	uxth	r3, r3
 801e8dc:	2d00      	cmp	r5, #0
 801e8de:	f000 813d 	beq.w	801eb5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801e8e2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801e8e6:	940f      	str	r4, [sp, #60]	@ 0x3c
 801e8e8:	eb0a 0b01 	add.w	fp, sl, r1
 801e8ec:	fa1f fa85 	uxth.w	sl, r5
 801e8f0:	fb0a fc0c 	mul.w	ip, sl, ip
 801e8f4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801e8f8:	fa1f fa8a 	uxth.w	sl, sl
 801e8fc:	eba0 000c 	sub.w	r0, r0, ip
 801e900:	eba3 030a 	sub.w	r3, r3, sl
 801e904:	b280      	uxth	r0, r0
 801e906:	fb08 f000 	mul.w	r0, r8, r0
 801e90a:	b29b      	uxth	r3, r3
 801e90c:	fb09 0303 	mla	r3, r9, r3, r0
 801e910:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e912:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e916:	9410      	str	r4, [sp, #64]	@ 0x40
 801e918:	fb0a 3300 	mla	r3, sl, r0, r3
 801e91c:	fb0c 3304 	mla	r3, ip, r4, r3
 801e920:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e924:	2b00      	cmp	r3, #0
 801e926:	f000 810b 	beq.w	801eb40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801e92a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801e92c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e92e:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801e932:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801e936:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801e93a:	f000 8114 	beq.w	801eb66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801e93e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801e942:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e946:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e94a:	fb09 f707 	mul.w	r7, r9, r7
 801e94e:	fb0a fc0c 	mul.w	ip, sl, ip
 801e952:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801e956:	f107 0b20 	add.w	fp, r7, #32
 801e95a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801e95e:	44cc      	add	ip, r9
 801e960:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801e964:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e968:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e96c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e970:	ea4c 0909 	orr.w	r9, ip, r9
 801e974:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801e978:	8847      	ldrh	r7, [r0, #2]
 801e97a:	d019      	beq.n	801e9b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801e97c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801e980:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e984:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e988:	fb08 f807 	mul.w	r8, r8, r7
 801e98c:	fb0a fc0c 	mul.w	ip, sl, ip
 801e990:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801e994:	f108 0b20 	add.w	fp, r8, #32
 801e998:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801e99c:	44bc      	add	ip, r7
 801e99e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801e9a2:	0a3f      	lsrs	r7, r7, #8
 801e9a4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e9a8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e9ac:	ea4c 0707 	orr.w	r7, ip, r7
 801e9b0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801e9b4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801e9b8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e9bc:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e9c0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e9c4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e9c8:	ea4c 0909 	orr.w	r9, ip, r9
 801e9cc:	ea4a 0707 	orr.w	r7, sl, r7
 801e9d0:	2d00      	cmp	r5, #0
 801e9d2:	f000 80ca 	beq.w	801eb6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801e9d6:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801e9da:	3901      	subs	r1, #1
 801e9dc:	0049      	lsls	r1, r1, #1
 801e9de:	3102      	adds	r1, #2
 801e9e0:	eb00 0c01 	add.w	ip, r0, r1
 801e9e4:	5a41      	ldrh	r1, [r0, r1]
 801e9e6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e9e8:	28ff      	cmp	r0, #255	@ 0xff
 801e9ea:	d019      	beq.n	801ea20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801e9ec:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801e9ee:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801e9f2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e9f6:	fb04 fa01 	mul.w	sl, r4, r1
 801e9fa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e9fe:	fb08 f800 	mul.w	r8, r8, r0
 801ea02:	f10a 0020 	add.w	r0, sl, #32
 801ea06:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801ea0a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801ea0e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ea12:	4441      	add	r1, r8
 801ea14:	0a00      	lsrs	r0, r0, #8
 801ea16:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801ea1a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ea1e:	4301      	orrs	r1, r0
 801ea20:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ea22:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801ea26:	2cff      	cmp	r4, #255	@ 0xff
 801ea28:	d01a      	beq.n	801ea60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801ea2a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801ea2e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ea32:	fb04 fa00 	mul.w	sl, r4, r0
 801ea36:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ea3a:	fb08 f80c 	mul.w	r8, r8, ip
 801ea3e:	f10a 0c20 	add.w	ip, sl, #32
 801ea42:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801ea46:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801ea4a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ea4e:	4440      	add	r0, r8
 801ea50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ea54:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801ea58:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ea5c:	ea40 000c 	orr.w	r0, r0, ip
 801ea60:	fb15 fc02 	smulbb	ip, r5, r2
 801ea64:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801ea68:	f1c5 0810 	rsb	r8, r5, #16
 801ea6c:	eba8 0802 	sub.w	r8, r8, r2
 801ea70:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801ea74:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801ea78:	437a      	muls	r2, r7
 801ea7a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801ea7e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801ea82:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ea86:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ea8a:	fb09 2208 	mla	r2, r9, r8, r2
 801ea8e:	ea4a 0101 	orr.w	r1, sl, r1
 801ea92:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801ea96:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ea9a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ea9e:	fb05 2201 	mla	r2, r5, r1, r2
 801eaa2:	ea4b 0000 	orr.w	r0, fp, r0
 801eaa6:	fb0c 2200 	mla	r2, ip, r0, r2
 801eaaa:	0d57      	lsrs	r7, r2, #21
 801eaac:	0952      	lsrs	r2, r2, #5
 801eaae:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801eab2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801eab6:	433a      	orrs	r2, r7
 801eab8:	2bff      	cmp	r3, #255	@ 0xff
 801eaba:	b292      	uxth	r2, r2
 801eabc:	d102      	bne.n	801eac4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801eabe:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801eac0:	29ff      	cmp	r1, #255	@ 0xff
 801eac2:	d063      	beq.n	801eb8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801eac4:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801eac6:	f8be 1000 	ldrh.w	r1, [lr]
 801eaca:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801eacc:	4343      	muls	r3, r0
 801eace:	1c58      	adds	r0, r3, #1
 801ead0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801ead4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801ead8:	1208      	asrs	r0, r1, #8
 801eada:	b2db      	uxtb	r3, r3
 801eadc:	1215      	asrs	r5, r2, #8
 801eade:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801eae2:	fb10 f003 	smulbb	r0, r0, r3
 801eae6:	10cf      	asrs	r7, r1, #3
 801eae8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801eaec:	00c9      	lsls	r1, r1, #3
 801eaee:	fb05 0504 	mla	r5, r5, r4, r0
 801eaf2:	b2c9      	uxtb	r1, r1
 801eaf4:	10d0      	asrs	r0, r2, #3
 801eaf6:	00d2      	lsls	r2, r2, #3
 801eaf8:	fb11 f103 	smulbb	r1, r1, r3
 801eafc:	b2d2      	uxtb	r2, r2
 801eafe:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801eb02:	fb02 1204 	mla	r2, r2, r4, r1
 801eb06:	fb17 f703 	smulbb	r7, r7, r3
 801eb0a:	b2ad      	uxth	r5, r5
 801eb0c:	b292      	uxth	r2, r2
 801eb0e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801eb12:	fb00 7004 	mla	r0, r0, r4, r7
 801eb16:	1c6b      	adds	r3, r5, #1
 801eb18:	1c57      	adds	r7, r2, #1
 801eb1a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801eb1e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801eb22:	b280      	uxth	r0, r0
 801eb24:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801eb28:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801eb2c:	433d      	orrs	r5, r7
 801eb2e:	1c47      	adds	r7, r0, #1
 801eb30:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801eb34:	097f      	lsrs	r7, r7, #5
 801eb36:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801eb3a:	433d      	orrs	r5, r7
 801eb3c:	f8ae 5000 	strh.w	r5, [lr]
 801eb40:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801eb42:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801eb44:	4413      	add	r3, r2
 801eb46:	9321      	str	r3, [sp, #132]	@ 0x84
 801eb48:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801eb4a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801eb4c:	441a      	add	r2, r3
 801eb4e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801eb50:	9222      	str	r2, [sp, #136]	@ 0x88
 801eb52:	3b01      	subs	r3, #1
 801eb54:	f10e 0e02 	add.w	lr, lr, #2
 801eb58:	9313      	str	r3, [sp, #76]	@ 0x4c
 801eb5a:	e61c      	b.n	801e796 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801eb5c:	fb08 f000 	mul.w	r0, r8, r0
 801eb60:	fb09 0303 	mla	r3, r9, r3, r0
 801eb64:	e6dc      	b.n	801e920 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801eb66:	46b9      	mov	r9, r7
 801eb68:	e704      	b.n	801e974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801eb6a:	f1c2 0110 	rsb	r1, r2, #16
 801eb6e:	437a      	muls	r2, r7
 801eb70:	fb09 2901 	mla	r9, r9, r1, r2
 801eb74:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801eb78:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801eb7c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801eb80:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801eb84:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801eb88:	4302      	orrs	r2, r0
 801eb8a:	e795      	b.n	801eab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801eb8c:	f8ae 2000 	strh.w	r2, [lr]
 801eb90:	e7d6      	b.n	801eb40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801eb92:	b017      	add	sp, #92	@ 0x5c
 801eb94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801eb98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801eb98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb9c:	b085      	sub	sp, #20
 801eb9e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801eba2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801eba6:	9103      	str	r1, [sp, #12]
 801eba8:	fb00 7406 	mla	r4, r0, r6, r7
 801ebac:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801ebb0:	2800      	cmp	r0, #0
 801ebb2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801ebb6:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801ebba:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801ebbe:	9501      	str	r5, [sp, #4]
 801ebc0:	eb02 0904 	add.w	r9, r2, r4
 801ebc4:	f2c0 8141 	blt.w	801ee4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801ebc8:	4583      	cmp	fp, r0
 801ebca:	f340 813e 	ble.w	801ee4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801ebce:	2f00      	cmp	r7, #0
 801ebd0:	f2c0 8137 	blt.w	801ee42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801ebd4:	42be      	cmp	r6, r7
 801ebd6:	f340 8134 	ble.w	801ee42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801ebda:	f812 c004 	ldrb.w	ip, [r2, r4]
 801ebde:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801ebe2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ebe6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801ebea:	4355      	muls	r5, r2
 801ebec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ebf0:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801ebf4:	fb0c f203 	mul.w	r2, ip, r3
 801ebf8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801ebfc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801ec00:	441d      	add	r5, r3
 801ec02:	f102 0320 	add.w	r3, r2, #32
 801ec06:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ec0a:	0a1b      	lsrs	r3, r3, #8
 801ec0c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801ec10:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ec14:	431c      	orrs	r4, r3
 801ec16:	1c7b      	adds	r3, r7, #1
 801ec18:	f100 811c 	bmi.w	801ee54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801ec1c:	429e      	cmp	r6, r3
 801ec1e:	f340 8119 	ble.w	801ee54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801ec22:	2900      	cmp	r1, #0
 801ec24:	f000 8119 	beq.w	801ee5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801ec28:	9a01      	ldr	r2, [sp, #4]
 801ec2a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801ec2e:	8855      	ldrh	r5, [r2, #2]
 801ec30:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801ec34:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801ec38:	fb08 f802 	mul.w	r8, r8, r2
 801ec3c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ec40:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801ec44:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801ec48:	435d      	muls	r5, r3
 801ec4a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ec4e:	44d0      	add	r8, sl
 801ec50:	f105 0a20 	add.w	sl, r5, #32
 801ec54:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801ec58:	0a2d      	lsrs	r5, r5, #8
 801ec5a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ec5e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ec62:	432a      	orrs	r2, r5
 801ec64:	3001      	adds	r0, #1
 801ec66:	f100 80fe 	bmi.w	801ee66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ec6a:	4583      	cmp	fp, r0
 801ec6c:	f340 80fb 	ble.w	801ee66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ec70:	f1be 0f00 	cmp.w	lr, #0
 801ec74:	f000 80fc 	beq.w	801ee70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801ec78:	2f00      	cmp	r7, #0
 801ec7a:	f2c0 80f1 	blt.w	801ee60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ec7e:	42be      	cmp	r6, r7
 801ec80:	f340 80ee 	ble.w	801ee60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ec84:	9801      	ldr	r0, [sp, #4]
 801ec86:	f819 5006 	ldrb.w	r5, [r9, r6]
 801ec8a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801ec8e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ec92:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801ec96:	fb0a fa00 	mul.w	sl, sl, r0
 801ec9a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801ec9e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801eca2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801eca6:	fb05 f808 	mul.w	r8, r5, r8
 801ecaa:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801ecae:	4482      	add	sl, r0
 801ecb0:	f108 0020 	add.w	r0, r8, #32
 801ecb4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ecb8:	0a00      	lsrs	r0, r0, #8
 801ecba:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801ecbe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ecc2:	ea4b 0b00 	orr.w	fp, fp, r0
 801ecc6:	3701      	adds	r7, #1
 801ecc8:	f100 80d7 	bmi.w	801ee7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801eccc:	42be      	cmp	r6, r7
 801ecce:	f340 80d4 	ble.w	801ee7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ecd2:	2900      	cmp	r1, #0
 801ecd4:	f000 80d4 	beq.w	801ee80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801ecd8:	3601      	adds	r6, #1
 801ecda:	9801      	ldr	r0, [sp, #4]
 801ecdc:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ece0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801ece4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801ece8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801ecec:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ecf0:	fb09 f906 	mul.w	r9, r9, r6
 801ecf4:	fb07 f800 	mul.w	r8, r7, r0
 801ecf8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801ecfc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801ed00:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801ed04:	44d1      	add	r9, sl
 801ed06:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801ed0a:	f108 0020 	add.w	r0, r8, #32
 801ed0e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ed12:	0a00      	lsrs	r0, r0, #8
 801ed14:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ed18:	4330      	orrs	r0, r6
 801ed1a:	b28e      	uxth	r6, r1
 801ed1c:	fa1f f98e 	uxth.w	r9, lr
 801ed20:	fb06 f809 	mul.w	r8, r6, r9
 801ed24:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ed28:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ed2c:	0136      	lsls	r6, r6, #4
 801ed2e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ed32:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801ed36:	9601      	str	r6, [sp, #4]
 801ed38:	ea4a 0404 	orr.w	r4, sl, r4
 801ed3c:	fa1f f689 	uxth.w	r6, r9
 801ed40:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ed44:	fb11 f90e 	smulbb	r9, r1, lr
 801ed48:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ed4c:	9602      	str	r6, [sp, #8]
 801ed4e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ed52:	4626      	mov	r6, r4
 801ed54:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ed58:	f1ce 0410 	rsb	r4, lr, #16
 801ed5c:	1a64      	subs	r4, r4, r1
 801ed5e:	ea4a 0202 	orr.w	r2, sl, r2
 801ed62:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ed66:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ed6a:	434a      	muls	r2, r1
 801ed6c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801ed70:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ed74:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ed78:	fb04 2406 	mla	r4, r4, r6, r2
 801ed7c:	ea4a 0000 	orr.w	r0, sl, r0
 801ed80:	fb09 4200 	mla	r2, r9, r0, r4
 801ed84:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801ed88:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ed8c:	9801      	ldr	r0, [sp, #4]
 801ed8e:	9903      	ldr	r1, [sp, #12]
 801ed90:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801ed94:	ea44 0b0b 	orr.w	fp, r4, fp
 801ed98:	9c02      	ldr	r4, [sp, #8]
 801ed9a:	8809      	ldrh	r1, [r1, #0]
 801ed9c:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801eda0:	1b00      	subs	r0, r0, r4
 801eda2:	9c01      	ldr	r4, [sp, #4]
 801eda4:	eba4 0608 	sub.w	r6, r4, r8
 801eda8:	b2b6      	uxth	r6, r6
 801edaa:	b280      	uxth	r0, r0
 801edac:	4373      	muls	r3, r6
 801edae:	fb0c 3300 	mla	r3, ip, r0, r3
 801edb2:	9802      	ldr	r0, [sp, #8]
 801edb4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801edb8:	fb00 3505 	mla	r5, r0, r5, r3
 801edbc:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801edc0:	fb08 5707 	mla	r7, r8, r7, r5
 801edc4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801edc8:	120b      	asrs	r3, r1, #8
 801edca:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801edce:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801edd2:	b2ff      	uxtb	r7, r7
 801edd4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801edd8:	10c8      	asrs	r0, r1, #3
 801edda:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801edde:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801ede2:	00c9      	lsls	r1, r1, #3
 801ede4:	437b      	muls	r3, r7
 801ede6:	ea42 0e0e 	orr.w	lr, r2, lr
 801edea:	b2c9      	uxtb	r1, r1
 801edec:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801edf0:	fa1f f28e 	uxth.w	r2, lr
 801edf4:	4378      	muls	r0, r7
 801edf6:	434f      	muls	r7, r1
 801edf8:	1c59      	adds	r1, r3, #1
 801edfa:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801edfe:	1213      	asrs	r3, r2, #8
 801ee00:	f023 0307 	bic.w	r3, r3, #7
 801ee04:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ee08:	1c41      	adds	r1, r0, #1
 801ee0a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ee0e:	10d1      	asrs	r1, r2, #3
 801ee10:	f021 0103 	bic.w	r1, r1, #3
 801ee14:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ee18:	021b      	lsls	r3, r3, #8
 801ee1a:	00c9      	lsls	r1, r1, #3
 801ee1c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ee20:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801ee24:	430b      	orrs	r3, r1
 801ee26:	1c79      	adds	r1, r7, #1
 801ee28:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801ee2c:	00d2      	lsls	r2, r2, #3
 801ee2e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801ee32:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ee36:	431a      	orrs	r2, r3
 801ee38:	9b03      	ldr	r3, [sp, #12]
 801ee3a:	801a      	strh	r2, [r3, #0]
 801ee3c:	b005      	add	sp, #20
 801ee3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee42:	f04f 0c00 	mov.w	ip, #0
 801ee46:	4664      	mov	r4, ip
 801ee48:	e6e5      	b.n	801ec16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801ee4a:	2300      	movs	r3, #0
 801ee4c:	469c      	mov	ip, r3
 801ee4e:	461a      	mov	r2, r3
 801ee50:	461c      	mov	r4, r3
 801ee52:	e707      	b.n	801ec64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ee54:	2300      	movs	r3, #0
 801ee56:	461a      	mov	r2, r3
 801ee58:	e704      	b.n	801ec64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ee5a:	460b      	mov	r3, r1
 801ee5c:	460a      	mov	r2, r1
 801ee5e:	e701      	b.n	801ec64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ee60:	2500      	movs	r5, #0
 801ee62:	46ab      	mov	fp, r5
 801ee64:	e72f      	b.n	801ecc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801ee66:	2700      	movs	r7, #0
 801ee68:	463d      	mov	r5, r7
 801ee6a:	4638      	mov	r0, r7
 801ee6c:	46bb      	mov	fp, r7
 801ee6e:	e754      	b.n	801ed1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ee70:	4677      	mov	r7, lr
 801ee72:	4675      	mov	r5, lr
 801ee74:	4670      	mov	r0, lr
 801ee76:	46f3      	mov	fp, lr
 801ee78:	e74f      	b.n	801ed1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ee7a:	2700      	movs	r7, #0
 801ee7c:	4638      	mov	r0, r7
 801ee7e:	e74c      	b.n	801ed1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ee80:	460f      	mov	r7, r1
 801ee82:	4608      	mov	r0, r1
 801ee84:	e749      	b.n	801ed1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801ee88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ee88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee8c:	b093      	sub	sp, #76	@ 0x4c
 801ee8e:	9210      	str	r2, [sp, #64]	@ 0x40
 801ee90:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ee92:	910e      	str	r1, [sp, #56]	@ 0x38
 801ee94:	9306      	str	r3, [sp, #24]
 801ee96:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801ee9a:	9011      	str	r0, [sp, #68]	@ 0x44
 801ee9c:	6850      	ldr	r0, [r2, #4]
 801ee9e:	6812      	ldr	r2, [r2, #0]
 801eea0:	fb00 1303 	mla	r3, r0, r3, r1
 801eea4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801eea8:	9307      	str	r3, [sp, #28]
 801eeaa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801eeac:	681b      	ldr	r3, [r3, #0]
 801eeae:	9308      	str	r3, [sp, #32]
 801eeb0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801eeb2:	685b      	ldr	r3, [r3, #4]
 801eeb4:	9309      	str	r3, [sp, #36]	@ 0x24
 801eeb6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801eeb8:	2b00      	cmp	r3, #0
 801eeba:	dc03      	bgt.n	801eec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801eebc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801eebe:	2b00      	cmp	r3, #0
 801eec0:	f340 83b4 	ble.w	801f62c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801eec4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801eec6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eeca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eece:	1e48      	subs	r0, r1, #1
 801eed0:	1e55      	subs	r5, r2, #1
 801eed2:	9b06      	ldr	r3, [sp, #24]
 801eed4:	2b00      	cmp	r3, #0
 801eed6:	f340 8163 	ble.w	801f1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801eeda:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801eedc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801eede:	1436      	asrs	r6, r6, #16
 801eee0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801eee4:	d406      	bmi.n	801eef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801eee6:	4286      	cmp	r6, r0
 801eee8:	da04      	bge.n	801eef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801eeea:	2b00      	cmp	r3, #0
 801eeec:	db02      	blt.n	801eef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801eeee:	42ab      	cmp	r3, r5
 801eef0:	f2c0 8157 	blt.w	801f1a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801eef4:	3601      	adds	r6, #1
 801eef6:	f100 8144 	bmi.w	801f182 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801eefa:	42b1      	cmp	r1, r6
 801eefc:	f2c0 8141 	blt.w	801f182 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ef00:	3301      	adds	r3, #1
 801ef02:	f100 813e 	bmi.w	801f182 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ef06:	429a      	cmp	r2, r3
 801ef08:	f2c0 813b 	blt.w	801f182 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ef0c:	9b06      	ldr	r3, [sp, #24]
 801ef0e:	9f07      	ldr	r7, [sp, #28]
 801ef10:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ef12:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801ef16:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ef18:	2b00      	cmp	r3, #0
 801ef1a:	f340 8164 	ble.w	801f1e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801ef1e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ef20:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801ef22:	1418      	asrs	r0, r3, #16
 801ef24:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ef26:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801ef2a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ef2c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801ef30:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ef32:	142d      	asrs	r5, r5, #16
 801ef34:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801ef38:	f100 81ee 	bmi.w	801f318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ef3c:	f102 3eff 	add.w	lr, r2, #4294967295
 801ef40:	4575      	cmp	r5, lr
 801ef42:	f280 81e9 	bge.w	801f318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ef46:	2800      	cmp	r0, #0
 801ef48:	f2c0 81e6 	blt.w	801f318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ef4c:	f103 3eff 	add.w	lr, r3, #4294967295
 801ef50:	4570      	cmp	r0, lr
 801ef52:	f280 81e1 	bge.w	801f318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ef56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ef58:	b212      	sxth	r2, r2
 801ef5a:	fb00 5002 	mla	r0, r0, r2, r5
 801ef5e:	fa1f fe81 	uxth.w	lr, r1
 801ef62:	eb03 0a00 	add.w	sl, r3, r0
 801ef66:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801ef6a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801ef6e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ef72:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801ef76:	b29b      	uxth	r3, r3
 801ef78:	f1bc 0f00 	cmp.w	ip, #0
 801ef7c:	f000 8179 	beq.w	801f272 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801ef80:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ef84:	940a      	str	r4, [sp, #40]	@ 0x28
 801ef86:	eb0a 0b02 	add.w	fp, sl, r2
 801ef8a:	fa1f fa8c 	uxth.w	sl, ip
 801ef8e:	fb0a fe0e 	mul.w	lr, sl, lr
 801ef92:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ef96:	fa1f fa8a 	uxth.w	sl, sl
 801ef9a:	eba5 050e 	sub.w	r5, r5, lr
 801ef9e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801efa2:	940b      	str	r4, [sp, #44]	@ 0x2c
 801efa4:	eba3 030a 	sub.w	r3, r3, sl
 801efa8:	b2ad      	uxth	r5, r5
 801efaa:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801efac:	b29b      	uxth	r3, r3
 801efae:	fb08 f505 	mul.w	r5, r8, r5
 801efb2:	fb09 5303 	mla	r3, r9, r3, r5
 801efb6:	fb0a 3304 	mla	r3, sl, r4, r3
 801efba:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801efbc:	fb0e 3304 	mla	r3, lr, r4, r3
 801efc0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801efc4:	2b00      	cmp	r3, #0
 801efc6:	f000 80cf 	beq.w	801f168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801efca:	9c08      	ldr	r4, [sp, #32]
 801efcc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801efd0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801efd4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801efd8:	f000 8150 	beq.w	801f27c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801efdc:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801efe0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801efe4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801efe8:	fb09 f000 	mul.w	r0, r9, r0
 801efec:	fb0a fe0e 	mul.w	lr, sl, lr
 801eff0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801eff4:	f100 0b20 	add.w	fp, r0, #32
 801eff8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801effc:	44ce      	add	lr, r9
 801effe:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801f002:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f006:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f00a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801f00e:	ea4e 0909 	orr.w	r9, lr, r9
 801f012:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801f016:	8868      	ldrh	r0, [r5, #2]
 801f018:	d019      	beq.n	801f04e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801f01a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801f01e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f022:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f026:	fb08 f800 	mul.w	r8, r8, r0
 801f02a:	fb0a fe0e 	mul.w	lr, sl, lr
 801f02e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801f032:	f108 0b20 	add.w	fp, r8, #32
 801f036:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801f03a:	4486      	add	lr, r0
 801f03c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801f040:	0a00      	lsrs	r0, r0, #8
 801f042:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f046:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f04a:	ea4e 0000 	orr.w	r0, lr, r0
 801f04e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801f052:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f056:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801f05a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801f05e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f062:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f066:	ea4e 0909 	orr.w	r9, lr, r9
 801f06a:	ea4a 0000 	orr.w	r0, sl, r0
 801f06e:	f1bc 0f00 	cmp.w	ip, #0
 801f072:	f000 8105 	beq.w	801f280 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f076:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801f07a:	3a01      	subs	r2, #1
 801f07c:	0052      	lsls	r2, r2, #1
 801f07e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801f080:	3202      	adds	r2, #2
 801f082:	2cff      	cmp	r4, #255	@ 0xff
 801f084:	eb05 0e02 	add.w	lr, r5, r2
 801f088:	5aaa      	ldrh	r2, [r5, r2]
 801f08a:	d018      	beq.n	801f0be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801f08c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801f090:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f094:	fb04 fa02 	mul.w	sl, r4, r2
 801f098:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f09c:	fb08 f805 	mul.w	r8, r8, r5
 801f0a0:	f10a 0520 	add.w	r5, sl, #32
 801f0a4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801f0a8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801f0ac:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f0b0:	4442      	add	r2, r8
 801f0b2:	0a2d      	lsrs	r5, r5, #8
 801f0b4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801f0b8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f0bc:	432a      	orrs	r2, r5
 801f0be:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801f0c0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801f0c4:	2cff      	cmp	r4, #255	@ 0xff
 801f0c6:	d01a      	beq.n	801f0fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801f0c8:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801f0cc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f0d0:	fb04 fa05 	mul.w	sl, r4, r5
 801f0d4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f0d8:	fb08 f80e 	mul.w	r8, r8, lr
 801f0dc:	f10a 0e20 	add.w	lr, sl, #32
 801f0e0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801f0e4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801f0e8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f0ec:	4445      	add	r5, r8
 801f0ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f0f2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801f0f6:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801f0fa:	ea45 050e 	orr.w	r5, r5, lr
 801f0fe:	fb1c fe01 	smulbb	lr, ip, r1
 801f102:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801f106:	f1cc 0810 	rsb	r8, ip, #16
 801f10a:	eba8 0801 	sub.w	r8, r8, r1
 801f10e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f112:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801f116:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801f11a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801f11e:	4341      	muls	r1, r0
 801f120:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f124:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f128:	ea4a 0202 	orr.w	r2, sl, r2
 801f12c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801f130:	fb09 1108 	mla	r1, r9, r8, r1
 801f134:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f138:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801f13c:	fb0c 1102 	mla	r1, ip, r2, r1
 801f140:	ea4b 0505 	orr.w	r5, fp, r5
 801f144:	fb0e 1e05 	mla	lr, lr, r5, r1
 801f148:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f14c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f150:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f154:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f158:	ea42 0e0e 	orr.w	lr, r2, lr
 801f15c:	fa1f f28e 	uxth.w	r2, lr
 801f160:	2bff      	cmp	r3, #255	@ 0xff
 801f162:	f040 80a1 	bne.w	801f2a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801f166:	803a      	strh	r2, [r7, #0]
 801f168:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801f16a:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801f16c:	4413      	add	r3, r2
 801f16e:	931d      	str	r3, [sp, #116]	@ 0x74
 801f170:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801f172:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f174:	441a      	add	r2, r3
 801f176:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f178:	921e      	str	r2, [sp, #120]	@ 0x78
 801f17a:	3b01      	subs	r3, #1
 801f17c:	3702      	adds	r7, #2
 801f17e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f180:	e6c9      	b.n	801ef16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f182:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801f184:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801f186:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801f188:	4433      	add	r3, r6
 801f18a:	931d      	str	r3, [sp, #116]	@ 0x74
 801f18c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f18e:	441c      	add	r4, r3
 801f190:	9b06      	ldr	r3, [sp, #24]
 801f192:	941e      	str	r4, [sp, #120]	@ 0x78
 801f194:	3b01      	subs	r3, #1
 801f196:	9306      	str	r3, [sp, #24]
 801f198:	9b07      	ldr	r3, [sp, #28]
 801f19a:	3302      	adds	r3, #2
 801f19c:	9307      	str	r3, [sp, #28]
 801f19e:	e698      	b.n	801eed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f1a0:	d028      	beq.n	801f1f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f1a2:	9b06      	ldr	r3, [sp, #24]
 801f1a4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801f1a6:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801f1a8:	3b01      	subs	r3, #1
 801f1aa:	fb00 5003 	mla	r0, r0, r3, r5
 801f1ae:	1400      	asrs	r0, r0, #16
 801f1b0:	f53f aeac 	bmi.w	801ef0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f1b4:	3901      	subs	r1, #1
 801f1b6:	4288      	cmp	r0, r1
 801f1b8:	f6bf aea8 	bge.w	801ef0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f1bc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801f1be:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801f1c0:	fb01 0303 	mla	r3, r1, r3, r0
 801f1c4:	141b      	asrs	r3, r3, #16
 801f1c6:	f53f aea1 	bmi.w	801ef0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f1ca:	3a01      	subs	r2, #1
 801f1cc:	4293      	cmp	r3, r2
 801f1ce:	f6bf ae9d 	bge.w	801ef0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f1d2:	9b06      	ldr	r3, [sp, #24]
 801f1d4:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801f1d8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f1da:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801f1de:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f1e0:	2b00      	cmp	r3, #0
 801f1e2:	f300 80b6 	bgt.w	801f352 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801f1e6:	9b06      	ldr	r3, [sp, #24]
 801f1e8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f1ec:	9b07      	ldr	r3, [sp, #28]
 801f1ee:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801f1f2:	9307      	str	r3, [sp, #28]
 801f1f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f1f6:	2b00      	cmp	r3, #0
 801f1f8:	f340 8218 	ble.w	801f62c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801f1fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f200:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f204:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f208:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f20a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f20e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f212:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f216:	eef0 6a62 	vmov.f32	s13, s5
 801f21a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f21e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f222:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f226:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801f22a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f22e:	eef0 6a43 	vmov.f32	s13, s6
 801f232:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f236:	ee12 2a90 	vmov	r2, s5
 801f23a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f23e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f242:	ee13 2a10 	vmov	r2, s6
 801f246:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f248:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f24a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f24e:	9320      	str	r3, [sp, #128]	@ 0x80
 801f250:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f252:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f254:	3b01      	subs	r3, #1
 801f256:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f25a:	930e      	str	r3, [sp, #56]	@ 0x38
 801f25c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f25e:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801f262:	bf08      	it	eq
 801f264:	4613      	moveq	r3, r2
 801f266:	9306      	str	r3, [sp, #24]
 801f268:	eeb0 3a67 	vmov.f32	s6, s15
 801f26c:	eef0 2a47 	vmov.f32	s5, s14
 801f270:	e621      	b.n	801eeb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801f272:	fb08 f505 	mul.w	r5, r8, r5
 801f276:	fb09 5303 	mla	r3, r9, r3, r5
 801f27a:	e6a1      	b.n	801efc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801f27c:	4681      	mov	r9, r0
 801f27e:	e6c8      	b.n	801f012 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801f280:	f1c1 0210 	rsb	r2, r1, #16
 801f284:	4341      	muls	r1, r0
 801f286:	fb09 1902 	mla	r9, r9, r2, r1
 801f28a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f28e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801f292:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f296:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f29a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801f29e:	ea42 0909 	orr.w	r9, r2, r9
 801f2a2:	fa1f f289 	uxth.w	r2, r9
 801f2a6:	e75b      	b.n	801f160 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801f2a8:	f8b7 c000 	ldrh.w	ip, [r7]
 801f2ac:	43db      	mvns	r3, r3
 801f2ae:	ea4f 202c 	mov.w	r0, ip, asr #8
 801f2b2:	fa5f fe83 	uxtb.w	lr, r3
 801f2b6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f2ba:	fb00 f00e 	mul.w	r0, r0, lr
 801f2be:	1c41      	adds	r1, r0, #1
 801f2c0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f2c4:	1211      	asrs	r1, r2, #8
 801f2c6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f2ca:	f021 0107 	bic.w	r1, r1, #7
 801f2ce:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801f2d2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801f2d6:	48d7      	ldr	r0, [pc, #860]	@ (801f634 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801f2d8:	fb05 f50e 	mul.w	r5, r5, lr
 801f2dc:	b2c9      	uxtb	r1, r1
 801f2de:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801f2e2:	1c69      	adds	r1, r5, #1
 801f2e4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801f2e8:	10d1      	asrs	r1, r2, #3
 801f2ea:	f021 0103 	bic.w	r1, r1, #3
 801f2ee:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801f2f2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801f2f6:	b2db      	uxtb	r3, r3
 801f2f8:	00c9      	lsls	r1, r1, #3
 801f2fa:	fb03 f30e 	mul.w	r3, r3, lr
 801f2fe:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f302:	4301      	orrs	r1, r0
 801f304:	1c58      	adds	r0, r3, #1
 801f306:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801f30a:	00d2      	lsls	r2, r2, #3
 801f30c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f310:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f314:	430a      	orrs	r2, r1
 801f316:	e726      	b.n	801f166 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801f318:	f115 0e01 	adds.w	lr, r5, #1
 801f31c:	f53f af24 	bmi.w	801f168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801f320:	4572      	cmp	r2, lr
 801f322:	f6ff af21 	blt.w	801f168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801f326:	f110 0e01 	adds.w	lr, r0, #1
 801f32a:	f53f af1d 	bmi.w	801f168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801f32e:	4573      	cmp	r3, lr
 801f330:	f6ff af1a 	blt.w	801f168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801f334:	b21b      	sxth	r3, r3
 801f336:	b212      	sxth	r2, r2
 801f338:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801f33c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801f340:	9301      	str	r3, [sp, #4]
 801f342:	9200      	str	r2, [sp, #0]
 801f344:	4639      	mov	r1, r7
 801f346:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801f34a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801f34c:	f7ff fc24 	bl	801eb98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f350:	e70a      	b.n	801f168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801f352:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801f354:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f358:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f35a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801f35e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f360:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f364:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f366:	141f      	asrs	r7, r3, #16
 801f368:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801f36a:	141b      	asrs	r3, r3, #16
 801f36c:	fb01 3707 	mla	r7, r1, r7, r3
 801f370:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f372:	fa1f fc82 	uxth.w	ip, r2
 801f376:	eb03 0a07 	add.w	sl, r3, r7
 801f37a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801f37e:	f813 9007 	ldrb.w	r9, [r3, r7]
 801f382:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f386:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801f38a:	b29b      	uxth	r3, r3
 801f38c:	2d00      	cmp	r5, #0
 801f38e:	f000 80fe 	beq.w	801f58e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801f392:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801f396:	940c      	str	r4, [sp, #48]	@ 0x30
 801f398:	eb0a 0b01 	add.w	fp, sl, r1
 801f39c:	fa1f fa85 	uxth.w	sl, r5
 801f3a0:	fb0a fc0c 	mul.w	ip, sl, ip
 801f3a4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801f3a8:	fa1f fa8a 	uxth.w	sl, sl
 801f3ac:	eba0 000c 	sub.w	r0, r0, ip
 801f3b0:	eba3 030a 	sub.w	r3, r3, sl
 801f3b4:	b280      	uxth	r0, r0
 801f3b6:	fb08 f000 	mul.w	r0, r8, r0
 801f3ba:	b29b      	uxth	r3, r3
 801f3bc:	fb09 0303 	mla	r3, r9, r3, r0
 801f3c0:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801f3c2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f3c6:	940d      	str	r4, [sp, #52]	@ 0x34
 801f3c8:	fb0a 3300 	mla	r3, sl, r0, r3
 801f3cc:	fb0c 3304 	mla	r3, ip, r4, r3
 801f3d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f3d4:	2b00      	cmp	r3, #0
 801f3d6:	f000 80cc 	beq.w	801f572 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801f3da:	9808      	ldr	r0, [sp, #32]
 801f3dc:	9c08      	ldr	r4, [sp, #32]
 801f3de:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801f3e2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801f3e6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801f3ea:	f000 80d5 	beq.w	801f598 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801f3ee:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801f3f2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f3f6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f3fa:	fb09 f707 	mul.w	r7, r9, r7
 801f3fe:	fb0a fc0c 	mul.w	ip, sl, ip
 801f402:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801f406:	f107 0b20 	add.w	fp, r7, #32
 801f40a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801f40e:	44cc      	add	ip, r9
 801f410:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801f414:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f418:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f41c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801f420:	ea4c 0909 	orr.w	r9, ip, r9
 801f424:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801f428:	8847      	ldrh	r7, [r0, #2]
 801f42a:	d019      	beq.n	801f460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801f42c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801f430:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f434:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f438:	fb08 f807 	mul.w	r8, r8, r7
 801f43c:	fb0a fc0c 	mul.w	ip, sl, ip
 801f440:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801f444:	f108 0b20 	add.w	fp, r8, #32
 801f448:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801f44c:	44bc      	add	ip, r7
 801f44e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801f452:	0a3f      	lsrs	r7, r7, #8
 801f454:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f458:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f45c:	ea4c 0707 	orr.w	r7, ip, r7
 801f460:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801f464:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801f468:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f46c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801f470:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f474:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801f478:	ea4c 0909 	orr.w	r9, ip, r9
 801f47c:	ea4a 0707 	orr.w	r7, sl, r7
 801f480:	2d00      	cmp	r5, #0
 801f482:	f000 808b 	beq.w	801f59c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801f486:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801f48a:	3901      	subs	r1, #1
 801f48c:	0049      	lsls	r1, r1, #1
 801f48e:	3102      	adds	r1, #2
 801f490:	eb00 0c01 	add.w	ip, r0, r1
 801f494:	5a41      	ldrh	r1, [r0, r1]
 801f496:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801f498:	28ff      	cmp	r0, #255	@ 0xff
 801f49a:	d019      	beq.n	801f4d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801f49c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801f49e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801f4a2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f4a6:	fb04 fa01 	mul.w	sl, r4, r1
 801f4aa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f4ae:	fb08 f800 	mul.w	r8, r8, r0
 801f4b2:	f10a 0020 	add.w	r0, sl, #32
 801f4b6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801f4ba:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801f4be:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f4c2:	4441      	add	r1, r8
 801f4c4:	0a00      	lsrs	r0, r0, #8
 801f4c6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801f4ca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f4ce:	4301      	orrs	r1, r0
 801f4d0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f4d2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801f4d6:	2cff      	cmp	r4, #255	@ 0xff
 801f4d8:	d01a      	beq.n	801f510 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801f4da:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801f4de:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f4e2:	fb04 fa00 	mul.w	sl, r4, r0
 801f4e6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f4ea:	fb08 f80c 	mul.w	r8, r8, ip
 801f4ee:	f10a 0c20 	add.w	ip, sl, #32
 801f4f2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801f4f6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801f4fa:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f4fe:	4440      	add	r0, r8
 801f500:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f504:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801f508:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801f50c:	ea40 000c 	orr.w	r0, r0, ip
 801f510:	fb15 fc02 	smulbb	ip, r5, r2
 801f514:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801f518:	f1c5 0810 	rsb	r8, r5, #16
 801f51c:	eba8 0802 	sub.w	r8, r8, r2
 801f520:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f524:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801f528:	437a      	muls	r2, r7
 801f52a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801f52e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801f532:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f536:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f53a:	fb09 2208 	mla	r2, r9, r8, r2
 801f53e:	ea4a 0101 	orr.w	r1, sl, r1
 801f542:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801f546:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f54a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f54e:	fb05 2201 	mla	r2, r5, r1, r2
 801f552:	ea4b 0000 	orr.w	r0, fp, r0
 801f556:	fb0c 2200 	mla	r2, ip, r0, r2
 801f55a:	0d57      	lsrs	r7, r2, #21
 801f55c:	0952      	lsrs	r2, r2, #5
 801f55e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f562:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f566:	433a      	orrs	r2, r7
 801f568:	2bff      	cmp	r3, #255	@ 0xff
 801f56a:	b292      	uxth	r2, r2
 801f56c:	d127      	bne.n	801f5be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801f56e:	f8ae 2000 	strh.w	r2, [lr]
 801f572:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801f574:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801f576:	4413      	add	r3, r2
 801f578:	931d      	str	r3, [sp, #116]	@ 0x74
 801f57a:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801f57c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f57e:	441a      	add	r2, r3
 801f580:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f582:	921e      	str	r2, [sp, #120]	@ 0x78
 801f584:	3b01      	subs	r3, #1
 801f586:	f10e 0e02 	add.w	lr, lr, #2
 801f58a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f58c:	e627      	b.n	801f1de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f58e:	fb08 f000 	mul.w	r0, r8, r0
 801f592:	fb09 0303 	mla	r3, r9, r3, r0
 801f596:	e71b      	b.n	801f3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801f598:	46b9      	mov	r9, r7
 801f59a:	e743      	b.n	801f424 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801f59c:	f1c2 0110 	rsb	r1, r2, #16
 801f5a0:	437a      	muls	r2, r7
 801f5a2:	fb09 2901 	mla	r9, r9, r1, r2
 801f5a6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f5aa:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801f5ae:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801f5b2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f5b6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f5ba:	4302      	orrs	r2, r0
 801f5bc:	e7d4      	b.n	801f568 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801f5be:	f8be 7000 	ldrh.w	r7, [lr]
 801f5c2:	4c1c      	ldr	r4, [pc, #112]	@ (801f634 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801f5c4:	43db      	mvns	r3, r3
 801f5c6:	1238      	asrs	r0, r7, #8
 801f5c8:	fa5f fc83 	uxtb.w	ip, r3
 801f5cc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f5d0:	10fd      	asrs	r5, r7, #3
 801f5d2:	fb00 f00c 	mul.w	r0, r0, ip
 801f5d6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801f5da:	fb05 f10c 	mul.w	r1, r5, ip
 801f5de:	1c45      	adds	r5, r0, #1
 801f5e0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801f5e4:	1215      	asrs	r5, r2, #8
 801f5e6:	f025 0507 	bic.w	r5, r5, #7
 801f5ea:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801f5ee:	1c4d      	adds	r5, r1, #1
 801f5f0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801f5f4:	10d1      	asrs	r1, r2, #3
 801f5f6:	f021 0103 	bic.w	r1, r1, #3
 801f5fa:	00fb      	lsls	r3, r7, #3
 801f5fc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801f600:	b2db      	uxtb	r3, r3
 801f602:	b2c0      	uxtb	r0, r0
 801f604:	00c9      	lsls	r1, r1, #3
 801f606:	fb03 f30c 	mul.w	r3, r3, ip
 801f60a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f60e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801f612:	4308      	orrs	r0, r1
 801f614:	1c59      	adds	r1, r3, #1
 801f616:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f61a:	00d2      	lsls	r2, r2, #3
 801f61c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f620:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801f624:	4318      	orrs	r0, r3
 801f626:	f8ae 0000 	strh.w	r0, [lr]
 801f62a:	e7a2      	b.n	801f572 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801f62c:	b013      	add	sp, #76	@ 0x4c
 801f62e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f632:	bf00      	nop
 801f634:	fffff800 	.word	0xfffff800

0801f638 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801f638:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f63c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801f640:	fb05 4c03 	mla	ip, r5, r3, r4
 801f644:	2d00      	cmp	r5, #0
 801f646:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801f64a:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801f64e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801f652:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801f656:	8808      	ldrh	r0, [r1, #0]
 801f658:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801f65c:	f2c0 80a7 	blt.w	801f7ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801f660:	45aa      	cmp	sl, r5
 801f662:	f340 80a4 	ble.w	801f7ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801f666:	2c00      	cmp	r4, #0
 801f668:	f2c0 809f 	blt.w	801f7aa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801f66c:	42a3      	cmp	r3, r4
 801f66e:	f340 809c 	ble.w	801f7aa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801f672:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801f676:	1c62      	adds	r2, r4, #1
 801f678:	f100 809c 	bmi.w	801f7b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801f67c:	4293      	cmp	r3, r2
 801f67e:	f340 8099 	ble.w	801f7b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801f682:	f1b9 0f00 	cmp.w	r9, #0
 801f686:	f000 8095 	beq.w	801f7b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801f68a:	f8be c002 	ldrh.w	ip, [lr, #2]
 801f68e:	3501      	adds	r5, #1
 801f690:	f100 8094 	bmi.w	801f7bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801f694:	45aa      	cmp	sl, r5
 801f696:	f340 8091 	ble.w	801f7bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801f69a:	2f00      	cmp	r7, #0
 801f69c:	f000 808e 	beq.w	801f7bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801f6a0:	2c00      	cmp	r4, #0
 801f6a2:	f2c0 8089 	blt.w	801f7b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801f6a6:	42a3      	cmp	r3, r4
 801f6a8:	f340 8086 	ble.w	801f7b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801f6ac:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801f6b0:	3401      	adds	r4, #1
 801f6b2:	f100 8086 	bmi.w	801f7c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801f6b6:	42a3      	cmp	r3, r4
 801f6b8:	f340 8083 	ble.w	801f7c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801f6bc:	f1b9 0f00 	cmp.w	r9, #0
 801f6c0:	d07f      	beq.n	801f7c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801f6c2:	3301      	adds	r3, #1
 801f6c4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801f6c8:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801f6cc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801f6d0:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801f6d4:	fb19 fe07 	smulbb	lr, r9, r7
 801f6d8:	ea44 0808 	orr.w	r8, r4, r8
 801f6dc:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801f6e0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801f6e4:	f1c7 0210 	rsb	r2, r7, #16
 801f6e8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801f6ec:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801f6f0:	ea44 0c0c 	orr.w	ip, r4, ip
 801f6f4:	eba2 0209 	sub.w	r2, r2, r9
 801f6f8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f6fc:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f700:	fb04 f40c 	mul.w	r4, r4, ip
 801f704:	fb02 4808 	mla	r8, r2, r8, r4
 801f708:	041a      	lsls	r2, r3, #16
 801f70a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f70e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f712:	4313      	orrs	r3, r2
 801f714:	042a      	lsls	r2, r5, #16
 801f716:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f71a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801f71e:	fb0e 8303 	mla	r3, lr, r3, r8
 801f722:	432a      	orrs	r2, r5
 801f724:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f728:	fb07 3202 	mla	r2, r7, r2, r3
 801f72c:	0d53      	lsrs	r3, r2, #21
 801f72e:	0952      	lsrs	r2, r2, #5
 801f730:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f734:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f738:	431a      	orrs	r2, r3
 801f73a:	b293      	uxth	r3, r2
 801f73c:	b2b4      	uxth	r4, r6
 801f73e:	1202      	asrs	r2, r0, #8
 801f740:	43f6      	mvns	r6, r6
 801f742:	b2f6      	uxtb	r6, r6
 801f744:	121d      	asrs	r5, r3, #8
 801f746:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801f74a:	fb12 f206 	smulbb	r2, r2, r6
 801f74e:	10c7      	asrs	r7, r0, #3
 801f750:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f754:	00c0      	lsls	r0, r0, #3
 801f756:	fb05 2504 	mla	r5, r5, r4, r2
 801f75a:	b2c0      	uxtb	r0, r0
 801f75c:	10da      	asrs	r2, r3, #3
 801f75e:	00db      	lsls	r3, r3, #3
 801f760:	b2db      	uxtb	r3, r3
 801f762:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801f766:	fb10 f006 	smulbb	r0, r0, r6
 801f76a:	b2ad      	uxth	r5, r5
 801f76c:	fb03 0004 	mla	r0, r3, r4, r0
 801f770:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f774:	fb17 f706 	smulbb	r7, r7, r6
 801f778:	b280      	uxth	r0, r0
 801f77a:	1c6b      	adds	r3, r5, #1
 801f77c:	fb02 7204 	mla	r2, r2, r4, r7
 801f780:	b292      	uxth	r2, r2
 801f782:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f786:	1c43      	adds	r3, r0, #1
 801f788:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f78c:	1c50      	adds	r0, r2, #1
 801f78e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f792:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f796:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f79a:	0952      	lsrs	r2, r2, #5
 801f79c:	432b      	orrs	r3, r5
 801f79e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f7a2:	4313      	orrs	r3, r2
 801f7a4:	800b      	strh	r3, [r1, #0]
 801f7a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f7aa:	4680      	mov	r8, r0
 801f7ac:	e763      	b.n	801f676 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801f7ae:	4684      	mov	ip, r0
 801f7b0:	4680      	mov	r8, r0
 801f7b2:	e76c      	b.n	801f68e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801f7b4:	4684      	mov	ip, r0
 801f7b6:	e76a      	b.n	801f68e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801f7b8:	4605      	mov	r5, r0
 801f7ba:	e779      	b.n	801f6b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801f7bc:	4603      	mov	r3, r0
 801f7be:	4605      	mov	r5, r0
 801f7c0:	e782      	b.n	801f6c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801f7c2:	4603      	mov	r3, r0
 801f7c4:	e780      	b.n	801f6c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801f7c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f7c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f7ca:	b093      	sub	sp, #76	@ 0x4c
 801f7cc:	461d      	mov	r5, r3
 801f7ce:	9210      	str	r2, [sp, #64]	@ 0x40
 801f7d0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f7d2:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801f7d6:	920b      	str	r2, [sp, #44]	@ 0x2c
 801f7d8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801f7dc:	910a      	str	r1, [sp, #40]	@ 0x28
 801f7de:	6859      	ldr	r1, [r3, #4]
 801f7e0:	681b      	ldr	r3, [r3, #0]
 801f7e2:	9011      	str	r0, [sp, #68]	@ 0x44
 801f7e4:	fb01 2707 	mla	r7, r1, r7, r2
 801f7e8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801f7ec:	9307      	str	r3, [sp, #28]
 801f7ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f7f0:	681b      	ldr	r3, [r3, #0]
 801f7f2:	9309      	str	r3, [sp, #36]	@ 0x24
 801f7f4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f7f6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801f7fa:	43db      	mvns	r3, r3
 801f7fc:	b2db      	uxtb	r3, r3
 801f7fe:	9308      	str	r3, [sp, #32]
 801f800:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f802:	2b00      	cmp	r3, #0
 801f804:	dc03      	bgt.n	801f80e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f806:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f808:	2b00      	cmp	r3, #0
 801f80a:	f340 8203 	ble.w	801fc14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801f80e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f810:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f814:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f818:	1e48      	subs	r0, r1, #1
 801f81a:	f102 3cff 	add.w	ip, r2, #4294967295
 801f81e:	2d00      	cmp	r5, #0
 801f820:	f340 80da 	ble.w	801f9d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801f824:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f828:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f82c:	d406      	bmi.n	801f83c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f82e:	4586      	cmp	lr, r0
 801f830:	da04      	bge.n	801f83c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f832:	2b00      	cmp	r3, #0
 801f834:	db02      	blt.n	801f83c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f836:	4563      	cmp	r3, ip
 801f838:	f2c0 80cf 	blt.w	801f9da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f83c:	f11e 0e01 	adds.w	lr, lr, #1
 801f840:	f100 80c1 	bmi.w	801f9c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f844:	4571      	cmp	r1, lr
 801f846:	f2c0 80be 	blt.w	801f9c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f84a:	3301      	adds	r3, #1
 801f84c:	f100 80bb 	bmi.w	801f9c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f850:	429a      	cmp	r2, r3
 801f852:	f2c0 80b8 	blt.w	801f9c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f856:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801f85a:	46a9      	mov	r9, r5
 801f85c:	f1b9 0f00 	cmp.w	r9, #0
 801f860:	f340 80d8 	ble.w	801fa14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801f864:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f866:	1421      	asrs	r1, r4, #16
 801f868:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f86c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f870:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801f874:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801f878:	f100 8111 	bmi.w	801fa9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801f87c:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f880:	4551      	cmp	r1, sl
 801f882:	f280 810c 	bge.w	801fa9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801f886:	2800      	cmp	r0, #0
 801f888:	f2c0 8109 	blt.w	801fa9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801f88c:	f103 3aff 	add.w	sl, r3, #4294967295
 801f890:	4550      	cmp	r0, sl
 801f892:	f280 8104 	bge.w	801fa9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801f896:	fa0f f38e 	sxth.w	r3, lr
 801f89a:	fb00 1103 	mla	r1, r0, r3, r1
 801f89e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801f8a0:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801f8a4:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801f8a8:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801f8ac:	f1bc 0f00 	cmp.w	ip, #0
 801f8b0:	d007      	beq.n	801f8c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801f8b2:	005b      	lsls	r3, r3, #1
 801f8b4:	eb0a 0003 	add.w	r0, sl, r3
 801f8b8:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801f8bc:	930c      	str	r3, [sp, #48]	@ 0x30
 801f8be:	8843      	ldrh	r3, [r0, #2]
 801f8c0:	930d      	str	r3, [sp, #52]	@ 0x34
 801f8c2:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801f8c6:	fb12 f30c 	smulbb	r3, r2, ip
 801f8ca:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f8ce:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801f8d2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f8d6:	10db      	asrs	r3, r3, #3
 801f8d8:	ea40 000e 	orr.w	r0, r0, lr
 801f8dc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f8e0:	f1cc 0e10 	rsb	lr, ip, #16
 801f8e4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f8e8:	ebae 0e02 	sub.w	lr, lr, r2
 801f8ec:	ea4a 0101 	orr.w	r1, sl, r1
 801f8f0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f8f4:	4351      	muls	r1, r2
 801f8f6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801f8f8:	9f08      	ldr	r7, [sp, #32]
 801f8fa:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801f8fe:	fb0e 1e00 	mla	lr, lr, r0, r1
 801f902:	0410      	lsls	r0, r2, #16
 801f904:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f908:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f90c:	4310      	orrs	r0, r2
 801f90e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801f910:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f912:	0412      	lsls	r2, r2, #16
 801f914:	fb03 e000 	mla	r0, r3, r0, lr
 801f918:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f91c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801f920:	ea42 020e 	orr.w	r2, r2, lr
 801f924:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801f928:	fb03 0302 	mla	r3, r3, r2, r0
 801f92c:	0d5a      	lsrs	r2, r3, #21
 801f92e:	095b      	lsrs	r3, r3, #5
 801f930:	f8b8 0000 	ldrh.w	r0, [r8]
 801f934:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f938:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f93c:	4313      	orrs	r3, r2
 801f93e:	b29b      	uxth	r3, r3
 801f940:	1201      	asrs	r1, r0, #8
 801f942:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801f946:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f94a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f94e:	fb11 f107 	smulbb	r1, r1, r7
 801f952:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801f956:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f95a:	00c0      	lsls	r0, r0, #3
 801f95c:	fb0c 1c02 	mla	ip, ip, r2, r1
 801f960:	b2c0      	uxtb	r0, r0
 801f962:	10d9      	asrs	r1, r3, #3
 801f964:	00db      	lsls	r3, r3, #3
 801f966:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801f96a:	b2db      	uxtb	r3, r3
 801f96c:	fb10 f007 	smulbb	r0, r0, r7
 801f970:	fa1f fc8c 	uxth.w	ip, ip
 801f974:	fb03 0302 	mla	r3, r3, r2, r0
 801f978:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f97c:	fb1e fe07 	smulbb	lr, lr, r7
 801f980:	fb01 e102 	mla	r1, r1, r2, lr
 801f984:	b29a      	uxth	r2, r3
 801f986:	f10c 0301 	add.w	r3, ip, #1
 801f98a:	b289      	uxth	r1, r1
 801f98c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f990:	1c53      	adds	r3, r2, #1
 801f992:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f996:	1c4a      	adds	r2, r1, #1
 801f998:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f99c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801f9a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f9a4:	0949      	lsrs	r1, r1, #5
 801f9a6:	ea43 030c 	orr.w	r3, r3, ip
 801f9aa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f9ae:	430b      	orrs	r3, r1
 801f9b0:	f8a8 3000 	strh.w	r3, [r8]
 801f9b4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f9b6:	441c      	add	r4, r3
 801f9b8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f9ba:	f108 0802 	add.w	r8, r8, #2
 801f9be:	441e      	add	r6, r3
 801f9c0:	f109 39ff 	add.w	r9, r9, #4294967295
 801f9c4:	e74a      	b.n	801f85c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801f9c6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f9c8:	441c      	add	r4, r3
 801f9ca:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f9cc:	441e      	add	r6, r3
 801f9ce:	9b07      	ldr	r3, [sp, #28]
 801f9d0:	3302      	adds	r3, #2
 801f9d2:	3d01      	subs	r5, #1
 801f9d4:	9307      	str	r3, [sp, #28]
 801f9d6:	e722      	b.n	801f81e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f9d8:	d022      	beq.n	801fa20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801f9da:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801f9dc:	1e6b      	subs	r3, r5, #1
 801f9de:	fb00 4003 	mla	r0, r0, r3, r4
 801f9e2:	1400      	asrs	r0, r0, #16
 801f9e4:	f53f af37 	bmi.w	801f856 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f9e8:	3901      	subs	r1, #1
 801f9ea:	4288      	cmp	r0, r1
 801f9ec:	f6bf af33 	bge.w	801f856 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f9f0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801f9f2:	fb01 6303 	mla	r3, r1, r3, r6
 801f9f6:	141b      	asrs	r3, r3, #16
 801f9f8:	f53f af2d 	bmi.w	801f856 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f9fc:	3a01      	subs	r2, #1
 801f9fe:	4293      	cmp	r3, r2
 801fa00:	f6bf af29 	bge.w	801f856 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801fa04:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801fa08:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801fa0c:	46a8      	mov	r8, r5
 801fa0e:	f1b8 0f00 	cmp.w	r8, #0
 801fa12:	dc5e      	bgt.n	801fad2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801fa14:	9b07      	ldr	r3, [sp, #28]
 801fa16:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fa1a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801fa1e:	9307      	str	r3, [sp, #28]
 801fa20:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fa22:	2b00      	cmp	r3, #0
 801fa24:	f340 80f6 	ble.w	801fc14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fa28:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fa2c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fa30:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fa34:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fa36:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fa3a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fa3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fa42:	eef0 6a62 	vmov.f32	s13, s5
 801fa46:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fa4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa4e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fa52:	ee16 4a90 	vmov	r4, s13
 801fa56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fa5a:	eef0 6a43 	vmov.f32	s13, s6
 801fa5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fa62:	ee12 2a90 	vmov	r2, s5
 801fa66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fa6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa6e:	ee13 2a10 	vmov	r2, s6
 801fa72:	931f      	str	r3, [sp, #124]	@ 0x7c
 801fa74:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fa76:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa7a:	9320      	str	r3, [sp, #128]	@ 0x80
 801fa7c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fa7e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801fa80:	3b01      	subs	r3, #1
 801fa82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa86:	930a      	str	r3, [sp, #40]	@ 0x28
 801fa88:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fa8a:	ee16 6a90 	vmov	r6, s13
 801fa8e:	bf14      	ite	ne
 801fa90:	461d      	movne	r5, r3
 801fa92:	4615      	moveq	r5, r2
 801fa94:	eeb0 3a67 	vmov.f32	s6, s15
 801fa98:	eef0 2a47 	vmov.f32	s5, s14
 801fa9c:	e6b0      	b.n	801f800 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801fa9e:	f111 0a01 	adds.w	sl, r1, #1
 801faa2:	d487      	bmi.n	801f9b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801faa4:	45d6      	cmp	lr, sl
 801faa6:	db85      	blt.n	801f9b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801faa8:	f110 0a01 	adds.w	sl, r0, #1
 801faac:	d482      	bmi.n	801f9b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801faae:	4553      	cmp	r3, sl
 801fab0:	db80      	blt.n	801f9b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801fab2:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801fab4:	9101      	str	r1, [sp, #4]
 801fab6:	b21b      	sxth	r3, r3
 801fab8:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801fabc:	9300      	str	r3, [sp, #0]
 801fabe:	e9cd c704 	strd	ip, r7, [sp, #16]
 801fac2:	fa0f f38e 	sxth.w	r3, lr
 801fac6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801fac8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801faca:	4641      	mov	r1, r8
 801facc:	f7ff fdb4 	bl	801f638 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801fad0:	e770      	b.n	801f9b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801fad2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fad4:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801fad6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fada:	1430      	asrs	r0, r6, #16
 801fadc:	1423      	asrs	r3, r4, #16
 801fade:	fb01 3000 	mla	r0, r1, r0, r3
 801fae2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fae4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801fae8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801faec:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801faf0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801faf4:	8858      	ldrh	r0, [r3, #2]
 801faf6:	f1be 0f00 	cmp.w	lr, #0
 801fafa:	d00b      	beq.n	801fb14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801fafc:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801fb00:	3901      	subs	r1, #1
 801fb02:	0049      	lsls	r1, r1, #1
 801fb04:	3102      	adds	r1, #2
 801fb06:	eb03 0b01 	add.w	fp, r3, r1
 801fb0a:	5a5b      	ldrh	r3, [r3, r1]
 801fb0c:	930e      	str	r3, [sp, #56]	@ 0x38
 801fb0e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801fb12:	930f      	str	r3, [sp, #60]	@ 0x3c
 801fb14:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801fb18:	fb12 f30e 	smulbb	r3, r2, lr
 801fb1c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801fb20:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801fb24:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801fb28:	10db      	asrs	r3, r3, #3
 801fb2a:	ea41 010c 	orr.w	r1, r1, ip
 801fb2e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801fb32:	f1ce 0c10 	rsb	ip, lr, #16
 801fb36:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fb3a:	ebac 0c02 	sub.w	ip, ip, r2
 801fb3e:	ea4b 0000 	orr.w	r0, fp, r0
 801fb42:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801fb46:	4350      	muls	r0, r2
 801fb48:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fb4a:	9f08      	ldr	r7, [sp, #32]
 801fb4c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801fb50:	fb0c 0c01 	mla	ip, ip, r1, r0
 801fb54:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801fb58:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801fb5c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801fb5e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801fb60:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801fb64:	0412      	lsls	r2, r2, #16
 801fb66:	ea4b 0101 	orr.w	r1, fp, r1
 801fb6a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fb6e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801fb72:	fb03 c101 	mla	r1, r3, r1, ip
 801fb76:	4302      	orrs	r2, r0
 801fb78:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801fb7c:	fb03 1202 	mla	r2, r3, r2, r1
 801fb80:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801fb84:	0952      	lsrs	r2, r2, #5
 801fb86:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801fb8a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801fb8e:	f8b9 2000 	ldrh.w	r2, [r9]
 801fb92:	ea4b 0303 	orr.w	r3, fp, r3
 801fb96:	b29b      	uxth	r3, r3
 801fb98:	1211      	asrs	r1, r2, #8
 801fb9a:	1218      	asrs	r0, r3, #8
 801fb9c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801fba0:	fb11 f107 	smulbb	r1, r1, r7
 801fba4:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801fba8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fbac:	00d2      	lsls	r2, r2, #3
 801fbae:	fb00 100a 	mla	r0, r0, sl, r1
 801fbb2:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801fbb6:	10d9      	asrs	r1, r3, #3
 801fbb8:	b2d2      	uxtb	r2, r2
 801fbba:	00db      	lsls	r3, r3, #3
 801fbbc:	fb1c fc07 	smulbb	ip, ip, r7
 801fbc0:	fb12 f207 	smulbb	r2, r2, r7
 801fbc4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801fbc8:	b2db      	uxtb	r3, r3
 801fbca:	b280      	uxth	r0, r0
 801fbcc:	fb01 c10a 	mla	r1, r1, sl, ip
 801fbd0:	fb03 230a 	mla	r3, r3, sl, r2
 801fbd4:	b29b      	uxth	r3, r3
 801fbd6:	b289      	uxth	r1, r1
 801fbd8:	1c42      	adds	r2, r0, #1
 801fbda:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fbde:	f101 0c01 	add.w	ip, r1, #1
 801fbe2:	1c5a      	adds	r2, r3, #1
 801fbe4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fbe8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801fbec:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fbee:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801fbf2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fbf6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fbfa:	4310      	orrs	r0, r2
 801fbfc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801fc00:	441c      	add	r4, r3
 801fc02:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fc04:	ea40 000c 	orr.w	r0, r0, ip
 801fc08:	f829 0b02 	strh.w	r0, [r9], #2
 801fc0c:	441e      	add	r6, r3
 801fc0e:	f108 38ff 	add.w	r8, r8, #4294967295
 801fc12:	e6fc      	b.n	801fa0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801fc14:	b013      	add	sp, #76	@ 0x4c
 801fc16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fc1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801fc1a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801fc1e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801fc22:	fb0e 4703 	mla	r7, lr, r3, r4
 801fc26:	f1be 0f00 	cmp.w	lr, #0
 801fc2a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801fc2e:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801fc32:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801fc36:	8808      	ldrh	r0, [r1, #0]
 801fc38:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801fc3c:	db60      	blt.n	801fd00 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801fc3e:	45f1      	cmp	r9, lr
 801fc40:	dd5e      	ble.n	801fd00 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801fc42:	2c00      	cmp	r4, #0
 801fc44:	db5a      	blt.n	801fcfc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801fc46:	42a3      	cmp	r3, r4
 801fc48:	dd58      	ble.n	801fcfc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801fc4a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801fc4e:	1c62      	adds	r2, r4, #1
 801fc50:	d459      	bmi.n	801fd06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801fc52:	4293      	cmp	r3, r2
 801fc54:	dd57      	ble.n	801fd06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801fc56:	2d00      	cmp	r5, #0
 801fc58:	d055      	beq.n	801fd06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801fc5a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801fc5e:	f11e 0e01 	adds.w	lr, lr, #1
 801fc62:	d454      	bmi.n	801fd0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801fc64:	45f1      	cmp	r9, lr
 801fc66:	dd52      	ble.n	801fd0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801fc68:	2e00      	cmp	r6, #0
 801fc6a:	d050      	beq.n	801fd0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801fc6c:	2c00      	cmp	r4, #0
 801fc6e:	db4c      	blt.n	801fd0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801fc70:	42a3      	cmp	r3, r4
 801fc72:	dd4a      	ble.n	801fd0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801fc74:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801fc78:	3401      	adds	r4, #1
 801fc7a:	d405      	bmi.n	801fc88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801fc7c:	42a3      	cmp	r3, r4
 801fc7e:	dd03      	ble.n	801fc88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801fc80:	b115      	cbz	r5, 801fc88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801fc82:	3301      	adds	r3, #1
 801fc84:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801fc88:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801fc8c:	fb15 f406 	smulbb	r4, r5, r6
 801fc90:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801fc94:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801fc98:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801fc9c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801fca0:	ea43 0c0c 	orr.w	ip, r3, ip
 801fca4:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801fca8:	f1c6 0310 	rsb	r3, r6, #16
 801fcac:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801fcb0:	1b5b      	subs	r3, r3, r5
 801fcb2:	ea4e 0707 	orr.w	r7, lr, r7
 801fcb6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801fcba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801fcbe:	437d      	muls	r5, r7
 801fcc0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801fcc4:	0403      	lsls	r3, r0, #16
 801fcc6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801fcca:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fcce:	4318      	orrs	r0, r3
 801fcd0:	0413      	lsls	r3, r2, #16
 801fcd2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801fcd6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801fcda:	4313      	orrs	r3, r2
 801fcdc:	fb04 c000 	mla	r0, r4, r0, ip
 801fce0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801fce4:	fb06 0003 	mla	r0, r6, r3, r0
 801fce8:	0d43      	lsrs	r3, r0, #21
 801fcea:	0940      	lsrs	r0, r0, #5
 801fcec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fcf0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fcf4:	4318      	orrs	r0, r3
 801fcf6:	8008      	strh	r0, [r1, #0]
 801fcf8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801fcfc:	4684      	mov	ip, r0
 801fcfe:	e7a6      	b.n	801fc4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801fd00:	4607      	mov	r7, r0
 801fd02:	4684      	mov	ip, r0
 801fd04:	e7ab      	b.n	801fc5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801fd06:	4607      	mov	r7, r0
 801fd08:	e7a9      	b.n	801fc5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801fd0a:	4602      	mov	r2, r0
 801fd0c:	e7b4      	b.n	801fc78 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801fd0e:	4602      	mov	r2, r0
 801fd10:	e7ba      	b.n	801fc88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801fd12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fd12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd16:	b08f      	sub	sp, #60	@ 0x3c
 801fd18:	461d      	mov	r5, r3
 801fd1a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801fd1c:	920c      	str	r2, [sp, #48]	@ 0x30
 801fd1e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801fd22:	9107      	str	r1, [sp, #28]
 801fd24:	6859      	ldr	r1, [r3, #4]
 801fd26:	681b      	ldr	r3, [r3, #0]
 801fd28:	900d      	str	r0, [sp, #52]	@ 0x34
 801fd2a:	fb01 2707 	mla	r7, r1, r7, r2
 801fd2e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801fd32:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fd34:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801fd38:	f8d3 8000 	ldr.w	r8, [r3]
 801fd3c:	9b07      	ldr	r3, [sp, #28]
 801fd3e:	2b00      	cmp	r3, #0
 801fd40:	dc03      	bgt.n	801fd4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801fd42:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fd44:	2b00      	cmp	r3, #0
 801fd46:	f340 8181 	ble.w	802004c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801fd4a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fd4c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fd50:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fd54:	1e48      	subs	r0, r1, #1
 801fd56:	f102 3cff 	add.w	ip, r2, #4294967295
 801fd5a:	2d00      	cmp	r5, #0
 801fd5c:	f340 809b 	ble.w	801fe96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801fd60:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fd64:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fd68:	d406      	bmi.n	801fd78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fd6a:	4586      	cmp	lr, r0
 801fd6c:	da04      	bge.n	801fd78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fd6e:	2b00      	cmp	r3, #0
 801fd70:	db02      	blt.n	801fd78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fd72:	4563      	cmp	r3, ip
 801fd74:	f2c0 8090 	blt.w	801fe98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801fd78:	f11e 0e01 	adds.w	lr, lr, #1
 801fd7c:	f100 8084 	bmi.w	801fe88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fd80:	4571      	cmp	r1, lr
 801fd82:	f2c0 8081 	blt.w	801fe88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fd86:	3301      	adds	r3, #1
 801fd88:	d47e      	bmi.n	801fe88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fd8a:	429a      	cmp	r2, r3
 801fd8c:	db7c      	blt.n	801fe88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801fd8e:	46aa      	mov	sl, r5
 801fd90:	46b9      	mov	r9, r7
 801fd92:	f1ba 0f00 	cmp.w	sl, #0
 801fd96:	f340 8099 	ble.w	801fecc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801fd9a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fd9c:	1421      	asrs	r1, r4, #16
 801fd9e:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fda2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fda6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fdaa:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801fdae:	f100 80d0 	bmi.w	801ff52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801fdb2:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fdb6:	4559      	cmp	r1, fp
 801fdb8:	f280 80cb 	bge.w	801ff52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801fdbc:	2800      	cmp	r0, #0
 801fdbe:	f2c0 80c8 	blt.w	801ff52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801fdc2:	f103 3bff 	add.w	fp, r3, #4294967295
 801fdc6:	4558      	cmp	r0, fp
 801fdc8:	f280 80c3 	bge.w	801ff52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801fdcc:	fa0f fe8e 	sxth.w	lr, lr
 801fdd0:	fb00 110e 	mla	r1, r0, lr, r1
 801fdd4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801fdd8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801fddc:	8841      	ldrh	r1, [r0, #2]
 801fdde:	f1bc 0f00 	cmp.w	ip, #0
 801fde2:	d00b      	beq.n	801fdfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801fde4:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801fde8:	3b01      	subs	r3, #1
 801fdea:	005b      	lsls	r3, r3, #1
 801fdec:	3302      	adds	r3, #2
 801fdee:	eb00 0e03 	add.w	lr, r0, r3
 801fdf2:	5ac3      	ldrh	r3, [r0, r3]
 801fdf4:	9308      	str	r3, [sp, #32]
 801fdf6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801fdfa:	9309      	str	r3, [sp, #36]	@ 0x24
 801fdfc:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801fe00:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801fe04:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801fe08:	ea40 000b 	orr.w	r0, r0, fp
 801fe0c:	fb12 f30c 	smulbb	r3, r2, ip
 801fe10:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fe14:	10db      	asrs	r3, r3, #3
 801fe16:	f1cc 0e10 	rsb	lr, ip, #16
 801fe1a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801fe1e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801fe22:	ebae 0e02 	sub.w	lr, lr, r2
 801fe26:	ea4b 0101 	orr.w	r1, fp, r1
 801fe2a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801fe2e:	4351      	muls	r1, r2
 801fe30:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801fe32:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801fe36:	fb0e 1e00 	mla	lr, lr, r0, r1
 801fe3a:	0410      	lsls	r0, r2, #16
 801fe3c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801fe40:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801fe44:	4310      	orrs	r0, r2
 801fe46:	9a08      	ldr	r2, [sp, #32]
 801fe48:	9908      	ldr	r1, [sp, #32]
 801fe4a:	0412      	lsls	r2, r2, #16
 801fe4c:	fb03 e000 	mla	r0, r3, r0, lr
 801fe50:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801fe54:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801fe58:	ea42 020e 	orr.w	r2, r2, lr
 801fe5c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801fe60:	fb03 0302 	mla	r3, r3, r2, r0
 801fe64:	0d5a      	lsrs	r2, r3, #21
 801fe66:	095b      	lsrs	r3, r3, #5
 801fe68:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fe6c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801fe70:	4313      	orrs	r3, r2
 801fe72:	f8a9 3000 	strh.w	r3, [r9]
 801fe76:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801fe78:	441c      	add	r4, r3
 801fe7a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fe7c:	f109 0902 	add.w	r9, r9, #2
 801fe80:	441e      	add	r6, r3
 801fe82:	f10a 3aff 	add.w	sl, sl, #4294967295
 801fe86:	e784      	b.n	801fd92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801fe88:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801fe8a:	441c      	add	r4, r3
 801fe8c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fe8e:	3d01      	subs	r5, #1
 801fe90:	441e      	add	r6, r3
 801fe92:	3702      	adds	r7, #2
 801fe94:	e761      	b.n	801fd5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fe96:	d01d      	beq.n	801fed4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801fe98:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801fe9a:	1e6b      	subs	r3, r5, #1
 801fe9c:	fb00 4003 	mla	r0, r0, r3, r4
 801fea0:	1400      	asrs	r0, r0, #16
 801fea2:	f53f af74 	bmi.w	801fd8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801fea6:	3901      	subs	r1, #1
 801fea8:	4288      	cmp	r0, r1
 801feaa:	f6bf af70 	bge.w	801fd8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801feae:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801feb0:	fb01 6303 	mla	r3, r1, r3, r6
 801feb4:	141b      	asrs	r3, r3, #16
 801feb6:	f53f af6a 	bmi.w	801fd8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801feba:	3a01      	subs	r2, #1
 801febc:	4293      	cmp	r3, r2
 801febe:	f6bf af66 	bge.w	801fd8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801fec2:	46a9      	mov	r9, r5
 801fec4:	46ba      	mov	sl, r7
 801fec6:	f1b9 0f00 	cmp.w	r9, #0
 801feca:	dc5a      	bgt.n	801ff82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801fecc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fed0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801fed4:	9b07      	ldr	r3, [sp, #28]
 801fed6:	2b00      	cmp	r3, #0
 801fed8:	f340 80b8 	ble.w	802004c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801fedc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fee0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fee4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fee8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801feea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801feee:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fef2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fef6:	eef0 6a62 	vmov.f32	s13, s5
 801fefa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fefe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff02:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ff06:	ee16 4a90 	vmov	r4, s13
 801ff0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ff0e:	eef0 6a43 	vmov.f32	s13, s6
 801ff12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ff16:	ee12 2a90 	vmov	r2, s5
 801ff1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ff1e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff22:	ee13 2a10 	vmov	r2, s6
 801ff26:	931b      	str	r3, [sp, #108]	@ 0x6c
 801ff28:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ff2a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff2e:	931c      	str	r3, [sp, #112]	@ 0x70
 801ff30:	9b07      	ldr	r3, [sp, #28]
 801ff32:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ff34:	3b01      	subs	r3, #1
 801ff36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff3a:	9307      	str	r3, [sp, #28]
 801ff3c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ff3e:	ee16 6a90 	vmov	r6, s13
 801ff42:	bf14      	ite	ne
 801ff44:	461d      	movne	r5, r3
 801ff46:	4615      	moveq	r5, r2
 801ff48:	eeb0 3a67 	vmov.f32	s6, s15
 801ff4c:	eef0 2a47 	vmov.f32	s5, s14
 801ff50:	e6f4      	b.n	801fd3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ff52:	f111 0b01 	adds.w	fp, r1, #1
 801ff56:	d48e      	bmi.n	801fe76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ff58:	45de      	cmp	lr, fp
 801ff5a:	db8c      	blt.n	801fe76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ff5c:	f110 0b01 	adds.w	fp, r0, #1
 801ff60:	d489      	bmi.n	801fe76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ff62:	455b      	cmp	r3, fp
 801ff64:	db87      	blt.n	801fe76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ff66:	b21b      	sxth	r3, r3
 801ff68:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801ff6c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801ff70:	9300      	str	r3, [sp, #0]
 801ff72:	4642      	mov	r2, r8
 801ff74:	fa0f f38e 	sxth.w	r3, lr
 801ff78:	4649      	mov	r1, r9
 801ff7a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801ff7c:	f7ff fe4d 	bl	801fc1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801ff80:	e779      	b.n	801fe76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ff82:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ff84:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ff88:	1420      	asrs	r0, r4, #16
 801ff8a:	1431      	asrs	r1, r6, #16
 801ff8c:	fb03 0101 	mla	r1, r3, r1, r0
 801ff90:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801ff94:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801ff98:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801ff9c:	8841      	ldrh	r1, [r0, #2]
 801ff9e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ffa2:	f1be 0f00 	cmp.w	lr, #0
 801ffa6:	d00b      	beq.n	801ffc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801ffa8:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801ffac:	3b01      	subs	r3, #1
 801ffae:	005b      	lsls	r3, r3, #1
 801ffb0:	3302      	adds	r3, #2
 801ffb2:	eb00 0b03 	add.w	fp, r0, r3
 801ffb6:	5ac3      	ldrh	r3, [r0, r3]
 801ffb8:	930a      	str	r3, [sp, #40]	@ 0x28
 801ffba:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801ffbe:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ffc0:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801ffc4:	fb12 f30e 	smulbb	r3, r2, lr
 801ffc8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ffcc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ffd0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ffd4:	10db      	asrs	r3, r3, #3
 801ffd6:	ea40 000c 	orr.w	r0, r0, ip
 801ffda:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ffde:	f1ce 0c10 	rsb	ip, lr, #16
 801ffe2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ffe6:	ebac 0c02 	sub.w	ip, ip, r2
 801ffea:	ea4b 0101 	orr.w	r1, fp, r1
 801ffee:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801fff2:	4351      	muls	r1, r2
 801fff4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801fff6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801fffa:	fb0c 1c00 	mla	ip, ip, r0, r1
 801fffe:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8020002:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 8020006:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020008:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802000a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802000e:	0412      	lsls	r2, r2, #16
 8020010:	ea4b 0000 	orr.w	r0, fp, r0
 8020014:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020018:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 802001c:	fb03 c000 	mla	r0, r3, r0, ip
 8020020:	ea42 0b0b 	orr.w	fp, r2, fp
 8020024:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8020028:	fb03 000b 	mla	r0, r3, fp, r0
 802002c:	0d43      	lsrs	r3, r0, #21
 802002e:	0940      	lsrs	r0, r0, #5
 8020030:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020034:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020038:	4318      	orrs	r0, r3
 802003a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802003c:	f82a 0b02 	strh.w	r0, [sl], #2
 8020040:	441c      	add	r4, r3
 8020042:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020044:	f109 39ff 	add.w	r9, r9, #4294967295
 8020048:	441e      	add	r6, r3
 802004a:	e73c      	b.n	801fec6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802004c:	b00f      	add	sp, #60	@ 0x3c
 802004e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8020052:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020056:	b085      	sub	sp, #20
 8020058:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 802005c:	9102      	str	r1, [sp, #8]
 802005e:	2c00      	cmp	r4, #0
 8020060:	fb04 7103 	mla	r1, r4, r3, r7
 8020064:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8020068:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 802006c:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8020070:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8020074:	f2c0 811b 	blt.w	80202ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8020078:	45a6      	cmp	lr, r4
 802007a:	f340 8118 	ble.w	80202ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802007e:	2f00      	cmp	r7, #0
 8020080:	f2c0 8113 	blt.w	80202aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8020084:	42bb      	cmp	r3, r7
 8020086:	f340 8110 	ble.w	80202aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802008a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802008e:	1c7a      	adds	r2, r7, #1
 8020090:	f100 8110 	bmi.w	80202b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8020094:	4293      	cmp	r3, r2
 8020096:	f340 810d 	ble.w	80202b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802009a:	2e00      	cmp	r6, #0
 802009c:	f000 810c 	beq.w	80202b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80200a0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80200a4:	3401      	adds	r4, #1
 80200a6:	f100 810b 	bmi.w	80202c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80200aa:	45a6      	cmp	lr, r4
 80200ac:	f340 8108 	ble.w	80202c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80200b0:	2800      	cmp	r0, #0
 80200b2:	f000 8108 	beq.w	80202c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80200b6:	2f00      	cmp	r7, #0
 80200b8:	f2c0 8100 	blt.w	80202bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80200bc:	42bb      	cmp	r3, r7
 80200be:	f340 80fd 	ble.w	80202bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80200c2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80200c6:	3701      	adds	r7, #1
 80200c8:	f100 8100 	bmi.w	80202cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80200cc:	42bb      	cmp	r3, r7
 80200ce:	f340 80fd 	ble.w	80202cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80200d2:	2e00      	cmp	r6, #0
 80200d4:	f000 80fc 	beq.w	80202d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80200d8:	3301      	adds	r3, #1
 80200da:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80200de:	b2b6      	uxth	r6, r6
 80200e0:	b280      	uxth	r0, r0
 80200e2:	fb00 fe06 	mul.w	lr, r0, r6
 80200e6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80200ea:	0136      	lsls	r6, r6, #4
 80200ec:	eba6 070e 	sub.w	r7, r6, lr
 80200f0:	b280      	uxth	r0, r0
 80200f2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 80200f6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80200fa:	b2bf      	uxth	r7, r7
 80200fc:	1a1b      	subs	r3, r3, r0
 80200fe:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020102:	b29b      	uxth	r3, r3
 8020104:	fb0a f607 	mul.w	r6, sl, r7
 8020108:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802010c:	fb0b 6603 	mla	r6, fp, r3, r6
 8020110:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020114:	fb00 6609 	mla	r6, r0, r9, r6
 8020118:	fb0e 6608 	mla	r6, lr, r8, r6
 802011c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020120:	9600      	str	r6, [sp, #0]
 8020122:	2e00      	cmp	r6, #0
 8020124:	f000 80be 	beq.w	80202a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8020128:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802012c:	fb0b fc0c 	mul.w	ip, fp, ip
 8020130:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8020134:	fb0b f505 	mul.w	r5, fp, r5
 8020138:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802013c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8020140:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020144:	44dc      	add	ip, fp
 8020146:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802014a:	9501      	str	r5, [sp, #4]
 802014c:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8020150:	9503      	str	r5, [sp, #12]
 8020152:	9d01      	ldr	r5, [sp, #4]
 8020154:	9e02      	ldr	r6, [sp, #8]
 8020156:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 802015a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802015e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8020162:	fb0a fc0c 	mul.w	ip, sl, ip
 8020166:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802016a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802016e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020172:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020176:	4465      	add	r5, ip
 8020178:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802017c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8020180:	fb09 fc0c 	mul.w	ip, r9, ip
 8020184:	fb09 f904 	mul.w	r9, r9, r4
 8020188:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 802018c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020190:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8020194:	fb08 f404 	mul.w	r4, r8, r4
 8020198:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802019c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80201a0:	fb08 f802 	mul.w	r8, r8, r2
 80201a4:	fb0a fa01 	mul.w	sl, sl, r1
 80201a8:	0a22      	lsrs	r2, r4, #8
 80201aa:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80201ae:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80201b2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 80201b6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80201ba:	4414      	add	r4, r2
 80201bc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80201c0:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80201c4:	0a2d      	lsrs	r5, r5, #8
 80201c6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80201ca:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80201ce:	9a03      	ldr	r2, [sp, #12]
 80201d0:	8836      	ldrh	r6, [r6, #0]
 80201d2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80201d6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80201da:	437d      	muls	r5, r7
 80201dc:	4461      	add	r1, ip
 80201de:	0a24      	lsrs	r4, r4, #8
 80201e0:	fb02 5503 	mla	r5, r2, r3, r5
 80201e4:	0a09      	lsrs	r1, r1, #8
 80201e6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80201ea:	fb04 540e 	mla	r4, r4, lr, r5
 80201ee:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80201f2:	fb01 4100 	mla	r1, r1, r0, r4
 80201f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80201fa:	0a09      	lsrs	r1, r1, #8
 80201fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020200:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8020204:	fb07 f70a 	mul.w	r7, r7, sl
 8020208:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802020c:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8020210:	fb03 7101 	mla	r1, r3, r1, r7
 8020214:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020218:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802021c:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020220:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8020224:	fb00 e101 	mla	r1, r0, r1, lr
 8020228:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 802022c:	9a00      	ldr	r2, [sp, #0]
 802022e:	b287      	uxth	r7, r0
 8020230:	437a      	muls	r2, r7
 8020232:	0a09      	lsrs	r1, r1, #8
 8020234:	1c53      	adds	r3, r2, #1
 8020236:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802023a:	4321      	orrs	r1, r4
 802023c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020240:	1235      	asrs	r5, r6, #8
 8020242:	0c0a      	lsrs	r2, r1, #16
 8020244:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8020248:	b2db      	uxtb	r3, r3
 802024a:	fb12 f207 	smulbb	r2, r2, r7
 802024e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8020252:	fb05 2503 	mla	r5, r5, r3, r2
 8020256:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802025a:	10f2      	asrs	r2, r6, #3
 802025c:	b2c8      	uxtb	r0, r1
 802025e:	00f6      	lsls	r6, r6, #3
 8020260:	fb14 f407 	smulbb	r4, r4, r7
 8020264:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020268:	b2f6      	uxtb	r6, r6
 802026a:	fb10 f007 	smulbb	r0, r0, r7
 802026e:	fb02 4203 	mla	r2, r2, r3, r4
 8020272:	b2ad      	uxth	r5, r5
 8020274:	fb06 0303 	mla	r3, r6, r3, r0
 8020278:	b299      	uxth	r1, r3
 802027a:	b294      	uxth	r4, r2
 802027c:	1c6b      	adds	r3, r5, #1
 802027e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020282:	1c62      	adds	r2, r4, #1
 8020284:	1c4b      	adds	r3, r1, #1
 8020286:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802028a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802028e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020292:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020296:	0952      	lsrs	r2, r2, #5
 8020298:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802029c:	432b      	orrs	r3, r5
 802029e:	4313      	orrs	r3, r2
 80202a0:	9a02      	ldr	r2, [sp, #8]
 80202a2:	8013      	strh	r3, [r2, #0]
 80202a4:	b005      	add	sp, #20
 80202a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80202aa:	2500      	movs	r5, #0
 80202ac:	e6ef      	b.n	802008e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80202ae:	2100      	movs	r1, #0
 80202b0:	460d      	mov	r5, r1
 80202b2:	e6f7      	b.n	80200a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80202b4:	2100      	movs	r1, #0
 80202b6:	e6f5      	b.n	80200a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80202b8:	4631      	mov	r1, r6
 80202ba:	e6f3      	b.n	80200a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80202bc:	2400      	movs	r4, #0
 80202be:	e702      	b.n	80200c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80202c0:	2200      	movs	r2, #0
 80202c2:	4614      	mov	r4, r2
 80202c4:	e70b      	b.n	80200de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80202c6:	4602      	mov	r2, r0
 80202c8:	4604      	mov	r4, r0
 80202ca:	e708      	b.n	80200de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80202cc:	2200      	movs	r2, #0
 80202ce:	e706      	b.n	80200de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80202d0:	4632      	mov	r2, r6
 80202d2:	e704      	b.n	80200de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080202d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80202d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80202d8:	b09d      	sub	sp, #116	@ 0x74
 80202da:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 80202de:	9219      	str	r2, [sp, #100]	@ 0x64
 80202e0:	9307      	str	r3, [sp, #28]
 80202e2:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 80202e4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 80202e8:	931a      	str	r3, [sp, #104]	@ 0x68
 80202ea:	9117      	str	r1, [sp, #92]	@ 0x5c
 80202ec:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 80202f0:	901b      	str	r0, [sp, #108]	@ 0x6c
 80202f2:	6850      	ldr	r0, [r2, #4]
 80202f4:	6812      	ldr	r2, [r2, #0]
 80202f6:	fb00 1303 	mla	r3, r0, r3, r1
 80202fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80202fe:	930a      	str	r3, [sp, #40]	@ 0x28
 8020300:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8020302:	681b      	ldr	r3, [r3, #0]
 8020304:	9310      	str	r3, [sp, #64]	@ 0x40
 8020306:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 802030a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802030c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802030e:	2b00      	cmp	r3, #0
 8020310:	dc03      	bgt.n	802031a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8020312:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8020314:	2b00      	cmp	r3, #0
 8020316:	f340 8375 	ble.w	8020a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802031a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802031c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020320:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020324:	1e48      	subs	r0, r1, #1
 8020326:	1e57      	subs	r7, r2, #1
 8020328:	9b07      	ldr	r3, [sp, #28]
 802032a:	2b00      	cmp	r3, #0
 802032c:	f340 818e 	ble.w	802064c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8020330:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020334:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020338:	d406      	bmi.n	8020348 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802033a:	4584      	cmp	ip, r0
 802033c:	da04      	bge.n	8020348 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802033e:	2b00      	cmp	r3, #0
 8020340:	db02      	blt.n	8020348 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8020342:	42bb      	cmp	r3, r7
 8020344:	f2c0 8183 	blt.w	802064e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8020348:	f11c 0c01 	adds.w	ip, ip, #1
 802034c:	f100 8173 	bmi.w	8020636 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8020350:	4561      	cmp	r1, ip
 8020352:	f2c0 8170 	blt.w	8020636 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8020356:	3301      	adds	r3, #1
 8020358:	f100 816d 	bmi.w	8020636 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802035c:	429a      	cmp	r2, r3
 802035e:	f2c0 816a 	blt.w	8020636 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8020362:	9b07      	ldr	r3, [sp, #28]
 8020364:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8020366:	9318      	str	r3, [sp, #96]	@ 0x60
 8020368:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802036a:	2b00      	cmp	r3, #0
 802036c:	f340 818c 	ble.w	8020688 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8020370:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 8020372:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8020374:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020378:	689b      	ldr	r3, [r3, #8]
 802037a:	1422      	asrs	r2, r4, #16
 802037c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020380:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020384:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020388:	f100 81cd 	bmi.w	8020726 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802038c:	f103 38ff 	add.w	r8, r3, #4294967295
 8020390:	4542      	cmp	r2, r8
 8020392:	f280 81c8 	bge.w	8020726 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020396:	f1bc 0f00 	cmp.w	ip, #0
 802039a:	f2c0 81c4 	blt.w	8020726 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802039e:	f10e 38ff 	add.w	r8, lr, #4294967295
 80203a2:	45c4      	cmp	ip, r8
 80203a4:	f280 81bf 	bge.w	8020726 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80203a8:	b21b      	sxth	r3, r3
 80203aa:	fb0c 2203 	mla	r2, ip, r3, r2
 80203ae:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80203b0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80203b4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80203b8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80203bc:	2800      	cmp	r0, #0
 80203be:	f000 81a9 	beq.w	8020714 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80203c2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80203c6:	950c      	str	r5, [sp, #48]	@ 0x30
 80203c8:	0e2d      	lsrs	r5, r5, #24
 80203ca:	9513      	str	r5, [sp, #76]	@ 0x4c
 80203cc:	b181      	cbz	r1, 80203f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80203ce:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80203d2:	3b01      	subs	r3, #1
 80203d4:	009b      	lsls	r3, r3, #2
 80203d6:	3304      	adds	r3, #4
 80203d8:	eb08 0c03 	add.w	ip, r8, r3
 80203dc:	f858 3003 	ldr.w	r3, [r8, r3]
 80203e0:	9308      	str	r3, [sp, #32]
 80203e2:	0e1b      	lsrs	r3, r3, #24
 80203e4:	9311      	str	r3, [sp, #68]	@ 0x44
 80203e6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80203ea:	930d      	str	r3, [sp, #52]	@ 0x34
 80203ec:	0e1b      	lsrs	r3, r3, #24
 80203ee:	9314      	str	r3, [sp, #80]	@ 0x50
 80203f0:	b280      	uxth	r0, r0
 80203f2:	b289      	uxth	r1, r1
 80203f4:	fb00 f901 	mul.w	r9, r0, r1
 80203f8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80203fc:	0100      	lsls	r0, r0, #4
 80203fe:	eba0 0809 	sub.w	r8, r0, r9
 8020402:	b289      	uxth	r1, r1
 8020404:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8020408:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802040a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802040c:	fa1f f888 	uxth.w	r8, r8
 8020410:	1a5b      	subs	r3, r3, r1
 8020412:	b29b      	uxth	r3, r3
 8020414:	fb08 f000 	mul.w	r0, r8, r0
 8020418:	fb03 000e 	mla	r0, r3, lr, r0
 802041c:	fb01 0005 	mla	r0, r1, r5, r0
 8020420:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8020422:	fb09 0005 	mla	r0, r9, r5, r0
 8020426:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802042a:	2800      	cmp	r0, #0
 802042c:	f000 80fa 	beq.w	8020624 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8020430:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8020434:	d01b      	beq.n	802046e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8020436:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802043a:	fb0e fa0a 	mul.w	sl, lr, sl
 802043e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020442:	fb0e fe02 	mul.w	lr, lr, r2
 8020446:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802044a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802044e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020452:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8020456:	4452      	add	r2, sl
 8020458:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802045c:	0a12      	lsrs	r2, r2, #8
 802045e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020462:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020466:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802046a:	ea42 020c 	orr.w	r2, r2, ip
 802046e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020470:	2dff      	cmp	r5, #255	@ 0xff
 8020472:	d021      	beq.n	80204b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8020474:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8020476:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802047a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802047c:	fb05 fb0b 	mul.w	fp, r5, fp
 8020480:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8020482:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8020486:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020488:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802048c:	fb05 fa0a 	mul.w	sl, r5, sl
 8020490:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020494:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020498:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802049c:	44de      	add	lr, fp
 802049e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80204a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80204a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80204aa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80204ae:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80204b2:	ea4e 050a 	orr.w	r5, lr, sl
 80204b6:	950c      	str	r5, [sp, #48]	@ 0x30
 80204b8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80204ba:	2dff      	cmp	r5, #255	@ 0xff
 80204bc:	d021      	beq.n	8020502 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80204be:	9d08      	ldr	r5, [sp, #32]
 80204c0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80204c4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80204c6:	fb05 fb0b 	mul.w	fp, r5, fp
 80204ca:	9d08      	ldr	r5, [sp, #32]
 80204cc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80204d0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80204d2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80204d6:	fb05 fa0a 	mul.w	sl, r5, sl
 80204da:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80204de:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80204e2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80204e6:	44de      	add	lr, fp
 80204e8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80204ec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80204f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80204f4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80204f8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80204fc:	ea4e 050a 	orr.w	r5, lr, sl
 8020500:	9508      	str	r5, [sp, #32]
 8020502:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8020504:	2dff      	cmp	r5, #255	@ 0xff
 8020506:	d021      	beq.n	802054c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8020508:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802050a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802050e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8020510:	fb05 fb0b 	mul.w	fp, r5, fp
 8020514:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8020516:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802051a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802051c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020520:	fb05 fa0a 	mul.w	sl, r5, sl
 8020524:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020528:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802052c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020530:	44de      	add	lr, fp
 8020532:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020536:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802053a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802053e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020542:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020546:	ea4e 050a 	orr.w	r5, lr, sl
 802054a:	950d      	str	r5, [sp, #52]	@ 0x34
 802054c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802054e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020552:	9d08      	ldr	r5, [sp, #32]
 8020554:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8020558:	fb08 fc0c 	mul.w	ip, r8, ip
 802055c:	fb03 cc0e 	mla	ip, r3, lr, ip
 8020560:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8020564:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8020566:	fb01 cc0e 	mla	ip, r1, lr, ip
 802056a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802056e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8020570:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020574:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8020578:	fb08 f80e 	mul.w	r8, r8, lr
 802057c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020580:	fb03 8202 	mla	r2, r3, r2, r8
 8020584:	9b08      	ldr	r3, [sp, #32]
 8020586:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020588:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 802058c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802058e:	fb01 220a 	mla	r2, r1, sl, r2
 8020592:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 8020596:	fb09 2901 	mla	r9, r9, r1, r2
 802059a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802059c:	883b      	ldrh	r3, [r7, #0]
 802059e:	4342      	muls	r2, r0
 80205a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80205a4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80205a8:	1c50      	adds	r0, r2, #1
 80205aa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80205ae:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80205b2:	ea4c 0c09 	orr.w	ip, ip, r9
 80205b6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80205ba:	1219      	asrs	r1, r3, #8
 80205bc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80205c0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80205c4:	b2c0      	uxtb	r0, r0
 80205c6:	fb12 f205 	smulbb	r2, r2, r5
 80205ca:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80205ce:	fb01 2100 	mla	r1, r1, r0, r2
 80205d2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80205d6:	10da      	asrs	r2, r3, #3
 80205d8:	fa5f fc8c 	uxtb.w	ip, ip
 80205dc:	00db      	lsls	r3, r3, #3
 80205de:	fb1c fc05 	smulbb	ip, ip, r5
 80205e2:	b2db      	uxtb	r3, r3
 80205e4:	b289      	uxth	r1, r1
 80205e6:	fb03 c300 	mla	r3, r3, r0, ip
 80205ea:	fa1f fc83 	uxth.w	ip, r3
 80205ee:	1c4b      	adds	r3, r1, #1
 80205f0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80205f4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80205f8:	fb1e fe05 	smulbb	lr, lr, r5
 80205fc:	f10c 0301 	add.w	r3, ip, #1
 8020600:	fb02 e200 	mla	r2, r2, r0, lr
 8020604:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020608:	b292      	uxth	r2, r2
 802060a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802060e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020612:	430b      	orrs	r3, r1
 8020614:	1c51      	adds	r1, r2, #1
 8020616:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802061a:	0952      	lsrs	r2, r2, #5
 802061c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020620:	4313      	orrs	r3, r2
 8020622:	803b      	strh	r3, [r7, #0]
 8020624:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8020626:	441c      	add	r4, r3
 8020628:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802062a:	441e      	add	r6, r3
 802062c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802062e:	3b01      	subs	r3, #1
 8020630:	3702      	adds	r7, #2
 8020632:	9318      	str	r3, [sp, #96]	@ 0x60
 8020634:	e698      	b.n	8020368 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020636:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8020638:	441c      	add	r4, r3
 802063a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802063c:	441e      	add	r6, r3
 802063e:	9b07      	ldr	r3, [sp, #28]
 8020640:	3b01      	subs	r3, #1
 8020642:	9307      	str	r3, [sp, #28]
 8020644:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020646:	3302      	adds	r3, #2
 8020648:	930a      	str	r3, [sp, #40]	@ 0x28
 802064a:	e66d      	b.n	8020328 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802064c:	d023      	beq.n	8020696 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802064e:	9b07      	ldr	r3, [sp, #28]
 8020650:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8020652:	3b01      	subs	r3, #1
 8020654:	fb00 4003 	mla	r0, r0, r3, r4
 8020658:	1400      	asrs	r0, r0, #16
 802065a:	f53f ae82 	bmi.w	8020362 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802065e:	3901      	subs	r1, #1
 8020660:	4288      	cmp	r0, r1
 8020662:	f6bf ae7e 	bge.w	8020362 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020666:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8020668:	fb01 6303 	mla	r3, r1, r3, r6
 802066c:	141b      	asrs	r3, r3, #16
 802066e:	f53f ae78 	bmi.w	8020362 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020672:	3a01      	subs	r2, #1
 8020674:	4293      	cmp	r3, r2
 8020676:	f6bf ae74 	bge.w	8020362 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802067a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802067e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8020682:	f1bb 0f00 	cmp.w	fp, #0
 8020686:	dc6c      	bgt.n	8020762 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8020688:	9b07      	ldr	r3, [sp, #28]
 802068a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802068e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020690:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8020694:	930a      	str	r3, [sp, #40]	@ 0x28
 8020696:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8020698:	2b00      	cmp	r3, #0
 802069a:	f340 81b3 	ble.w	8020a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802069e:	ee30 0a04 	vadd.f32	s0, s0, s8
 80206a2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80206a6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80206aa:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80206ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80206b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80206b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80206b8:	eef0 6a62 	vmov.f32	s13, s5
 80206bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80206c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80206c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80206c8:	ee16 4a90 	vmov	r4, s13
 80206cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80206d0:	eef0 6a43 	vmov.f32	s13, s6
 80206d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80206d8:	ee12 2a90 	vmov	r2, s5
 80206dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80206e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80206e4:	ee13 2a10 	vmov	r2, s6
 80206e8:	9329      	str	r3, [sp, #164]	@ 0xa4
 80206ea:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80206ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80206f0:	932a      	str	r3, [sp, #168]	@ 0xa8
 80206f2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80206f4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80206f6:	3b01      	subs	r3, #1
 80206f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80206fc:	9317      	str	r3, [sp, #92]	@ 0x5c
 80206fe:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8020700:	bf08      	it	eq
 8020702:	4613      	moveq	r3, r2
 8020704:	ee16 6a90 	vmov	r6, s13
 8020708:	9307      	str	r3, [sp, #28]
 802070a:	eeb0 3a67 	vmov.f32	s6, s15
 802070e:	eef0 2a47 	vmov.f32	s5, s14
 8020712:	e5fb      	b.n	802030c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8020714:	2900      	cmp	r1, #0
 8020716:	f43f ae6b 	beq.w	80203f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802071a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802071e:	9308      	str	r3, [sp, #32]
 8020720:	0e1b      	lsrs	r3, r3, #24
 8020722:	9311      	str	r3, [sp, #68]	@ 0x44
 8020724:	e664      	b.n	80203f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8020726:	f112 0801 	adds.w	r8, r2, #1
 802072a:	f53f af7b 	bmi.w	8020624 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802072e:	4543      	cmp	r3, r8
 8020730:	f6ff af78 	blt.w	8020624 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8020734:	f11c 0801 	adds.w	r8, ip, #1
 8020738:	f53f af74 	bmi.w	8020624 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802073c:	45c6      	cmp	lr, r8
 802073e:	f6ff af71 	blt.w	8020624 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8020742:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8020744:	9201      	str	r2, [sp, #4]
 8020746:	fa0f f28e 	sxth.w	r2, lr
 802074a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802074e:	e9cd c002 	strd	ip, r0, [sp, #8]
 8020752:	9200      	str	r2, [sp, #0]
 8020754:	b21b      	sxth	r3, r3
 8020756:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020758:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802075a:	4639      	mov	r1, r7
 802075c:	f7ff fc79 	bl	8020052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8020760:	e760      	b.n	8020624 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8020762:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8020764:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020766:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802076a:	1427      	asrs	r7, r4, #16
 802076c:	1433      	asrs	r3, r6, #16
 802076e:	fb01 7303 	mla	r3, r1, r3, r7
 8020772:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8020776:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802077a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802077e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020782:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020786:	2a00      	cmp	r2, #0
 8020788:	f000 8133 	beq.w	80209f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802078c:	687d      	ldr	r5, [r7, #4]
 802078e:	950e      	str	r5, [sp, #56]	@ 0x38
 8020790:	0e2d      	lsrs	r5, r5, #24
 8020792:	9515      	str	r5, [sp, #84]	@ 0x54
 8020794:	b178      	cbz	r0, 80207b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8020796:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 802079a:	3901      	subs	r1, #1
 802079c:	0089      	lsls	r1, r1, #2
 802079e:	3104      	adds	r1, #4
 80207a0:	eb07 0e01 	add.w	lr, r7, r1
 80207a4:	5879      	ldr	r1, [r7, r1]
 80207a6:	9109      	str	r1, [sp, #36]	@ 0x24
 80207a8:	0e09      	lsrs	r1, r1, #24
 80207aa:	9112      	str	r1, [sp, #72]	@ 0x48
 80207ac:	f8de 1004 	ldr.w	r1, [lr, #4]
 80207b0:	910f      	str	r1, [sp, #60]	@ 0x3c
 80207b2:	0e09      	lsrs	r1, r1, #24
 80207b4:	9116      	str	r1, [sp, #88]	@ 0x58
 80207b6:	b292      	uxth	r2, r2
 80207b8:	b280      	uxth	r0, r0
 80207ba:	fb02 f800 	mul.w	r8, r2, r0
 80207be:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80207c2:	0112      	lsls	r2, r2, #4
 80207c4:	eba2 0e08 	sub.w	lr, r2, r8
 80207c8:	b280      	uxth	r0, r0
 80207ca:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80207ce:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80207d0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80207d2:	fa1f fe8e 	uxth.w	lr, lr
 80207d6:	1a12      	subs	r2, r2, r0
 80207d8:	b292      	uxth	r2, r2
 80207da:	fb0e f101 	mul.w	r1, lr, r1
 80207de:	fb02 110c 	mla	r1, r2, ip, r1
 80207e2:	fb00 1105 	mla	r1, r0, r5, r1
 80207e6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80207e8:	fb08 1105 	mla	r1, r8, r5, r1
 80207ec:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80207f0:	2900      	cmp	r1, #0
 80207f2:	f000 80f5 	beq.w	80209e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80207f6:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80207fa:	d019      	beq.n	8020830 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80207fc:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8020800:	fb0c fa0a 	mul.w	sl, ip, sl
 8020804:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020808:	fb0c fc03 	mul.w	ip, ip, r3
 802080c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020810:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020814:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020818:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802081c:	4453      	add	r3, sl
 802081e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020822:	0a1b      	lsrs	r3, r3, #8
 8020824:	0a3f      	lsrs	r7, r7, #8
 8020826:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802082a:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802082e:	433b      	orrs	r3, r7
 8020830:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020832:	2dff      	cmp	r5, #255	@ 0xff
 8020834:	d020      	beq.n	8020878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8020836:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8020838:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802083c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802083e:	436f      	muls	r7, r5
 8020840:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8020842:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8020846:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020848:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802084c:	fb05 fa0a 	mul.w	sl, r5, sl
 8020850:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020854:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020858:	44bc      	add	ip, r7
 802085a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802085e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020862:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020866:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802086a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802086e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020872:	ea4c 050a 	orr.w	r5, ip, sl
 8020876:	950e      	str	r5, [sp, #56]	@ 0x38
 8020878:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802087a:	2dff      	cmp	r5, #255	@ 0xff
 802087c:	d020      	beq.n	80208c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802087e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8020880:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8020884:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020886:	436f      	muls	r7, r5
 8020888:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802088a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802088e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020890:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020894:	fb05 fa0a 	mul.w	sl, r5, sl
 8020898:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802089c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80208a0:	44bc      	add	ip, r7
 80208a2:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80208a6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80208aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80208ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80208b2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80208b6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80208ba:	ea4c 050a 	orr.w	r5, ip, sl
 80208be:	9509      	str	r5, [sp, #36]	@ 0x24
 80208c0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80208c2:	2dff      	cmp	r5, #255	@ 0xff
 80208c4:	d020      	beq.n	8020908 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80208c6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80208c8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80208cc:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80208ce:	436f      	muls	r7, r5
 80208d0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80208d2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80208d6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80208d8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80208dc:	fb05 fa0a 	mul.w	sl, r5, sl
 80208e0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80208e4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80208e8:	44bc      	add	ip, r7
 80208ea:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80208ee:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80208f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80208f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80208fa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80208fe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020902:	ea4c 050a 	orr.w	r5, ip, sl
 8020906:	950f      	str	r5, [sp, #60]	@ 0x3c
 8020908:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802090a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802090e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8020910:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8020914:	fb0e f707 	mul.w	r7, lr, r7
 8020918:	fb02 770c 	mla	r7, r2, ip, r7
 802091c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020920:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8020922:	fb00 770c 	mla	r7, r0, ip, r7
 8020926:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802092a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802092c:	fb08 770c 	mla	r7, r8, ip, r7
 8020930:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8020934:	fb0e fe0c 	mul.w	lr, lr, ip
 8020938:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802093c:	fb02 e303 	mla	r3, r2, r3, lr
 8020940:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020942:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020944:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020948:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802094a:	fb00 330a 	mla	r3, r0, sl, r3
 802094e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8020952:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020956:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020958:	f8b9 0000 	ldrh.w	r0, [r9]
 802095c:	4359      	muls	r1, r3
 802095e:	0a3f      	lsrs	r7, r7, #8
 8020960:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020964:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020968:	1c4b      	adds	r3, r1, #1
 802096a:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802096e:	ea47 070c 	orr.w	r7, r7, ip
 8020972:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020976:	1202      	asrs	r2, r0, #8
 8020978:	0c3b      	lsrs	r3, r7, #16
 802097a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802097e:	b2c9      	uxtb	r1, r1
 8020980:	fb13 f305 	smulbb	r3, r3, r5
 8020984:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8020988:	fb02 3201 	mla	r2, r2, r1, r3
 802098c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020990:	10c3      	asrs	r3, r0, #3
 8020992:	b2ff      	uxtb	r7, r7
 8020994:	00c0      	lsls	r0, r0, #3
 8020996:	b2c0      	uxtb	r0, r0
 8020998:	fb17 f705 	smulbb	r7, r7, r5
 802099c:	fb00 7001 	mla	r0, r0, r1, r7
 80209a0:	b292      	uxth	r2, r2
 80209a2:	fb1c fc05 	smulbb	ip, ip, r5
 80209a6:	b280      	uxth	r0, r0
 80209a8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80209ac:	fb03 c301 	mla	r3, r3, r1, ip
 80209b0:	1c51      	adds	r1, r2, #1
 80209b2:	f100 0c01 	add.w	ip, r0, #1
 80209b6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80209ba:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80209be:	b29b      	uxth	r3, r3
 80209c0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80209c4:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 80209c8:	ea4c 0202 	orr.w	r2, ip, r2
 80209cc:	f103 0c01 	add.w	ip, r3, #1
 80209d0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80209d4:	095b      	lsrs	r3, r3, #5
 80209d6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80209da:	431a      	orrs	r2, r3
 80209dc:	f8a9 2000 	strh.w	r2, [r9]
 80209e0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80209e2:	441c      	add	r4, r3
 80209e4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80209e6:	f109 0902 	add.w	r9, r9, #2
 80209ea:	441e      	add	r6, r3
 80209ec:	f10b 3bff 	add.w	fp, fp, #4294967295
 80209f0:	e647      	b.n	8020682 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80209f2:	2800      	cmp	r0, #0
 80209f4:	f43f aedf 	beq.w	80207b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80209f8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80209fc:	9109      	str	r1, [sp, #36]	@ 0x24
 80209fe:	0e09      	lsrs	r1, r1, #24
 8020a00:	9112      	str	r1, [sp, #72]	@ 0x48
 8020a02:	e6d8      	b.n	80207b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8020a04:	b01d      	add	sp, #116	@ 0x74
 8020a06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020a0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8020a0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a0e:	b085      	sub	sp, #20
 8020a10:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8020a14:	9102      	str	r1, [sp, #8]
 8020a16:	2c00      	cmp	r4, #0
 8020a18:	fb04 7103 	mla	r1, r4, r3, r7
 8020a1c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8020a20:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8020a24:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8020a28:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8020a2c:	f2c0 810c 	blt.w	8020c48 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8020a30:	45a6      	cmp	lr, r4
 8020a32:	f340 8109 	ble.w	8020c48 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8020a36:	2f00      	cmp	r7, #0
 8020a38:	f2c0 8104 	blt.w	8020c44 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8020a3c:	42bb      	cmp	r3, r7
 8020a3e:	f340 8101 	ble.w	8020c44 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8020a42:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8020a46:	1c7a      	adds	r2, r7, #1
 8020a48:	f100 8101 	bmi.w	8020c4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8020a4c:	4293      	cmp	r3, r2
 8020a4e:	f340 80fe 	ble.w	8020c4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8020a52:	2e00      	cmp	r6, #0
 8020a54:	f000 80fd 	beq.w	8020c52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8020a58:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8020a5c:	3401      	adds	r4, #1
 8020a5e:	f100 80fc 	bmi.w	8020c5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8020a62:	45a6      	cmp	lr, r4
 8020a64:	f340 80f9 	ble.w	8020c5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8020a68:	2800      	cmp	r0, #0
 8020a6a:	f000 80f9 	beq.w	8020c60 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8020a6e:	2f00      	cmp	r7, #0
 8020a70:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8020a74:	f2c0 80ef 	blt.w	8020c56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8020a78:	42bb      	cmp	r3, r7
 8020a7a:	f340 80ec 	ble.w	8020c56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8020a7e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8020a82:	3701      	adds	r7, #1
 8020a84:	f100 80ef 	bmi.w	8020c66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8020a88:	42bb      	cmp	r3, r7
 8020a8a:	f340 80ec 	ble.w	8020c66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8020a8e:	2e00      	cmp	r6, #0
 8020a90:	f000 80eb 	beq.w	8020c6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8020a94:	6852      	ldr	r2, [r2, #4]
 8020a96:	b2b6      	uxth	r6, r6
 8020a98:	b280      	uxth	r0, r0
 8020a9a:	fb00 fe06 	mul.w	lr, r0, r6
 8020a9e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020aa2:	0136      	lsls	r6, r6, #4
 8020aa4:	eba6 070e 	sub.w	r7, r6, lr
 8020aa8:	b280      	uxth	r0, r0
 8020aaa:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8020aae:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020ab2:	b2bf      	uxth	r7, r7
 8020ab4:	1a1b      	subs	r3, r3, r0
 8020ab6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020aba:	b29b      	uxth	r3, r3
 8020abc:	fb07 f60a 	mul.w	r6, r7, sl
 8020ac0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020ac4:	fb0b 6603 	mla	r6, fp, r3, r6
 8020ac8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020acc:	fb00 6609 	mla	r6, r0, r9, r6
 8020ad0:	fb0e 6608 	mla	r6, lr, r8, r6
 8020ad4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020ad8:	9600      	str	r6, [sp, #0]
 8020ada:	2e00      	cmp	r6, #0
 8020adc:	f000 80af 	beq.w	8020c3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8020ae0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020ae4:	fb0b fc0c 	mul.w	ip, fp, ip
 8020ae8:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8020aec:	fb0b f505 	mul.w	r5, fp, r5
 8020af0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8020af4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8020af8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020afc:	44dc      	add	ip, fp
 8020afe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b02:	9501      	str	r5, [sp, #4]
 8020b04:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8020b08:	9503      	str	r5, [sp, #12]
 8020b0a:	9d01      	ldr	r5, [sp, #4]
 8020b0c:	9e02      	ldr	r6, [sp, #8]
 8020b0e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8020b12:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020b16:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8020b1a:	fb0a fc0c 	mul.w	ip, sl, ip
 8020b1e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020b22:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8020b26:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020b2a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020b2e:	4465      	add	r5, ip
 8020b30:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020b34:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8020b38:	fb09 fc0c 	mul.w	ip, r9, ip
 8020b3c:	fb09 f904 	mul.w	r9, r9, r4
 8020b40:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8020b44:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020b48:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8020b4c:	fb08 f404 	mul.w	r4, r8, r4
 8020b50:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020b54:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020b58:	fb08 f802 	mul.w	r8, r8, r2
 8020b5c:	fb0a fa01 	mul.w	sl, sl, r1
 8020b60:	0a22      	lsrs	r2, r4, #8
 8020b62:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8020b66:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020b6a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8020b6e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020b72:	4414      	add	r4, r2
 8020b74:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8020b78:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8020b7c:	0a2d      	lsrs	r5, r5, #8
 8020b7e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020b82:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020b86:	9a03      	ldr	r2, [sp, #12]
 8020b88:	8836      	ldrh	r6, [r6, #0]
 8020b8a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8020b8e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020b92:	437d      	muls	r5, r7
 8020b94:	4461      	add	r1, ip
 8020b96:	0a24      	lsrs	r4, r4, #8
 8020b98:	fb02 5503 	mla	r5, r2, r3, r5
 8020b9c:	0a09      	lsrs	r1, r1, #8
 8020b9e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8020ba2:	fb04 540e 	mla	r4, r4, lr, r5
 8020ba6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8020baa:	fb01 4100 	mla	r1, r1, r0, r4
 8020bae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020bb2:	0a09      	lsrs	r1, r1, #8
 8020bb4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020bb8:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8020bbc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020bc0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8020bc4:	fb07 f70a 	mul.w	r7, r7, sl
 8020bc8:	fb03 7101 	mla	r1, r3, r1, r7
 8020bcc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020bd0:	9b00      	ldr	r3, [sp, #0]
 8020bd2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8020bd6:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020bda:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8020bde:	fb00 e101 	mla	r1, r0, r1, lr
 8020be2:	43da      	mvns	r2, r3
 8020be4:	1233      	asrs	r3, r6, #8
 8020be6:	b2d2      	uxtb	r2, r2
 8020be8:	10f0      	asrs	r0, r6, #3
 8020bea:	0a09      	lsrs	r1, r1, #8
 8020bec:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020bf0:	00f6      	lsls	r6, r6, #3
 8020bf2:	4353      	muls	r3, r2
 8020bf4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020bf8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020bfc:	b2f6      	uxtb	r6, r6
 8020bfe:	4321      	orrs	r1, r4
 8020c00:	4350      	muls	r0, r2
 8020c02:	4356      	muls	r6, r2
 8020c04:	1c5a      	adds	r2, r3, #1
 8020c06:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020c0a:	0c0b      	lsrs	r3, r1, #16
 8020c0c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020c10:	1c42      	adds	r2, r0, #1
 8020c12:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020c16:	0a0a      	lsrs	r2, r1, #8
 8020c18:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020c1c:	021b      	lsls	r3, r3, #8
 8020c1e:	00d2      	lsls	r2, r2, #3
 8020c20:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020c24:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8020c28:	4313      	orrs	r3, r2
 8020c2a:	1c72      	adds	r2, r6, #1
 8020c2c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8020c30:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8020c34:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020c38:	4319      	orrs	r1, r3
 8020c3a:	9b02      	ldr	r3, [sp, #8]
 8020c3c:	8019      	strh	r1, [r3, #0]
 8020c3e:	b005      	add	sp, #20
 8020c40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c44:	2500      	movs	r5, #0
 8020c46:	e6fe      	b.n	8020a46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8020c48:	2100      	movs	r1, #0
 8020c4a:	460d      	mov	r5, r1
 8020c4c:	e706      	b.n	8020a5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8020c4e:	2100      	movs	r1, #0
 8020c50:	e704      	b.n	8020a5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8020c52:	4631      	mov	r1, r6
 8020c54:	e702      	b.n	8020a5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8020c56:	2400      	movs	r4, #0
 8020c58:	e713      	b.n	8020a82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8020c5a:	2200      	movs	r2, #0
 8020c5c:	4614      	mov	r4, r2
 8020c5e:	e71a      	b.n	8020a96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8020c60:	4602      	mov	r2, r0
 8020c62:	4604      	mov	r4, r0
 8020c64:	e717      	b.n	8020a96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8020c66:	2200      	movs	r2, #0
 8020c68:	e715      	b.n	8020a96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8020c6a:	4632      	mov	r2, r6
 8020c6c:	e713      	b.n	8020a96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08020c70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c74:	b09b      	sub	sp, #108	@ 0x6c
 8020c76:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 8020c7a:	9218      	str	r2, [sp, #96]	@ 0x60
 8020c7c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8020c7e:	9116      	str	r1, [sp, #88]	@ 0x58
 8020c80:	9307      	str	r3, [sp, #28]
 8020c82:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8020c86:	9019      	str	r0, [sp, #100]	@ 0x64
 8020c88:	6850      	ldr	r0, [r2, #4]
 8020c8a:	6812      	ldr	r2, [r2, #0]
 8020c8c:	fb00 1303 	mla	r3, r0, r3, r1
 8020c90:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020c94:	930a      	str	r3, [sp, #40]	@ 0x28
 8020c96:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020c98:	681b      	ldr	r3, [r3, #0]
 8020c9a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020c9c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020c9e:	2b00      	cmp	r3, #0
 8020ca0:	dc03      	bgt.n	8020caa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020ca2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020ca4:	2b00      	cmp	r3, #0
 8020ca6:	f340 8386 	ble.w	80213b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020caa:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020cac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020cb0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020cb4:	1e48      	subs	r0, r1, #1
 8020cb6:	1e57      	subs	r7, r2, #1
 8020cb8:	9b07      	ldr	r3, [sp, #28]
 8020cba:	2b00      	cmp	r3, #0
 8020cbc:	f340 8166 	ble.w	8020f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8020cc0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020cc4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020cc8:	d406      	bmi.n	8020cd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020cca:	4584      	cmp	ip, r0
 8020ccc:	da04      	bge.n	8020cd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020cce:	2b00      	cmp	r3, #0
 8020cd0:	db02      	blt.n	8020cd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8020cd2:	42bb      	cmp	r3, r7
 8020cd4:	f2c0 815b 	blt.w	8020f8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8020cd8:	f11c 0c01 	adds.w	ip, ip, #1
 8020cdc:	f100 814b 	bmi.w	8020f76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020ce0:	4561      	cmp	r1, ip
 8020ce2:	f2c0 8148 	blt.w	8020f76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020ce6:	3301      	adds	r3, #1
 8020ce8:	f100 8145 	bmi.w	8020f76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020cec:	429a      	cmp	r2, r3
 8020cee:	f2c0 8142 	blt.w	8020f76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8020cf2:	9b07      	ldr	r3, [sp, #28]
 8020cf4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8020cf6:	9317      	str	r3, [sp, #92]	@ 0x5c
 8020cf8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8020cfa:	2b00      	cmp	r3, #0
 8020cfc:	f340 8165 	ble.w	8020fca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d00:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8020d02:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020d04:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020d08:	689b      	ldr	r3, [r3, #8]
 8020d0a:	1422      	asrs	r2, r4, #16
 8020d0c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020d10:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8020d14:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020d18:	f100 81d5 	bmi.w	80210c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020d1c:	f103 38ff 	add.w	r8, r3, #4294967295
 8020d20:	4542      	cmp	r2, r8
 8020d22:	f280 81d0 	bge.w	80210c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020d26:	f1bc 0f00 	cmp.w	ip, #0
 8020d2a:	f2c0 81cc 	blt.w	80210c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020d2e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020d32:	45c4      	cmp	ip, r8
 8020d34:	f280 81c7 	bge.w	80210c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020d38:	b21b      	sxth	r3, r3
 8020d3a:	fb0c 2203 	mla	r2, ip, r3, r2
 8020d3e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8020d40:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8020d44:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8020d48:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8020d4c:	2900      	cmp	r1, #0
 8020d4e:	f000 8182 	beq.w	8021056 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020d52:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8020d56:	950b      	str	r5, [sp, #44]	@ 0x2c
 8020d58:	0e2d      	lsrs	r5, r5, #24
 8020d5a:	9512      	str	r5, [sp, #72]	@ 0x48
 8020d5c:	b180      	cbz	r0, 8020d80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8020d5e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8020d62:	3b01      	subs	r3, #1
 8020d64:	009b      	lsls	r3, r3, #2
 8020d66:	3304      	adds	r3, #4
 8020d68:	eb08 0c03 	add.w	ip, r8, r3
 8020d6c:	f858 3003 	ldr.w	r3, [r8, r3]
 8020d70:	9308      	str	r3, [sp, #32]
 8020d72:	0e1b      	lsrs	r3, r3, #24
 8020d74:	9310      	str	r3, [sp, #64]	@ 0x40
 8020d76:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8020d7a:	930c      	str	r3, [sp, #48]	@ 0x30
 8020d7c:	0e1b      	lsrs	r3, r3, #24
 8020d7e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020d80:	b289      	uxth	r1, r1
 8020d82:	b280      	uxth	r0, r0
 8020d84:	fb01 f900 	mul.w	r9, r1, r0
 8020d88:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020d8c:	0109      	lsls	r1, r1, #4
 8020d8e:	eba1 0809 	sub.w	r8, r1, r9
 8020d92:	b280      	uxth	r0, r0
 8020d94:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8020d98:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8020d9a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020d9c:	fa1f f888 	uxth.w	r8, r8
 8020da0:	1a09      	subs	r1, r1, r0
 8020da2:	b289      	uxth	r1, r1
 8020da4:	fb08 f303 	mul.w	r3, r8, r3
 8020da8:	fb01 330e 	mla	r3, r1, lr, r3
 8020dac:	fb00 3305 	mla	r3, r0, r5, r3
 8020db0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020db2:	fb09 3305 	mla	r3, r9, r5, r3
 8020db6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020dba:	2b00      	cmp	r3, #0
 8020dbc:	f000 80d2 	beq.w	8020f64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020dc0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8020dc4:	d01b      	beq.n	8020dfe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8020dc6:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8020dca:	fb0e fa0a 	mul.w	sl, lr, sl
 8020dce:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020dd2:	fb0e fe02 	mul.w	lr, lr, r2
 8020dd6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8020dda:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020dde:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020de2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8020de6:	4452      	add	r2, sl
 8020de8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020dec:	0a12      	lsrs	r2, r2, #8
 8020dee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020df2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8020df6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020dfa:	ea42 020c 	orr.w	r2, r2, ip
 8020dfe:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020e00:	2dff      	cmp	r5, #255	@ 0xff
 8020e02:	d021      	beq.n	8020e48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8020e04:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020e06:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8020e0a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020e0c:	fb05 fb0b 	mul.w	fp, r5, fp
 8020e10:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020e12:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8020e16:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020e18:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020e1c:	fb05 fa0a 	mul.w	sl, r5, sl
 8020e20:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020e24:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020e28:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020e2c:	44de      	add	lr, fp
 8020e2e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020e32:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020e36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e3a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020e3e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020e42:	ea4e 050a 	orr.w	r5, lr, sl
 8020e46:	950b      	str	r5, [sp, #44]	@ 0x2c
 8020e48:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020e4a:	2dff      	cmp	r5, #255	@ 0xff
 8020e4c:	d021      	beq.n	8020e92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8020e4e:	9d08      	ldr	r5, [sp, #32]
 8020e50:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8020e54:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020e56:	fb05 fb0b 	mul.w	fp, r5, fp
 8020e5a:	9d08      	ldr	r5, [sp, #32]
 8020e5c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8020e60:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020e62:	fb05 fa0e 	mul.w	sl, r5, lr
 8020e66:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020e6a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020e6e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020e72:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020e76:	44de      	add	lr, fp
 8020e78:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020e7c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020e80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e84:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020e88:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020e8c:	ea4e 050a 	orr.w	r5, lr, sl
 8020e90:	9508      	str	r5, [sp, #32]
 8020e92:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020e94:	2dff      	cmp	r5, #255	@ 0xff
 8020e96:	d021      	beq.n	8020edc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8020e98:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8020e9a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8020e9e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020ea0:	fb05 fb0b 	mul.w	fp, r5, fp
 8020ea4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8020ea6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8020eaa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020eac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020eb0:	fb05 fa0a 	mul.w	sl, r5, sl
 8020eb4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020eb8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020ebc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020ec0:	44de      	add	lr, fp
 8020ec2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020ec6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020eca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020ece:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020ed2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020ed6:	ea4e 050a 	orr.w	r5, lr, sl
 8020eda:	950c      	str	r5, [sp, #48]	@ 0x30
 8020edc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020ede:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020ee2:	9d08      	ldr	r5, [sp, #32]
 8020ee4:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8020ee8:	fb08 fc0c 	mul.w	ip, r8, ip
 8020eec:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020ef0:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8020ef4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8020ef6:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020efa:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8020efe:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020f00:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020f04:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8020f08:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020f0c:	fb08 f80e 	mul.w	r8, r8, lr
 8020f10:	fb01 8202 	mla	r2, r1, r2, r8
 8020f14:	9908      	ldr	r1, [sp, #32]
 8020f16:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8020f1a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8020f1c:	fb00 220a 	mla	r2, r0, sl, r2
 8020f20:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8020f24:	fb09 2900 	mla	r9, r9, r0, r2
 8020f28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f2c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020f30:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020f34:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8020f38:	ea4c 0c09 	orr.w	ip, ip, r9
 8020f3c:	2bff      	cmp	r3, #255	@ 0xff
 8020f3e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8020f42:	f040 8091 	bne.w	8021068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8020f46:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8020f4a:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8020f4e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020f52:	f022 0207 	bic.w	r2, r2, #7
 8020f56:	431a      	orrs	r2, r3
 8020f58:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020f5c:	ea4c 0c02 	orr.w	ip, ip, r2
 8020f60:	f8a7 c000 	strh.w	ip, [r7]
 8020f64:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020f66:	441c      	add	r4, r3
 8020f68:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020f6a:	441e      	add	r6, r3
 8020f6c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8020f6e:	3b01      	subs	r3, #1
 8020f70:	3702      	adds	r7, #2
 8020f72:	9317      	str	r3, [sp, #92]	@ 0x5c
 8020f74:	e6c0      	b.n	8020cf8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020f76:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020f78:	441c      	add	r4, r3
 8020f7a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020f7c:	441e      	add	r6, r3
 8020f7e:	9b07      	ldr	r3, [sp, #28]
 8020f80:	3b01      	subs	r3, #1
 8020f82:	9307      	str	r3, [sp, #28]
 8020f84:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020f86:	3302      	adds	r3, #2
 8020f88:	930a      	str	r3, [sp, #40]	@ 0x28
 8020f8a:	e695      	b.n	8020cb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020f8c:	d024      	beq.n	8020fd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8020f8e:	9b07      	ldr	r3, [sp, #28]
 8020f90:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8020f92:	3b01      	subs	r3, #1
 8020f94:	fb00 4003 	mla	r0, r0, r3, r4
 8020f98:	1400      	asrs	r0, r0, #16
 8020f9a:	f53f aeaa 	bmi.w	8020cf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020f9e:	3901      	subs	r1, #1
 8020fa0:	4288      	cmp	r0, r1
 8020fa2:	f6bf aea6 	bge.w	8020cf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020fa6:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8020fa8:	fb01 6303 	mla	r3, r1, r3, r6
 8020fac:	141b      	asrs	r3, r3, #16
 8020fae:	f53f aea0 	bmi.w	8020cf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020fb2:	3a01      	subs	r2, #1
 8020fb4:	4293      	cmp	r3, r2
 8020fb6:	f6bf ae9c 	bge.w	8020cf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020fba:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020fbe:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8020fc2:	f1bb 0f00 	cmp.w	fp, #0
 8020fc6:	f300 809a 	bgt.w	80210fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8020fca:	9b07      	ldr	r3, [sp, #28]
 8020fcc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020fd0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020fd2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8020fd6:	930a      	str	r3, [sp, #40]	@ 0x28
 8020fd8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020fda:	2b00      	cmp	r3, #0
 8020fdc:	f340 81eb 	ble.w	80213b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020fe0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020fe4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020fe8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020fec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020fee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020ff2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020ff6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020ffa:	eef0 6a62 	vmov.f32	s13, s5
 8020ffe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021002:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021006:	ee77 2a62 	vsub.f32	s5, s14, s5
 802100a:	ee16 4a90 	vmov	r4, s13
 802100e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021012:	eef0 6a43 	vmov.f32	s13, s6
 8021016:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802101a:	ee12 2a90 	vmov	r2, s5
 802101e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021022:	fb92 f3f3 	sdiv	r3, r2, r3
 8021026:	ee13 2a10 	vmov	r2, s6
 802102a:	9327      	str	r3, [sp, #156]	@ 0x9c
 802102c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802102e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021032:	9328      	str	r3, [sp, #160]	@ 0xa0
 8021034:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8021036:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8021038:	3b01      	subs	r3, #1
 802103a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802103e:	9316      	str	r3, [sp, #88]	@ 0x58
 8021040:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021042:	bf08      	it	eq
 8021044:	4613      	moveq	r3, r2
 8021046:	ee16 6a90 	vmov	r6, s13
 802104a:	9307      	str	r3, [sp, #28]
 802104c:	eeb0 3a67 	vmov.f32	s6, s15
 8021050:	eef0 2a47 	vmov.f32	s5, s14
 8021054:	e622      	b.n	8020c9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8021056:	2800      	cmp	r0, #0
 8021058:	f43f ae92 	beq.w	8020d80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802105c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8021060:	9308      	str	r3, [sp, #32]
 8021062:	0e1b      	lsrs	r3, r3, #24
 8021064:	9310      	str	r3, [sp, #64]	@ 0x40
 8021066:	e68b      	b.n	8020d80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8021068:	8839      	ldrh	r1, [r7, #0]
 802106a:	4dd4      	ldr	r5, [pc, #848]	@ (80213bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802106c:	43db      	mvns	r3, r3
 802106e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8021072:	fa5f f883 	uxtb.w	r8, r3
 8021076:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 802107a:	fb0e fe08 	mul.w	lr, lr, r8
 802107e:	10c8      	asrs	r0, r1, #3
 8021080:	00cb      	lsls	r3, r1, #3
 8021082:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021086:	f10e 0101 	add.w	r1, lr, #1
 802108a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802108e:	fb00 f008 	mul.w	r0, r0, r8
 8021092:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8021096:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802109a:	f100 0e01 	add.w	lr, r0, #1
 802109e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80210a2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80210a6:	b2db      	uxtb	r3, r3
 80210a8:	b2c9      	uxtb	r1, r1
 80210aa:	00d2      	lsls	r2, r2, #3
 80210ac:	fb03 f308 	mul.w	r3, r3, r8
 80210b0:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80210b4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80210b8:	430a      	orrs	r2, r1
 80210ba:	1c59      	adds	r1, r3, #1
 80210bc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80210c0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80210c4:	e748      	b.n	8020f58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80210c6:	f112 0801 	adds.w	r8, r2, #1
 80210ca:	f53f af4b 	bmi.w	8020f64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80210ce:	4543      	cmp	r3, r8
 80210d0:	f6ff af48 	blt.w	8020f64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80210d4:	f11c 0801 	adds.w	r8, ip, #1
 80210d8:	f53f af44 	bmi.w	8020f64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80210dc:	45c6      	cmp	lr, r8
 80210de:	f6ff af41 	blt.w	8020f64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80210e2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80210e6:	fa0f f28e 	sxth.w	r2, lr
 80210ea:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80210ee:	9200      	str	r2, [sp, #0]
 80210f0:	b21b      	sxth	r3, r3
 80210f2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80210f4:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80210f6:	4639      	mov	r1, r7
 80210f8:	f7ff fc87 	bl	8020a0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80210fc:	e732      	b.n	8020f64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80210fe:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021100:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021102:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8021106:	1421      	asrs	r1, r4, #16
 8021108:	1433      	asrs	r3, r6, #16
 802110a:	fb07 1303 	mla	r3, r7, r3, r1
 802110e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8021110:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8021114:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8021118:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802111c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021120:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021124:	2a00      	cmp	r2, #0
 8021126:	f000 8107 	beq.w	8021338 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802112a:	684d      	ldr	r5, [r1, #4]
 802112c:	950d      	str	r5, [sp, #52]	@ 0x34
 802112e:	0e2d      	lsrs	r5, r5, #24
 8021130:	9514      	str	r5, [sp, #80]	@ 0x50
 8021132:	b178      	cbz	r0, 8021154 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021134:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8021138:	3f01      	subs	r7, #1
 802113a:	00bf      	lsls	r7, r7, #2
 802113c:	3704      	adds	r7, #4
 802113e:	eb01 0e07 	add.w	lr, r1, r7
 8021142:	59c9      	ldr	r1, [r1, r7]
 8021144:	9109      	str	r1, [sp, #36]	@ 0x24
 8021146:	0e09      	lsrs	r1, r1, #24
 8021148:	9111      	str	r1, [sp, #68]	@ 0x44
 802114a:	f8de 1004 	ldr.w	r1, [lr, #4]
 802114e:	910e      	str	r1, [sp, #56]	@ 0x38
 8021150:	0e09      	lsrs	r1, r1, #24
 8021152:	9115      	str	r1, [sp, #84]	@ 0x54
 8021154:	b292      	uxth	r2, r2
 8021156:	b280      	uxth	r0, r0
 8021158:	fb02 f900 	mul.w	r9, r2, r0
 802115c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021160:	0112      	lsls	r2, r2, #4
 8021162:	eba2 0e09 	sub.w	lr, r2, r9
 8021166:	b280      	uxth	r0, r0
 8021168:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 802116c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802116e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8021170:	fa1f fe8e 	uxth.w	lr, lr
 8021174:	1a09      	subs	r1, r1, r0
 8021176:	b289      	uxth	r1, r1
 8021178:	fb0e f202 	mul.w	r2, lr, r2
 802117c:	fb01 220c 	mla	r2, r1, ip, r2
 8021180:	fb00 2205 	mla	r2, r0, r5, r2
 8021184:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021186:	fb09 2205 	mla	r2, r9, r5, r2
 802118a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802118e:	2a00      	cmp	r2, #0
 8021190:	f000 80c9 	beq.w	8021326 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8021194:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8021198:	d019      	beq.n	80211ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802119a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802119e:	fb0c fa0a 	mul.w	sl, ip, sl
 80211a2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80211a6:	fb0c fc03 	mul.w	ip, ip, r3
 80211aa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80211ae:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80211b2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80211b6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80211ba:	4453      	add	r3, sl
 80211bc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80211c0:	0a1b      	lsrs	r3, r3, #8
 80211c2:	0a3f      	lsrs	r7, r7, #8
 80211c4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80211c8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80211cc:	433b      	orrs	r3, r7
 80211ce:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80211d0:	2dff      	cmp	r5, #255	@ 0xff
 80211d2:	d020      	beq.n	8021216 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80211d4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80211d6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80211da:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80211dc:	436f      	muls	r7, r5
 80211de:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80211e0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80211e4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80211e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80211ea:	fb05 fa0a 	mul.w	sl, r5, sl
 80211ee:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80211f2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80211f6:	44bc      	add	ip, r7
 80211f8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80211fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021200:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021204:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021208:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802120c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021210:	ea4c 050a 	orr.w	r5, ip, sl
 8021214:	950d      	str	r5, [sp, #52]	@ 0x34
 8021216:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8021218:	2dff      	cmp	r5, #255	@ 0xff
 802121a:	d020      	beq.n	802125e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802121c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802121e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021222:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8021224:	436f      	muls	r7, r5
 8021226:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8021228:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802122c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802122e:	fb05 fa0c 	mul.w	sl, r5, ip
 8021232:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021236:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802123a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802123e:	44bc      	add	ip, r7
 8021240:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021244:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021248:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802124c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021250:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021254:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021258:	ea4c 050a 	orr.w	r5, ip, sl
 802125c:	9509      	str	r5, [sp, #36]	@ 0x24
 802125e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021260:	2dff      	cmp	r5, #255	@ 0xff
 8021262:	d020      	beq.n	80212a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8021264:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021266:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802126a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802126c:	436f      	muls	r7, r5
 802126e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021270:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021274:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021276:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802127a:	fb05 fa0a 	mul.w	sl, r5, sl
 802127e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021282:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021286:	44bc      	add	ip, r7
 8021288:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802128c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021290:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021294:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021298:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802129c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80212a0:	ea4c 050a 	orr.w	r5, ip, sl
 80212a4:	950e      	str	r5, [sp, #56]	@ 0x38
 80212a6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80212a8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80212ac:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80212ae:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80212b2:	fb0e f707 	mul.w	r7, lr, r7
 80212b6:	fb01 770c 	mla	r7, r1, ip, r7
 80212ba:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80212be:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80212c0:	fb00 770c 	mla	r7, r0, ip, r7
 80212c4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80212c8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80212ca:	fb09 770c 	mla	r7, r9, ip, r7
 80212ce:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80212d2:	fb0e fe0c 	mul.w	lr, lr, ip
 80212d6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80212da:	fb01 e303 	mla	r3, r1, r3, lr
 80212de:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80212e0:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 80212e4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80212e6:	fb00 330a 	mla	r3, r0, sl, r3
 80212ea:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 80212ee:	fb09 3c0c 	mla	ip, r9, ip, r3
 80212f2:	0a3f      	lsrs	r7, r7, #8
 80212f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80212f8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80212fc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8021300:	ea47 070c 	orr.w	r7, r7, ip
 8021304:	2aff      	cmp	r2, #255	@ 0xff
 8021306:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802130a:	d11e      	bne.n	802134a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802130c:	097a      	lsrs	r2, r7, #5
 802130e:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8021312:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021316:	f023 0307 	bic.w	r3, r3, #7
 802131a:	4313      	orrs	r3, r2
 802131c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8021320:	431f      	orrs	r7, r3
 8021322:	f8a8 7000 	strh.w	r7, [r8]
 8021326:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8021328:	441c      	add	r4, r3
 802132a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802132c:	f108 0802 	add.w	r8, r8, #2
 8021330:	441e      	add	r6, r3
 8021332:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021336:	e644      	b.n	8020fc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8021338:	2800      	cmp	r0, #0
 802133a:	f43f af0b 	beq.w	8021154 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802133e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8021342:	9109      	str	r1, [sp, #36]	@ 0x24
 8021344:	0e09      	lsrs	r1, r1, #24
 8021346:	9111      	str	r1, [sp, #68]	@ 0x44
 8021348:	e704      	b.n	8021154 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802134a:	f8b8 1000 	ldrh.w	r1, [r8]
 802134e:	43d2      	mvns	r2, r2
 8021350:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8021354:	fa5f fe82 	uxtb.w	lr, r2
 8021358:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802135c:	fb0c fc0e 	mul.w	ip, ip, lr
 8021360:	10c8      	asrs	r0, r1, #3
 8021362:	00ca      	lsls	r2, r1, #3
 8021364:	f10c 0101 	add.w	r1, ip, #1
 8021368:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802136c:	0c39      	lsrs	r1, r7, #16
 802136e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8021372:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021376:	4911      	ldr	r1, [pc, #68]	@ (80213bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8021378:	fb00 f00e 	mul.w	r0, r0, lr
 802137c:	fa5f fc8c 	uxtb.w	ip, ip
 8021380:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8021384:	b2d2      	uxtb	r2, r2
 8021386:	1c41      	adds	r1, r0, #1
 8021388:	fb02 f20e 	mul.w	r2, r2, lr
 802138c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021390:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021394:	1c51      	adds	r1, r2, #1
 8021396:	00c0      	lsls	r0, r0, #3
 8021398:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802139c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80213a0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80213a4:	ea4c 0c00 	orr.w	ip, ip, r0
 80213a8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80213ac:	ea47 0c0c 	orr.w	ip, r7, ip
 80213b0:	f8a8 c000 	strh.w	ip, [r8]
 80213b4:	e7b7      	b.n	8021326 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80213b6:	b01b      	add	sp, #108	@ 0x6c
 80213b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80213bc:	fffff800 	.word	0xfffff800

080213c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80213c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80213c4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 80213c8:	2d00      	cmp	r5, #0
 80213ca:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80213ce:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80213d2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80213d6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 80213da:	fb05 0e03 	mla	lr, r5, r3, r0
 80213de:	f2c0 808c 	blt.w	80214fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80213e2:	45a9      	cmp	r9, r5
 80213e4:	f340 8089 	ble.w	80214fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80213e8:	2800      	cmp	r0, #0
 80213ea:	f2c0 8084 	blt.w	80214f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80213ee:	4580      	cmp	r8, r0
 80213f0:	f340 8081 	ble.w	80214f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80213f4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80213f8:	f01e 0f01 	tst.w	lr, #1
 80213fc:	5d16      	ldrb	r6, [r2, r4]
 80213fe:	bf0c      	ite	eq
 8021400:	f006 060f 	andeq.w	r6, r6, #15
 8021404:	1136      	asrne	r6, r6, #4
 8021406:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802140a:	b2f6      	uxtb	r6, r6
 802140c:	1c44      	adds	r4, r0, #1
 802140e:	d477      	bmi.n	8021500 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8021410:	45a0      	cmp	r8, r4
 8021412:	dd75      	ble.n	8021500 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8021414:	2f00      	cmp	r7, #0
 8021416:	d075      	beq.n	8021504 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8021418:	f10e 0a01 	add.w	sl, lr, #1
 802141c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8021420:	f01a 0f01 	tst.w	sl, #1
 8021424:	5d14      	ldrb	r4, [r2, r4]
 8021426:	bf0c      	ite	eq
 8021428:	f004 040f 	andeq.w	r4, r4, #15
 802142c:	1124      	asrne	r4, r4, #4
 802142e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8021432:	b2e4      	uxtb	r4, r4
 8021434:	3501      	adds	r5, #1
 8021436:	d469      	bmi.n	802150c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8021438:	45a9      	cmp	r9, r5
 802143a:	dd67      	ble.n	802150c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802143c:	f1bc 0f00 	cmp.w	ip, #0
 8021440:	d067      	beq.n	8021512 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8021442:	2800      	cmp	r0, #0
 8021444:	db60      	blt.n	8021508 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8021446:	4580      	cmp	r8, r0
 8021448:	dd5e      	ble.n	8021508 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802144a:	eb03 090e 	add.w	r9, r3, lr
 802144e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8021452:	f019 0f01 	tst.w	r9, #1
 8021456:	5d55      	ldrb	r5, [r2, r5]
 8021458:	bf0c      	ite	eq
 802145a:	f005 050f 	andeq.w	r5, r5, #15
 802145e:	112d      	asrne	r5, r5, #4
 8021460:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8021464:	b2ed      	uxtb	r5, r5
 8021466:	3001      	adds	r0, #1
 8021468:	d456      	bmi.n	8021518 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802146a:	4580      	cmp	r8, r0
 802146c:	dd54      	ble.n	8021518 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802146e:	2f00      	cmp	r7, #0
 8021470:	d054      	beq.n	802151c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8021472:	3301      	adds	r3, #1
 8021474:	449e      	add	lr, r3
 8021476:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802147a:	f01e 0f01 	tst.w	lr, #1
 802147e:	5cd0      	ldrb	r0, [r2, r3]
 8021480:	bf0c      	ite	eq
 8021482:	f000 000f 	andeq.w	r0, r0, #15
 8021486:	1100      	asrne	r0, r0, #4
 8021488:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802148c:	b2c3      	uxtb	r3, r0
 802148e:	b2ba      	uxth	r2, r7
 8021490:	fa1f fc8c 	uxth.w	ip, ip
 8021494:	fb02 f00c 	mul.w	r0, r2, ip
 8021498:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802149c:	0112      	lsls	r2, r2, #4
 802149e:	fa1f fc8c 	uxth.w	ip, ip
 80214a2:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 80214a6:	1a12      	subs	r2, r2, r0
 80214a8:	eba7 070c 	sub.w	r7, r7, ip
 80214ac:	b292      	uxth	r2, r2
 80214ae:	b2bf      	uxth	r7, r7
 80214b0:	4362      	muls	r2, r4
 80214b2:	fb06 2207 	mla	r2, r6, r7, r2
 80214b6:	fb0c 2505 	mla	r5, ip, r5, r2
 80214ba:	fb00 5303 	mla	r3, r0, r3, r5
 80214be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80214c2:	b1b3      	cbz	r3, 80214f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80214c4:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 80214c8:	435a      	muls	r2, r3
 80214ca:	1c53      	adds	r3, r2, #1
 80214cc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80214d0:	4a2d      	ldr	r2, [pc, #180]	@ (8021588 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80214d2:	121b      	asrs	r3, r3, #8
 80214d4:	6812      	ldr	r2, [r2, #0]
 80214d6:	2bff      	cmp	r3, #255	@ 0xff
 80214d8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80214dc:	d120      	bne.n	8021520 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80214de:	4b2b      	ldr	r3, [pc, #172]	@ (802158c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80214e0:	0950      	lsrs	r0, r2, #5
 80214e2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80214e6:	4033      	ands	r3, r6
 80214e8:	4318      	orrs	r0, r3
 80214ea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80214ee:	4302      	orrs	r2, r0
 80214f0:	800a      	strh	r2, [r1, #0]
 80214f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80214f6:	2600      	movs	r6, #0
 80214f8:	e788      	b.n	802140c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80214fa:	2400      	movs	r4, #0
 80214fc:	4626      	mov	r6, r4
 80214fe:	e799      	b.n	8021434 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8021500:	2400      	movs	r4, #0
 8021502:	e797      	b.n	8021434 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8021504:	463c      	mov	r4, r7
 8021506:	e795      	b.n	8021434 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8021508:	2500      	movs	r5, #0
 802150a:	e7ac      	b.n	8021466 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 802150c:	2300      	movs	r3, #0
 802150e:	461d      	mov	r5, r3
 8021510:	e7bd      	b.n	802148e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8021512:	4663      	mov	r3, ip
 8021514:	4665      	mov	r5, ip
 8021516:	e7ba      	b.n	802148e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8021518:	2300      	movs	r3, #0
 802151a:	e7b8      	b.n	802148e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802151c:	463b      	mov	r3, r7
 802151e:	e7b6      	b.n	802148e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8021520:	880d      	ldrh	r5, [r1, #0]
 8021522:	b29f      	uxth	r7, r3
 8021524:	122c      	asrs	r4, r5, #8
 8021526:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802152a:	43db      	mvns	r3, r3
 802152c:	b2db      	uxtb	r3, r3
 802152e:	fb10 f007 	smulbb	r0, r0, r7
 8021532:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021536:	fb04 0403 	mla	r4, r4, r3, r0
 802153a:	b2f6      	uxtb	r6, r6
 802153c:	10e8      	asrs	r0, r5, #3
 802153e:	b2d2      	uxtb	r2, r2
 8021540:	00ed      	lsls	r5, r5, #3
 8021542:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021546:	fb12 f207 	smulbb	r2, r2, r7
 802154a:	fb16 f607 	smulbb	r6, r6, r7
 802154e:	b2ed      	uxtb	r5, r5
 8021550:	b2a4      	uxth	r4, r4
 8021552:	fb00 6603 	mla	r6, r0, r3, r6
 8021556:	fb05 2303 	mla	r3, r5, r3, r2
 802155a:	b29a      	uxth	r2, r3
 802155c:	1c63      	adds	r3, r4, #1
 802155e:	b2b0      	uxth	r0, r6
 8021560:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8021564:	1c53      	adds	r3, r2, #1
 8021566:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802156a:	1c42      	adds	r2, r0, #1
 802156c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021570:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8021574:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021578:	0940      	lsrs	r0, r0, #5
 802157a:	4323      	orrs	r3, r4
 802157c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021580:	4303      	orrs	r3, r0
 8021582:	800b      	strh	r3, [r1, #0]
 8021584:	e7b5      	b.n	80214f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8021586:	bf00      	nop
 8021588:	20013b7c 	.word	0x20013b7c
 802158c:	00fff800 	.word	0x00fff800

08021590 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021594:	b097      	sub	sp, #92	@ 0x5c
 8021596:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 802159a:	9214      	str	r2, [sp, #80]	@ 0x50
 802159c:	9309      	str	r3, [sp, #36]	@ 0x24
 802159e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80215a0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80215a4:	910d      	str	r1, [sp, #52]	@ 0x34
 80215a6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80215a8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 80215ac:	9015      	str	r0, [sp, #84]	@ 0x54
 80215ae:	6850      	ldr	r0, [r2, #4]
 80215b0:	6812      	ldr	r2, [r2, #0]
 80215b2:	fb00 1303 	mla	r3, r0, r3, r1
 80215b6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80215ba:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80215bc:	689b      	ldr	r3, [r3, #8]
 80215be:	3301      	adds	r3, #1
 80215c0:	f023 0301 	bic.w	r3, r3, #1
 80215c4:	930a      	str	r3, [sp, #40]	@ 0x28
 80215c6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80215c8:	681f      	ldr	r7, [r3, #0]
 80215ca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80215cc:	2b00      	cmp	r3, #0
 80215ce:	dc03      	bgt.n	80215d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80215d0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80215d2:	2b00      	cmp	r3, #0
 80215d4:	f340 8287 	ble.w	8021ae6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80215d8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80215da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80215de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80215e2:	1e48      	subs	r0, r1, #1
 80215e4:	f102 3cff 	add.w	ip, r2, #4294967295
 80215e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80215ea:	2b00      	cmp	r3, #0
 80215ec:	f340 80c4 	ble.w	8021778 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80215f0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80215f4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80215f8:	d406      	bmi.n	8021608 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80215fa:	4586      	cmp	lr, r0
 80215fc:	da04      	bge.n	8021608 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80215fe:	2b00      	cmp	r3, #0
 8021600:	db02      	blt.n	8021608 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021602:	4563      	cmp	r3, ip
 8021604:	f2c0 80b9 	blt.w	802177a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8021608:	f11e 0e01 	adds.w	lr, lr, #1
 802160c:	f100 80aa 	bmi.w	8021764 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8021610:	4571      	cmp	r1, lr
 8021612:	f2c0 80a7 	blt.w	8021764 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8021616:	3301      	adds	r3, #1
 8021618:	f100 80a4 	bmi.w	8021764 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802161c:	429a      	cmp	r2, r3
 802161e:	f2c0 80a1 	blt.w	8021764 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8021622:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021624:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 8021628:	930e      	str	r3, [sp, #56]	@ 0x38
 802162a:	46c8      	mov	r8, r9
 802162c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802162e:	2b00      	cmp	r3, #0
 8021630:	f340 80c3 	ble.w	80217ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8021634:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021636:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802163a:	1423      	asrs	r3, r4, #16
 802163c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8021640:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021644:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021648:	f100 814d 	bmi.w	80218e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802164c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8021650:	455b      	cmp	r3, fp
 8021652:	f280 8148 	bge.w	80218e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8021656:	2800      	cmp	r0, #0
 8021658:	f2c0 8145 	blt.w	80218e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802165c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8021660:	4558      	cmp	r0, fp
 8021662:	f280 8140 	bge.w	80218e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8021666:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8021668:	fb00 3305 	mla	r3, r0, r5, r3
 802166c:	0858      	lsrs	r0, r3, #1
 802166e:	07dd      	lsls	r5, r3, #31
 8021670:	f817 c000 	ldrb.w	ip, [r7, r0]
 8021674:	bf54      	ite	pl
 8021676:	f00c 0c0f 	andpl.w	ip, ip, #15
 802167a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802167e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021682:	fa5f fc8c 	uxtb.w	ip, ip
 8021686:	2a00      	cmp	r2, #0
 8021688:	f000 80db 	beq.w	8021842 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802168c:	1c58      	adds	r0, r3, #1
 802168e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8021692:	07c0      	lsls	r0, r0, #31
 8021694:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021698:	bf54      	ite	pl
 802169a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802169e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80216a2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80216a6:	fa5f f08e 	uxtb.w	r0, lr
 80216aa:	9010      	str	r0, [sp, #64]	@ 0x40
 80216ac:	b1c9      	cbz	r1, 80216e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80216ae:	4453      	add	r3, sl
 80216b0:	0858      	lsrs	r0, r3, #1
 80216b2:	07dd      	lsls	r5, r3, #31
 80216b4:	5c38      	ldrb	r0, [r7, r0]
 80216b6:	bf54      	ite	pl
 80216b8:	f000 000f 	andpl.w	r0, r0, #15
 80216bc:	1100      	asrmi	r0, r0, #4
 80216be:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80216c2:	3301      	adds	r3, #1
 80216c4:	b2c0      	uxtb	r0, r0
 80216c6:	900b      	str	r0, [sp, #44]	@ 0x2c
 80216c8:	0858      	lsrs	r0, r3, #1
 80216ca:	07dd      	lsls	r5, r3, #31
 80216cc:	f817 e000 	ldrb.w	lr, [r7, r0]
 80216d0:	bf54      	ite	pl
 80216d2:	f00e 030f 	andpl.w	r3, lr, #15
 80216d6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80216da:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80216de:	b2db      	uxtb	r3, r3
 80216e0:	9311      	str	r3, [sp, #68]	@ 0x44
 80216e2:	b292      	uxth	r2, r2
 80216e4:	b289      	uxth	r1, r1
 80216e6:	fb02 f301 	mul.w	r3, r2, r1
 80216ea:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80216ee:	0112      	lsls	r2, r2, #4
 80216f0:	b289      	uxth	r1, r1
 80216f2:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80216f6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80216f8:	1ad2      	subs	r2, r2, r3
 80216fa:	1a40      	subs	r0, r0, r1
 80216fc:	b292      	uxth	r2, r2
 80216fe:	436a      	muls	r2, r5
 8021700:	b280      	uxth	r0, r0
 8021702:	fb0c 2c00 	mla	ip, ip, r0, r2
 8021706:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8021708:	fb01 c102 	mla	r1, r1, r2, ip
 802170c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802170e:	fb03 1302 	mla	r3, r3, r2, r1
 8021712:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021716:	b1db      	cbz	r3, 8021750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8021718:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802171a:	4353      	muls	r3, r2
 802171c:	1c5a      	adds	r2, r3, #1
 802171e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8021722:	4ac6      	ldr	r2, [pc, #792]	@ (8021a3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8021724:	121b      	asrs	r3, r3, #8
 8021726:	6812      	ldr	r2, [r2, #0]
 8021728:	2bff      	cmp	r3, #255	@ 0xff
 802172a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802172e:	f040 8099 	bne.w	8021864 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8021732:	0953      	lsrs	r3, r2, #5
 8021734:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8021738:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802173c:	f02c 0c07 	bic.w	ip, ip, #7
 8021740:	ea43 0c0c 	orr.w	ip, r3, ip
 8021744:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021748:	ea4c 0202 	orr.w	r2, ip, r2
 802174c:	f8a8 2000 	strh.w	r2, [r8]
 8021750:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8021752:	441c      	add	r4, r3
 8021754:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021756:	441e      	add	r6, r3
 8021758:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802175a:	3b01      	subs	r3, #1
 802175c:	f108 0802 	add.w	r8, r8, #2
 8021760:	930e      	str	r3, [sp, #56]	@ 0x38
 8021762:	e763      	b.n	802162c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8021764:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8021766:	441c      	add	r4, r3
 8021768:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802176a:	441e      	add	r6, r3
 802176c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802176e:	3b01      	subs	r3, #1
 8021770:	9309      	str	r3, [sp, #36]	@ 0x24
 8021772:	f109 0902 	add.w	r9, r9, #2
 8021776:	e737      	b.n	80215e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021778:	d024      	beq.n	80217c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802177a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802177c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 802177e:	3b01      	subs	r3, #1
 8021780:	fb00 4003 	mla	r0, r0, r3, r4
 8021784:	1400      	asrs	r0, r0, #16
 8021786:	f53f af4c 	bmi.w	8021622 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802178a:	3901      	subs	r1, #1
 802178c:	4288      	cmp	r0, r1
 802178e:	f6bf af48 	bge.w	8021622 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021792:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8021794:	fb01 6303 	mla	r3, r1, r3, r6
 8021798:	141b      	asrs	r3, r3, #16
 802179a:	f53f af42 	bmi.w	8021622 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802179e:	3a01      	subs	r2, #1
 80217a0:	4293      	cmp	r3, r2
 80217a2:	f6bf af3e 	bge.w	8021622 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80217a6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80217aa:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80217ae:	930e      	str	r3, [sp, #56]	@ 0x38
 80217b0:	46c8      	mov	r8, r9
 80217b2:	f1bb 0f00 	cmp.w	fp, #0
 80217b6:	f300 80b7 	bgt.w	8021928 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80217ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80217bc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80217c0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80217c4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80217c6:	2b00      	cmp	r3, #0
 80217c8:	f340 818d 	ble.w	8021ae6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80217cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80217d0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80217d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80217d8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80217da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80217de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80217e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80217e6:	eef0 6a62 	vmov.f32	s13, s5
 80217ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80217ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80217f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80217f6:	ee16 4a90 	vmov	r4, s13
 80217fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80217fe:	eef0 6a43 	vmov.f32	s13, s6
 8021802:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021806:	ee12 2a90 	vmov	r2, s5
 802180a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802180e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021812:	ee13 2a10 	vmov	r2, s6
 8021816:	9323      	str	r3, [sp, #140]	@ 0x8c
 8021818:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802181a:	fb92 f3f3 	sdiv	r3, r2, r3
 802181e:	9324      	str	r3, [sp, #144]	@ 0x90
 8021820:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021822:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8021824:	3b01      	subs	r3, #1
 8021826:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802182a:	930d      	str	r3, [sp, #52]	@ 0x34
 802182c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802182e:	bf08      	it	eq
 8021830:	4613      	moveq	r3, r2
 8021832:	ee16 6a90 	vmov	r6, s13
 8021836:	9309      	str	r3, [sp, #36]	@ 0x24
 8021838:	eeb0 3a67 	vmov.f32	s6, s15
 802183c:	eef0 2a47 	vmov.f32	s5, s14
 8021840:	e6c3      	b.n	80215ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021842:	2900      	cmp	r1, #0
 8021844:	f43f af4d 	beq.w	80216e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8021848:	eb0a 0003 	add.w	r0, sl, r3
 802184c:	0843      	lsrs	r3, r0, #1
 802184e:	07c0      	lsls	r0, r0, #31
 8021850:	5cfb      	ldrb	r3, [r7, r3]
 8021852:	bf54      	ite	pl
 8021854:	f003 030f 	andpl.w	r3, r3, #15
 8021858:	111b      	asrmi	r3, r3, #4
 802185a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802185e:	b2db      	uxtb	r3, r3
 8021860:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021862:	e73e      	b.n	80216e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8021864:	f8b8 e000 	ldrh.w	lr, [r8]
 8021868:	fa1f fb83 	uxth.w	fp, r3
 802186c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8021870:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8021874:	43db      	mvns	r3, r3
 8021876:	b2db      	uxtb	r3, r3
 8021878:	fb11 f10b 	smulbb	r1, r1, fp
 802187c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021880:	fb00 1003 	mla	r0, r0, r3, r1
 8021884:	fa5f fc8c 	uxtb.w	ip, ip
 8021888:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802188c:	b2d2      	uxtb	r2, r2
 802188e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021892:	b280      	uxth	r0, r0
 8021894:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021898:	fb1c fc0b 	smulbb	ip, ip, fp
 802189c:	fa5f fe8e 	uxtb.w	lr, lr
 80218a0:	fb12 fb0b 	smulbb	fp, r2, fp
 80218a4:	fb01 cc03 	mla	ip, r1, r3, ip
 80218a8:	fb0e bb03 	mla	fp, lr, r3, fp
 80218ac:	1c43      	adds	r3, r0, #1
 80218ae:	fa1f fc8c 	uxth.w	ip, ip
 80218b2:	fa1f fb8b 	uxth.w	fp, fp
 80218b6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80218ba:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 80218be:	f10c 0101 	add.w	r1, ip, #1
 80218c2:	f10b 0001 	add.w	r0, fp, #1
 80218c6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80218ca:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80218ce:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80218d2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80218d6:	4318      	orrs	r0, r3
 80218d8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80218dc:	ea40 000c 	orr.w	r0, r0, ip
 80218e0:	f8a8 0000 	strh.w	r0, [r8]
 80218e4:	e734      	b.n	8021750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80218e6:	f113 0b01 	adds.w	fp, r3, #1
 80218ea:	f53f af31 	bmi.w	8021750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80218ee:	45dc      	cmp	ip, fp
 80218f0:	f6ff af2e 	blt.w	8021750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80218f4:	f110 0b01 	adds.w	fp, r0, #1
 80218f8:	f53f af2a 	bmi.w	8021750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80218fc:	45de      	cmp	lr, fp
 80218fe:	f6ff af27 	blt.w	8021750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8021902:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021904:	9302      	str	r3, [sp, #8]
 8021906:	fa0f f38e 	sxth.w	r3, lr
 802190a:	9301      	str	r3, [sp, #4]
 802190c:	fa0f f38c 	sxth.w	r3, ip
 8021910:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8021914:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8021918:	9300      	str	r3, [sp, #0]
 802191a:	463a      	mov	r2, r7
 802191c:	4653      	mov	r3, sl
 802191e:	4641      	mov	r1, r8
 8021920:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8021922:	f7ff fd4d 	bl	80213c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8021926:	e713      	b.n	8021750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8021928:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802192a:	1422      	asrs	r2, r4, #16
 802192c:	1433      	asrs	r3, r6, #16
 802192e:	fb05 2303 	mla	r3, r5, r3, r2
 8021932:	085a      	lsrs	r2, r3, #1
 8021934:	07dd      	lsls	r5, r3, #31
 8021936:	5cba      	ldrb	r2, [r7, r2]
 8021938:	bf54      	ite	pl
 802193a:	f002 020f 	andpl.w	r2, r2, #15
 802193e:	1112      	asrmi	r2, r2, #4
 8021940:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8021944:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8021948:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802194c:	b2d2      	uxtb	r2, r2
 802194e:	2900      	cmp	r1, #0
 8021950:	d076      	beq.n	8021a40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021952:	f103 0e01 	add.w	lr, r3, #1
 8021956:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802195a:	f01e 0f01 	tst.w	lr, #1
 802195e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8021962:	bf0c      	ite	eq
 8021964:	f00c 0c0f 	andeq.w	ip, ip, #15
 8021968:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802196c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021970:	fa5f f58c 	uxtb.w	r5, ip
 8021974:	9512      	str	r5, [sp, #72]	@ 0x48
 8021976:	b300      	cbz	r0, 80219ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8021978:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802197a:	442b      	add	r3, r5
 802197c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8021980:	07dd      	lsls	r5, r3, #31
 8021982:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8021986:	bf54      	ite	pl
 8021988:	f00c 0c0f 	andpl.w	ip, ip, #15
 802198c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021990:	3301      	adds	r3, #1
 8021992:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021996:	fa5f f58c 	uxtb.w	r5, ip
 802199a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802199e:	950c      	str	r5, [sp, #48]	@ 0x30
 80219a0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80219a4:	07dd      	lsls	r5, r3, #31
 80219a6:	bf54      	ite	pl
 80219a8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80219ac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80219b0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80219b4:	fa5f f38c 	uxtb.w	r3, ip
 80219b8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80219ba:	b289      	uxth	r1, r1
 80219bc:	b280      	uxth	r0, r0
 80219be:	fb01 f300 	mul.w	r3, r1, r0
 80219c2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80219c6:	0109      	lsls	r1, r1, #4
 80219c8:	b280      	uxth	r0, r0
 80219ca:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 80219ce:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80219d0:	1ac9      	subs	r1, r1, r3
 80219d2:	ebac 0c00 	sub.w	ip, ip, r0
 80219d6:	b289      	uxth	r1, r1
 80219d8:	4369      	muls	r1, r5
 80219da:	fa1f fc8c 	uxth.w	ip, ip
 80219de:	fb02 120c 	mla	r2, r2, ip, r1
 80219e2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80219e4:	fb00 2001 	mla	r0, r0, r1, r2
 80219e8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80219ea:	fb03 0302 	mla	r3, r3, r2, r0
 80219ee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80219f2:	b1d3      	cbz	r3, 8021a2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80219f4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80219f6:	4353      	muls	r3, r2
 80219f8:	1c5a      	adds	r2, r3, #1
 80219fa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80219fe:	4a0f      	ldr	r2, [pc, #60]	@ (8021a3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8021a00:	121b      	asrs	r3, r3, #8
 8021a02:	6812      	ldr	r2, [r2, #0]
 8021a04:	2bff      	cmp	r3, #255	@ 0xff
 8021a06:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8021a0a:	d12d      	bne.n	8021a68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8021a0c:	0953      	lsrs	r3, r2, #5
 8021a0e:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8021a12:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021a16:	f02c 0c07 	bic.w	ip, ip, #7
 8021a1a:	ea43 0c0c 	orr.w	ip, r3, ip
 8021a1e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021a22:	ea4c 0202 	orr.w	r2, ip, r2
 8021a26:	f8a8 2000 	strh.w	r2, [r8]
 8021a2a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8021a2c:	441c      	add	r4, r3
 8021a2e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021a30:	f108 0802 	add.w	r8, r8, #2
 8021a34:	441e      	add	r6, r3
 8021a36:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021a3a:	e6ba      	b.n	80217b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8021a3c:	20013b7c 	.word	0x20013b7c
 8021a40:	2800      	cmp	r0, #0
 8021a42:	d0ba      	beq.n	80219ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8021a44:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021a46:	442b      	add	r3, r5
 8021a48:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8021a4c:	07db      	lsls	r3, r3, #31
 8021a4e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8021a52:	bf54      	ite	pl
 8021a54:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021a58:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021a5c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021a60:	fa5f f38c 	uxtb.w	r3, ip
 8021a64:	930c      	str	r3, [sp, #48]	@ 0x30
 8021a66:	e7a8      	b.n	80219ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8021a68:	f8b8 e000 	ldrh.w	lr, [r8]
 8021a6c:	fa1f fa83 	uxth.w	sl, r3
 8021a70:	ea4f 202e 	mov.w	r0, lr, asr #8
 8021a74:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8021a78:	43db      	mvns	r3, r3
 8021a7a:	b2db      	uxtb	r3, r3
 8021a7c:	fb11 f10a 	smulbb	r1, r1, sl
 8021a80:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021a84:	fb00 1003 	mla	r0, r0, r3, r1
 8021a88:	b2d2      	uxtb	r2, r2
 8021a8a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8021a8e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021a92:	fa5f fe8e 	uxtb.w	lr, lr
 8021a96:	fb12 f20a 	smulbb	r2, r2, sl
 8021a9a:	fb0e 2203 	mla	r2, lr, r3, r2
 8021a9e:	fa5f fc8c 	uxtb.w	ip, ip
 8021aa2:	b280      	uxth	r0, r0
 8021aa4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021aa8:	b292      	uxth	r2, r2
 8021aaa:	fb1c fc0a 	smulbb	ip, ip, sl
 8021aae:	fb01 cc03 	mla	ip, r1, r3, ip
 8021ab2:	1c43      	adds	r3, r0, #1
 8021ab4:	1c51      	adds	r1, r2, #1
 8021ab6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021aba:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8021abe:	fa1f fc8c 	uxth.w	ip, ip
 8021ac2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8021ac6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8021aca:	4308      	orrs	r0, r1
 8021acc:	f10c 0101 	add.w	r1, ip, #1
 8021ad0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8021ad4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021ad8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8021adc:	ea40 000c 	orr.w	r0, r0, ip
 8021ae0:	f8a8 0000 	strh.w	r0, [r8]
 8021ae4:	e7a1      	b.n	8021a2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8021ae6:	b017      	add	sp, #92	@ 0x5c
 8021ae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021aec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8021aec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021af0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8021af4:	2d00      	cmp	r5, #0
 8021af6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8021afa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8021afe:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8021b02:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8021b06:	fb05 0e03 	mla	lr, r5, r3, r0
 8021b0a:	f2c0 80b0 	blt.w	8021c6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8021b0e:	45a9      	cmp	r9, r5
 8021b10:	f340 80ad 	ble.w	8021c6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8021b14:	2800      	cmp	r0, #0
 8021b16:	f2c0 80a8 	blt.w	8021c6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8021b1a:	4580      	cmp	r8, r0
 8021b1c:	f340 80a5 	ble.w	8021c6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8021b20:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8021b24:	f01e 0f01 	tst.w	lr, #1
 8021b28:	5d16      	ldrb	r6, [r2, r4]
 8021b2a:	bf0c      	ite	eq
 8021b2c:	f006 060f 	andeq.w	r6, r6, #15
 8021b30:	1136      	asrne	r6, r6, #4
 8021b32:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8021b36:	b2f6      	uxtb	r6, r6
 8021b38:	1c44      	adds	r4, r0, #1
 8021b3a:	f100 809b 	bmi.w	8021c74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8021b3e:	45a0      	cmp	r8, r4
 8021b40:	f340 8098 	ble.w	8021c74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8021b44:	2f00      	cmp	r7, #0
 8021b46:	f000 8097 	beq.w	8021c78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8021b4a:	f10e 0a01 	add.w	sl, lr, #1
 8021b4e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8021b52:	f01a 0f01 	tst.w	sl, #1
 8021b56:	5d14      	ldrb	r4, [r2, r4]
 8021b58:	bf0c      	ite	eq
 8021b5a:	f004 040f 	andeq.w	r4, r4, #15
 8021b5e:	1124      	asrne	r4, r4, #4
 8021b60:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8021b64:	b2e4      	uxtb	r4, r4
 8021b66:	3501      	adds	r5, #1
 8021b68:	f100 808a 	bmi.w	8021c80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8021b6c:	45a9      	cmp	r9, r5
 8021b6e:	f340 8087 	ble.w	8021c80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8021b72:	f1bc 0f00 	cmp.w	ip, #0
 8021b76:	f000 8086 	beq.w	8021c86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8021b7a:	2800      	cmp	r0, #0
 8021b7c:	db7e      	blt.n	8021c7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8021b7e:	4580      	cmp	r8, r0
 8021b80:	dd7c      	ble.n	8021c7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8021b82:	eb03 090e 	add.w	r9, r3, lr
 8021b86:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8021b8a:	f019 0f01 	tst.w	r9, #1
 8021b8e:	5d55      	ldrb	r5, [r2, r5]
 8021b90:	bf0c      	ite	eq
 8021b92:	f005 050f 	andeq.w	r5, r5, #15
 8021b96:	112d      	asrne	r5, r5, #4
 8021b98:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8021b9c:	b2ed      	uxtb	r5, r5
 8021b9e:	3001      	adds	r0, #1
 8021ba0:	d474      	bmi.n	8021c8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8021ba2:	4580      	cmp	r8, r0
 8021ba4:	dd72      	ble.n	8021c8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8021ba6:	2f00      	cmp	r7, #0
 8021ba8:	d072      	beq.n	8021c90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8021baa:	3301      	adds	r3, #1
 8021bac:	449e      	add	lr, r3
 8021bae:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8021bb2:	f01e 0f01 	tst.w	lr, #1
 8021bb6:	5cd0      	ldrb	r0, [r2, r3]
 8021bb8:	bf0c      	ite	eq
 8021bba:	f000 000f 	andeq.w	r0, r0, #15
 8021bbe:	1100      	asrne	r0, r0, #4
 8021bc0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021bc4:	b2c3      	uxtb	r3, r0
 8021bc6:	b2ba      	uxth	r2, r7
 8021bc8:	fa1f fc8c 	uxth.w	ip, ip
 8021bcc:	fb02 f00c 	mul.w	r0, r2, ip
 8021bd0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8021bd4:	0112      	lsls	r2, r2, #4
 8021bd6:	fa1f fc8c 	uxth.w	ip, ip
 8021bda:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8021bde:	1a12      	subs	r2, r2, r0
 8021be0:	eba7 070c 	sub.w	r7, r7, ip
 8021be4:	b292      	uxth	r2, r2
 8021be6:	b2bf      	uxth	r7, r7
 8021be8:	4362      	muls	r2, r4
 8021bea:	fb06 2207 	mla	r2, r6, r7, r2
 8021bee:	fb0c 2505 	mla	r5, ip, r5, r2
 8021bf2:	fb00 5303 	mla	r3, r0, r3, r5
 8021bf6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021bfa:	b3a3      	cbz	r3, 8021c66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8021bfc:	4a25      	ldr	r2, [pc, #148]	@ (8021c94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8021bfe:	880e      	ldrh	r6, [r1, #0]
 8021c00:	6815      	ldr	r5, [r2, #0]
 8021c02:	1234      	asrs	r4, r6, #8
 8021c04:	b29a      	uxth	r2, r3
 8021c06:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8021c0a:	43db      	mvns	r3, r3
 8021c0c:	b2db      	uxtb	r3, r3
 8021c0e:	fb10 f002 	smulbb	r0, r0, r2
 8021c12:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021c16:	fb04 0403 	mla	r4, r4, r3, r0
 8021c1a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8021c1e:	10f0      	asrs	r0, r6, #3
 8021c20:	b2ed      	uxtb	r5, r5
 8021c22:	00f6      	lsls	r6, r6, #3
 8021c24:	fb17 f702 	smulbb	r7, r7, r2
 8021c28:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021c2c:	fb15 f202 	smulbb	r2, r5, r2
 8021c30:	b2f6      	uxtb	r6, r6
 8021c32:	b2a4      	uxth	r4, r4
 8021c34:	fb00 7003 	mla	r0, r0, r3, r7
 8021c38:	fb06 2303 	mla	r3, r6, r3, r2
 8021c3c:	b29a      	uxth	r2, r3
 8021c3e:	1c63      	adds	r3, r4, #1
 8021c40:	b280      	uxth	r0, r0
 8021c42:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8021c46:	1c53      	adds	r3, r2, #1
 8021c48:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021c4c:	1c42      	adds	r2, r0, #1
 8021c4e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021c52:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8021c56:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021c5a:	0940      	lsrs	r0, r0, #5
 8021c5c:	4323      	orrs	r3, r4
 8021c5e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021c62:	4303      	orrs	r3, r0
 8021c64:	800b      	strh	r3, [r1, #0]
 8021c66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021c6a:	2600      	movs	r6, #0
 8021c6c:	e764      	b.n	8021b38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8021c6e:	2400      	movs	r4, #0
 8021c70:	4626      	mov	r6, r4
 8021c72:	e778      	b.n	8021b66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8021c74:	2400      	movs	r4, #0
 8021c76:	e776      	b.n	8021b66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8021c78:	463c      	mov	r4, r7
 8021c7a:	e774      	b.n	8021b66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8021c7c:	2500      	movs	r5, #0
 8021c7e:	e78e      	b.n	8021b9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8021c80:	2300      	movs	r3, #0
 8021c82:	461d      	mov	r5, r3
 8021c84:	e79f      	b.n	8021bc6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021c86:	4663      	mov	r3, ip
 8021c88:	4665      	mov	r5, ip
 8021c8a:	e79c      	b.n	8021bc6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021c8c:	2300      	movs	r3, #0
 8021c8e:	e79a      	b.n	8021bc6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021c90:	463b      	mov	r3, r7
 8021c92:	e798      	b.n	8021bc6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021c94:	20013b7c 	.word	0x20013b7c

08021c98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c9c:	b093      	sub	sp, #76	@ 0x4c
 8021c9e:	461d      	mov	r5, r3
 8021ca0:	920c      	str	r2, [sp, #48]	@ 0x30
 8021ca2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8021ca4:	9107      	str	r1, [sp, #28]
 8021ca6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8021caa:	9011      	str	r0, [sp, #68]	@ 0x44
 8021cac:	6850      	ldr	r0, [r2, #4]
 8021cae:	6812      	ldr	r2, [r2, #0]
 8021cb0:	fb00 1303 	mla	r3, r0, r3, r1
 8021cb4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8021cb8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021cba:	689b      	ldr	r3, [r3, #8]
 8021cbc:	3301      	adds	r3, #1
 8021cbe:	f023 0301 	bic.w	r3, r3, #1
 8021cc2:	9306      	str	r3, [sp, #24]
 8021cc4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021cc6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8021cca:	681f      	ldr	r7, [r3, #0]
 8021ccc:	9b07      	ldr	r3, [sp, #28]
 8021cce:	2b00      	cmp	r3, #0
 8021cd0:	dc03      	bgt.n	8021cda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021cd2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021cd4:	2b00      	cmp	r3, #0
 8021cd6:	f340 8267 	ble.w	80221a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8021cda:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021cdc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021ce0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021ce4:	1e48      	subs	r0, r1, #1
 8021ce6:	f102 3cff 	add.w	ip, r2, #4294967295
 8021cea:	2d00      	cmp	r5, #0
 8021cec:	f340 80b8 	ble.w	8021e60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8021cf0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021cf4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021cf8:	d406      	bmi.n	8021d08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021cfa:	4586      	cmp	lr, r0
 8021cfc:	da04      	bge.n	8021d08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021cfe:	2b00      	cmp	r3, #0
 8021d00:	db02      	blt.n	8021d08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021d02:	4563      	cmp	r3, ip
 8021d04:	f2c0 80ad 	blt.w	8021e62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8021d08:	f11e 0e01 	adds.w	lr, lr, #1
 8021d0c:	f100 80a0 	bmi.w	8021e50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021d10:	4571      	cmp	r1, lr
 8021d12:	f2c0 809d 	blt.w	8021e50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021d16:	3301      	adds	r3, #1
 8021d18:	f100 809a 	bmi.w	8021e50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021d1c:	429a      	cmp	r2, r3
 8021d1e:	f2c0 8097 	blt.w	8021e50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021d22:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8021d26:	9509      	str	r5, [sp, #36]	@ 0x24
 8021d28:	46c8      	mov	r8, r9
 8021d2a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021d2c:	2b00      	cmp	r3, #0
 8021d2e:	f340 80b6 	ble.w	8021e9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8021d32:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8021d36:	9308      	str	r3, [sp, #32]
 8021d38:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021d3a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8021d3e:	1423      	asrs	r3, r4, #16
 8021d40:	ea4f 4026 	mov.w	r0, r6, asr #16
 8021d44:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021d48:	f100 813e 	bmi.w	8021fc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021d4c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8021d50:	455b      	cmp	r3, fp
 8021d52:	f280 8139 	bge.w	8021fc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021d56:	2800      	cmp	r0, #0
 8021d58:	f2c0 8136 	blt.w	8021fc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021d5c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8021d60:	4558      	cmp	r0, fp
 8021d62:	f280 8131 	bge.w	8021fc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021d66:	9a06      	ldr	r2, [sp, #24]
 8021d68:	fb00 3302 	mla	r3, r0, r2, r3
 8021d6c:	0858      	lsrs	r0, r3, #1
 8021d6e:	07da      	lsls	r2, r3, #31
 8021d70:	f817 c000 	ldrb.w	ip, [r7, r0]
 8021d74:	9a08      	ldr	r2, [sp, #32]
 8021d76:	bf54      	ite	pl
 8021d78:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021d7c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021d80:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021d84:	fa5f fc8c 	uxtb.w	ip, ip
 8021d88:	2a00      	cmp	r2, #0
 8021d8a:	f000 80cb 	beq.w	8021f24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021d8e:	1c58      	adds	r0, r3, #1
 8021d90:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8021d94:	07c0      	lsls	r0, r0, #31
 8021d96:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8021d9a:	bf54      	ite	pl
 8021d9c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8021da0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8021da4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8021da8:	fa5f fe8e 	uxtb.w	lr, lr
 8021dac:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8021db0:	b1b9      	cbz	r1, 8021de2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8021db2:	4453      	add	r3, sl
 8021db4:	0858      	lsrs	r0, r3, #1
 8021db6:	07da      	lsls	r2, r3, #31
 8021db8:	5c38      	ldrb	r0, [r7, r0]
 8021dba:	bf54      	ite	pl
 8021dbc:	f000 000f 	andpl.w	r0, r0, #15
 8021dc0:	1100      	asrmi	r0, r0, #4
 8021dc2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021dc6:	b2c0      	uxtb	r0, r0
 8021dc8:	900a      	str	r0, [sp, #40]	@ 0x28
 8021dca:	1c58      	adds	r0, r3, #1
 8021dcc:	0843      	lsrs	r3, r0, #1
 8021dce:	07c2      	lsls	r2, r0, #31
 8021dd0:	5cfb      	ldrb	r3, [r7, r3]
 8021dd2:	bf54      	ite	pl
 8021dd4:	f003 030f 	andpl.w	r3, r3, #15
 8021dd8:	111b      	asrmi	r3, r3, #4
 8021dda:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021dde:	b2db      	uxtb	r3, r3
 8021de0:	930e      	str	r3, [sp, #56]	@ 0x38
 8021de2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8021de6:	b289      	uxth	r1, r1
 8021de8:	fb02 f301 	mul.w	r3, r2, r1
 8021dec:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8021df0:	0112      	lsls	r2, r2, #4
 8021df2:	b289      	uxth	r1, r1
 8021df4:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8021df8:	1a40      	subs	r0, r0, r1
 8021dfa:	fa1f fe80 	uxth.w	lr, r0
 8021dfe:	1ad2      	subs	r2, r2, r3
 8021e00:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8021e02:	b292      	uxth	r2, r2
 8021e04:	4342      	muls	r2, r0
 8021e06:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8021e0a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8021e0c:	fb01 c102 	mla	r1, r1, r2, ip
 8021e10:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8021e12:	fb03 1302 	mla	r3, r3, r2, r1
 8021e16:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021e1a:	2bff      	cmp	r3, #255	@ 0xff
 8021e1c:	f040 8093 	bne.w	8021f46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8021e20:	4bbe      	ldr	r3, [pc, #760]	@ (802211c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8021e22:	681a      	ldr	r2, [r3, #0]
 8021e24:	4bbe      	ldr	r3, [pc, #760]	@ (8022120 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8021e26:	0951      	lsrs	r1, r2, #5
 8021e28:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8021e2c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021e30:	430b      	orrs	r3, r1
 8021e32:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021e36:	4313      	orrs	r3, r2
 8021e38:	f8a8 3000 	strh.w	r3, [r8]
 8021e3c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8021e3e:	441c      	add	r4, r3
 8021e40:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021e42:	441e      	add	r6, r3
 8021e44:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021e46:	3b01      	subs	r3, #1
 8021e48:	f108 0802 	add.w	r8, r8, #2
 8021e4c:	9309      	str	r3, [sp, #36]	@ 0x24
 8021e4e:	e76c      	b.n	8021d2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021e50:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8021e52:	441c      	add	r4, r3
 8021e54:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021e56:	3d01      	subs	r5, #1
 8021e58:	441e      	add	r6, r3
 8021e5a:	f109 0902 	add.w	r9, r9, #2
 8021e5e:	e744      	b.n	8021cea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8021e60:	d021      	beq.n	8021ea6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8021e62:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8021e64:	1e6b      	subs	r3, r5, #1
 8021e66:	fb00 4003 	mla	r0, r0, r3, r4
 8021e6a:	1400      	asrs	r0, r0, #16
 8021e6c:	f53f af59 	bmi.w	8021d22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021e70:	3901      	subs	r1, #1
 8021e72:	4288      	cmp	r0, r1
 8021e74:	f6bf af55 	bge.w	8021d22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021e78:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8021e7a:	fb01 6303 	mla	r3, r1, r3, r6
 8021e7e:	141b      	asrs	r3, r3, #16
 8021e80:	f53f af4f 	bmi.w	8021d22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021e84:	3a01      	subs	r2, #1
 8021e86:	4293      	cmp	r3, r2
 8021e88:	f6bf af4b 	bge.w	8021d22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021e8c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8021e90:	9308      	str	r3, [sp, #32]
 8021e92:	46a8      	mov	r8, r5
 8021e94:	46ce      	mov	lr, r9
 8021e96:	f1b8 0f00 	cmp.w	r8, #0
 8021e9a:	f300 80b5 	bgt.w	8022008 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021e9e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8021ea2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8021ea6:	9b07      	ldr	r3, [sp, #28]
 8021ea8:	2b00      	cmp	r3, #0
 8021eaa:	f340 817d 	ble.w	80221a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8021eae:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021eb2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021eb6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021eba:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021ebc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021ec0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021ec4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021ec8:	eef0 6a62 	vmov.f32	s13, s5
 8021ecc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021ed0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021ed4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021ed8:	ee16 4a90 	vmov	r4, s13
 8021edc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021ee0:	eef0 6a43 	vmov.f32	s13, s6
 8021ee4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021ee8:	ee12 2a90 	vmov	r2, s5
 8021eec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021ef0:	fb92 f3f3 	sdiv	r3, r2, r3
 8021ef4:	ee13 2a10 	vmov	r2, s6
 8021ef8:	931f      	str	r3, [sp, #124]	@ 0x7c
 8021efa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021efc:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f00:	9320      	str	r3, [sp, #128]	@ 0x80
 8021f02:	9b07      	ldr	r3, [sp, #28]
 8021f04:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8021f06:	3b01      	subs	r3, #1
 8021f08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021f0c:	9307      	str	r3, [sp, #28]
 8021f0e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021f10:	ee16 6a90 	vmov	r6, s13
 8021f14:	bf14      	ite	ne
 8021f16:	461d      	movne	r5, r3
 8021f18:	4615      	moveq	r5, r2
 8021f1a:	eeb0 3a67 	vmov.f32	s6, s15
 8021f1e:	eef0 2a47 	vmov.f32	s5, s14
 8021f22:	e6d3      	b.n	8021ccc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021f24:	2900      	cmp	r1, #0
 8021f26:	f43f af5c 	beq.w	8021de2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8021f2a:	eb0a 0003 	add.w	r0, sl, r3
 8021f2e:	0843      	lsrs	r3, r0, #1
 8021f30:	07c0      	lsls	r0, r0, #31
 8021f32:	5cfb      	ldrb	r3, [r7, r3]
 8021f34:	bf54      	ite	pl
 8021f36:	f003 030f 	andpl.w	r3, r3, #15
 8021f3a:	111b      	asrmi	r3, r3, #4
 8021f3c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021f40:	b2db      	uxtb	r3, r3
 8021f42:	930a      	str	r3, [sp, #40]	@ 0x28
 8021f44:	e74d      	b.n	8021de2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8021f46:	2b00      	cmp	r3, #0
 8021f48:	f43f af78 	beq.w	8021e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021f4c:	4a73      	ldr	r2, [pc, #460]	@ (802211c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8021f4e:	f8b8 c000 	ldrh.w	ip, [r8]
 8021f52:	6810      	ldr	r0, [r2, #0]
 8021f54:	fa1f fe83 	uxth.w	lr, r3
 8021f58:	ea4f 212c 	mov.w	r1, ip, asr #8
 8021f5c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8021f60:	43db      	mvns	r3, r3
 8021f62:	b2db      	uxtb	r3, r3
 8021f64:	fb12 f20e 	smulbb	r2, r2, lr
 8021f68:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8021f6c:	fb01 2103 	mla	r1, r1, r3, r2
 8021f70:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8021f74:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021f78:	b2c0      	uxtb	r0, r0
 8021f7a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021f7e:	fb1b fb0e 	smulbb	fp, fp, lr
 8021f82:	b289      	uxth	r1, r1
 8021f84:	fb10 fe0e 	smulbb	lr, r0, lr
 8021f88:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8021f8c:	fa5f fc8c 	uxtb.w	ip, ip
 8021f90:	fb02 b203 	mla	r2, r2, r3, fp
 8021f94:	1c48      	adds	r0, r1, #1
 8021f96:	fb0c e303 	mla	r3, ip, r3, lr
 8021f9a:	b292      	uxth	r2, r2
 8021f9c:	b29b      	uxth	r3, r3
 8021f9e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8021fa2:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8021fa6:	f102 0b01 	add.w	fp, r2, #1
 8021faa:	1c59      	adds	r1, r3, #1
 8021fac:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021fb0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8021fb4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8021fb8:	0952      	lsrs	r2, r2, #5
 8021fba:	4301      	orrs	r1, r0
 8021fbc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021fc0:	4311      	orrs	r1, r2
 8021fc2:	f8a8 1000 	strh.w	r1, [r8]
 8021fc6:	e739      	b.n	8021e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021fc8:	f113 0b01 	adds.w	fp, r3, #1
 8021fcc:	f53f af36 	bmi.w	8021e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021fd0:	45dc      	cmp	ip, fp
 8021fd2:	f6ff af33 	blt.w	8021e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021fd6:	f110 0b01 	adds.w	fp, r0, #1
 8021fda:	f53f af2f 	bmi.w	8021e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021fde:	45de      	cmp	lr, fp
 8021fe0:	f6ff af2c 	blt.w	8021e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021fe4:	9a08      	ldr	r2, [sp, #32]
 8021fe6:	9302      	str	r3, [sp, #8]
 8021fe8:	fa0f f38e 	sxth.w	r3, lr
 8021fec:	9301      	str	r3, [sp, #4]
 8021fee:	fa0f f38c 	sxth.w	r3, ip
 8021ff2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8021ff6:	9105      	str	r1, [sp, #20]
 8021ff8:	9300      	str	r3, [sp, #0]
 8021ffa:	463a      	mov	r2, r7
 8021ffc:	4653      	mov	r3, sl
 8021ffe:	4641      	mov	r1, r8
 8022000:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8022002:	f7ff fd73 	bl	8021aec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8022006:	e719      	b.n	8021e3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8022008:	9906      	ldr	r1, [sp, #24]
 802200a:	1422      	asrs	r2, r4, #16
 802200c:	1433      	asrs	r3, r6, #16
 802200e:	fb01 2303 	mla	r3, r1, r3, r2
 8022012:	085a      	lsrs	r2, r3, #1
 8022014:	07d9      	lsls	r1, r3, #31
 8022016:	5cba      	ldrb	r2, [r7, r2]
 8022018:	bf54      	ite	pl
 802201a:	f002 020f 	andpl.w	r2, r2, #15
 802201e:	1112      	asrmi	r2, r2, #4
 8022020:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8022024:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022028:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802202c:	b2d2      	uxtb	r2, r2
 802202e:	2800      	cmp	r0, #0
 8022030:	d062      	beq.n	80220f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8022032:	f103 0a01 	add.w	sl, r3, #1
 8022036:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802203a:	f01a 0f01 	tst.w	sl, #1
 802203e:	5c79      	ldrb	r1, [r7, r1]
 8022040:	bf0c      	ite	eq
 8022042:	f001 010f 	andeq.w	r1, r1, #15
 8022046:	1109      	asrne	r1, r1, #4
 8022048:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802204c:	b2c9      	uxtb	r1, r1
 802204e:	910f      	str	r1, [sp, #60]	@ 0x3c
 8022050:	f1bc 0f00 	cmp.w	ip, #0
 8022054:	d019      	beq.n	802208a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8022056:	9908      	ldr	r1, [sp, #32]
 8022058:	440b      	add	r3, r1
 802205a:	0859      	lsrs	r1, r3, #1
 802205c:	f013 0f01 	tst.w	r3, #1
 8022060:	5c79      	ldrb	r1, [r7, r1]
 8022062:	bf0c      	ite	eq
 8022064:	f001 010f 	andeq.w	r1, r1, #15
 8022068:	1109      	asrne	r1, r1, #4
 802206a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802206e:	b2c9      	uxtb	r1, r1
 8022070:	3301      	adds	r3, #1
 8022072:	910b      	str	r1, [sp, #44]	@ 0x2c
 8022074:	0859      	lsrs	r1, r3, #1
 8022076:	07db      	lsls	r3, r3, #31
 8022078:	5c79      	ldrb	r1, [r7, r1]
 802207a:	bf54      	ite	pl
 802207c:	f001 010f 	andpl.w	r1, r1, #15
 8022080:	1109      	asrmi	r1, r1, #4
 8022082:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022086:	b2c9      	uxtb	r1, r1
 8022088:	9110      	str	r1, [sp, #64]	@ 0x40
 802208a:	b280      	uxth	r0, r0
 802208c:	fa1f fc8c 	uxth.w	ip, ip
 8022090:	fb00 f30c 	mul.w	r3, r0, ip
 8022094:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8022098:	0100      	lsls	r0, r0, #4
 802209a:	fa1f fc8c 	uxth.w	ip, ip
 802209e:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 80220a2:	eba1 010c 	sub.w	r1, r1, ip
 80220a6:	fa1f fa81 	uxth.w	sl, r1
 80220aa:	1ac0      	subs	r0, r0, r3
 80220ac:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80220ae:	b280      	uxth	r0, r0
 80220b0:	4348      	muls	r0, r1
 80220b2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80220b4:	fb02 020a 	mla	r2, r2, sl, r0
 80220b8:	fb0c 2c01 	mla	ip, ip, r1, r2
 80220bc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80220be:	fb03 c302 	mla	r3, r3, r2, ip
 80220c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80220c6:	2bff      	cmp	r3, #255	@ 0xff
 80220c8:	d12c      	bne.n	8022124 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80220ca:	4b14      	ldr	r3, [pc, #80]	@ (802211c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80220cc:	681a      	ldr	r2, [r3, #0]
 80220ce:	4b14      	ldr	r3, [pc, #80]	@ (8022120 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80220d0:	0951      	lsrs	r1, r2, #5
 80220d2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80220d6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80220da:	430b      	orrs	r3, r1
 80220dc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80220e0:	4313      	orrs	r3, r2
 80220e2:	f8ae 3000 	strh.w	r3, [lr]
 80220e6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80220e8:	441c      	add	r4, r3
 80220ea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80220ec:	f10e 0e02 	add.w	lr, lr, #2
 80220f0:	441e      	add	r6, r3
 80220f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80220f6:	e6ce      	b.n	8021e96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80220f8:	f1bc 0f00 	cmp.w	ip, #0
 80220fc:	d0c5      	beq.n	802208a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80220fe:	9908      	ldr	r1, [sp, #32]
 8022100:	440b      	add	r3, r1
 8022102:	0859      	lsrs	r1, r3, #1
 8022104:	07db      	lsls	r3, r3, #31
 8022106:	5c79      	ldrb	r1, [r7, r1]
 8022108:	bf54      	ite	pl
 802210a:	f001 010f 	andpl.w	r1, r1, #15
 802210e:	1109      	asrmi	r1, r1, #4
 8022110:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8022114:	b2c9      	uxtb	r1, r1
 8022116:	910b      	str	r1, [sp, #44]	@ 0x2c
 8022118:	e7b7      	b.n	802208a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802211a:	bf00      	nop
 802211c:	20013b7c 	.word	0x20013b7c
 8022120:	fffff800 	.word	0xfffff800
 8022124:	2b00      	cmp	r3, #0
 8022126:	d0de      	beq.n	80220e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022128:	4a21      	ldr	r2, [pc, #132]	@ (80221b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802212a:	f8be c000 	ldrh.w	ip, [lr]
 802212e:	6810      	ldr	r0, [r2, #0]
 8022130:	fa1f fa83 	uxth.w	sl, r3
 8022134:	ea4f 212c 	mov.w	r1, ip, asr #8
 8022138:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802213c:	43db      	mvns	r3, r3
 802213e:	b2db      	uxtb	r3, r3
 8022140:	fb12 f20a 	smulbb	r2, r2, sl
 8022144:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8022148:	fb01 2103 	mla	r1, r1, r3, r2
 802214c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8022150:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022154:	b2c0      	uxtb	r0, r0
 8022156:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802215a:	fa5f fc8c 	uxtb.w	ip, ip
 802215e:	fb10 f00a 	smulbb	r0, r0, sl
 8022162:	fb0c 0003 	mla	r0, ip, r3, r0
 8022166:	b289      	uxth	r1, r1
 8022168:	fb1b fb0a 	smulbb	fp, fp, sl
 802216c:	b280      	uxth	r0, r0
 802216e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8022172:	fb02 b203 	mla	r2, r2, r3, fp
 8022176:	1c4b      	adds	r3, r1, #1
 8022178:	f100 0b01 	add.w	fp, r0, #1
 802217c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022180:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8022184:	b292      	uxth	r2, r2
 8022186:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802218a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802218e:	ea4b 0101 	orr.w	r1, fp, r1
 8022192:	f102 0b01 	add.w	fp, r2, #1
 8022196:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802219a:	0952      	lsrs	r2, r2, #5
 802219c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80221a0:	4311      	orrs	r1, r2
 80221a2:	f8ae 1000 	strh.w	r1, [lr]
 80221a6:	e79e      	b.n	80220e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80221a8:	b013      	add	sp, #76	@ 0x4c
 80221aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80221ae:	bf00      	nop
 80221b0:	20013b7c 	.word	0x20013b7c

080221b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80221b4:	b570      	push	{r4, r5, r6, lr}
 80221b6:	1208      	asrs	r0, r1, #8
 80221b8:	b29e      	uxth	r6, r3
 80221ba:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80221be:	1213      	asrs	r3, r2, #8
 80221c0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80221c4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80221c8:	fb13 f305 	smulbb	r3, r3, r5
 80221cc:	fb10 f006 	smulbb	r0, r0, r6
 80221d0:	4418      	add	r0, r3
 80221d2:	10cc      	asrs	r4, r1, #3
 80221d4:	10d3      	asrs	r3, r2, #3
 80221d6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80221da:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80221de:	fb13 f305 	smulbb	r3, r3, r5
 80221e2:	fb14 f406 	smulbb	r4, r4, r6
 80221e6:	00c9      	lsls	r1, r1, #3
 80221e8:	00d2      	lsls	r2, r2, #3
 80221ea:	441c      	add	r4, r3
 80221ec:	b2d2      	uxtb	r2, r2
 80221ee:	b2cb      	uxtb	r3, r1
 80221f0:	fb12 f205 	smulbb	r2, r2, r5
 80221f4:	b280      	uxth	r0, r0
 80221f6:	fb13 f306 	smulbb	r3, r3, r6
 80221fa:	4413      	add	r3, r2
 80221fc:	1c42      	adds	r2, r0, #1
 80221fe:	b29b      	uxth	r3, r3
 8022200:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022204:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8022208:	1c58      	adds	r0, r3, #1
 802220a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802220e:	b2a4      	uxth	r4, r4
 8022210:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022214:	4310      	orrs	r0, r2
 8022216:	1c62      	adds	r2, r4, #1
 8022218:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802221c:	0964      	lsrs	r4, r4, #5
 802221e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8022222:	4320      	orrs	r0, r4
 8022224:	bd70      	pop	{r4, r5, r6, pc}
	...

08022228 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8022228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802222c:	b08f      	sub	sp, #60	@ 0x3c
 802222e:	461c      	mov	r4, r3
 8022230:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8022234:	9004      	str	r0, [sp, #16]
 8022236:	460d      	mov	r5, r1
 8022238:	4616      	mov	r6, r2
 802223a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802223c:	2f00      	cmp	r7, #0
 802223e:	f000 80f6 	beq.w	802242e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8022242:	6820      	ldr	r0, [r4, #0]
 8022244:	6861      	ldr	r1, [r4, #4]
 8022246:	aa0a      	add	r2, sp, #40	@ 0x28
 8022248:	c203      	stmia	r2!, {r0, r1}
 802224a:	6818      	ldr	r0, [r3, #0]
 802224c:	6859      	ldr	r1, [r3, #4]
 802224e:	aa0c      	add	r2, sp, #48	@ 0x30
 8022250:	c203      	stmia	r2!, {r0, r1}
 8022252:	a80a      	add	r0, sp, #40	@ 0x28
 8022254:	f7ee fe00 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022258:	4621      	mov	r1, r4
 802225a:	a80c      	add	r0, sp, #48	@ 0x30
 802225c:	f7ee fe24 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022260:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8022264:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8022268:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802226c:	f002 0301 	and.w	r3, r2, #1
 8022270:	9306      	str	r3, [sp, #24]
 8022272:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8022276:	f003 0101 	and.w	r1, r3, #1
 802227a:	9105      	str	r1, [sp, #20]
 802227c:	9805      	ldr	r0, [sp, #20]
 802227e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8022282:	4403      	add	r3, r0
 8022284:	fb01 2303 	mla	r3, r1, r3, r2
 8022288:	f04f 0802 	mov.w	r8, #2
 802228c:	fb93 f3f8 	sdiv	r3, r3, r8
 8022290:	441d      	add	r5, r3
 8022292:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8022296:	441a      	add	r2, r3
 8022298:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802229c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80222a0:	4419      	add	r1, r3
 80222a2:	4b64      	ldr	r3, [pc, #400]	@ (8022434 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80222a4:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 80222a8:	6818      	ldr	r0, [r3, #0]
 80222aa:	6803      	ldr	r3, [r0, #0]
 80222ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80222ae:	4798      	blx	r3
 80222b0:	4a61      	ldr	r2, [pc, #388]	@ (8022438 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80222b2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80222b6:	8813      	ldrh	r3, [r2, #0]
 80222b8:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 80222bc:	2fff      	cmp	r7, #255	@ 0xff
 80222be:	fb03 a404 	mla	r4, r3, r4, sl
 80222c2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80222c6:	f106 0604 	add.w	r6, r6, #4
 80222ca:	4611      	mov	r1, r2
 80222cc:	fb03 fb0b 	mul.w	fp, r3, fp
 80222d0:	d06b      	beq.n	80223aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80222d2:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 80222d6:	9303      	str	r3, [sp, #12]
 80222d8:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80222dc:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80222e0:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80222e4:	9b07      	ldr	r3, [sp, #28]
 80222e6:	42a3      	cmp	r3, r4
 80222e8:	f240 809c 	bls.w	8022424 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80222ec:	9b06      	ldr	r3, [sp, #24]
 80222ee:	2b00      	cmp	r3, #0
 80222f0:	d039      	beq.n	8022366 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80222f2:	782b      	ldrb	r3, [r5, #0]
 80222f4:	8822      	ldrh	r2, [r4, #0]
 80222f6:	9804      	ldr	r0, [sp, #16]
 80222f8:	f003 030f 	and.w	r3, r3, #15
 80222fc:	f105 0801 	add.w	r8, r5, #1
 8022300:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8022304:	9b03      	ldr	r3, [sp, #12]
 8022306:	9300      	str	r3, [sp, #0]
 8022308:	463b      	mov	r3, r7
 802230a:	f7ff ff53 	bl	80221b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802230e:	f824 0b02 	strh.w	r0, [r4], #2
 8022312:	f109 3bff 	add.w	fp, r9, #4294967295
 8022316:	f1bb 0f01 	cmp.w	fp, #1
 802231a:	46a2      	mov	sl, r4
 802231c:	f104 0404 	add.w	r4, r4, #4
 8022320:	dd24      	ble.n	802236c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8022322:	f898 3000 	ldrb.w	r3, [r8]
 8022326:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802232a:	9804      	ldr	r0, [sp, #16]
 802232c:	091b      	lsrs	r3, r3, #4
 802232e:	f1ab 0b02 	sub.w	fp, fp, #2
 8022332:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8022336:	9b03      	ldr	r3, [sp, #12]
 8022338:	9300      	str	r3, [sp, #0]
 802233a:	463b      	mov	r3, r7
 802233c:	f7ff ff3a 	bl	80221b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8022340:	f824 0c04 	strh.w	r0, [r4, #-4]
 8022344:	f818 3b01 	ldrb.w	r3, [r8], #1
 8022348:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802234c:	9804      	ldr	r0, [sp, #16]
 802234e:	f003 030f 	and.w	r3, r3, #15
 8022352:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8022356:	9b03      	ldr	r3, [sp, #12]
 8022358:	9300      	str	r3, [sp, #0]
 802235a:	463b      	mov	r3, r7
 802235c:	f7ff ff2a 	bl	80221b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8022360:	f824 0c02 	strh.w	r0, [r4, #-2]
 8022364:	e7d7      	b.n	8022316 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8022366:	46a8      	mov	r8, r5
 8022368:	46cb      	mov	fp, r9
 802236a:	e7d4      	b.n	8022316 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802236c:	d10e      	bne.n	802238c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802236e:	f898 3000 	ldrb.w	r3, [r8]
 8022372:	f8ba 2000 	ldrh.w	r2, [sl]
 8022376:	9804      	ldr	r0, [sp, #16]
 8022378:	091b      	lsrs	r3, r3, #4
 802237a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802237e:	9b03      	ldr	r3, [sp, #12]
 8022380:	9300      	str	r3, [sp, #0]
 8022382:	463b      	mov	r3, r7
 8022384:	f7ff ff16 	bl	80221b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8022388:	f82a 0b02 	strh.w	r0, [sl], #2
 802238c:	9b08      	ldr	r3, [sp, #32]
 802238e:	9a05      	ldr	r2, [sp, #20]
 8022390:	881c      	ldrh	r4, [r3, #0]
 8022392:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8022396:	eba4 0409 	sub.w	r4, r4, r9
 802239a:	4413      	add	r3, r2
 802239c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80223a0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80223a2:	fb93 f3f2 	sdiv	r3, r3, r2
 80223a6:	441d      	add	r5, r3
 80223a8:	e79c      	b.n	80222e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80223aa:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80223ae:	45a3      	cmp	fp, r4
 80223b0:	d938      	bls.n	8022424 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80223b2:	9b06      	ldr	r3, [sp, #24]
 80223b4:	b1f3      	cbz	r3, 80223f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80223b6:	782b      	ldrb	r3, [r5, #0]
 80223b8:	f003 030f 	and.w	r3, r3, #15
 80223bc:	1c6a      	adds	r2, r5, #1
 80223be:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80223c2:	8023      	strh	r3, [r4, #0]
 80223c4:	f109 30ff 	add.w	r0, r9, #4294967295
 80223c8:	3402      	adds	r4, #2
 80223ca:	2801      	cmp	r0, #1
 80223cc:	4623      	mov	r3, r4
 80223ce:	f104 0404 	add.w	r4, r4, #4
 80223d2:	dd12      	ble.n	80223fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80223d4:	7813      	ldrb	r3, [r2, #0]
 80223d6:	091b      	lsrs	r3, r3, #4
 80223d8:	3802      	subs	r0, #2
 80223da:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80223de:	f824 3c04 	strh.w	r3, [r4, #-4]
 80223e2:	f812 3b01 	ldrb.w	r3, [r2], #1
 80223e6:	f003 030f 	and.w	r3, r3, #15
 80223ea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80223ee:	f824 3c02 	strh.w	r3, [r4, #-2]
 80223f2:	e7ea      	b.n	80223ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80223f4:	462a      	mov	r2, r5
 80223f6:	4648      	mov	r0, r9
 80223f8:	e7e7      	b.n	80223ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80223fa:	d106      	bne.n	802240a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80223fc:	7812      	ldrb	r2, [r2, #0]
 80223fe:	0912      	lsrs	r2, r2, #4
 8022400:	3302      	adds	r3, #2
 8022402:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8022406:	f823 2c02 	strh.w	r2, [r3, #-2]
 802240a:	880c      	ldrh	r4, [r1, #0]
 802240c:	9a05      	ldr	r2, [sp, #20]
 802240e:	eba4 0409 	sub.w	r4, r4, r9
 8022412:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8022416:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802241a:	4413      	add	r3, r2
 802241c:	fb93 f3f8 	sdiv	r3, r3, r8
 8022420:	441d      	add	r5, r3
 8022422:	e7c4      	b.n	80223ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8022424:	4b03      	ldr	r3, [pc, #12]	@ (8022434 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8022426:	6818      	ldr	r0, [r3, #0]
 8022428:	6803      	ldr	r3, [r0, #0]
 802242a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802242c:	4798      	blx	r3
 802242e:	b00f      	add	sp, #60	@ 0x3c
 8022430:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022434:	20013b6c 	.word	0x20013b6c
 8022438:	20013b64 	.word	0x20013b64

0802243c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 802243c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802243e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8022442:	2dff      	cmp	r5, #255	@ 0xff
 8022444:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8022448:	d10c      	bne.n	8022464 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802244a:	2bff      	cmp	r3, #255	@ 0xff
 802244c:	d10a      	bne.n	8022464 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802244e:	4b25      	ldr	r3, [pc, #148]	@ (80224e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8022450:	0948      	lsrs	r0, r1, #5
 8022452:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022456:	403b      	ands	r3, r7
 8022458:	4318      	orrs	r0, r3
 802245a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802245e:	4308      	orrs	r0, r1
 8022460:	b280      	uxth	r0, r0
 8022462:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8022464:	fb15 f503 	smulbb	r5, r5, r3
 8022468:	b2ab      	uxth	r3, r5
 802246a:	1c5d      	adds	r5, r3, #1
 802246c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8022470:	1214      	asrs	r4, r2, #8
 8022472:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8022476:	fa1f fc85 	uxth.w	ip, r5
 802247a:	10d6      	asrs	r6, r2, #3
 802247c:	00d0      	lsls	r0, r2, #3
 802247e:	43ed      	mvns	r5, r5
 8022480:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8022484:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8022488:	b2eb      	uxtb	r3, r5
 802248a:	b2c0      	uxtb	r0, r0
 802248c:	fb12 f20c 	smulbb	r2, r2, ip
 8022490:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8022494:	fb04 2403 	mla	r4, r4, r3, r2
 8022498:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802249c:	b2c8      	uxtb	r0, r1
 802249e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80224a2:	b2fd      	uxtb	r5, r7
 80224a4:	fb10 f00c 	smulbb	r0, r0, ip
 80224a8:	b2a4      	uxth	r4, r4
 80224aa:	fb02 0003 	mla	r0, r2, r3, r0
 80224ae:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80224b2:	fb15 f50c 	smulbb	r5, r5, ip
 80224b6:	fb06 5503 	mla	r5, r6, r3, r5
 80224ba:	b283      	uxth	r3, r0
 80224bc:	1c60      	adds	r0, r4, #1
 80224be:	b2ad      	uxth	r5, r5
 80224c0:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80224c4:	1c58      	adds	r0, r3, #1
 80224c6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80224ca:	1c6b      	adds	r3, r5, #1
 80224cc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80224d0:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80224d4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80224d8:	096d      	lsrs	r5, r5, #5
 80224da:	4320      	orrs	r0, r4
 80224dc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80224e0:	4328      	orrs	r0, r5
 80224e2:	e7be      	b.n	8022462 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80224e4:	00fff800 	.word	0x00fff800

080224e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80224e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80224ec:	461c      	mov	r4, r3
 80224ee:	b08d      	sub	sp, #52	@ 0x34
 80224f0:	460d      	mov	r5, r1
 80224f2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80224f4:	6861      	ldr	r1, [r4, #4]
 80224f6:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 80224fa:	4680      	mov	r8, r0
 80224fc:	6820      	ldr	r0, [r4, #0]
 80224fe:	4616      	mov	r6, r2
 8022500:	aa08      	add	r2, sp, #32
 8022502:	c203      	stmia	r2!, {r0, r1}
 8022504:	6818      	ldr	r0, [r3, #0]
 8022506:	6859      	ldr	r1, [r3, #4]
 8022508:	aa0a      	add	r2, sp, #40	@ 0x28
 802250a:	c203      	stmia	r2!, {r0, r1}
 802250c:	a808      	add	r0, sp, #32
 802250e:	f7ee fca3 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022512:	4621      	mov	r1, r4
 8022514:	a80a      	add	r0, sp, #40	@ 0x28
 8022516:	f7ee fcc7 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802251a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 802251e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8022522:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8022526:	f002 0301 	and.w	r3, r2, #1
 802252a:	9303      	str	r3, [sp, #12]
 802252c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8022530:	f003 0101 	and.w	r1, r3, #1
 8022534:	9102      	str	r1, [sp, #8]
 8022536:	9802      	ldr	r0, [sp, #8]
 8022538:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 802253c:	4403      	add	r3, r0
 802253e:	fb01 2303 	mla	r3, r1, r3, r2
 8022542:	f04f 0a02 	mov.w	sl, #2
 8022546:	fb93 f3fa 	sdiv	r3, r3, sl
 802254a:	441d      	add	r5, r3
 802254c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8022550:	441a      	add	r2, r3
 8022552:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8022556:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 802255a:	4a3f      	ldr	r2, [pc, #252]	@ (8022658 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802255c:	9205      	str	r2, [sp, #20]
 802255e:	4419      	add	r1, r3
 8022560:	6810      	ldr	r0, [r2, #0]
 8022562:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8022566:	6803      	ldr	r3, [r0, #0]
 8022568:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802256a:	4798      	blx	r3
 802256c:	4b3b      	ldr	r3, [pc, #236]	@ (802265c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802256e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8022572:	8819      	ldrh	r1, [r3, #0]
 8022574:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8022578:	fb01 c404 	mla	r4, r1, r4, ip
 802257c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022580:	434f      	muls	r7, r1
 8022582:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8022586:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802258a:	3604      	adds	r6, #4
 802258c:	9204      	str	r2, [sp, #16]
 802258e:	9b04      	ldr	r3, [sp, #16]
 8022590:	429c      	cmp	r4, r3
 8022592:	d258      	bcs.n	8022646 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8022594:	9b03      	ldr	r3, [sp, #12]
 8022596:	2b00      	cmp	r3, #0
 8022598:	d034      	beq.n	8022604 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802259a:	782b      	ldrb	r3, [r5, #0]
 802259c:	f003 030f 	and.w	r3, r3, #15
 80225a0:	1c6f      	adds	r7, r5, #1
 80225a2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80225a6:	0e0b      	lsrs	r3, r1, #24
 80225a8:	d006      	beq.n	80225b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80225aa:	8822      	ldrh	r2, [r4, #0]
 80225ac:	9300      	str	r3, [sp, #0]
 80225ae:	4640      	mov	r0, r8
 80225b0:	464b      	mov	r3, r9
 80225b2:	f7ff ff43 	bl	802243c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80225b6:	8020      	strh	r0, [r4, #0]
 80225b8:	3402      	adds	r4, #2
 80225ba:	f10b 3aff 	add.w	sl, fp, #4294967295
 80225be:	f1ba 0f01 	cmp.w	sl, #1
 80225c2:	dd22      	ble.n	802260a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80225c4:	783b      	ldrb	r3, [r7, #0]
 80225c6:	091b      	lsrs	r3, r3, #4
 80225c8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80225cc:	0e0b      	lsrs	r3, r1, #24
 80225ce:	d006      	beq.n	80225de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80225d0:	8822      	ldrh	r2, [r4, #0]
 80225d2:	9300      	str	r3, [sp, #0]
 80225d4:	4640      	mov	r0, r8
 80225d6:	464b      	mov	r3, r9
 80225d8:	f7ff ff30 	bl	802243c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80225dc:	8020      	strh	r0, [r4, #0]
 80225de:	f817 3b01 	ldrb.w	r3, [r7], #1
 80225e2:	f003 030f 	and.w	r3, r3, #15
 80225e6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80225ea:	0e0b      	lsrs	r3, r1, #24
 80225ec:	d006      	beq.n	80225fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80225ee:	8862      	ldrh	r2, [r4, #2]
 80225f0:	9300      	str	r3, [sp, #0]
 80225f2:	4640      	mov	r0, r8
 80225f4:	464b      	mov	r3, r9
 80225f6:	f7ff ff21 	bl	802243c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80225fa:	8060      	strh	r0, [r4, #2]
 80225fc:	3404      	adds	r4, #4
 80225fe:	f1aa 0a02 	sub.w	sl, sl, #2
 8022602:	e7dc      	b.n	80225be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8022604:	462f      	mov	r7, r5
 8022606:	46da      	mov	sl, fp
 8022608:	e7d9      	b.n	80225be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802260a:	d10d      	bne.n	8022628 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 802260c:	783b      	ldrb	r3, [r7, #0]
 802260e:	091b      	lsrs	r3, r3, #4
 8022610:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8022614:	0e0b      	lsrs	r3, r1, #24
 8022616:	d006      	beq.n	8022626 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8022618:	8822      	ldrh	r2, [r4, #0]
 802261a:	9300      	str	r3, [sp, #0]
 802261c:	4640      	mov	r0, r8
 802261e:	464b      	mov	r3, r9
 8022620:	f7ff ff0c 	bl	802243c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8022624:	8020      	strh	r0, [r4, #0]
 8022626:	3402      	adds	r4, #2
 8022628:	9b06      	ldr	r3, [sp, #24]
 802262a:	9a02      	ldr	r2, [sp, #8]
 802262c:	881b      	ldrh	r3, [r3, #0]
 802262e:	eba3 030b 	sub.w	r3, r3, fp
 8022632:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8022636:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802263a:	4413      	add	r3, r2
 802263c:	9a07      	ldr	r2, [sp, #28]
 802263e:	fb93 f3f2 	sdiv	r3, r3, r2
 8022642:	441d      	add	r5, r3
 8022644:	e7a3      	b.n	802258e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8022646:	9b05      	ldr	r3, [sp, #20]
 8022648:	6818      	ldr	r0, [r3, #0]
 802264a:	6803      	ldr	r3, [r0, #0]
 802264c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802264e:	4798      	blx	r3
 8022650:	b00d      	add	sp, #52	@ 0x34
 8022652:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022656:	bf00      	nop
 8022658:	20013b6c 	.word	0x20013b6c
 802265c:	20013b64 	.word	0x20013b64

08022660 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8022660:	b570      	push	{r4, r5, r6, lr}
 8022662:	1214      	asrs	r4, r2, #8
 8022664:	788d      	ldrb	r5, [r1, #2]
 8022666:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802266a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802266e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8022672:	fb15 f503 	smulbb	r5, r5, r3
 8022676:	fb04 5506 	mla	r5, r4, r6, r5
 802267a:	10d0      	asrs	r0, r2, #3
 802267c:	784c      	ldrb	r4, [r1, #1]
 802267e:	7809      	ldrb	r1, [r1, #0]
 8022680:	00d2      	lsls	r2, r2, #3
 8022682:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8022686:	b2d2      	uxtb	r2, r2
 8022688:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802268c:	fb14 f403 	smulbb	r4, r4, r3
 8022690:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8022694:	fb11 f303 	smulbb	r3, r1, r3
 8022698:	fb00 4406 	mla	r4, r0, r6, r4
 802269c:	fb02 3306 	mla	r3, r2, r6, r3
 80226a0:	b2ad      	uxth	r5, r5
 80226a2:	b29b      	uxth	r3, r3
 80226a4:	b2a4      	uxth	r4, r4
 80226a6:	1c68      	adds	r0, r5, #1
 80226a8:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80226ac:	1c62      	adds	r2, r4, #1
 80226ae:	1c58      	adds	r0, r3, #1
 80226b0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80226b4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80226b8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80226bc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80226c0:	0964      	lsrs	r4, r4, #5
 80226c2:	4328      	orrs	r0, r5
 80226c4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80226c8:	4320      	orrs	r0, r4
 80226ca:	bd70      	pop	{r4, r5, r6, pc}

080226cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80226cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80226d0:	b08f      	sub	sp, #60	@ 0x3c
 80226d2:	461c      	mov	r4, r3
 80226d4:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80226d8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80226da:	4682      	mov	sl, r0
 80226dc:	460e      	mov	r6, r1
 80226de:	4615      	mov	r5, r2
 80226e0:	2f00      	cmp	r7, #0
 80226e2:	f000 8142 	beq.w	802296a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80226e6:	6820      	ldr	r0, [r4, #0]
 80226e8:	6861      	ldr	r1, [r4, #4]
 80226ea:	aa0a      	add	r2, sp, #40	@ 0x28
 80226ec:	c203      	stmia	r2!, {r0, r1}
 80226ee:	6818      	ldr	r0, [r3, #0]
 80226f0:	6859      	ldr	r1, [r3, #4]
 80226f2:	aa0c      	add	r2, sp, #48	@ 0x30
 80226f4:	c203      	stmia	r2!, {r0, r1}
 80226f6:	a80a      	add	r0, sp, #40	@ 0x28
 80226f8:	f7ee fbae 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80226fc:	4621      	mov	r1, r4
 80226fe:	a80c      	add	r0, sp, #48	@ 0x30
 8022700:	f7ee fbd2 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022704:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8022708:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802270c:	f002 0301 	and.w	r3, r2, #1
 8022710:	9306      	str	r3, [sp, #24]
 8022712:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8022716:	f003 0101 	and.w	r1, r3, #1
 802271a:	9105      	str	r1, [sp, #20]
 802271c:	9805      	ldr	r0, [sp, #20]
 802271e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8022722:	4403      	add	r3, r0
 8022724:	fb01 2303 	mla	r3, r1, r3, r2
 8022728:	f04f 0802 	mov.w	r8, #2
 802272c:	fb93 f3f8 	sdiv	r3, r3, r8
 8022730:	441e      	add	r6, r3
 8022732:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8022736:	441a      	add	r2, r3
 8022738:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802273c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8022740:	4419      	add	r1, r3
 8022742:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8022746:	9303      	str	r3, [sp, #12]
 8022748:	4b89      	ldr	r3, [pc, #548]	@ (8022970 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802274a:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802274e:	6818      	ldr	r0, [r3, #0]
 8022750:	6803      	ldr	r3, [r0, #0]
 8022752:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022754:	4798      	blx	r3
 8022756:	4a87      	ldr	r2, [pc, #540]	@ (8022974 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8022758:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802275c:	8813      	ldrh	r3, [r2, #0]
 802275e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8022762:	2fff      	cmp	r7, #255	@ 0xff
 8022764:	fb03 9404 	mla	r4, r3, r4, r9
 8022768:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802276c:	f105 0504 	add.w	r5, r5, #4
 8022770:	4694      	mov	ip, r2
 8022772:	fb03 f30b 	mul.w	r3, r3, fp
 8022776:	d071      	beq.n	802285c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8022778:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802277c:	43f9      	mvns	r1, r7
 802277e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8022782:	b2c9      	uxtb	r1, r1
 8022784:	9104      	str	r1, [sp, #16]
 8022786:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802278a:	9b07      	ldr	r3, [sp, #28]
 802278c:	42a3      	cmp	r3, r4
 802278e:	f240 80e7 	bls.w	8022960 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8022792:	9b06      	ldr	r3, [sp, #24]
 8022794:	2b00      	cmp	r3, #0
 8022796:	d03d      	beq.n	8022814 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8022798:	7831      	ldrb	r1, [r6, #0]
 802279a:	9b04      	ldr	r3, [sp, #16]
 802279c:	8822      	ldrh	r2, [r4, #0]
 802279e:	9300      	str	r3, [sp, #0]
 80227a0:	f001 010f 	and.w	r1, r1, #15
 80227a4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80227a8:	463b      	mov	r3, r7
 80227aa:	4429      	add	r1, r5
 80227ac:	4650      	mov	r0, sl
 80227ae:	f7ff ff57 	bl	8022660 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80227b2:	9b03      	ldr	r3, [sp, #12]
 80227b4:	f824 0b02 	strh.w	r0, [r4], #2
 80227b8:	f106 0801 	add.w	r8, r6, #1
 80227bc:	f103 3bff 	add.w	fp, r3, #4294967295
 80227c0:	f1bb 0f01 	cmp.w	fp, #1
 80227c4:	46a1      	mov	r9, r4
 80227c6:	f104 0404 	add.w	r4, r4, #4
 80227ca:	dd27      	ble.n	802281c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80227cc:	f898 1000 	ldrb.w	r1, [r8]
 80227d0:	9b04      	ldr	r3, [sp, #16]
 80227d2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80227d6:	9300      	str	r3, [sp, #0]
 80227d8:	0909      	lsrs	r1, r1, #4
 80227da:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80227de:	463b      	mov	r3, r7
 80227e0:	4429      	add	r1, r5
 80227e2:	4650      	mov	r0, sl
 80227e4:	f7ff ff3c 	bl	8022660 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80227e8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80227ec:	f818 1b01 	ldrb.w	r1, [r8], #1
 80227f0:	9b04      	ldr	r3, [sp, #16]
 80227f2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80227f6:	9300      	str	r3, [sp, #0]
 80227f8:	f001 010f 	and.w	r1, r1, #15
 80227fc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022800:	463b      	mov	r3, r7
 8022802:	4429      	add	r1, r5
 8022804:	4650      	mov	r0, sl
 8022806:	f7ff ff2b 	bl	8022660 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802280a:	f1ab 0b02 	sub.w	fp, fp, #2
 802280e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8022812:	e7d5      	b.n	80227c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8022814:	46b0      	mov	r8, r6
 8022816:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802281a:	e7d1      	b.n	80227c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802281c:	d10f      	bne.n	802283e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 802281e:	f898 1000 	ldrb.w	r1, [r8]
 8022822:	9b04      	ldr	r3, [sp, #16]
 8022824:	f8b9 2000 	ldrh.w	r2, [r9]
 8022828:	9300      	str	r3, [sp, #0]
 802282a:	0909      	lsrs	r1, r1, #4
 802282c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022830:	463b      	mov	r3, r7
 8022832:	4429      	add	r1, r5
 8022834:	4650      	mov	r0, sl
 8022836:	f7ff ff13 	bl	8022660 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802283a:	f829 0b02 	strh.w	r0, [r9], #2
 802283e:	9b08      	ldr	r3, [sp, #32]
 8022840:	9a05      	ldr	r2, [sp, #20]
 8022842:	881c      	ldrh	r4, [r3, #0]
 8022844:	9b03      	ldr	r3, [sp, #12]
 8022846:	1ae4      	subs	r4, r4, r3
 8022848:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802284c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022850:	4413      	add	r3, r2
 8022852:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022854:	fb93 f3f2 	sdiv	r3, r3, r2
 8022858:	441e      	add	r6, r3
 802285a:	e796      	b.n	802278a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 802285c:	4f46      	ldr	r7, [pc, #280]	@ (8022978 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802285e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022862:	42a3      	cmp	r3, r4
 8022864:	d97c      	bls.n	8022960 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8022866:	9a06      	ldr	r2, [sp, #24]
 8022868:	2a00      	cmp	r2, #0
 802286a:	d054      	beq.n	8022916 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 802286c:	7830      	ldrb	r0, [r6, #0]
 802286e:	f000 000f 	and.w	r0, r0, #15
 8022872:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022876:	eb05 0e00 	add.w	lr, r5, r0
 802287a:	5c28      	ldrb	r0, [r5, r0]
 802287c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8022880:	f89e e001 	ldrb.w	lr, [lr, #1]
 8022884:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022888:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802288c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8022890:	ea42 020e 	orr.w	r2, r2, lr
 8022894:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8022898:	f824 2b02 	strh.w	r2, [r4], #2
 802289c:	9a03      	ldr	r2, [sp, #12]
 802289e:	1c71      	adds	r1, r6, #1
 80228a0:	f102 3eff 	add.w	lr, r2, #4294967295
 80228a4:	f1be 0f01 	cmp.w	lr, #1
 80228a8:	4620      	mov	r0, r4
 80228aa:	f104 0404 	add.w	r4, r4, #4
 80228ae:	dd36      	ble.n	802291e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80228b0:	7808      	ldrb	r0, [r1, #0]
 80228b2:	0900      	lsrs	r0, r0, #4
 80228b4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80228b8:	eb05 0a00 	add.w	sl, r5, r0
 80228bc:	f1ae 0e02 	sub.w	lr, lr, #2
 80228c0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80228c4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80228c8:	00d2      	lsls	r2, r2, #3
 80228ca:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80228ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80228d2:	ea49 0202 	orr.w	r2, r9, r2
 80228d6:	f815 9000 	ldrb.w	r9, [r5, r0]
 80228da:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80228de:	f824 2c04 	strh.w	r2, [r4, #-4]
 80228e2:	f811 0b01 	ldrb.w	r0, [r1], #1
 80228e6:	f000 000f 	and.w	r0, r0, #15
 80228ea:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80228ee:	eb05 0a00 	add.w	sl, r5, r0
 80228f2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80228f6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80228fa:	00d2      	lsls	r2, r2, #3
 80228fc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8022900:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022904:	ea49 0202 	orr.w	r2, r9, r2
 8022908:	f815 9000 	ldrb.w	r9, [r5, r0]
 802290c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8022910:	f824 2c02 	strh.w	r2, [r4, #-2]
 8022914:	e7c6      	b.n	80228a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8022916:	4631      	mov	r1, r6
 8022918:	f8dd e00c 	ldr.w	lr, [sp, #12]
 802291c:	e7c2      	b.n	80228a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802291e:	d111      	bne.n	8022944 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8022920:	7809      	ldrb	r1, [r1, #0]
 8022922:	0909      	lsrs	r1, r1, #4
 8022924:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8022928:	186c      	adds	r4, r5, r1
 802292a:	5c69      	ldrb	r1, [r5, r1]
 802292c:	78a2      	ldrb	r2, [r4, #2]
 802292e:	7864      	ldrb	r4, [r4, #1]
 8022930:	00e4      	lsls	r4, r4, #3
 8022932:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8022936:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802293a:	4322      	orrs	r2, r4
 802293c:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8022940:	f820 2b02 	strh.w	r2, [r0], #2
 8022944:	9a03      	ldr	r2, [sp, #12]
 8022946:	f8bc 4000 	ldrh.w	r4, [ip]
 802294a:	9905      	ldr	r1, [sp, #20]
 802294c:	1aa4      	subs	r4, r4, r2
 802294e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8022952:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8022956:	440a      	add	r2, r1
 8022958:	fb92 f2f8 	sdiv	r2, r2, r8
 802295c:	4416      	add	r6, r2
 802295e:	e780      	b.n	8022862 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8022960:	4b03      	ldr	r3, [pc, #12]	@ (8022970 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8022962:	6818      	ldr	r0, [r3, #0]
 8022964:	6803      	ldr	r3, [r0, #0]
 8022966:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022968:	4798      	blx	r3
 802296a:	b00f      	add	sp, #60	@ 0x3c
 802296c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022970:	20013b6c 	.word	0x20013b6c
 8022974:	20013b64 	.word	0x20013b64
 8022978:	fffff800 	.word	0xfffff800

0802297c <CRC_Lock>:
 802297c:	b530      	push	{r4, r5, lr}
 802297e:	4a2d      	ldr	r2, [pc, #180]	@ (8022a34 <CRC_Lock+0xb8>)
 8022980:	6813      	ldr	r3, [r2, #0]
 8022982:	f023 0301 	bic.w	r3, r3, #1
 8022986:	6013      	str	r3, [r2, #0]
 8022988:	4b2b      	ldr	r3, [pc, #172]	@ (8022a38 <CRC_Lock+0xbc>)
 802298a:	681c      	ldr	r4, [r3, #0]
 802298c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8022990:	4014      	ands	r4, r2
 8022992:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8022996:	42ac      	cmp	r4, r5
 8022998:	d005      	beq.n	80229a6 <CRC_Lock+0x2a>
 802299a:	681c      	ldr	r4, [r3, #0]
 802299c:	f24c 2570 	movw	r5, #49776	@ 0xc270
 80229a0:	4014      	ands	r4, r2
 80229a2:	42ac      	cmp	r4, r5
 80229a4:	d125      	bne.n	80229f2 <CRC_Lock+0x76>
 80229a6:	4b25      	ldr	r3, [pc, #148]	@ (8022a3c <CRC_Lock+0xc0>)
 80229a8:	681b      	ldr	r3, [r3, #0]
 80229aa:	2b00      	cmp	r3, #0
 80229ac:	d139      	bne.n	8022a22 <CRC_Lock+0xa6>
 80229ae:	4b24      	ldr	r3, [pc, #144]	@ (8022a40 <CRC_Lock+0xc4>)
 80229b0:	681a      	ldr	r2, [r3, #0]
 80229b2:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80229b6:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 80229ba:	d00d      	beq.n	80229d8 <CRC_Lock+0x5c>
 80229bc:	681a      	ldr	r2, [r3, #0]
 80229be:	f240 4483 	movw	r4, #1155	@ 0x483
 80229c2:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80229c6:	42a2      	cmp	r2, r4
 80229c8:	d006      	beq.n	80229d8 <CRC_Lock+0x5c>
 80229ca:	681b      	ldr	r3, [r3, #0]
 80229cc:	f240 4285 	movw	r2, #1157	@ 0x485
 80229d0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80229d4:	4293      	cmp	r3, r2
 80229d6:	d124      	bne.n	8022a22 <CRC_Lock+0xa6>
 80229d8:	4b1a      	ldr	r3, [pc, #104]	@ (8022a44 <CRC_Lock+0xc8>)
 80229da:	2201      	movs	r2, #1
 80229dc:	601a      	str	r2, [r3, #0]
 80229de:	681a      	ldr	r2, [r3, #0]
 80229e0:	2a00      	cmp	r2, #0
 80229e2:	d1fc      	bne.n	80229de <CRC_Lock+0x62>
 80229e4:	4b18      	ldr	r3, [pc, #96]	@ (8022a48 <CRC_Lock+0xcc>)
 80229e6:	6018      	str	r0, [r3, #0]
 80229e8:	6818      	ldr	r0, [r3, #0]
 80229ea:	1a43      	subs	r3, r0, r1
 80229ec:	4258      	negs	r0, r3
 80229ee:	4158      	adcs	r0, r3
 80229f0:	e00e      	b.n	8022a10 <CRC_Lock+0x94>
 80229f2:	681b      	ldr	r3, [r3, #0]
 80229f4:	4013      	ands	r3, r2
 80229f6:	f24d 2220 	movw	r2, #53792	@ 0xd220
 80229fa:	4293      	cmp	r3, r2
 80229fc:	d111      	bne.n	8022a22 <CRC_Lock+0xa6>
 80229fe:	4b13      	ldr	r3, [pc, #76]	@ (8022a4c <CRC_Lock+0xd0>)
 8022a00:	681b      	ldr	r3, [r3, #0]
 8022a02:	f240 4286 	movw	r2, #1158	@ 0x486
 8022a06:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8022a0a:	4293      	cmp	r3, r2
 8022a0c:	d001      	beq.n	8022a12 <CRC_Lock+0x96>
 8022a0e:	2000      	movs	r0, #0
 8022a10:	bd30      	pop	{r4, r5, pc}
 8022a12:	4b0f      	ldr	r3, [pc, #60]	@ (8022a50 <CRC_Lock+0xd4>)
 8022a14:	2201      	movs	r2, #1
 8022a16:	601a      	str	r2, [r3, #0]
 8022a18:	681a      	ldr	r2, [r3, #0]
 8022a1a:	2a00      	cmp	r2, #0
 8022a1c:	d1fc      	bne.n	8022a18 <CRC_Lock+0x9c>
 8022a1e:	4b0d      	ldr	r3, [pc, #52]	@ (8022a54 <CRC_Lock+0xd8>)
 8022a20:	e7e1      	b.n	80229e6 <CRC_Lock+0x6a>
 8022a22:	4b0d      	ldr	r3, [pc, #52]	@ (8022a58 <CRC_Lock+0xdc>)
 8022a24:	2201      	movs	r2, #1
 8022a26:	601a      	str	r2, [r3, #0]
 8022a28:	681a      	ldr	r2, [r3, #0]
 8022a2a:	2a00      	cmp	r2, #0
 8022a2c:	d1fc      	bne.n	8022a28 <CRC_Lock+0xac>
 8022a2e:	4b0b      	ldr	r3, [pc, #44]	@ (8022a5c <CRC_Lock+0xe0>)
 8022a30:	e7d9      	b.n	80229e6 <CRC_Lock+0x6a>
 8022a32:	bf00      	nop
 8022a34:	e0002000 	.word	0xe0002000
 8022a38:	e000ed00 	.word	0xe000ed00
 8022a3c:	e0042000 	.word	0xe0042000
 8022a40:	5c001000 	.word	0x5c001000
 8022a44:	58024c08 	.word	0x58024c08
 8022a48:	58024c00 	.word	0x58024c00
 8022a4c:	46008ff0 	.word	0x46008ff0
 8022a50:	46024c08 	.word	0x46024c08
 8022a54:	46024c00 	.word	0x46024c00
 8022a58:	40023008 	.word	0x40023008
 8022a5c:	40023000 	.word	0x40023000

08022a60 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8022a60:	6101      	str	r1, [r0, #16]
 8022a62:	4770      	bx	lr

08022a64 <_ZN8touchgfx8Gestures4tickEv>:
 8022a64:	7b83      	ldrb	r3, [r0, #14]
 8022a66:	b14b      	cbz	r3, 8022a7c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8022a68:	8903      	ldrh	r3, [r0, #8]
 8022a6a:	3301      	adds	r3, #1
 8022a6c:	b29b      	uxth	r3, r3
 8022a6e:	2b07      	cmp	r3, #7
 8022a70:	8103      	strh	r3, [r0, #8]
 8022a72:	bf81      	itttt	hi
 8022a74:	2300      	movhi	r3, #0
 8022a76:	8143      	strhhi	r3, [r0, #10]
 8022a78:	8183      	strhhi	r3, [r0, #12]
 8022a7a:	7383      	strbhi	r3, [r0, #14]
 8022a7c:	4770      	bx	lr
	...

08022a80 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8022a80:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8022a84:	4698      	mov	r8, r3
 8022a86:	8883      	ldrh	r3, [r0, #4]
 8022a88:	f8ad 3006 	strh.w	r3, [sp, #6]
 8022a8c:	eba8 0303 	sub.w	r3, r8, r3
 8022a90:	b21b      	sxth	r3, r3
 8022a92:	4604      	mov	r4, r0
 8022a94:	2b00      	cmp	r3, #0
 8022a96:	4617      	mov	r7, r2
 8022a98:	4a18      	ldr	r2, [pc, #96]	@ (8022afc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8022a9a:	9200      	str	r2, [sp, #0]
 8022a9c:	bfb8      	it	lt
 8022a9e:	425b      	neglt	r3, r3
 8022aa0:	8aa2      	ldrh	r2, [r4, #20]
 8022aa2:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8022aa6:	f8ad 800a 	strh.w	r8, [sp, #10]
 8022aaa:	b21b      	sxth	r3, r3
 8022aac:	460e      	mov	r6, r1
 8022aae:	4293      	cmp	r3, r2
 8022ab0:	88c1      	ldrh	r1, [r0, #6]
 8022ab2:	f8ad 1008 	strh.w	r1, [sp, #8]
 8022ab6:	f04f 0000 	mov.w	r0, #0
 8022aba:	f88d 0004 	strb.w	r0, [sp, #4]
 8022abe:	f8ad 500c 	strh.w	r5, [sp, #12]
 8022ac2:	dc07      	bgt.n	8022ad4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8022ac4:	1a69      	subs	r1, r5, r1
 8022ac6:	b209      	sxth	r1, r1
 8022ac8:	2900      	cmp	r1, #0
 8022aca:	bfb8      	it	lt
 8022acc:	4249      	neglt	r1, r1
 8022ace:	b209      	sxth	r1, r1
 8022ad0:	428a      	cmp	r2, r1
 8022ad2:	da10      	bge.n	8022af6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8022ad4:	6920      	ldr	r0, [r4, #16]
 8022ad6:	6803      	ldr	r3, [r0, #0]
 8022ad8:	4669      	mov	r1, sp
 8022ada:	685b      	ldr	r3, [r3, #4]
 8022adc:	4798      	blx	r3
 8022ade:	eba8 0606 	sub.w	r6, r8, r6
 8022ae2:	2300      	movs	r3, #0
 8022ae4:	1bef      	subs	r7, r5, r7
 8022ae6:	2001      	movs	r0, #1
 8022ae8:	8123      	strh	r3, [r4, #8]
 8022aea:	8166      	strh	r6, [r4, #10]
 8022aec:	81a7      	strh	r7, [r4, #12]
 8022aee:	f8a4 8004 	strh.w	r8, [r4, #4]
 8022af2:	80e5      	strh	r5, [r4, #6]
 8022af4:	73a0      	strb	r0, [r4, #14]
 8022af6:	b004      	add	sp, #16
 8022af8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022afc:	08027708 	.word	0x08027708

08022b00 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8022b00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022b02:	461e      	mov	r6, r3
 8022b04:	1e4b      	subs	r3, r1, #1
 8022b06:	2b01      	cmp	r3, #1
 8022b08:	b085      	sub	sp, #20
 8022b0a:	4604      	mov	r4, r0
 8022b0c:	460d      	mov	r5, r1
 8022b0e:	4617      	mov	r7, r2
 8022b10:	d84b      	bhi.n	8022baa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8022b12:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8022b16:	1cd3      	adds	r3, r2, #3
 8022b18:	b29b      	uxth	r3, r3
 8022b1a:	2b06      	cmp	r3, #6
 8022b1c:	d916      	bls.n	8022b4c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8022b1e:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8022bc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8022b22:	f8cd c004 	str.w	ip, [sp, #4]
 8022b26:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8022b2a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8022b2e:	6900      	ldr	r0, [r0, #16]
 8022b30:	f8ad 100c 	strh.w	r1, [sp, #12]
 8022b34:	f04f 0c00 	mov.w	ip, #0
 8022b38:	f88d c008 	strb.w	ip, [sp, #8]
 8022b3c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8022b40:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022b44:	6803      	ldr	r3, [r0, #0]
 8022b46:	a901      	add	r1, sp, #4
 8022b48:	689b      	ldr	r3, [r3, #8]
 8022b4a:	4798      	blx	r3
 8022b4c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8022b50:	1cd3      	adds	r3, r2, #3
 8022b52:	b29b      	uxth	r3, r3
 8022b54:	2b06      	cmp	r3, #6
 8022b56:	d916      	bls.n	8022b86 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022b58:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8022bc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8022b5c:	f8cd c004 	str.w	ip, [sp, #4]
 8022b60:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8022b64:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8022b68:	6920      	ldr	r0, [r4, #16]
 8022b6a:	f8ad 100c 	strh.w	r1, [sp, #12]
 8022b6e:	f04f 0c01 	mov.w	ip, #1
 8022b72:	f88d c008 	strb.w	ip, [sp, #8]
 8022b76:	f8ad 200a 	strh.w	r2, [sp, #10]
 8022b7a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022b7e:	6803      	ldr	r3, [r0, #0]
 8022b80:	a901      	add	r1, sp, #4
 8022b82:	689b      	ldr	r3, [r3, #8]
 8022b84:	4798      	blx	r3
 8022b86:	4b0d      	ldr	r3, [pc, #52]	@ (8022bbc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8022b88:	9301      	str	r3, [sp, #4]
 8022b8a:	6920      	ldr	r0, [r4, #16]
 8022b8c:	f88d 5008 	strb.w	r5, [sp, #8]
 8022b90:	2300      	movs	r3, #0
 8022b92:	f8ad 700a 	strh.w	r7, [sp, #10]
 8022b96:	f8ad 600c 	strh.w	r6, [sp, #12]
 8022b9a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022b9e:	6803      	ldr	r3, [r0, #0]
 8022ba0:	a901      	add	r1, sp, #4
 8022ba2:	681b      	ldr	r3, [r3, #0]
 8022ba4:	4798      	blx	r3
 8022ba6:	b005      	add	sp, #20
 8022ba8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8022baa:	2900      	cmp	r1, #0
 8022bac:	d1eb      	bne.n	8022b86 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022bae:	80a2      	strh	r2, [r4, #4]
 8022bb0:	80c6      	strh	r6, [r0, #6]
 8022bb2:	60a1      	str	r1, [r4, #8]
 8022bb4:	81a1      	strh	r1, [r4, #12]
 8022bb6:	73a1      	strb	r1, [r4, #14]
 8022bb8:	e7e5      	b.n	8022b86 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022bba:	bf00      	nop
 8022bbc:	080276f4 	.word	0x080276f4
 8022bc0:	0802771c 	.word	0x0802771c

08022bc4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8022bc4:	10c9      	asrs	r1, r1, #3
 8022bc6:	2900      	cmp	r1, #0
 8022bc8:	bfb8      	it	lt
 8022bca:	4249      	neglt	r1, r1
 8022bcc:	2801      	cmp	r0, #1
 8022bce:	d108      	bne.n	8022be2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8022bd0:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8022bd4:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8022bd8:	4601      	mov	r1, r0
 8022bda:	dd02      	ble.n	8022be2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8022bdc:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 8022be0:	4770      	bx	lr
 8022be2:	29ff      	cmp	r1, #255	@ 0xff
 8022be4:	bfa8      	it	ge
 8022be6:	21ff      	movge	r1, #255	@ 0xff
 8022be8:	4608      	mov	r0, r1
 8022bea:	4770      	bx	lr

08022bec <_ZN8touchgfx10Rasterizer6lineToEii>:
 8022bec:	b410      	push	{r4}
 8022bee:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8022bf2:	429c      	cmp	r4, r3
 8022bf4:	d803      	bhi.n	8022bfe <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8022bf6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022bfa:	f7ec bc33 	b.w	800f464 <_ZN8touchgfx7Outline6lineToEii>
 8022bfe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022c02:	4770      	bx	lr

08022c04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8022c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c08:	b08b      	sub	sp, #44	@ 0x2c
 8022c0a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8022c0e:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8022c12:	9308      	str	r3, [sp, #32]
 8022c14:	4606      	mov	r6, r0
 8022c16:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8022c1a:	9309      	str	r3, [sp, #36]	@ 0x24
 8022c1c:	468a      	mov	sl, r1
 8022c1e:	f7ec fd8e 	bl	800f73e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8022c22:	68b5      	ldr	r5, [r6, #8]
 8022c24:	4604      	mov	r4, r0
 8022c26:	2d00      	cmp	r5, #0
 8022c28:	d044      	beq.n	8022cb4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8022c2a:	6873      	ldr	r3, [r6, #4]
 8022c2c:	42ab      	cmp	r3, r5
 8022c2e:	d33d      	bcc.n	8022cac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8022c30:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8022c34:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8022c38:	eb02 0b03 	add.w	fp, r2, r3
 8022c3c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8022c40:	fb02 1203 	mla	r2, r2, r3, r1
 8022c44:	9205      	str	r2, [sp, #20]
 8022c46:	1e6a      	subs	r2, r5, #1
 8022c48:	9204      	str	r2, [sp, #16]
 8022c4a:	f04f 0800 	mov.w	r8, #0
 8022c4e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8022c52:	f9b4 7000 	ldrsh.w	r7, [r4]
 8022c56:	454b      	cmp	r3, r9
 8022c58:	463a      	mov	r2, r7
 8022c5a:	d008      	beq.n	8022c6e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8022c5c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 8022c60:	eb03 0b09 	add.w	fp, r3, r9
 8022c64:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8022c68:	fb03 1309 	mla	r3, r3, r9, r1
 8022c6c:	9305      	str	r3, [sp, #20]
 8022c6e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8022c72:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8022c76:	4498      	add	r8, r3
 8022c78:	9b04      	ldr	r3, [sp, #16]
 8022c7a:	3b01      	subs	r3, #1
 8022c7c:	9304      	str	r3, [sp, #16]
 8022c7e:	9b04      	ldr	r3, [sp, #16]
 8022c80:	3301      	adds	r3, #1
 8022c82:	d015      	beq.n	8022cb0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8022c84:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8022c88:	42bb      	cmp	r3, r7
 8022c8a:	d117      	bne.n	8022cbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8022c8c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8022c90:	9b04      	ldr	r3, [sp, #16]
 8022c92:	4548      	cmp	r0, r9
 8022c94:	f103 33ff 	add.w	r3, r3, #4294967295
 8022c98:	d17f      	bne.n	8022d9a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8022c9a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8022c9e:	4401      	add	r1, r0
 8022ca0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8022ca4:	4480      	add	r8, r0
 8022ca6:	e7e9      	b.n	8022c7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8022ca8:	461f      	mov	r7, r3
 8022caa:	e044      	b.n	8022d36 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8022cac:	2000      	movs	r0, #0
 8022cae:	e002      	b.n	8022cb6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8022cb0:	2900      	cmp	r1, #0
 8022cb2:	d16f      	bne.n	8022d94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8022cb4:	2001      	movs	r0, #1
 8022cb6:	b00b      	add	sp, #44	@ 0x2c
 8022cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022cbc:	2900      	cmp	r1, #0
 8022cbe:	d030      	beq.n	8022d22 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8022cc0:	2f00      	cmp	r7, #0
 8022cc2:	db29      	blt.n	8022d18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8022cc4:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8022cc8:	42bb      	cmp	r3, r7
 8022cca:	dd25      	ble.n	8022d18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8022ccc:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8022cd0:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8022cd4:	f7ff ff76 	bl	8022bc4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8022cd8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022cda:	fb10 f003 	smulbb	r0, r0, r3
 8022cde:	b280      	uxth	r0, r0
 8022ce0:	1c41      	adds	r1, r0, #1
 8022ce2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022ce6:	1209      	asrs	r1, r1, #8
 8022ce8:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8022cec:	d014      	beq.n	8022d18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8022cee:	9808      	ldr	r0, [sp, #32]
 8022cf0:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8022cf2:	b2c9      	uxtb	r1, r1
 8022cf4:	b2ba      	uxth	r2, r7
 8022cf6:	9102      	str	r1, [sp, #8]
 8022cf8:	2101      	movs	r1, #1
 8022cfa:	4413      	add	r3, r2
 8022cfc:	9101      	str	r1, [sp, #4]
 8022cfe:	4402      	add	r2, r0
 8022d00:	fa0f f18b 	sxth.w	r1, fp
 8022d04:	f8da 0000 	ldr.w	r0, [sl]
 8022d08:	9100      	str	r1, [sp, #0]
 8022d0a:	6941      	ldr	r1, [r0, #20]
 8022d0c:	b21b      	sxth	r3, r3
 8022d0e:	460d      	mov	r5, r1
 8022d10:	b212      	sxth	r2, r2
 8022d12:	9905      	ldr	r1, [sp, #20]
 8022d14:	4650      	mov	r0, sl
 8022d16:	47a8      	blx	r5
 8022d18:	9b04      	ldr	r3, [sp, #16]
 8022d1a:	3301      	adds	r3, #1
 8022d1c:	f107 0201 	add.w	r2, r7, #1
 8022d20:	d0c8      	beq.n	8022cb4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8022d22:	f9b4 7000 	ldrsh.w	r7, [r4]
 8022d26:	1abb      	subs	r3, r7, r2
 8022d28:	2b00      	cmp	r3, #0
 8022d2a:	dd31      	ble.n	8022d90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8022d2c:	2a00      	cmp	r2, #0
 8022d2e:	dabb      	bge.n	8022ca8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8022d30:	2f00      	cmp	r7, #0
 8022d32:	dd2d      	ble.n	8022d90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8022d34:	2200      	movs	r2, #0
 8022d36:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8022d3a:	19d1      	adds	r1, r2, r7
 8022d3c:	4299      	cmp	r1, r3
 8022d3e:	db02      	blt.n	8022d46 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8022d40:	1a9f      	subs	r7, r3, r2
 8022d42:	2f00      	cmp	r7, #0
 8022d44:	dd24      	ble.n	8022d90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8022d46:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8022d4a:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8022d4e:	f7ff ff39 	bl	8022bc4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8022d52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022d54:	fb10 f003 	smulbb	r0, r0, r3
 8022d58:	b280      	uxth	r0, r0
 8022d5a:	1c41      	adds	r1, r0, #1
 8022d5c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022d60:	1209      	asrs	r1, r1, #8
 8022d62:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8022d66:	d013      	beq.n	8022d90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8022d68:	9808      	ldr	r0, [sp, #32]
 8022d6a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8022d6c:	b292      	uxth	r2, r2
 8022d6e:	b2c9      	uxtb	r1, r1
 8022d70:	4413      	add	r3, r2
 8022d72:	9102      	str	r1, [sp, #8]
 8022d74:	4402      	add	r2, r0
 8022d76:	b23f      	sxth	r7, r7
 8022d78:	f8da 0000 	ldr.w	r0, [sl]
 8022d7c:	9701      	str	r7, [sp, #4]
 8022d7e:	fa0f f18b 	sxth.w	r1, fp
 8022d82:	9100      	str	r1, [sp, #0]
 8022d84:	6947      	ldr	r7, [r0, #20]
 8022d86:	9905      	ldr	r1, [sp, #20]
 8022d88:	b21b      	sxth	r3, r3
 8022d8a:	b212      	sxth	r2, r2
 8022d8c:	4650      	mov	r0, sl
 8022d8e:	47b8      	blx	r7
 8022d90:	464b      	mov	r3, r9
 8022d92:	e75c      	b.n	8022c4e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8022d94:	2f00      	cmp	r7, #0
 8022d96:	da95      	bge.n	8022cc4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8022d98:	e78c      	b.n	8022cb4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8022d9a:	2900      	cmp	r1, #0
 8022d9c:	d0f8      	beq.n	8022d90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8022d9e:	e78f      	b.n	8022cc0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08022da0 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8022da0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8022da4:	461e      	mov	r6, r3
 8022da6:	4b36      	ldr	r3, [pc, #216]	@ (8022e80 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 8022da8:	e9c0 3100 	strd	r3, r1, [r0]
 8022dac:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8022db0:	8103      	strh	r3, [r0, #8]
 8022db2:	2500      	movs	r5, #0
 8022db4:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8022db8:	7283      	strb	r3, [r0, #10]
 8022dba:	f100 0814 	add.w	r8, r0, #20
 8022dbe:	4604      	mov	r4, r0
 8022dc0:	8185      	strh	r5, [r0, #12]
 8022dc2:	81c5      	strh	r5, [r0, #14]
 8022dc4:	8205      	strh	r5, [r0, #16]
 8022dc6:	8245      	strh	r5, [r0, #18]
 8022dc8:	4640      	mov	r0, r8
 8022dca:	4617      	mov	r7, r2
 8022dcc:	f7eb fe82 	bl	800ead4 <_ZN8touchgfx7OutlineC1Ev>
 8022dd0:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8022dd4:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 8022dd8:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 8022ddc:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8022de0:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8022de4:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 8022de8:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 8022dec:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 8022df0:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 8022df4:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 8022df8:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8022dfc:	6830      	ldr	r0, [r6, #0]
 8022dfe:	6871      	ldr	r1, [r6, #4]
 8022e00:	8872      	ldrh	r2, [r6, #2]
 8022e02:	8835      	ldrh	r5, [r6, #0]
 8022e04:	466b      	mov	r3, sp
 8022e06:	c303      	stmia	r3!, {r0, r1}
 8022e08:	887b      	ldrh	r3, [r7, #2]
 8022e0a:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 8022e0e:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 8022e12:	4413      	add	r3, r2
 8022e14:	883a      	ldrh	r2, [r7, #0]
 8022e16:	81e3      	strh	r3, [r4, #14]
 8022e18:	442a      	add	r2, r5
 8022e1a:	81a2      	strh	r2, [r4, #12]
 8022e1c:	8220      	strh	r0, [r4, #16]
 8022e1e:	8261      	strh	r1, [r4, #18]
 8022e20:	4668      	mov	r0, sp
 8022e22:	4639      	mov	r1, r7
 8022e24:	f7ee f840 	bl	8010ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022e28:	f104 000c 	add.w	r0, r4, #12
 8022e2c:	f7ee f814 	bl	8010e58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8022e30:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8022e34:	f8bd 2000 	ldrh.w	r2, [sp]
 8022e38:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8022e3c:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8022e40:	4640      	mov	r0, r8
 8022e42:	f7eb fe2c 	bl	800ea9e <_ZN8touchgfx7Outline5resetEv>
 8022e46:	f9bd 3000 	ldrsh.w	r3, [sp]
 8022e4a:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 8022e4e:	015b      	lsls	r3, r3, #5
 8022e50:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8022e52:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8022e56:	015b      	lsls	r3, r3, #5
 8022e58:	6523      	str	r3, [r4, #80]	@ 0x50
 8022e5a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8022e5e:	015b      	lsls	r3, r3, #5
 8022e60:	6563      	str	r3, [r4, #84]	@ 0x54
 8022e62:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8022e66:	015b      	lsls	r3, r3, #5
 8022e68:	65a3      	str	r3, [r4, #88]	@ 0x58
 8022e6a:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8022e6e:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8022e72:	4620      	mov	r0, r4
 8022e74:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 8022e78:	b002      	add	sp, #8
 8022e7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022e7e:	bf00      	nop
 8022e80:	08027a58 	.word	0x08027a58

08022e84 <_ZN8touchgfx6Canvas5closeEv>:
 8022e84:	b538      	push	{r3, r4, r5, lr}
 8022e86:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8022e8a:	4604      	mov	r4, r0
 8022e8c:	b193      	cbz	r3, 8022eb4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8022e8e:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8022e92:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 8022e96:	4213      	tst	r3, r2
 8022e98:	d10c      	bne.n	8022eb4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8022e9a:	f100 0514 	add.w	r5, r0, #20
 8022e9e:	b123      	cbz	r3, 8022eaa <_ZN8touchgfx6Canvas5closeEv+0x26>
 8022ea0:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8022ea4:	4628      	mov	r0, r5
 8022ea6:	f7ff fea1 	bl	8022bec <_ZN8touchgfx10Rasterizer6lineToEii>
 8022eaa:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 8022eae:	4628      	mov	r0, r5
 8022eb0:	f7ff fe9c 	bl	8022bec <_ZN8touchgfx10Rasterizer6lineToEii>
 8022eb4:	2300      	movs	r3, #0
 8022eb6:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8022eba:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 8022ebe:	4298      	cmp	r0, r3
 8022ec0:	bf34      	ite	cc
 8022ec2:	2000      	movcc	r0, #0
 8022ec4:	2001      	movcs	r0, #1
 8022ec6:	bd38      	pop	{r3, r4, r5, pc}

08022ec8 <_ZN8touchgfx6Canvas6renderEh>:
 8022ec8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8022ecc:	7a85      	ldrb	r5, [r0, #10]
 8022ece:	4369      	muls	r1, r5
 8022ed0:	1c4d      	adds	r5, r1, #1
 8022ed2:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022ed6:	122d      	asrs	r5, r5, #8
 8022ed8:	4604      	mov	r4, r0
 8022eda:	f000 8099 	beq.w	8023010 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8022ede:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 8022ee2:	2b00      	cmp	r3, #0
 8022ee4:	f000 8094 	beq.w	8023010 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8022ee8:	f7ff ffcc 	bl	8022e84 <_ZN8touchgfx6Canvas5closeEv>
 8022eec:	4607      	mov	r7, r0
 8022eee:	2800      	cmp	r0, #0
 8022ef0:	d045      	beq.n	8022f7e <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8022ef2:	6860      	ldr	r0, [r4, #4]
 8022ef4:	4e47      	ldr	r6, [pc, #284]	@ (8023014 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 8022ef6:	6803      	ldr	r3, [r0, #0]
 8022ef8:	6837      	ldr	r7, [r6, #0]
 8022efa:	689b      	ldr	r3, [r3, #8]
 8022efc:	4798      	blx	r3
 8022efe:	4601      	mov	r1, r0
 8022f00:	4638      	mov	r0, r7
 8022f02:	f7e9 fb13 	bl	800c52c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8022f06:	4607      	mov	r7, r0
 8022f08:	f7df fe04 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 8022f0c:	6803      	ldr	r3, [r0, #0]
 8022f0e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022f10:	4798      	blx	r3
 8022f12:	4680      	mov	r8, r0
 8022f14:	f7df fdfe 	bl	8002b14 <_ZN8touchgfx3HAL3lcdEv>
 8022f18:	6803      	ldr	r3, [r0, #0]
 8022f1a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8022f1c:	4798      	blx	r3
 8022f1e:	280b      	cmp	r0, #11
 8022f20:	d85b      	bhi.n	8022fda <_ZN8touchgfx6Canvas6renderEh+0x112>
 8022f22:	e8df f000 	tbb	[pc, r0]
 8022f26:	5c51      	.short	0x5c51
 8022f28:	305a066c 	.word	0x305a066c
 8022f2c:	65656540 	.word	0x65656540
 8022f30:	6565      	.short	0x6565
 8022f32:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8022f36:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8022f3a:	2208      	movs	r2, #8
 8022f3c:	fb91 f2f2 	sdiv	r2, r1, r2
 8022f40:	fb08 2303 	mla	r3, r8, r3, r2
 8022f44:	441f      	add	r7, r3
 8022f46:	424b      	negs	r3, r1
 8022f48:	f003 0307 	and.w	r3, r3, #7
 8022f4c:	f001 0107 	and.w	r1, r1, #7
 8022f50:	bf58      	it	pl
 8022f52:	4259      	negpl	r1, r3
 8022f54:	b2c9      	uxtb	r1, r1
 8022f56:	b2ed      	uxtb	r5, r5
 8022f58:	463a      	mov	r2, r7
 8022f5a:	e9cd 1500 	strd	r1, r5, [sp]
 8022f5e:	fa0f f388 	sxth.w	r3, r8
 8022f62:	6861      	ldr	r1, [r4, #4]
 8022f64:	f104 0014 	add.w	r0, r4, #20
 8022f68:	f7ff fe4c 	bl	8022c04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8022f6c:	4607      	mov	r7, r0
 8022f6e:	6860      	ldr	r0, [r4, #4]
 8022f70:	6803      	ldr	r3, [r0, #0]
 8022f72:	691b      	ldr	r3, [r3, #16]
 8022f74:	4798      	blx	r3
 8022f76:	6830      	ldr	r0, [r6, #0]
 8022f78:	6803      	ldr	r3, [r0, #0]
 8022f7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8022f7c:	4798      	blx	r3
 8022f7e:	4638      	mov	r0, r7
 8022f80:	b002      	add	sp, #8
 8022f82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022f86:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8022f8a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8022f8e:	2204      	movs	r2, #4
 8022f90:	fb91 f2f2 	sdiv	r2, r1, r2
 8022f94:	fb08 2303 	mla	r3, r8, r3, r2
 8022f98:	441f      	add	r7, r3
 8022f9a:	424b      	negs	r3, r1
 8022f9c:	f003 0303 	and.w	r3, r3, #3
 8022fa0:	f001 0103 	and.w	r1, r1, #3
 8022fa4:	e7d4      	b.n	8022f50 <_ZN8touchgfx6Canvas6renderEh+0x88>
 8022fa6:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8022faa:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8022fae:	2900      	cmp	r1, #0
 8022fb0:	f04f 0202 	mov.w	r2, #2
 8022fb4:	fb91 f2f2 	sdiv	r2, r1, r2
 8022fb8:	f001 0101 	and.w	r1, r1, #1
 8022fbc:	fb08 2303 	mla	r3, r8, r3, r2
 8022fc0:	441f      	add	r7, r3
 8022fc2:	bfb8      	it	lt
 8022fc4:	4249      	neglt	r1, r1
 8022fc6:	e7c5      	b.n	8022f54 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 8022fc8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8022fcc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8022fd0:	fb08 f303 	mul.w	r3, r8, r3
 8022fd4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8022fd8:	441f      	add	r7, r3
 8022fda:	2100      	movs	r1, #0
 8022fdc:	e7bb      	b.n	8022f56 <_ZN8touchgfx6Canvas6renderEh+0x8e>
 8022fde:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8022fe2:	fb08 f203 	mul.w	r2, r8, r3
 8022fe6:	89a3      	ldrh	r3, [r4, #12]
 8022fe8:	2103      	movs	r1, #3
 8022fea:	fb13 2301 	smlabb	r3, r3, r1, r2
 8022fee:	e7f3      	b.n	8022fd8 <_ZN8touchgfx6Canvas6renderEh+0x110>
 8022ff0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8022ff4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8022ff8:	fb08 2303 	mla	r3, r8, r3, r2
 8022ffc:	e7ec      	b.n	8022fd8 <_ZN8touchgfx6Canvas6renderEh+0x110>
 8022ffe:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8023002:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023006:	fb08 f303 	mul.w	r3, r8, r3
 802300a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802300e:	e7e3      	b.n	8022fd8 <_ZN8touchgfx6Canvas6renderEh+0x110>
 8023010:	2701      	movs	r7, #1
 8023012:	e7b4      	b.n	8022f7e <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8023014:	20013b6c 	.word	0x20013b6c

08023018 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8023018:	b510      	push	{r4, lr}
 802301a:	4b06      	ldr	r3, [pc, #24]	@ (8023034 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 802301c:	781b      	ldrb	r3, [r3, #0]
 802301e:	2b01      	cmp	r3, #1
 8023020:	d107      	bne.n	8023032 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 8023022:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8023026:	680b      	ldr	r3, [r1, #0]
 8023028:	6814      	ldr	r4, [r2, #0]
 802302a:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802302e:	6013      	str	r3, [r2, #0]
 8023030:	600c      	str	r4, [r1, #0]
 8023032:	bd10      	pop	{r4, pc}
 8023034:	20013b62 	.word	0x20013b62

08023038 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8023038:	b513      	push	{r0, r1, r4, lr}
 802303a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802303e:	4604      	mov	r4, r0
 8023040:	e9cd 2100 	strd	r2, r1, [sp]
 8023044:	b9a3      	cbnz	r3, 8023070 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8023046:	466a      	mov	r2, sp
 8023048:	a901      	add	r1, sp, #4
 802304a:	4620      	mov	r0, r4
 802304c:	f7ff ffe4 	bl	8023018 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8023050:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8023052:	9901      	ldr	r1, [sp, #4]
 8023054:	9a00      	ldr	r2, [sp, #0]
 8023056:	1ac9      	subs	r1, r1, r3
 8023058:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802305a:	9101      	str	r1, [sp, #4]
 802305c:	1ad2      	subs	r2, r2, r3
 802305e:	2a00      	cmp	r2, #0
 8023060:	9200      	str	r2, [sp, #0]
 8023062:	da0b      	bge.n	802307c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8023064:	2301      	movs	r3, #1
 8023066:	2900      	cmp	r1, #0
 8023068:	da0e      	bge.n	8023088 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802306a:	f043 0304 	orr.w	r3, r3, #4
 802306e:	e013      	b.n	8023098 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8023070:	f7ff ff08 	bl	8022e84 <_ZN8touchgfx6Canvas5closeEv>
 8023074:	2800      	cmp	r0, #0
 8023076:	d1e6      	bne.n	8023046 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8023078:	b002      	add	sp, #8
 802307a:	bd10      	pop	{r4, pc}
 802307c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802307e:	429a      	cmp	r2, r3
 8023080:	bfac      	ite	ge
 8023082:	2302      	movge	r3, #2
 8023084:	2300      	movlt	r3, #0
 8023086:	e7ee      	b.n	8023066 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8023088:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 802308a:	4281      	cmp	r1, r0
 802308c:	bfac      	ite	ge
 802308e:	2008      	movge	r0, #8
 8023090:	2000      	movlt	r0, #0
 8023092:	4318      	orrs	r0, r3
 8023094:	b2c3      	uxtb	r3, r0
 8023096:	b158      	cbz	r0, 80230b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8023098:	2200      	movs	r2, #0
 802309a:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 802309e:	9901      	ldr	r1, [sp, #4]
 80230a0:	9a00      	ldr	r2, [sp, #0]
 80230a2:	66e1      	str	r1, [r4, #108]	@ 0x6c
 80230a4:	6722      	str	r2, [r4, #112]	@ 0x70
 80230a6:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 80230aa:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 80230ae:	e7e3      	b.n	8023078 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80230b0:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 80230b4:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 80230b8:	4298      	cmp	r0, r3
 80230ba:	d803      	bhi.n	80230c4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80230bc:	f104 0014 	add.w	r0, r4, #20
 80230c0:	f7ec f9ea 	bl	800f498 <_ZN8touchgfx7Outline6moveToEii>
 80230c4:	2301      	movs	r3, #1
 80230c6:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80230ca:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 80230ce:	2300      	movs	r3, #0
 80230d0:	e7e5      	b.n	802309e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080230d2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80230d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80230d4:	ab02      	add	r3, sp, #8
 80230d6:	4604      	mov	r4, r0
 80230d8:	f843 2d08 	str.w	r2, [r3, #-8]!
 80230dc:	9101      	str	r1, [sp, #4]
 80230de:	461a      	mov	r2, r3
 80230e0:	a901      	add	r1, sp, #4
 80230e2:	f7ff ff99 	bl	8023018 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80230e6:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80230e8:	9901      	ldr	r1, [sp, #4]
 80230ea:	9a00      	ldr	r2, [sp, #0]
 80230ec:	1ac9      	subs	r1, r1, r3
 80230ee:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80230f0:	9101      	str	r1, [sp, #4]
 80230f2:	1ad2      	subs	r2, r2, r3
 80230f4:	2a00      	cmp	r2, #0
 80230f6:	9200      	str	r2, [sp, #0]
 80230f8:	db1c      	blt.n	8023134 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80230fa:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80230fc:	429a      	cmp	r2, r3
 80230fe:	bfac      	ite	ge
 8023100:	2002      	movge	r0, #2
 8023102:	2000      	movlt	r0, #0
 8023104:	2900      	cmp	r1, #0
 8023106:	db17      	blt.n	8023138 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8023108:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 802310a:	4299      	cmp	r1, r3
 802310c:	bfac      	ite	ge
 802310e:	2308      	movge	r3, #8
 8023110:	2300      	movlt	r3, #0
 8023112:	4303      	orrs	r3, r0
 8023114:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 8023118:	b2dd      	uxtb	r5, r3
 802311a:	b978      	cbnz	r0, 802313c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802311c:	f104 0014 	add.w	r0, r4, #20
 8023120:	f7ff fd64 	bl	8022bec <_ZN8touchgfx10Rasterizer6lineToEii>
 8023124:	9b01      	ldr	r3, [sp, #4]
 8023126:	6623      	str	r3, [r4, #96]	@ 0x60
 8023128:	9b00      	ldr	r3, [sp, #0]
 802312a:	6663      	str	r3, [r4, #100]	@ 0x64
 802312c:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 8023130:	b002      	add	sp, #8
 8023132:	bd70      	pop	{r4, r5, r6, pc}
 8023134:	2001      	movs	r0, #1
 8023136:	e7e5      	b.n	8023104 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8023138:	2304      	movs	r3, #4
 802313a:	e7ea      	b.n	8023112 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802313c:	b113      	cbz	r3, 8023144 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802313e:	ea10 0305 	ands.w	r3, r0, r5
 8023142:	d11c      	bne.n	802317e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8023144:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8023148:	f104 0614 	add.w	r6, r4, #20
 802314c:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8023150:	b98b      	cbnz	r3, 8023176 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8023152:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8023156:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802315a:	4298      	cmp	r0, r3
 802315c:	d802      	bhi.n	8023164 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802315e:	4630      	mov	r0, r6
 8023160:	f7ec f99a 	bl	800f498 <_ZN8touchgfx7Outline6moveToEii>
 8023164:	2301      	movs	r3, #1
 8023166:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802316a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802316e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8023172:	4630      	mov	r0, r6
 8023174:	e7d4      	b.n	8023120 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8023176:	4630      	mov	r0, r6
 8023178:	f7ff fd38 	bl	8022bec <_ZN8touchgfx10Rasterizer6lineToEii>
 802317c:	e7f7      	b.n	802316e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802317e:	461d      	mov	r5, r3
 8023180:	e7d0      	b.n	8023124 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08023184 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 8023184:	b538      	push	{r3, r4, r5, lr}
 8023186:	ed2d 8b10 	vpush	{d8-d15}
 802318a:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 802318e:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 80232f8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 8023192:	4605      	mov	r5, r0
 8023194:	eeb0 ca40 	vmov.f32	s24, s0
 8023198:	eef0 ca60 	vmov.f32	s25, s1
 802319c:	eeb0 da41 	vmov.f32	s26, s2
 80231a0:	eef0 da61 	vmov.f32	s27, s3
 80231a4:	eeb0 ea42 	vmov.f32	s28, s4
 80231a8:	eef0 ea62 	vmov.f32	s29, s5
 80231ac:	460c      	mov	r4, r1
 80231ae:	eef0 aa6b 	vmov.f32	s21, s23
 80231b2:	2c08      	cmp	r4, #8
 80231b4:	d86e      	bhi.n	8023294 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 80231b6:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 80231ba:	ee7d 7aee 	vsub.f32	s15, s27, s29
 80231be:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 80231c2:	ee3e 7aec 	vsub.f32	s14, s29, s25
 80231c6:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 80231ca:	ee3c fa0d 	vadd.f32	s30, s24, s26
 80231ce:	eee6 7a07 	vfma.f32	s15, s12, s14
 80231d2:	ee7c faad 	vadd.f32	s31, s25, s27
 80231d6:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 80231da:	ee3d aaae 	vadd.f32	s20, s27, s29
 80231de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80231e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80231e6:	ee2f fa2b 	vmul.f32	s30, s30, s23
 80231ea:	ee6f faab 	vmul.f32	s31, s31, s23
 80231ee:	ee69 9aab 	vmul.f32	s19, s19, s23
 80231f2:	ee2a aa2b 	vmul.f32	s20, s20, s23
 80231f6:	bf48      	it	mi
 80231f8:	eef1 7a67 	vnegmi.f32	s15, s15
 80231fc:	ee7f 8a29 	vadd.f32	s17, s30, s19
 8023200:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 8023204:	eef4 7acb 	vcmpe.f32	s15, s22
 8023208:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802320c:	ee68 8aab 	vmul.f32	s17, s17, s23
 8023210:	ee29 9a2b 	vmul.f32	s18, s18, s23
 8023214:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 8023218:	dd3f      	ble.n	802329a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 802321a:	ee27 7a07 	vmul.f32	s14, s14, s14
 802321e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8023222:	eea6 7aa6 	vfma.f32	s14, s13, s13
 8023226:	ee27 7a06 	vmul.f32	s14, s14, s12
 802322a:	eef4 7ac7 	vcmpe.f32	s15, s14
 802322e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023232:	d847      	bhi.n	80232c4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8023234:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 8023238:	ee3e 0aed 	vsub.f32	s0, s29, s27
 802323c:	f000 fa3b 	bl	80236b6 <atan2f>
 8023240:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 8023244:	eeb0 8a40 	vmov.f32	s16, s0
 8023248:	ee3d 0aec 	vsub.f32	s0, s27, s25
 802324c:	f000 fa33 	bl	80236b6 <atan2f>
 8023250:	ee38 0a40 	vsub.f32	s0, s16, s0
 8023254:	eddf 7a29 	vldr	s15, [pc, #164]	@ 80232fc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 8023258:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802325c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023260:	bf48      	it	mi
 8023262:	eeb1 0a40 	vnegmi.f32	s0, s0
 8023266:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802326a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802326e:	bfa4      	itt	ge
 8023270:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 8023300 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 8023274:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8023278:	eddf 7a22 	vldr	s15, [pc, #136]	@ 8023304 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 802327c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8023280:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023284:	d51e      	bpl.n	80232c4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8023286:	eef0 0a49 	vmov.f32	s1, s18
 802328a:	eeb0 0a68 	vmov.f32	s0, s17
 802328e:	4628      	mov	r0, r5
 8023290:	f7ea fb52 	bl	800d938 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8023294:	ecbd 8b10 	vpop	{d8-d15}
 8023298:	bd38      	pop	{r3, r4, r5, pc}
 802329a:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 802329e:	eeb0 7a68 	vmov.f32	s14, s17
 80232a2:	eea7 7aea 	vfms.f32	s14, s15, s21
 80232a6:	ee7c 7aae 	vadd.f32	s15, s25, s29
 80232aa:	eef0 6a49 	vmov.f32	s13, s18
 80232ae:	eee7 6aea 	vfms.f32	s13, s15, s21
 80232b2:	ee66 7aa6 	vmul.f32	s15, s13, s13
 80232b6:	eee7 7a07 	vfma.f32	s15, s14, s14
 80232ba:	eef4 7ac6 	vcmpe.f32	s15, s12
 80232be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80232c2:	d9e0      	bls.n	8023286 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 80232c4:	3401      	adds	r4, #1
 80232c6:	eef0 0a6c 	vmov.f32	s1, s25
 80232ca:	eeb0 0a4c 	vmov.f32	s0, s24
 80232ce:	4621      	mov	r1, r4
 80232d0:	eef0 2a49 	vmov.f32	s5, s18
 80232d4:	eeb0 2a68 	vmov.f32	s4, s17
 80232d8:	eef0 1a6f 	vmov.f32	s3, s31
 80232dc:	eeb0 1a4f 	vmov.f32	s2, s30
 80232e0:	4628      	mov	r0, r5
 80232e2:	f7ff ff4f 	bl	8023184 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 80232e6:	eef0 da4a 	vmov.f32	s27, s20
 80232ea:	eeb0 da69 	vmov.f32	s26, s19
 80232ee:	eef0 ca49 	vmov.f32	s25, s18
 80232f2:	eeb0 ca68 	vmov.f32	s24, s17
 80232f6:	e75c      	b.n	80231b2 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 80232f8:	2edbe6ff 	.word	0x2edbe6ff
 80232fc:	40490fdb 	.word	0x40490fdb
 8023300:	40c90fdb 	.word	0x40c90fdb
 8023304:	3dcccccd 	.word	0x3dcccccd

08023308 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 8023308:	b530      	push	{r4, r5, lr}
 802330a:	ed2d 8b10 	vpush	{d8-d15}
 802330e:	4604      	mov	r4, r0
 8023310:	b085      	sub	sp, #20
 8023312:	eef0 8a40 	vmov.f32	s17, s0
 8023316:	eef0 9a60 	vmov.f32	s19, s1
 802331a:	eef0 fa41 	vmov.f32	s31, s2
 802331e:	eeb0 fa61 	vmov.f32	s30, s3
 8023322:	eef0 ba42 	vmov.f32	s23, s4
 8023326:	eeb0 ca62 	vmov.f32	s24, s5
 802332a:	eef0 aa43 	vmov.f32	s21, s6
 802332e:	eeb0 ba63 	vmov.f32	s22, s7
 8023332:	460d      	mov	r5, r1
 8023334:	2d08      	cmp	r5, #8
 8023336:	f200 8115 	bhi.w	8023564 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 802333a:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 802333e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8023342:	ee7f 6aab 	vadd.f32	s13, s31, s23
 8023346:	ee26 6a27 	vmul.f32	s12, s12, s15
 802334a:	ee38 daaf 	vadd.f32	s26, s17, s31
 802334e:	ed8d 6a01 	vstr	s12, [sp, #4]
 8023352:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8023356:	ee2d da27 	vmul.f32	s26, s26, s15
 802335a:	ee7c ca0b 	vadd.f32	s25, s24, s22
 802335e:	eeb0 ea4d 	vmov.f32	s28, s26
 8023362:	eea6 eaa7 	vfma.f32	s28, s13, s15
 8023366:	ee6c caa7 	vmul.f32	s25, s25, s15
 802336a:	ee66 6a27 	vmul.f32	s13, s12, s15
 802336e:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 8023372:	edcd 6a03 	vstr	s13, [sp, #12]
 8023376:	ee79 da8f 	vadd.f32	s27, s19, s30
 802337a:	eef0 6a6c 	vmov.f32	s13, s25
 802337e:	eee7 6a27 	vfma.f32	s13, s14, s15
 8023382:	ee6d daa7 	vmul.f32	s27, s27, s15
 8023386:	ee2e ea27 	vmul.f32	s28, s28, s15
 802338a:	eef0 ea6d 	vmov.f32	s29, s27
 802338e:	eee7 ea27 	vfma.f32	s29, s14, s15
 8023392:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8023396:	ee6e eaa7 	vmul.f32	s29, s29, s15
 802339a:	ed8d 7a02 	vstr	s14, [sp, #8]
 802339e:	ed9d 7a03 	vldr	s14, [sp, #12]
 80233a2:	ee3e 9a07 	vadd.f32	s18, s28, s14
 80233a6:	ed9d 7a02 	vldr	s14, [sp, #8]
 80233aa:	ee3e aa87 	vadd.f32	s20, s29, s14
 80233ae:	ee29 9a27 	vmul.f32	s18, s18, s15
 80233b2:	ee2a aa27 	vmul.f32	s20, s20, s15
 80233b6:	eef0 6a67 	vmov.f32	s13, s15
 80233ba:	2d00      	cmp	r5, #0
 80233bc:	f000 810d 	beq.w	80235da <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80233c0:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 80233c4:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 80233c8:	ee7b 7a69 	vsub.f32	s15, s22, s19
 80233cc:	ee3f 6aea 	vsub.f32	s12, s31, s21
 80233d0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80233d4:	ee3b 5aea 	vsub.f32	s10, s23, s21
 80233d8:	eea6 7a27 	vfma.f32	s14, s12, s15
 80233dc:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 80233e0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80233e4:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 80233e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80233ec:	eea5 6a27 	vfma.f32	s12, s10, s15
 80233f0:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 8023620 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 80233f4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80233f8:	bf48      	it	mi
 80233fa:	eeb1 7a47 	vnegmi.f32	s14, s14
 80233fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023402:	eeb4 7ae4 	vcmpe.f32	s14, s9
 8023406:	bf48      	it	mi
 8023408:	eeb1 6a46 	vnegmi.f32	s12, s12
 802340c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023410:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 8023414:	f340 80aa 	ble.w	802356c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 8023418:	eeb4 6ae4 	vcmpe.f32	s12, s9
 802341c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023420:	dd5c      	ble.n	80234dc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 8023422:	ee65 5aa5 	vmul.f32	s11, s11, s11
 8023426:	ee37 7a06 	vadd.f32	s14, s14, s12
 802342a:	eee7 5aa7 	vfma.f32	s11, s15, s15
 802342e:	ee27 7a07 	vmul.f32	s14, s14, s14
 8023432:	ee65 7a85 	vmul.f32	s15, s11, s10
 8023436:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802343a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802343e:	f200 80cc 	bhi.w	80235da <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8023442:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8023446:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802344a:	f000 f934 	bl	80236b6 <atan2f>
 802344e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8023452:	eeb0 8a40 	vmov.f32	s16, s0
 8023456:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802345a:	f000 f92c 	bl	80236b6 <atan2f>
 802345e:	ee38 fa40 	vsub.f32	s30, s16, s0
 8023462:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8023466:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 802346a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802346e:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8023472:	bf48      	it	mi
 8023474:	eeb1 fa4f 	vnegmi.f32	s30, s30
 8023478:	f000 f91d 	bl	80236b6 <atan2f>
 802347c:	ee30 0a48 	vsub.f32	s0, s0, s16
 8023480:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8023624 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8023484:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8023488:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802348c:	eeb4 fae7 	vcmpe.f32	s30, s15
 8023490:	bf48      	it	mi
 8023492:	eeb1 0a40 	vnegmi.f32	s0, s0
 8023496:	eddf 7a63 	vldr	s15, [pc, #396]	@ 8023624 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802349a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802349e:	bfa8      	it	ge
 80234a0:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 8023628 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 80234a4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80234a8:	bfa8      	it	ge
 80234aa:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 80234ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80234b2:	bfa8      	it	ge
 80234b4:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 8023628 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 80234b8:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802362c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 80234bc:	bfa8      	it	ge
 80234be:	ee37 0a40 	vsubge.f32	s0, s14, s0
 80234c2:	ee3f 0a00 	vadd.f32	s0, s30, s0
 80234c6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80234ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80234ce:	f140 8084 	bpl.w	80235da <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80234d2:	eef0 0a4a 	vmov.f32	s1, s20
 80234d6:	eeb0 0a49 	vmov.f32	s0, s18
 80234da:	e040      	b.n	802355e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 80234dc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80234e0:	ee27 7a07 	vmul.f32	s14, s14, s14
 80234e4:	eee5 7aa5 	vfma.f32	s15, s11, s11
 80234e8:	ee67 7a85 	vmul.f32	s15, s15, s10
 80234ec:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80234f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80234f4:	d871      	bhi.n	80235da <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80234f6:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80234fa:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80234fe:	f000 f8da 	bl	80236b6 <atan2f>
 8023502:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8023506:	eeb0 8a40 	vmov.f32	s16, s0
 802350a:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802350e:	f000 f8d2 	bl	80236b6 <atan2f>
 8023512:	ee38 0a40 	vsub.f32	s0, s16, s0
 8023516:	eddf 7a43 	vldr	s15, [pc, #268]	@ 8023624 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802351a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802351e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023522:	bf48      	it	mi
 8023524:	eeb1 0a40 	vnegmi.f32	s0, s0
 8023528:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802352c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023530:	bfa4      	itt	ge
 8023532:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 8023628 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8023536:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802353a:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 802362c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 802353e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8023542:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023546:	d548      	bpl.n	80235da <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8023548:	eef0 0a4f 	vmov.f32	s1, s30
 802354c:	eeb0 0a6f 	vmov.f32	s0, s31
 8023550:	4620      	mov	r0, r4
 8023552:	f7ea f9f1 	bl	800d938 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8023556:	eef0 0a4c 	vmov.f32	s1, s24
 802355a:	eeb0 0a6b 	vmov.f32	s0, s23
 802355e:	4620      	mov	r0, r4
 8023560:	f7ea f9ea 	bl	800d938 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8023564:	b005      	add	sp, #20
 8023566:	ecbd 8b10 	vpop	{d8-d15}
 802356a:	bd30      	pop	{r4, r5, pc}
 802356c:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8023620 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8023570:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8023574:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023578:	dd19      	ble.n	80235ae <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 802357a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802357e:	ee26 7a06 	vmul.f32	s14, s12, s12
 8023582:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8023586:	ee67 7a85 	vmul.f32	s15, s15, s10
 802358a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802358e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023592:	d822      	bhi.n	80235da <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8023594:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8023598:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 802359c:	f000 f88b 	bl	80236b6 <atan2f>
 80235a0:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80235a4:	eeb0 8a40 	vmov.f32	s16, s0
 80235a8:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80235ac:	e7af      	b.n	802350e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 80235ae:	ee78 7aaa 	vadd.f32	s15, s17, s21
 80235b2:	eeb0 7a49 	vmov.f32	s14, s18
 80235b6:	eea7 7ae6 	vfms.f32	s14, s15, s13
 80235ba:	ee79 7a8b 	vadd.f32	s15, s19, s22
 80235be:	eeb0 6a4a 	vmov.f32	s12, s20
 80235c2:	eea7 6ae6 	vfms.f32	s12, s15, s13
 80235c6:	ee66 7a06 	vmul.f32	s15, s12, s12
 80235ca:	eee7 7a07 	vfma.f32	s15, s14, s14
 80235ce:	eef4 7ac5 	vcmpe.f32	s15, s10
 80235d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80235d6:	f67f af7c 	bls.w	80234d2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 80235da:	3501      	adds	r5, #1
 80235dc:	eef0 0a69 	vmov.f32	s1, s19
 80235e0:	eeb0 0a68 	vmov.f32	s0, s17
 80235e4:	4629      	mov	r1, r5
 80235e6:	eef0 3a4a 	vmov.f32	s7, s20
 80235ea:	eeb0 3a49 	vmov.f32	s6, s18
 80235ee:	eef0 2a6e 	vmov.f32	s5, s29
 80235f2:	eeb0 2a4e 	vmov.f32	s4, s28
 80235f6:	eef0 1a6d 	vmov.f32	s3, s27
 80235fa:	eeb0 1a4d 	vmov.f32	s2, s26
 80235fe:	4620      	mov	r0, r4
 8023600:	f7ff fe82 	bl	8023308 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8023604:	eeb0 ca6c 	vmov.f32	s24, s25
 8023608:	eddd ba01 	vldr	s23, [sp, #4]
 802360c:	ed9d fa02 	vldr	s30, [sp, #8]
 8023610:	eddd fa03 	vldr	s31, [sp, #12]
 8023614:	eef0 9a4a 	vmov.f32	s19, s20
 8023618:	eef0 8a49 	vmov.f32	s17, s18
 802361c:	e68a      	b.n	8023334 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 802361e:	bf00      	nop
 8023620:	2edbe6ff 	.word	0x2edbe6ff
 8023624:	40490fdb 	.word	0x40490fdb
 8023628:	40c90fdb 	.word	0x40c90fdb
 802362c:	3dcccccd 	.word	0x3dcccccd

08023630 <_ZN8touchgfx6CanvasD1Ev>:
 8023630:	b510      	push	{r4, lr}
 8023632:	4b04      	ldr	r3, [pc, #16]	@ (8023644 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8023634:	4604      	mov	r4, r0
 8023636:	f840 3b14 	str.w	r3, [r0], #20
 802363a:	f7eb fa28 	bl	800ea8e <_ZN8touchgfx7OutlineD1Ev>
 802363e:	4620      	mov	r0, r4
 8023640:	bd10      	pop	{r4, pc}
 8023642:	bf00      	nop
 8023644:	08027a58 	.word	0x08027a58

08023648 <_ZN8touchgfx6CanvasD0Ev>:
 8023648:	b510      	push	{r4, lr}
 802364a:	4604      	mov	r4, r0
 802364c:	f7ff fff0 	bl	8023630 <_ZN8touchgfx6CanvasD1Ev>
 8023650:	4620      	mov	r0, r4
 8023652:	2174      	movs	r1, #116	@ 0x74
 8023654:	f000 f807 	bl	8023666 <_ZdlPvj>
 8023658:	4620      	mov	r0, r4
 802365a:	bd10      	pop	{r4, pc}

0802365c <__aeabi_atexit>:
 802365c:	460b      	mov	r3, r1
 802365e:	4601      	mov	r1, r0
 8023660:	4618      	mov	r0, r3
 8023662:	f001 b81f 	b.w	80246a4 <__cxa_atexit>

08023666 <_ZdlPvj>:
 8023666:	f000 b812 	b.w	802368e <_ZdlPv>

0802366a <__cxa_guard_acquire>:
 802366a:	6802      	ldr	r2, [r0, #0]
 802366c:	07d2      	lsls	r2, r2, #31
 802366e:	4603      	mov	r3, r0
 8023670:	d405      	bmi.n	802367e <__cxa_guard_acquire+0x14>
 8023672:	7842      	ldrb	r2, [r0, #1]
 8023674:	b102      	cbz	r2, 8023678 <__cxa_guard_acquire+0xe>
 8023676:	deff      	udf	#255	@ 0xff
 8023678:	2001      	movs	r0, #1
 802367a:	7058      	strb	r0, [r3, #1]
 802367c:	4770      	bx	lr
 802367e:	2000      	movs	r0, #0
 8023680:	4770      	bx	lr

08023682 <__cxa_guard_release>:
 8023682:	2301      	movs	r3, #1
 8023684:	6003      	str	r3, [r0, #0]
 8023686:	4770      	bx	lr

08023688 <__cxa_pure_virtual>:
 8023688:	b508      	push	{r3, lr}
 802368a:	f000 f80f 	bl	80236ac <_ZSt9terminatev>

0802368e <_ZdlPv>:
 802368e:	f000 bf53 	b.w	8024538 <free>

08023692 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8023692:	b508      	push	{r3, lr}
 8023694:	4780      	blx	r0
 8023696:	f000 ff1b 	bl	80244d0 <abort>
	...

0802369c <_ZSt13get_terminatev>:
 802369c:	4b02      	ldr	r3, [pc, #8]	@ (80236a8 <_ZSt13get_terminatev+0xc>)
 802369e:	6818      	ldr	r0, [r3, #0]
 80236a0:	f3bf 8f5b 	dmb	ish
 80236a4:	4770      	bx	lr
 80236a6:	bf00      	nop
 80236a8:	20000218 	.word	0x20000218

080236ac <_ZSt9terminatev>:
 80236ac:	b508      	push	{r3, lr}
 80236ae:	f7ff fff5 	bl	802369c <_ZSt13get_terminatev>
 80236b2:	f7ff ffee 	bl	8023692 <_ZN10__cxxabiv111__terminateEPFvvE>

080236b6 <atan2f>:
 80236b6:	f000 b94d 	b.w	8023954 <__ieee754_atan2f>
	...

080236bc <sqrtf>:
 80236bc:	b508      	push	{r3, lr}
 80236be:	ed2d 8b02 	vpush	{d8}
 80236c2:	eeb0 8a40 	vmov.f32	s16, s0
 80236c6:	f000 f8a1 	bl	802380c <__ieee754_sqrtf>
 80236ca:	eeb4 8a48 	vcmp.f32	s16, s16
 80236ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80236d2:	d60c      	bvs.n	80236ee <sqrtf+0x32>
 80236d4:	eddf 8a07 	vldr	s17, [pc, #28]	@ 80236f4 <sqrtf+0x38>
 80236d8:	eeb4 8ae8 	vcmpe.f32	s16, s17
 80236dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80236e0:	d505      	bpl.n	80236ee <sqrtf+0x32>
 80236e2:	f001 f9dd 	bl	8024aa0 <__errno>
 80236e6:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80236ea:	2321      	movs	r3, #33	@ 0x21
 80236ec:	6003      	str	r3, [r0, #0]
 80236ee:	ecbd 8b02 	vpop	{d8}
 80236f2:	bd08      	pop	{r3, pc}
 80236f4:	00000000 	.word	0x00000000

080236f8 <cosf>:
 80236f8:	ee10 3a10 	vmov	r3, s0
 80236fc:	b507      	push	{r0, r1, r2, lr}
 80236fe:	4a1e      	ldr	r2, [pc, #120]	@ (8023778 <cosf+0x80>)
 8023700:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8023704:	4293      	cmp	r3, r2
 8023706:	d806      	bhi.n	8023716 <cosf+0x1e>
 8023708:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 802377c <cosf+0x84>
 802370c:	b003      	add	sp, #12
 802370e:	f85d eb04 	ldr.w	lr, [sp], #4
 8023712:	f000 b87f 	b.w	8023814 <__kernel_cosf>
 8023716:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802371a:	d304      	bcc.n	8023726 <cosf+0x2e>
 802371c:	ee30 0a40 	vsub.f32	s0, s0, s0
 8023720:	b003      	add	sp, #12
 8023722:	f85d fb04 	ldr.w	pc, [sp], #4
 8023726:	4668      	mov	r0, sp
 8023728:	f000 f9b4 	bl	8023a94 <__ieee754_rem_pio2f>
 802372c:	f000 0003 	and.w	r0, r0, #3
 8023730:	2801      	cmp	r0, #1
 8023732:	d009      	beq.n	8023748 <cosf+0x50>
 8023734:	2802      	cmp	r0, #2
 8023736:	d010      	beq.n	802375a <cosf+0x62>
 8023738:	b9b0      	cbnz	r0, 8023768 <cosf+0x70>
 802373a:	eddd 0a01 	vldr	s1, [sp, #4]
 802373e:	ed9d 0a00 	vldr	s0, [sp]
 8023742:	f000 f867 	bl	8023814 <__kernel_cosf>
 8023746:	e7eb      	b.n	8023720 <cosf+0x28>
 8023748:	eddd 0a01 	vldr	s1, [sp, #4]
 802374c:	ed9d 0a00 	vldr	s0, [sp]
 8023750:	f000 f8b8 	bl	80238c4 <__kernel_sinf>
 8023754:	eeb1 0a40 	vneg.f32	s0, s0
 8023758:	e7e2      	b.n	8023720 <cosf+0x28>
 802375a:	eddd 0a01 	vldr	s1, [sp, #4]
 802375e:	ed9d 0a00 	vldr	s0, [sp]
 8023762:	f000 f857 	bl	8023814 <__kernel_cosf>
 8023766:	e7f5      	b.n	8023754 <cosf+0x5c>
 8023768:	eddd 0a01 	vldr	s1, [sp, #4]
 802376c:	ed9d 0a00 	vldr	s0, [sp]
 8023770:	2001      	movs	r0, #1
 8023772:	f000 f8a7 	bl	80238c4 <__kernel_sinf>
 8023776:	e7d3      	b.n	8023720 <cosf+0x28>
 8023778:	3f490fd8 	.word	0x3f490fd8
 802377c:	00000000 	.word	0x00000000

08023780 <sinf>:
 8023780:	ee10 3a10 	vmov	r3, s0
 8023784:	b507      	push	{r0, r1, r2, lr}
 8023786:	4a1f      	ldr	r2, [pc, #124]	@ (8023804 <sinf+0x84>)
 8023788:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802378c:	4293      	cmp	r3, r2
 802378e:	d807      	bhi.n	80237a0 <sinf+0x20>
 8023790:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8023808 <sinf+0x88>
 8023794:	2000      	movs	r0, #0
 8023796:	b003      	add	sp, #12
 8023798:	f85d eb04 	ldr.w	lr, [sp], #4
 802379c:	f000 b892 	b.w	80238c4 <__kernel_sinf>
 80237a0:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80237a4:	d304      	bcc.n	80237b0 <sinf+0x30>
 80237a6:	ee30 0a40 	vsub.f32	s0, s0, s0
 80237aa:	b003      	add	sp, #12
 80237ac:	f85d fb04 	ldr.w	pc, [sp], #4
 80237b0:	4668      	mov	r0, sp
 80237b2:	f000 f96f 	bl	8023a94 <__ieee754_rem_pio2f>
 80237b6:	f000 0003 	and.w	r0, r0, #3
 80237ba:	2801      	cmp	r0, #1
 80237bc:	d00a      	beq.n	80237d4 <sinf+0x54>
 80237be:	2802      	cmp	r0, #2
 80237c0:	d00f      	beq.n	80237e2 <sinf+0x62>
 80237c2:	b9c0      	cbnz	r0, 80237f6 <sinf+0x76>
 80237c4:	eddd 0a01 	vldr	s1, [sp, #4]
 80237c8:	ed9d 0a00 	vldr	s0, [sp]
 80237cc:	2001      	movs	r0, #1
 80237ce:	f000 f879 	bl	80238c4 <__kernel_sinf>
 80237d2:	e7ea      	b.n	80237aa <sinf+0x2a>
 80237d4:	eddd 0a01 	vldr	s1, [sp, #4]
 80237d8:	ed9d 0a00 	vldr	s0, [sp]
 80237dc:	f000 f81a 	bl	8023814 <__kernel_cosf>
 80237e0:	e7e3      	b.n	80237aa <sinf+0x2a>
 80237e2:	eddd 0a01 	vldr	s1, [sp, #4]
 80237e6:	ed9d 0a00 	vldr	s0, [sp]
 80237ea:	2001      	movs	r0, #1
 80237ec:	f000 f86a 	bl	80238c4 <__kernel_sinf>
 80237f0:	eeb1 0a40 	vneg.f32	s0, s0
 80237f4:	e7d9      	b.n	80237aa <sinf+0x2a>
 80237f6:	eddd 0a01 	vldr	s1, [sp, #4]
 80237fa:	ed9d 0a00 	vldr	s0, [sp]
 80237fe:	f000 f809 	bl	8023814 <__kernel_cosf>
 8023802:	e7f5      	b.n	80237f0 <sinf+0x70>
 8023804:	3f490fd8 	.word	0x3f490fd8
 8023808:	00000000 	.word	0x00000000

0802380c <__ieee754_sqrtf>:
 802380c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8023810:	4770      	bx	lr
	...

08023814 <__kernel_cosf>:
 8023814:	ee10 3a10 	vmov	r3, s0
 8023818:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802381c:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8023820:	eef0 6a40 	vmov.f32	s13, s0
 8023824:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8023828:	d204      	bcs.n	8023834 <__kernel_cosf+0x20>
 802382a:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 802382e:	ee17 2a90 	vmov	r2, s15
 8023832:	b342      	cbz	r2, 8023886 <__kernel_cosf+0x72>
 8023834:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8023838:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 80238a4 <__kernel_cosf+0x90>
 802383c:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 80238a8 <__kernel_cosf+0x94>
 8023840:	4a1a      	ldr	r2, [pc, #104]	@ (80238ac <__kernel_cosf+0x98>)
 8023842:	eea7 6a27 	vfma.f32	s12, s14, s15
 8023846:	4293      	cmp	r3, r2
 8023848:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80238b0 <__kernel_cosf+0x9c>
 802384c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8023850:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 80238b4 <__kernel_cosf+0xa0>
 8023854:	eea7 6a87 	vfma.f32	s12, s15, s14
 8023858:	eddf 7a17 	vldr	s15, [pc, #92]	@ 80238b8 <__kernel_cosf+0xa4>
 802385c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8023860:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 80238bc <__kernel_cosf+0xa8>
 8023864:	eea7 6a87 	vfma.f32	s12, s15, s14
 8023868:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 802386c:	ee26 6a07 	vmul.f32	s12, s12, s14
 8023870:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8023874:	eee7 0a06 	vfma.f32	s1, s14, s12
 8023878:	ee67 7a27 	vmul.f32	s15, s14, s15
 802387c:	d804      	bhi.n	8023888 <__kernel_cosf+0x74>
 802387e:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8023882:	ee30 0a67 	vsub.f32	s0, s0, s15
 8023886:	4770      	bx	lr
 8023888:	4a0d      	ldr	r2, [pc, #52]	@ (80238c0 <__kernel_cosf+0xac>)
 802388a:	4293      	cmp	r3, r2
 802388c:	bf9a      	itte	ls
 802388e:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8023892:	ee07 3a10 	vmovls	s14, r3
 8023896:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 802389a:	ee30 0a47 	vsub.f32	s0, s0, s14
 802389e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80238a2:	e7ec      	b.n	802387e <__kernel_cosf+0x6a>
 80238a4:	ad47d74e 	.word	0xad47d74e
 80238a8:	310f74f6 	.word	0x310f74f6
 80238ac:	3e999999 	.word	0x3e999999
 80238b0:	b493f27c 	.word	0xb493f27c
 80238b4:	37d00d01 	.word	0x37d00d01
 80238b8:	bab60b61 	.word	0xbab60b61
 80238bc:	3d2aaaab 	.word	0x3d2aaaab
 80238c0:	3f480000 	.word	0x3f480000

080238c4 <__kernel_sinf>:
 80238c4:	ee10 3a10 	vmov	r3, s0
 80238c8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80238cc:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80238d0:	d204      	bcs.n	80238dc <__kernel_sinf+0x18>
 80238d2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80238d6:	ee17 3a90 	vmov	r3, s15
 80238da:	b35b      	cbz	r3, 8023934 <__kernel_sinf+0x70>
 80238dc:	ee20 7a00 	vmul.f32	s14, s0, s0
 80238e0:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8023938 <__kernel_sinf+0x74>
 80238e4:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 802393c <__kernel_sinf+0x78>
 80238e8:	eea7 6a27 	vfma.f32	s12, s14, s15
 80238ec:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8023940 <__kernel_sinf+0x7c>
 80238f0:	eee6 7a07 	vfma.f32	s15, s12, s14
 80238f4:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8023944 <__kernel_sinf+0x80>
 80238f8:	eea7 6a87 	vfma.f32	s12, s15, s14
 80238fc:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8023948 <__kernel_sinf+0x84>
 8023900:	ee60 6a07 	vmul.f32	s13, s0, s14
 8023904:	eee6 7a07 	vfma.f32	s15, s12, s14
 8023908:	b930      	cbnz	r0, 8023918 <__kernel_sinf+0x54>
 802390a:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 802394c <__kernel_sinf+0x88>
 802390e:	eea7 6a27 	vfma.f32	s12, s14, s15
 8023912:	eea6 0a26 	vfma.f32	s0, s12, s13
 8023916:	4770      	bx	lr
 8023918:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802391c:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8023920:	eee0 7a86 	vfma.f32	s15, s1, s12
 8023924:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8023928:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8023950 <__kernel_sinf+0x8c>
 802392c:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8023930:	ee30 0a60 	vsub.f32	s0, s0, s1
 8023934:	4770      	bx	lr
 8023936:	bf00      	nop
 8023938:	2f2ec9d3 	.word	0x2f2ec9d3
 802393c:	b2d72f34 	.word	0xb2d72f34
 8023940:	3638ef1b 	.word	0x3638ef1b
 8023944:	b9500d01 	.word	0xb9500d01
 8023948:	3c088889 	.word	0x3c088889
 802394c:	be2aaaab 	.word	0xbe2aaaab
 8023950:	3e2aaaab 	.word	0x3e2aaaab

08023954 <__ieee754_atan2f>:
 8023954:	ee10 2a90 	vmov	r2, s1
 8023958:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 802395c:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8023960:	b510      	push	{r4, lr}
 8023962:	eef0 7a40 	vmov.f32	s15, s0
 8023966:	d806      	bhi.n	8023976 <__ieee754_atan2f+0x22>
 8023968:	ee10 0a10 	vmov	r0, s0
 802396c:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8023970:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8023974:	d904      	bls.n	8023980 <__ieee754_atan2f+0x2c>
 8023976:	ee77 7aa0 	vadd.f32	s15, s15, s1
 802397a:	eeb0 0a67 	vmov.f32	s0, s15
 802397e:	bd10      	pop	{r4, pc}
 8023980:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8023984:	d103      	bne.n	802398e <__ieee754_atan2f+0x3a>
 8023986:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802398a:	f000 b9b3 	b.w	8023cf4 <atanf>
 802398e:	1794      	asrs	r4, r2, #30
 8023990:	f004 0402 	and.w	r4, r4, #2
 8023994:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8023998:	b943      	cbnz	r3, 80239ac <__ieee754_atan2f+0x58>
 802399a:	2c02      	cmp	r4, #2
 802399c:	d05e      	beq.n	8023a5c <__ieee754_atan2f+0x108>
 802399e:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8023a70 <__ieee754_atan2f+0x11c>
 80239a2:	2c03      	cmp	r4, #3
 80239a4:	bf08      	it	eq
 80239a6:	eef0 7a47 	vmoveq.f32	s15, s14
 80239aa:	e7e6      	b.n	802397a <__ieee754_atan2f+0x26>
 80239ac:	b941      	cbnz	r1, 80239c0 <__ieee754_atan2f+0x6c>
 80239ae:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8023a74 <__ieee754_atan2f+0x120>
 80239b2:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8023a78 <__ieee754_atan2f+0x124>
 80239b6:	2800      	cmp	r0, #0
 80239b8:	bfa8      	it	ge
 80239ba:	eef0 7a47 	vmovge.f32	s15, s14
 80239be:	e7dc      	b.n	802397a <__ieee754_atan2f+0x26>
 80239c0:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 80239c4:	d110      	bne.n	80239e8 <__ieee754_atan2f+0x94>
 80239c6:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80239ca:	f104 34ff 	add.w	r4, r4, #4294967295
 80239ce:	d107      	bne.n	80239e0 <__ieee754_atan2f+0x8c>
 80239d0:	2c02      	cmp	r4, #2
 80239d2:	d846      	bhi.n	8023a62 <__ieee754_atan2f+0x10e>
 80239d4:	4b29      	ldr	r3, [pc, #164]	@ (8023a7c <__ieee754_atan2f+0x128>)
 80239d6:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80239da:	edd3 7a00 	vldr	s15, [r3]
 80239de:	e7cc      	b.n	802397a <__ieee754_atan2f+0x26>
 80239e0:	2c02      	cmp	r4, #2
 80239e2:	d841      	bhi.n	8023a68 <__ieee754_atan2f+0x114>
 80239e4:	4b26      	ldr	r3, [pc, #152]	@ (8023a80 <__ieee754_atan2f+0x12c>)
 80239e6:	e7f6      	b.n	80239d6 <__ieee754_atan2f+0x82>
 80239e8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80239ec:	d0df      	beq.n	80239ae <__ieee754_atan2f+0x5a>
 80239ee:	1a5b      	subs	r3, r3, r1
 80239f0:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 80239f4:	ea4f 51e3 	mov.w	r1, r3, asr #23
 80239f8:	da1a      	bge.n	8023a30 <__ieee754_atan2f+0xdc>
 80239fa:	2a00      	cmp	r2, #0
 80239fc:	da01      	bge.n	8023a02 <__ieee754_atan2f+0xae>
 80239fe:	313c      	adds	r1, #60	@ 0x3c
 8023a00:	db19      	blt.n	8023a36 <__ieee754_atan2f+0xe2>
 8023a02:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8023a06:	f000 fa49 	bl	8023e9c <fabsf>
 8023a0a:	f000 f973 	bl	8023cf4 <atanf>
 8023a0e:	eef0 7a40 	vmov.f32	s15, s0
 8023a12:	2c01      	cmp	r4, #1
 8023a14:	d012      	beq.n	8023a3c <__ieee754_atan2f+0xe8>
 8023a16:	2c02      	cmp	r4, #2
 8023a18:	d017      	beq.n	8023a4a <__ieee754_atan2f+0xf6>
 8023a1a:	2c00      	cmp	r4, #0
 8023a1c:	d0ad      	beq.n	802397a <__ieee754_atan2f+0x26>
 8023a1e:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8023a84 <__ieee754_atan2f+0x130>
 8023a22:	ee77 7a87 	vadd.f32	s15, s15, s14
 8023a26:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8023a88 <__ieee754_atan2f+0x134>
 8023a2a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023a2e:	e7a4      	b.n	802397a <__ieee754_atan2f+0x26>
 8023a30:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8023a78 <__ieee754_atan2f+0x124>
 8023a34:	e7ed      	b.n	8023a12 <__ieee754_atan2f+0xbe>
 8023a36:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8023a8c <__ieee754_atan2f+0x138>
 8023a3a:	e7ea      	b.n	8023a12 <__ieee754_atan2f+0xbe>
 8023a3c:	ee17 3a90 	vmov	r3, s15
 8023a40:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8023a44:	ee07 3a90 	vmov	s15, r3
 8023a48:	e797      	b.n	802397a <__ieee754_atan2f+0x26>
 8023a4a:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8023a84 <__ieee754_atan2f+0x130>
 8023a4e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8023a52:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8023a88 <__ieee754_atan2f+0x134>
 8023a56:	ee77 7a67 	vsub.f32	s15, s14, s15
 8023a5a:	e78e      	b.n	802397a <__ieee754_atan2f+0x26>
 8023a5c:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8023a88 <__ieee754_atan2f+0x134>
 8023a60:	e78b      	b.n	802397a <__ieee754_atan2f+0x26>
 8023a62:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8023a90 <__ieee754_atan2f+0x13c>
 8023a66:	e788      	b.n	802397a <__ieee754_atan2f+0x26>
 8023a68:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8023a8c <__ieee754_atan2f+0x138>
 8023a6c:	e785      	b.n	802397a <__ieee754_atan2f+0x26>
 8023a6e:	bf00      	nop
 8023a70:	c0490fdb 	.word	0xc0490fdb
 8023a74:	bfc90fdb 	.word	0xbfc90fdb
 8023a78:	3fc90fdb 	.word	0x3fc90fdb
 8023a7c:	08027a70 	.word	0x08027a70
 8023a80:	08027a64 	.word	0x08027a64
 8023a84:	33bbbd2e 	.word	0x33bbbd2e
 8023a88:	40490fdb 	.word	0x40490fdb
 8023a8c:	00000000 	.word	0x00000000
 8023a90:	3f490fdb 	.word	0x3f490fdb

08023a94 <__ieee754_rem_pio2f>:
 8023a94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023a96:	ee10 6a10 	vmov	r6, s0
 8023a9a:	4b88      	ldr	r3, [pc, #544]	@ (8023cbc <__ieee754_rem_pio2f+0x228>)
 8023a9c:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8023aa0:	429d      	cmp	r5, r3
 8023aa2:	b087      	sub	sp, #28
 8023aa4:	4604      	mov	r4, r0
 8023aa6:	d805      	bhi.n	8023ab4 <__ieee754_rem_pio2f+0x20>
 8023aa8:	2300      	movs	r3, #0
 8023aaa:	ed80 0a00 	vstr	s0, [r0]
 8023aae:	6043      	str	r3, [r0, #4]
 8023ab0:	2000      	movs	r0, #0
 8023ab2:	e022      	b.n	8023afa <__ieee754_rem_pio2f+0x66>
 8023ab4:	4b82      	ldr	r3, [pc, #520]	@ (8023cc0 <__ieee754_rem_pio2f+0x22c>)
 8023ab6:	429d      	cmp	r5, r3
 8023ab8:	d83a      	bhi.n	8023b30 <__ieee754_rem_pio2f+0x9c>
 8023aba:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8023abe:	2e00      	cmp	r6, #0
 8023ac0:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8023cc4 <__ieee754_rem_pio2f+0x230>
 8023ac4:	4a80      	ldr	r2, [pc, #512]	@ (8023cc8 <__ieee754_rem_pio2f+0x234>)
 8023ac6:	f023 030f 	bic.w	r3, r3, #15
 8023aca:	dd18      	ble.n	8023afe <__ieee754_rem_pio2f+0x6a>
 8023acc:	4293      	cmp	r3, r2
 8023ace:	ee70 7a47 	vsub.f32	s15, s0, s14
 8023ad2:	bf09      	itett	eq
 8023ad4:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8023ccc <__ieee754_rem_pio2f+0x238>
 8023ad8:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 8023cd0 <__ieee754_rem_pio2f+0x23c>
 8023adc:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8023cd4 <__ieee754_rem_pio2f+0x240>
 8023ae0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8023ae4:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8023ae8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023aec:	ed80 7a00 	vstr	s14, [r0]
 8023af0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8023af4:	edc0 7a01 	vstr	s15, [r0, #4]
 8023af8:	2001      	movs	r0, #1
 8023afa:	b007      	add	sp, #28
 8023afc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023afe:	4293      	cmp	r3, r2
 8023b00:	ee70 7a07 	vadd.f32	s15, s0, s14
 8023b04:	bf09      	itett	eq
 8023b06:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8023ccc <__ieee754_rem_pio2f+0x238>
 8023b0a:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 8023cd0 <__ieee754_rem_pio2f+0x23c>
 8023b0e:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8023cd4 <__ieee754_rem_pio2f+0x240>
 8023b12:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8023b16:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8023b1a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023b1e:	ed80 7a00 	vstr	s14, [r0]
 8023b22:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8023b26:	edc0 7a01 	vstr	s15, [r0, #4]
 8023b2a:	f04f 30ff 	mov.w	r0, #4294967295
 8023b2e:	e7e4      	b.n	8023afa <__ieee754_rem_pio2f+0x66>
 8023b30:	4b69      	ldr	r3, [pc, #420]	@ (8023cd8 <__ieee754_rem_pio2f+0x244>)
 8023b32:	429d      	cmp	r5, r3
 8023b34:	d873      	bhi.n	8023c1e <__ieee754_rem_pio2f+0x18a>
 8023b36:	f000 f9b1 	bl	8023e9c <fabsf>
 8023b3a:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8023cdc <__ieee754_rem_pio2f+0x248>
 8023b3e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8023b42:	eee0 7a07 	vfma.f32	s15, s0, s14
 8023b46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8023b4a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8023b4e:	ee17 0a90 	vmov	r0, s15
 8023b52:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8023cc4 <__ieee754_rem_pio2f+0x230>
 8023b56:	eea7 0a67 	vfms.f32	s0, s14, s15
 8023b5a:	281f      	cmp	r0, #31
 8023b5c:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8023cd0 <__ieee754_rem_pio2f+0x23c>
 8023b60:	ee67 7a27 	vmul.f32	s15, s14, s15
 8023b64:	eeb1 6a47 	vneg.f32	s12, s14
 8023b68:	ee70 6a67 	vsub.f32	s13, s0, s15
 8023b6c:	ee16 1a90 	vmov	r1, s13
 8023b70:	dc09      	bgt.n	8023b86 <__ieee754_rem_pio2f+0xf2>
 8023b72:	4a5b      	ldr	r2, [pc, #364]	@ (8023ce0 <__ieee754_rem_pio2f+0x24c>)
 8023b74:	1e47      	subs	r7, r0, #1
 8023b76:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8023b7a:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8023b7e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8023b82:	4293      	cmp	r3, r2
 8023b84:	d107      	bne.n	8023b96 <__ieee754_rem_pio2f+0x102>
 8023b86:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8023b8a:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8023b8e:	2a08      	cmp	r2, #8
 8023b90:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8023b94:	dc14      	bgt.n	8023bc0 <__ieee754_rem_pio2f+0x12c>
 8023b96:	6021      	str	r1, [r4, #0]
 8023b98:	ed94 7a00 	vldr	s14, [r4]
 8023b9c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8023ba0:	2e00      	cmp	r6, #0
 8023ba2:	ee30 0a67 	vsub.f32	s0, s0, s15
 8023ba6:	ed84 0a01 	vstr	s0, [r4, #4]
 8023baa:	daa6      	bge.n	8023afa <__ieee754_rem_pio2f+0x66>
 8023bac:	eeb1 7a47 	vneg.f32	s14, s14
 8023bb0:	eeb1 0a40 	vneg.f32	s0, s0
 8023bb4:	ed84 7a00 	vstr	s14, [r4]
 8023bb8:	ed84 0a01 	vstr	s0, [r4, #4]
 8023bbc:	4240      	negs	r0, r0
 8023bbe:	e79c      	b.n	8023afa <__ieee754_rem_pio2f+0x66>
 8023bc0:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8023ccc <__ieee754_rem_pio2f+0x238>
 8023bc4:	eef0 6a40 	vmov.f32	s13, s0
 8023bc8:	eee6 6a25 	vfma.f32	s13, s12, s11
 8023bcc:	ee70 7a66 	vsub.f32	s15, s0, s13
 8023bd0:	eee6 7a25 	vfma.f32	s15, s12, s11
 8023bd4:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8023cd4 <__ieee754_rem_pio2f+0x240>
 8023bd8:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8023bdc:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8023be0:	ee15 2a90 	vmov	r2, s11
 8023be4:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8023be8:	1a5b      	subs	r3, r3, r1
 8023bea:	2b19      	cmp	r3, #25
 8023bec:	dc04      	bgt.n	8023bf8 <__ieee754_rem_pio2f+0x164>
 8023bee:	edc4 5a00 	vstr	s11, [r4]
 8023bf2:	eeb0 0a66 	vmov.f32	s0, s13
 8023bf6:	e7cf      	b.n	8023b98 <__ieee754_rem_pio2f+0x104>
 8023bf8:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8023ce4 <__ieee754_rem_pio2f+0x250>
 8023bfc:	eeb0 0a66 	vmov.f32	s0, s13
 8023c00:	eea6 0a25 	vfma.f32	s0, s12, s11
 8023c04:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8023c08:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8023ce8 <__ieee754_rem_pio2f+0x254>
 8023c0c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8023c10:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8023c14:	ee30 7a67 	vsub.f32	s14, s0, s15
 8023c18:	ed84 7a00 	vstr	s14, [r4]
 8023c1c:	e7bc      	b.n	8023b98 <__ieee754_rem_pio2f+0x104>
 8023c1e:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8023c22:	d306      	bcc.n	8023c32 <__ieee754_rem_pio2f+0x19e>
 8023c24:	ee70 7a40 	vsub.f32	s15, s0, s0
 8023c28:	edc0 7a01 	vstr	s15, [r0, #4]
 8023c2c:	edc0 7a00 	vstr	s15, [r0]
 8023c30:	e73e      	b.n	8023ab0 <__ieee754_rem_pio2f+0x1c>
 8023c32:	15ea      	asrs	r2, r5, #23
 8023c34:	3a86      	subs	r2, #134	@ 0x86
 8023c36:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8023c3a:	ee07 3a90 	vmov	s15, r3
 8023c3e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8023c42:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8023cec <__ieee754_rem_pio2f+0x258>
 8023c46:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8023c4a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023c4e:	ed8d 7a03 	vstr	s14, [sp, #12]
 8023c52:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8023c56:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8023c5a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8023c5e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023c62:	ed8d 7a04 	vstr	s14, [sp, #16]
 8023c66:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8023c6a:	eef5 7a40 	vcmp.f32	s15, #0.0
 8023c6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023c72:	edcd 7a05 	vstr	s15, [sp, #20]
 8023c76:	d11e      	bne.n	8023cb6 <__ieee754_rem_pio2f+0x222>
 8023c78:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8023c7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023c80:	bf0c      	ite	eq
 8023c82:	2301      	moveq	r3, #1
 8023c84:	2302      	movne	r3, #2
 8023c86:	491a      	ldr	r1, [pc, #104]	@ (8023cf0 <__ieee754_rem_pio2f+0x25c>)
 8023c88:	9101      	str	r1, [sp, #4]
 8023c8a:	2102      	movs	r1, #2
 8023c8c:	9100      	str	r1, [sp, #0]
 8023c8e:	a803      	add	r0, sp, #12
 8023c90:	4621      	mov	r1, r4
 8023c92:	f000 f90b 	bl	8023eac <__kernel_rem_pio2f>
 8023c96:	2e00      	cmp	r6, #0
 8023c98:	f6bf af2f 	bge.w	8023afa <__ieee754_rem_pio2f+0x66>
 8023c9c:	edd4 7a00 	vldr	s15, [r4]
 8023ca0:	eef1 7a67 	vneg.f32	s15, s15
 8023ca4:	edc4 7a00 	vstr	s15, [r4]
 8023ca8:	edd4 7a01 	vldr	s15, [r4, #4]
 8023cac:	eef1 7a67 	vneg.f32	s15, s15
 8023cb0:	edc4 7a01 	vstr	s15, [r4, #4]
 8023cb4:	e782      	b.n	8023bbc <__ieee754_rem_pio2f+0x128>
 8023cb6:	2303      	movs	r3, #3
 8023cb8:	e7e5      	b.n	8023c86 <__ieee754_rem_pio2f+0x1f2>
 8023cba:	bf00      	nop
 8023cbc:	3f490fd8 	.word	0x3f490fd8
 8023cc0:	4016cbe3 	.word	0x4016cbe3
 8023cc4:	3fc90f80 	.word	0x3fc90f80
 8023cc8:	3fc90fd0 	.word	0x3fc90fd0
 8023ccc:	37354400 	.word	0x37354400
 8023cd0:	37354443 	.word	0x37354443
 8023cd4:	2e85a308 	.word	0x2e85a308
 8023cd8:	43490f80 	.word	0x43490f80
 8023cdc:	3f22f984 	.word	0x3f22f984
 8023ce0:	08027a7c 	.word	0x08027a7c
 8023ce4:	2e85a300 	.word	0x2e85a300
 8023ce8:	248d3132 	.word	0x248d3132
 8023cec:	43800000 	.word	0x43800000
 8023cf0:	08027afc 	.word	0x08027afc

08023cf4 <atanf>:
 8023cf4:	b538      	push	{r3, r4, r5, lr}
 8023cf6:	ee10 5a10 	vmov	r5, s0
 8023cfa:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 8023cfe:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 8023d02:	eef0 7a40 	vmov.f32	s15, s0
 8023d06:	d310      	bcc.n	8023d2a <atanf+0x36>
 8023d08:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8023d0c:	d904      	bls.n	8023d18 <atanf+0x24>
 8023d0e:	ee70 7a00 	vadd.f32	s15, s0, s0
 8023d12:	eeb0 0a67 	vmov.f32	s0, s15
 8023d16:	bd38      	pop	{r3, r4, r5, pc}
 8023d18:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8023e50 <atanf+0x15c>
 8023d1c:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 8023e54 <atanf+0x160>
 8023d20:	2d00      	cmp	r5, #0
 8023d22:	bfc8      	it	gt
 8023d24:	eef0 7a47 	vmovgt.f32	s15, s14
 8023d28:	e7f3      	b.n	8023d12 <atanf+0x1e>
 8023d2a:	4b4b      	ldr	r3, [pc, #300]	@ (8023e58 <atanf+0x164>)
 8023d2c:	429c      	cmp	r4, r3
 8023d2e:	d810      	bhi.n	8023d52 <atanf+0x5e>
 8023d30:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 8023d34:	d20a      	bcs.n	8023d4c <atanf+0x58>
 8023d36:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8023e5c <atanf+0x168>
 8023d3a:	ee30 7a07 	vadd.f32	s14, s0, s14
 8023d3e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8023d42:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8023d46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8023d4a:	dce2      	bgt.n	8023d12 <atanf+0x1e>
 8023d4c:	f04f 33ff 	mov.w	r3, #4294967295
 8023d50:	e013      	b.n	8023d7a <atanf+0x86>
 8023d52:	f000 f8a3 	bl	8023e9c <fabsf>
 8023d56:	4b42      	ldr	r3, [pc, #264]	@ (8023e60 <atanf+0x16c>)
 8023d58:	429c      	cmp	r4, r3
 8023d5a:	d84f      	bhi.n	8023dfc <atanf+0x108>
 8023d5c:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8023d60:	429c      	cmp	r4, r3
 8023d62:	d841      	bhi.n	8023de8 <atanf+0xf4>
 8023d64:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 8023d68:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8023d6c:	eea0 7a27 	vfma.f32	s14, s0, s15
 8023d70:	2300      	movs	r3, #0
 8023d72:	ee30 0a27 	vadd.f32	s0, s0, s15
 8023d76:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023d7a:	1c5a      	adds	r2, r3, #1
 8023d7c:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8023d80:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8023e64 <atanf+0x170>
 8023d84:	eddf 5a38 	vldr	s11, [pc, #224]	@ 8023e68 <atanf+0x174>
 8023d88:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 8023e6c <atanf+0x178>
 8023d8c:	ee66 6a06 	vmul.f32	s13, s12, s12
 8023d90:	eee6 5a87 	vfma.f32	s11, s13, s14
 8023d94:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 8023e70 <atanf+0x17c>
 8023d98:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8023d9c:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8023e74 <atanf+0x180>
 8023da0:	eee7 5a26 	vfma.f32	s11, s14, s13
 8023da4:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8023e78 <atanf+0x184>
 8023da8:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8023dac:	eddf 5a33 	vldr	s11, [pc, #204]	@ 8023e7c <atanf+0x188>
 8023db0:	eee7 5a26 	vfma.f32	s11, s14, s13
 8023db4:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8023e80 <atanf+0x18c>
 8023db8:	eea6 5a87 	vfma.f32	s10, s13, s14
 8023dbc:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8023e84 <atanf+0x190>
 8023dc0:	eea5 7a26 	vfma.f32	s14, s10, s13
 8023dc4:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 8023e88 <atanf+0x194>
 8023dc8:	eea7 5a26 	vfma.f32	s10, s14, s13
 8023dcc:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 8023e8c <atanf+0x198>
 8023dd0:	eea5 7a26 	vfma.f32	s14, s10, s13
 8023dd4:	ee27 7a26 	vmul.f32	s14, s14, s13
 8023dd8:	eea5 7a86 	vfma.f32	s14, s11, s12
 8023ddc:	ee27 7a87 	vmul.f32	s14, s15, s14
 8023de0:	d121      	bne.n	8023e26 <atanf+0x132>
 8023de2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023de6:	e794      	b.n	8023d12 <atanf+0x1e>
 8023de8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8023dec:	ee30 7a67 	vsub.f32	s14, s0, s15
 8023df0:	ee30 0a27 	vadd.f32	s0, s0, s15
 8023df4:	2301      	movs	r3, #1
 8023df6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023dfa:	e7be      	b.n	8023d7a <atanf+0x86>
 8023dfc:	4b24      	ldr	r3, [pc, #144]	@ (8023e90 <atanf+0x19c>)
 8023dfe:	429c      	cmp	r4, r3
 8023e00:	d80b      	bhi.n	8023e1a <atanf+0x126>
 8023e02:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8023e06:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023e0a:	eea0 7a27 	vfma.f32	s14, s0, s15
 8023e0e:	2302      	movs	r3, #2
 8023e10:	ee70 6a67 	vsub.f32	s13, s0, s15
 8023e14:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8023e18:	e7af      	b.n	8023d7a <atanf+0x86>
 8023e1a:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8023e1e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023e22:	2303      	movs	r3, #3
 8023e24:	e7a9      	b.n	8023d7a <atanf+0x86>
 8023e26:	4a1b      	ldr	r2, [pc, #108]	@ (8023e94 <atanf+0x1a0>)
 8023e28:	491b      	ldr	r1, [pc, #108]	@ (8023e98 <atanf+0x1a4>)
 8023e2a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8023e2e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8023e32:	edd3 6a00 	vldr	s13, [r3]
 8023e36:	ee37 7a66 	vsub.f32	s14, s14, s13
 8023e3a:	2d00      	cmp	r5, #0
 8023e3c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8023e40:	edd2 7a00 	vldr	s15, [r2]
 8023e44:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8023e48:	bfb8      	it	lt
 8023e4a:	eef1 7a67 	vneglt.f32	s15, s15
 8023e4e:	e760      	b.n	8023d12 <atanf+0x1e>
 8023e50:	bfc90fdb 	.word	0xbfc90fdb
 8023e54:	3fc90fdb 	.word	0x3fc90fdb
 8023e58:	3edfffff 	.word	0x3edfffff
 8023e5c:	7149f2ca 	.word	0x7149f2ca
 8023e60:	3f97ffff 	.word	0x3f97ffff
 8023e64:	3c8569d7 	.word	0x3c8569d7
 8023e68:	3d4bda59 	.word	0x3d4bda59
 8023e6c:	bd6ef16b 	.word	0xbd6ef16b
 8023e70:	3d886b35 	.word	0x3d886b35
 8023e74:	3dba2e6e 	.word	0x3dba2e6e
 8023e78:	3e124925 	.word	0x3e124925
 8023e7c:	3eaaaaab 	.word	0x3eaaaaab
 8023e80:	bd15a221 	.word	0xbd15a221
 8023e84:	bd9d8795 	.word	0xbd9d8795
 8023e88:	bde38e38 	.word	0xbde38e38
 8023e8c:	be4ccccd 	.word	0xbe4ccccd
 8023e90:	401bffff 	.word	0x401bffff
 8023e94:	08027e24 	.word	0x08027e24
 8023e98:	08027e14 	.word	0x08027e14

08023e9c <fabsf>:
 8023e9c:	ee10 3a10 	vmov	r3, s0
 8023ea0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8023ea4:	ee00 3a10 	vmov	s0, r3
 8023ea8:	4770      	bx	lr
	...

08023eac <__kernel_rem_pio2f>:
 8023eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023eb0:	ed2d 8b04 	vpush	{d8-d9}
 8023eb4:	b0d9      	sub	sp, #356	@ 0x164
 8023eb6:	4690      	mov	r8, r2
 8023eb8:	9001      	str	r0, [sp, #4]
 8023eba:	4ab6      	ldr	r2, [pc, #728]	@ (8024194 <__kernel_rem_pio2f+0x2e8>)
 8023ebc:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8023ebe:	f118 0f04 	cmn.w	r8, #4
 8023ec2:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8023ec6:	460f      	mov	r7, r1
 8023ec8:	f103 3bff 	add.w	fp, r3, #4294967295
 8023ecc:	db26      	blt.n	8023f1c <__kernel_rem_pio2f+0x70>
 8023ece:	f1b8 0203 	subs.w	r2, r8, #3
 8023ed2:	bf48      	it	mi
 8023ed4:	f108 0204 	addmi.w	r2, r8, #4
 8023ed8:	10d2      	asrs	r2, r2, #3
 8023eda:	1c55      	adds	r5, r2, #1
 8023edc:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8023ede:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 80241a4 <__kernel_rem_pio2f+0x2f8>
 8023ee2:	00e8      	lsls	r0, r5, #3
 8023ee4:	eba2 060b 	sub.w	r6, r2, fp
 8023ee8:	9002      	str	r0, [sp, #8]
 8023eea:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8023eee:	eb0a 0c0b 	add.w	ip, sl, fp
 8023ef2:	ac1c      	add	r4, sp, #112	@ 0x70
 8023ef4:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8023ef8:	2000      	movs	r0, #0
 8023efa:	4560      	cmp	r0, ip
 8023efc:	dd10      	ble.n	8023f20 <__kernel_rem_pio2f+0x74>
 8023efe:	a91c      	add	r1, sp, #112	@ 0x70
 8023f00:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8023f04:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8023f08:	2600      	movs	r6, #0
 8023f0a:	4556      	cmp	r6, sl
 8023f0c:	dc24      	bgt.n	8023f58 <__kernel_rem_pio2f+0xac>
 8023f0e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8023f12:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 80241a4 <__kernel_rem_pio2f+0x2f8>
 8023f16:	4684      	mov	ip, r0
 8023f18:	2400      	movs	r4, #0
 8023f1a:	e016      	b.n	8023f4a <__kernel_rem_pio2f+0x9e>
 8023f1c:	2200      	movs	r2, #0
 8023f1e:	e7dc      	b.n	8023eda <__kernel_rem_pio2f+0x2e>
 8023f20:	42c6      	cmn	r6, r0
 8023f22:	bf5d      	ittte	pl
 8023f24:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8023f28:	ee07 1a90 	vmovpl	s15, r1
 8023f2c:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8023f30:	eef0 7a47 	vmovmi.f32	s15, s14
 8023f34:	ece4 7a01 	vstmia	r4!, {s15}
 8023f38:	3001      	adds	r0, #1
 8023f3a:	e7de      	b.n	8023efa <__kernel_rem_pio2f+0x4e>
 8023f3c:	ecfe 6a01 	vldmia	lr!, {s13}
 8023f40:	ed3c 7a01 	vldmdb	ip!, {s14}
 8023f44:	eee6 7a87 	vfma.f32	s15, s13, s14
 8023f48:	3401      	adds	r4, #1
 8023f4a:	455c      	cmp	r4, fp
 8023f4c:	ddf6      	ble.n	8023f3c <__kernel_rem_pio2f+0x90>
 8023f4e:	ece9 7a01 	vstmia	r9!, {s15}
 8023f52:	3601      	adds	r6, #1
 8023f54:	3004      	adds	r0, #4
 8023f56:	e7d8      	b.n	8023f0a <__kernel_rem_pio2f+0x5e>
 8023f58:	a908      	add	r1, sp, #32
 8023f5a:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8023f5e:	9104      	str	r1, [sp, #16]
 8023f60:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8023f62:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 80241a0 <__kernel_rem_pio2f+0x2f4>
 8023f66:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 802419c <__kernel_rem_pio2f+0x2f0>
 8023f6a:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8023f6e:	9203      	str	r2, [sp, #12]
 8023f70:	4654      	mov	r4, sl
 8023f72:	00a2      	lsls	r2, r4, #2
 8023f74:	9205      	str	r2, [sp, #20]
 8023f76:	aa58      	add	r2, sp, #352	@ 0x160
 8023f78:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 8023f7c:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8023f80:	a944      	add	r1, sp, #272	@ 0x110
 8023f82:	aa08      	add	r2, sp, #32
 8023f84:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8023f88:	4694      	mov	ip, r2
 8023f8a:	4626      	mov	r6, r4
 8023f8c:	2e00      	cmp	r6, #0
 8023f8e:	dc4c      	bgt.n	802402a <__kernel_rem_pio2f+0x17e>
 8023f90:	4628      	mov	r0, r5
 8023f92:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8023f96:	f000 f9f1 	bl	802437c <scalbnf>
 8023f9a:	eeb0 8a40 	vmov.f32	s16, s0
 8023f9e:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8023fa2:	ee28 0a00 	vmul.f32	s0, s16, s0
 8023fa6:	f000 fa4f 	bl	8024448 <floorf>
 8023faa:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8023fae:	eea0 8a67 	vfms.f32	s16, s0, s15
 8023fb2:	2d00      	cmp	r5, #0
 8023fb4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8023fb8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8023fbc:	ee17 9a90 	vmov	r9, s15
 8023fc0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8023fc4:	ee38 8a67 	vsub.f32	s16, s16, s15
 8023fc8:	dd41      	ble.n	802404e <__kernel_rem_pio2f+0x1a2>
 8023fca:	f104 3cff 	add.w	ip, r4, #4294967295
 8023fce:	a908      	add	r1, sp, #32
 8023fd0:	f1c5 0e08 	rsb	lr, r5, #8
 8023fd4:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8023fd8:	fa46 f00e 	asr.w	r0, r6, lr
 8023fdc:	4481      	add	r9, r0
 8023fde:	fa00 f00e 	lsl.w	r0, r0, lr
 8023fe2:	1a36      	subs	r6, r6, r0
 8023fe4:	f1c5 0007 	rsb	r0, r5, #7
 8023fe8:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8023fec:	4106      	asrs	r6, r0
 8023fee:	2e00      	cmp	r6, #0
 8023ff0:	dd3c      	ble.n	802406c <__kernel_rem_pio2f+0x1c0>
 8023ff2:	f04f 0e00 	mov.w	lr, #0
 8023ff6:	f109 0901 	add.w	r9, r9, #1
 8023ffa:	4670      	mov	r0, lr
 8023ffc:	4574      	cmp	r4, lr
 8023ffe:	dc68      	bgt.n	80240d2 <__kernel_rem_pio2f+0x226>
 8024000:	2d00      	cmp	r5, #0
 8024002:	dd03      	ble.n	802400c <__kernel_rem_pio2f+0x160>
 8024004:	2d01      	cmp	r5, #1
 8024006:	d074      	beq.n	80240f2 <__kernel_rem_pio2f+0x246>
 8024008:	2d02      	cmp	r5, #2
 802400a:	d07d      	beq.n	8024108 <__kernel_rem_pio2f+0x25c>
 802400c:	2e02      	cmp	r6, #2
 802400e:	d12d      	bne.n	802406c <__kernel_rem_pio2f+0x1c0>
 8024010:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8024014:	ee30 8a48 	vsub.f32	s16, s0, s16
 8024018:	b340      	cbz	r0, 802406c <__kernel_rem_pio2f+0x1c0>
 802401a:	4628      	mov	r0, r5
 802401c:	9306      	str	r3, [sp, #24]
 802401e:	f000 f9ad 	bl	802437c <scalbnf>
 8024022:	9b06      	ldr	r3, [sp, #24]
 8024024:	ee38 8a40 	vsub.f32	s16, s16, s0
 8024028:	e020      	b.n	802406c <__kernel_rem_pio2f+0x1c0>
 802402a:	ee60 7a28 	vmul.f32	s15, s0, s17
 802402e:	3e01      	subs	r6, #1
 8024030:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8024034:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024038:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802403c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8024040:	ecac 0a01 	vstmia	ip!, {s0}
 8024044:	ed30 0a01 	vldmdb	r0!, {s0}
 8024048:	ee37 0a80 	vadd.f32	s0, s15, s0
 802404c:	e79e      	b.n	8023f8c <__kernel_rem_pio2f+0xe0>
 802404e:	d105      	bne.n	802405c <__kernel_rem_pio2f+0x1b0>
 8024050:	1e60      	subs	r0, r4, #1
 8024052:	a908      	add	r1, sp, #32
 8024054:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8024058:	11f6      	asrs	r6, r6, #7
 802405a:	e7c8      	b.n	8023fee <__kernel_rem_pio2f+0x142>
 802405c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8024060:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8024064:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024068:	da31      	bge.n	80240ce <__kernel_rem_pio2f+0x222>
 802406a:	2600      	movs	r6, #0
 802406c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8024070:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8024074:	f040 8098 	bne.w	80241a8 <__kernel_rem_pio2f+0x2fc>
 8024078:	1e60      	subs	r0, r4, #1
 802407a:	2200      	movs	r2, #0
 802407c:	4550      	cmp	r0, sl
 802407e:	da4b      	bge.n	8024118 <__kernel_rem_pio2f+0x26c>
 8024080:	2a00      	cmp	r2, #0
 8024082:	d065      	beq.n	8024150 <__kernel_rem_pio2f+0x2a4>
 8024084:	3c01      	subs	r4, #1
 8024086:	ab08      	add	r3, sp, #32
 8024088:	3d08      	subs	r5, #8
 802408a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802408e:	2b00      	cmp	r3, #0
 8024090:	d0f8      	beq.n	8024084 <__kernel_rem_pio2f+0x1d8>
 8024092:	4628      	mov	r0, r5
 8024094:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8024098:	f000 f970 	bl	802437c <scalbnf>
 802409c:	1c63      	adds	r3, r4, #1
 802409e:	aa44      	add	r2, sp, #272	@ 0x110
 80240a0:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 80241a0 <__kernel_rem_pio2f+0x2f4>
 80240a4:	0099      	lsls	r1, r3, #2
 80240a6:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80240aa:	4623      	mov	r3, r4
 80240ac:	2b00      	cmp	r3, #0
 80240ae:	f280 80a9 	bge.w	8024204 <__kernel_rem_pio2f+0x358>
 80240b2:	4623      	mov	r3, r4
 80240b4:	2b00      	cmp	r3, #0
 80240b6:	f2c0 80c7 	blt.w	8024248 <__kernel_rem_pio2f+0x39c>
 80240ba:	aa44      	add	r2, sp, #272	@ 0x110
 80240bc:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80240c0:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8024198 <__kernel_rem_pio2f+0x2ec>
 80240c4:	eddf 7a37 	vldr	s15, [pc, #220]	@ 80241a4 <__kernel_rem_pio2f+0x2f8>
 80240c8:	2000      	movs	r0, #0
 80240ca:	1ae2      	subs	r2, r4, r3
 80240cc:	e0b1      	b.n	8024232 <__kernel_rem_pio2f+0x386>
 80240ce:	2602      	movs	r6, #2
 80240d0:	e78f      	b.n	8023ff2 <__kernel_rem_pio2f+0x146>
 80240d2:	f852 1b04 	ldr.w	r1, [r2], #4
 80240d6:	b948      	cbnz	r0, 80240ec <__kernel_rem_pio2f+0x240>
 80240d8:	b121      	cbz	r1, 80240e4 <__kernel_rem_pio2f+0x238>
 80240da:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 80240de:	f842 1c04 	str.w	r1, [r2, #-4]
 80240e2:	2101      	movs	r1, #1
 80240e4:	f10e 0e01 	add.w	lr, lr, #1
 80240e8:	4608      	mov	r0, r1
 80240ea:	e787      	b.n	8023ffc <__kernel_rem_pio2f+0x150>
 80240ec:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 80240f0:	e7f5      	b.n	80240de <__kernel_rem_pio2f+0x232>
 80240f2:	f104 3cff 	add.w	ip, r4, #4294967295
 80240f6:	aa08      	add	r2, sp, #32
 80240f8:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80240fc:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8024100:	a908      	add	r1, sp, #32
 8024102:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 8024106:	e781      	b.n	802400c <__kernel_rem_pio2f+0x160>
 8024108:	f104 3cff 	add.w	ip, r4, #4294967295
 802410c:	aa08      	add	r2, sp, #32
 802410e:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8024112:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8024116:	e7f3      	b.n	8024100 <__kernel_rem_pio2f+0x254>
 8024118:	a908      	add	r1, sp, #32
 802411a:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 802411e:	3801      	subs	r0, #1
 8024120:	430a      	orrs	r2, r1
 8024122:	e7ab      	b.n	802407c <__kernel_rem_pio2f+0x1d0>
 8024124:	3201      	adds	r2, #1
 8024126:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 802412a:	2e00      	cmp	r6, #0
 802412c:	d0fa      	beq.n	8024124 <__kernel_rem_pio2f+0x278>
 802412e:	9905      	ldr	r1, [sp, #20]
 8024130:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 8024134:	eb0d 0001 	add.w	r0, sp, r1
 8024138:	18e6      	adds	r6, r4, r3
 802413a:	a91c      	add	r1, sp, #112	@ 0x70
 802413c:	f104 0c01 	add.w	ip, r4, #1
 8024140:	384c      	subs	r0, #76	@ 0x4c
 8024142:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8024146:	4422      	add	r2, r4
 8024148:	4562      	cmp	r2, ip
 802414a:	da04      	bge.n	8024156 <__kernel_rem_pio2f+0x2aa>
 802414c:	4614      	mov	r4, r2
 802414e:	e710      	b.n	8023f72 <__kernel_rem_pio2f+0xc6>
 8024150:	9804      	ldr	r0, [sp, #16]
 8024152:	2201      	movs	r2, #1
 8024154:	e7e7      	b.n	8024126 <__kernel_rem_pio2f+0x27a>
 8024156:	9903      	ldr	r1, [sp, #12]
 8024158:	f8dd e004 	ldr.w	lr, [sp, #4]
 802415c:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8024160:	9105      	str	r1, [sp, #20]
 8024162:	ee07 1a90 	vmov	s15, r1
 8024166:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802416a:	2400      	movs	r4, #0
 802416c:	ece6 7a01 	vstmia	r6!, {s15}
 8024170:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 80241a4 <__kernel_rem_pio2f+0x2f8>
 8024174:	46b1      	mov	r9, r6
 8024176:	455c      	cmp	r4, fp
 8024178:	dd04      	ble.n	8024184 <__kernel_rem_pio2f+0x2d8>
 802417a:	ece0 7a01 	vstmia	r0!, {s15}
 802417e:	f10c 0c01 	add.w	ip, ip, #1
 8024182:	e7e1      	b.n	8024148 <__kernel_rem_pio2f+0x29c>
 8024184:	ecfe 6a01 	vldmia	lr!, {s13}
 8024188:	ed39 7a01 	vldmdb	r9!, {s14}
 802418c:	3401      	adds	r4, #1
 802418e:	eee6 7a87 	vfma.f32	s15, s13, s14
 8024192:	e7f0      	b.n	8024176 <__kernel_rem_pio2f+0x2ca>
 8024194:	08027e60 	.word	0x08027e60
 8024198:	08027e34 	.word	0x08027e34
 802419c:	43800000 	.word	0x43800000
 80241a0:	3b800000 	.word	0x3b800000
 80241a4:	00000000 	.word	0x00000000
 80241a8:	9b02      	ldr	r3, [sp, #8]
 80241aa:	eeb0 0a48 	vmov.f32	s0, s16
 80241ae:	eba3 0008 	sub.w	r0, r3, r8
 80241b2:	f000 f8e3 	bl	802437c <scalbnf>
 80241b6:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 802419c <__kernel_rem_pio2f+0x2f0>
 80241ba:	eeb4 0ac7 	vcmpe.f32	s0, s14
 80241be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80241c2:	db19      	blt.n	80241f8 <__kernel_rem_pio2f+0x34c>
 80241c4:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 80241a0 <__kernel_rem_pio2f+0x2f4>
 80241c8:	ee60 7a27 	vmul.f32	s15, s0, s15
 80241cc:	aa08      	add	r2, sp, #32
 80241ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80241d2:	3508      	adds	r5, #8
 80241d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80241d8:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80241dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80241e0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80241e4:	ee10 3a10 	vmov	r3, s0
 80241e8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80241ec:	ee17 3a90 	vmov	r3, s15
 80241f0:	3401      	adds	r4, #1
 80241f2:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80241f6:	e74c      	b.n	8024092 <__kernel_rem_pio2f+0x1e6>
 80241f8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80241fc:	aa08      	add	r2, sp, #32
 80241fe:	ee10 3a10 	vmov	r3, s0
 8024202:	e7f6      	b.n	80241f2 <__kernel_rem_pio2f+0x346>
 8024204:	a808      	add	r0, sp, #32
 8024206:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802420a:	9001      	str	r0, [sp, #4]
 802420c:	ee07 0a90 	vmov	s15, r0
 8024210:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8024214:	3b01      	subs	r3, #1
 8024216:	ee67 7a80 	vmul.f32	s15, s15, s0
 802421a:	ee20 0a07 	vmul.f32	s0, s0, s14
 802421e:	ed62 7a01 	vstmdb	r2!, {s15}
 8024222:	e743      	b.n	80240ac <__kernel_rem_pio2f+0x200>
 8024224:	ecfc 6a01 	vldmia	ip!, {s13}
 8024228:	ecb5 7a01 	vldmia	r5!, {s14}
 802422c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8024230:	3001      	adds	r0, #1
 8024232:	4550      	cmp	r0, sl
 8024234:	dc01      	bgt.n	802423a <__kernel_rem_pio2f+0x38e>
 8024236:	4290      	cmp	r0, r2
 8024238:	ddf4      	ble.n	8024224 <__kernel_rem_pio2f+0x378>
 802423a:	a858      	add	r0, sp, #352	@ 0x160
 802423c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8024240:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 8024244:	3b01      	subs	r3, #1
 8024246:	e735      	b.n	80240b4 <__kernel_rem_pio2f+0x208>
 8024248:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802424a:	2b02      	cmp	r3, #2
 802424c:	dc09      	bgt.n	8024262 <__kernel_rem_pio2f+0x3b6>
 802424e:	2b00      	cmp	r3, #0
 8024250:	dc27      	bgt.n	80242a2 <__kernel_rem_pio2f+0x3f6>
 8024252:	d040      	beq.n	80242d6 <__kernel_rem_pio2f+0x42a>
 8024254:	f009 0007 	and.w	r0, r9, #7
 8024258:	b059      	add	sp, #356	@ 0x164
 802425a:	ecbd 8b04 	vpop	{d8-d9}
 802425e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024262:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8024264:	2b03      	cmp	r3, #3
 8024266:	d1f5      	bne.n	8024254 <__kernel_rem_pio2f+0x3a8>
 8024268:	aa30      	add	r2, sp, #192	@ 0xc0
 802426a:	1f0b      	subs	r3, r1, #4
 802426c:	4413      	add	r3, r2
 802426e:	461a      	mov	r2, r3
 8024270:	4620      	mov	r0, r4
 8024272:	2800      	cmp	r0, #0
 8024274:	dc50      	bgt.n	8024318 <__kernel_rem_pio2f+0x46c>
 8024276:	4622      	mov	r2, r4
 8024278:	2a01      	cmp	r2, #1
 802427a:	dc5d      	bgt.n	8024338 <__kernel_rem_pio2f+0x48c>
 802427c:	ab30      	add	r3, sp, #192	@ 0xc0
 802427e:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 80241a4 <__kernel_rem_pio2f+0x2f8>
 8024282:	440b      	add	r3, r1
 8024284:	2c01      	cmp	r4, #1
 8024286:	dc67      	bgt.n	8024358 <__kernel_rem_pio2f+0x4ac>
 8024288:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 802428c:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8024290:	2e00      	cmp	r6, #0
 8024292:	d167      	bne.n	8024364 <__kernel_rem_pio2f+0x4b8>
 8024294:	edc7 6a00 	vstr	s13, [r7]
 8024298:	ed87 7a01 	vstr	s14, [r7, #4]
 802429c:	edc7 7a02 	vstr	s15, [r7, #8]
 80242a0:	e7d8      	b.n	8024254 <__kernel_rem_pio2f+0x3a8>
 80242a2:	ab30      	add	r3, sp, #192	@ 0xc0
 80242a4:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 80241a4 <__kernel_rem_pio2f+0x2f8>
 80242a8:	440b      	add	r3, r1
 80242aa:	4622      	mov	r2, r4
 80242ac:	2a00      	cmp	r2, #0
 80242ae:	da24      	bge.n	80242fa <__kernel_rem_pio2f+0x44e>
 80242b0:	b34e      	cbz	r6, 8024306 <__kernel_rem_pio2f+0x45a>
 80242b2:	eef1 7a47 	vneg.f32	s15, s14
 80242b6:	edc7 7a00 	vstr	s15, [r7]
 80242ba:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 80242be:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80242c2:	aa31      	add	r2, sp, #196	@ 0xc4
 80242c4:	2301      	movs	r3, #1
 80242c6:	429c      	cmp	r4, r3
 80242c8:	da20      	bge.n	802430c <__kernel_rem_pio2f+0x460>
 80242ca:	b10e      	cbz	r6, 80242d0 <__kernel_rem_pio2f+0x424>
 80242cc:	eef1 7a67 	vneg.f32	s15, s15
 80242d0:	edc7 7a01 	vstr	s15, [r7, #4]
 80242d4:	e7be      	b.n	8024254 <__kernel_rem_pio2f+0x3a8>
 80242d6:	ab30      	add	r3, sp, #192	@ 0xc0
 80242d8:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 80241a4 <__kernel_rem_pio2f+0x2f8>
 80242dc:	440b      	add	r3, r1
 80242de:	2c00      	cmp	r4, #0
 80242e0:	da05      	bge.n	80242ee <__kernel_rem_pio2f+0x442>
 80242e2:	b10e      	cbz	r6, 80242e8 <__kernel_rem_pio2f+0x43c>
 80242e4:	eef1 7a67 	vneg.f32	s15, s15
 80242e8:	edc7 7a00 	vstr	s15, [r7]
 80242ec:	e7b2      	b.n	8024254 <__kernel_rem_pio2f+0x3a8>
 80242ee:	ed33 7a01 	vldmdb	r3!, {s14}
 80242f2:	3c01      	subs	r4, #1
 80242f4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80242f8:	e7f1      	b.n	80242de <__kernel_rem_pio2f+0x432>
 80242fa:	ed73 7a01 	vldmdb	r3!, {s15}
 80242fe:	3a01      	subs	r2, #1
 8024300:	ee37 7a27 	vadd.f32	s14, s14, s15
 8024304:	e7d2      	b.n	80242ac <__kernel_rem_pio2f+0x400>
 8024306:	eef0 7a47 	vmov.f32	s15, s14
 802430a:	e7d4      	b.n	80242b6 <__kernel_rem_pio2f+0x40a>
 802430c:	ecb2 7a01 	vldmia	r2!, {s14}
 8024310:	3301      	adds	r3, #1
 8024312:	ee77 7a87 	vadd.f32	s15, s15, s14
 8024316:	e7d6      	b.n	80242c6 <__kernel_rem_pio2f+0x41a>
 8024318:	ed72 7a01 	vldmdb	r2!, {s15}
 802431c:	edd2 6a01 	vldr	s13, [r2, #4]
 8024320:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8024324:	3801      	subs	r0, #1
 8024326:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802432a:	ed82 7a00 	vstr	s14, [r2]
 802432e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8024332:	edc2 7a01 	vstr	s15, [r2, #4]
 8024336:	e79c      	b.n	8024272 <__kernel_rem_pio2f+0x3c6>
 8024338:	ed73 7a01 	vldmdb	r3!, {s15}
 802433c:	edd3 6a01 	vldr	s13, [r3, #4]
 8024340:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8024344:	3a01      	subs	r2, #1
 8024346:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802434a:	ed83 7a00 	vstr	s14, [r3]
 802434e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8024352:	edc3 7a01 	vstr	s15, [r3, #4]
 8024356:	e78f      	b.n	8024278 <__kernel_rem_pio2f+0x3cc>
 8024358:	ed33 7a01 	vldmdb	r3!, {s14}
 802435c:	3c01      	subs	r4, #1
 802435e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8024362:	e78f      	b.n	8024284 <__kernel_rem_pio2f+0x3d8>
 8024364:	eef1 6a66 	vneg.f32	s13, s13
 8024368:	eeb1 7a47 	vneg.f32	s14, s14
 802436c:	edc7 6a00 	vstr	s13, [r7]
 8024370:	ed87 7a01 	vstr	s14, [r7, #4]
 8024374:	eef1 7a67 	vneg.f32	s15, s15
 8024378:	e790      	b.n	802429c <__kernel_rem_pio2f+0x3f0>
 802437a:	bf00      	nop

0802437c <scalbnf>:
 802437c:	ee10 3a10 	vmov	r3, s0
 8024380:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8024384:	d02b      	beq.n	80243de <scalbnf+0x62>
 8024386:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802438a:	d302      	bcc.n	8024392 <scalbnf+0x16>
 802438c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8024390:	4770      	bx	lr
 8024392:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8024396:	d123      	bne.n	80243e0 <scalbnf+0x64>
 8024398:	4b24      	ldr	r3, [pc, #144]	@ (802442c <scalbnf+0xb0>)
 802439a:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8024430 <scalbnf+0xb4>
 802439e:	4298      	cmp	r0, r3
 80243a0:	ee20 0a27 	vmul.f32	s0, s0, s15
 80243a4:	db17      	blt.n	80243d6 <scalbnf+0x5a>
 80243a6:	ee10 3a10 	vmov	r3, s0
 80243aa:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80243ae:	3a19      	subs	r2, #25
 80243b0:	f24c 3150 	movw	r1, #50000	@ 0xc350
 80243b4:	4288      	cmp	r0, r1
 80243b6:	dd15      	ble.n	80243e4 <scalbnf+0x68>
 80243b8:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8024434 <scalbnf+0xb8>
 80243bc:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8024438 <scalbnf+0xbc>
 80243c0:	ee10 3a10 	vmov	r3, s0
 80243c4:	eeb0 7a67 	vmov.f32	s14, s15
 80243c8:	2b00      	cmp	r3, #0
 80243ca:	bfb8      	it	lt
 80243cc:	eef0 7a66 	vmovlt.f32	s15, s13
 80243d0:	ee27 0a87 	vmul.f32	s0, s15, s14
 80243d4:	4770      	bx	lr
 80243d6:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802443c <scalbnf+0xc0>
 80243da:	ee27 0a80 	vmul.f32	s0, s15, s0
 80243de:	4770      	bx	lr
 80243e0:	0dd2      	lsrs	r2, r2, #23
 80243e2:	e7e5      	b.n	80243b0 <scalbnf+0x34>
 80243e4:	4410      	add	r0, r2
 80243e6:	28fe      	cmp	r0, #254	@ 0xfe
 80243e8:	dce6      	bgt.n	80243b8 <scalbnf+0x3c>
 80243ea:	2800      	cmp	r0, #0
 80243ec:	dd06      	ble.n	80243fc <scalbnf+0x80>
 80243ee:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80243f2:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80243f6:	ee00 3a10 	vmov	s0, r3
 80243fa:	4770      	bx	lr
 80243fc:	f110 0f16 	cmn.w	r0, #22
 8024400:	da09      	bge.n	8024416 <scalbnf+0x9a>
 8024402:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 802443c <scalbnf+0xc0>
 8024406:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8024440 <scalbnf+0xc4>
 802440a:	ee10 3a10 	vmov	r3, s0
 802440e:	eeb0 7a67 	vmov.f32	s14, s15
 8024412:	2b00      	cmp	r3, #0
 8024414:	e7d9      	b.n	80243ca <scalbnf+0x4e>
 8024416:	3019      	adds	r0, #25
 8024418:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802441c:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8024420:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8024444 <scalbnf+0xc8>
 8024424:	ee07 3a90 	vmov	s15, r3
 8024428:	e7d7      	b.n	80243da <scalbnf+0x5e>
 802442a:	bf00      	nop
 802442c:	ffff3cb0 	.word	0xffff3cb0
 8024430:	4c000000 	.word	0x4c000000
 8024434:	7149f2ca 	.word	0x7149f2ca
 8024438:	f149f2ca 	.word	0xf149f2ca
 802443c:	0da24260 	.word	0x0da24260
 8024440:	8da24260 	.word	0x8da24260
 8024444:	33000000 	.word	0x33000000

08024448 <floorf>:
 8024448:	ee10 3a10 	vmov	r3, s0
 802444c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8024450:	3a7f      	subs	r2, #127	@ 0x7f
 8024452:	2a16      	cmp	r2, #22
 8024454:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8024458:	dc2b      	bgt.n	80244b2 <floorf+0x6a>
 802445a:	2a00      	cmp	r2, #0
 802445c:	da12      	bge.n	8024484 <floorf+0x3c>
 802445e:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80244c4 <floorf+0x7c>
 8024462:	ee30 0a27 	vadd.f32	s0, s0, s15
 8024466:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802446a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802446e:	dd06      	ble.n	802447e <floorf+0x36>
 8024470:	2b00      	cmp	r3, #0
 8024472:	da24      	bge.n	80244be <floorf+0x76>
 8024474:	2900      	cmp	r1, #0
 8024476:	4b14      	ldr	r3, [pc, #80]	@ (80244c8 <floorf+0x80>)
 8024478:	bf08      	it	eq
 802447a:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 802447e:	ee00 3a10 	vmov	s0, r3
 8024482:	4770      	bx	lr
 8024484:	4911      	ldr	r1, [pc, #68]	@ (80244cc <floorf+0x84>)
 8024486:	4111      	asrs	r1, r2
 8024488:	420b      	tst	r3, r1
 802448a:	d0fa      	beq.n	8024482 <floorf+0x3a>
 802448c:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 80244c4 <floorf+0x7c>
 8024490:	ee30 0a27 	vadd.f32	s0, s0, s15
 8024494:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8024498:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802449c:	ddef      	ble.n	802447e <floorf+0x36>
 802449e:	2b00      	cmp	r3, #0
 80244a0:	bfbe      	ittt	lt
 80244a2:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 80244a6:	fa40 f202 	asrlt.w	r2, r0, r2
 80244aa:	189b      	addlt	r3, r3, r2
 80244ac:	ea23 0301 	bic.w	r3, r3, r1
 80244b0:	e7e5      	b.n	802447e <floorf+0x36>
 80244b2:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 80244b6:	d3e4      	bcc.n	8024482 <floorf+0x3a>
 80244b8:	ee30 0a00 	vadd.f32	s0, s0, s0
 80244bc:	4770      	bx	lr
 80244be:	2300      	movs	r3, #0
 80244c0:	e7dd      	b.n	802447e <floorf+0x36>
 80244c2:	bf00      	nop
 80244c4:	7149f2ca 	.word	0x7149f2ca
 80244c8:	bf800000 	.word	0xbf800000
 80244cc:	007fffff 	.word	0x007fffff

080244d0 <abort>:
 80244d0:	b508      	push	{r3, lr}
 80244d2:	2006      	movs	r0, #6
 80244d4:	f000 fa72 	bl	80249bc <raise>
 80244d8:	2001      	movs	r0, #1
 80244da:	f7de f967 	bl	80027ac <_exit>
	...

080244e0 <__assert_func>:
 80244e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80244e2:	4614      	mov	r4, r2
 80244e4:	461a      	mov	r2, r3
 80244e6:	4b09      	ldr	r3, [pc, #36]	@ (802450c <__assert_func+0x2c>)
 80244e8:	681b      	ldr	r3, [r3, #0]
 80244ea:	4605      	mov	r5, r0
 80244ec:	68d8      	ldr	r0, [r3, #12]
 80244ee:	b14c      	cbz	r4, 8024504 <__assert_func+0x24>
 80244f0:	4b07      	ldr	r3, [pc, #28]	@ (8024510 <__assert_func+0x30>)
 80244f2:	9100      	str	r1, [sp, #0]
 80244f4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80244f8:	4906      	ldr	r1, [pc, #24]	@ (8024514 <__assert_func+0x34>)
 80244fa:	462b      	mov	r3, r5
 80244fc:	f000 f984 	bl	8024808 <fiprintf>
 8024500:	f7ff ffe6 	bl	80244d0 <abort>
 8024504:	4b04      	ldr	r3, [pc, #16]	@ (8024518 <__assert_func+0x38>)
 8024506:	461c      	mov	r4, r3
 8024508:	e7f3      	b.n	80244f2 <__assert_func+0x12>
 802450a:	bf00      	nop
 802450c:	20000228 	.word	0x20000228
 8024510:	08026380 	.word	0x08026380
 8024514:	0802638d 	.word	0x0802638d
 8024518:	0802636d 	.word	0x0802636d

0802451c <atexit>:
 802451c:	2300      	movs	r3, #0
 802451e:	4601      	mov	r1, r0
 8024520:	461a      	mov	r2, r3
 8024522:	4618      	mov	r0, r3
 8024524:	f000 baf8 	b.w	8024b18 <__register_exitproc>

08024528 <malloc>:
 8024528:	4b02      	ldr	r3, [pc, #8]	@ (8024534 <malloc+0xc>)
 802452a:	4601      	mov	r1, r0
 802452c:	6818      	ldr	r0, [r3, #0]
 802452e:	f000 b82d 	b.w	802458c <_malloc_r>
 8024532:	bf00      	nop
 8024534:	20000228 	.word	0x20000228

08024538 <free>:
 8024538:	4b02      	ldr	r3, [pc, #8]	@ (8024544 <free+0xc>)
 802453a:	4601      	mov	r1, r0
 802453c:	6818      	ldr	r0, [r3, #0]
 802453e:	f000 bb47 	b.w	8024bd0 <_free_r>
 8024542:	bf00      	nop
 8024544:	20000228 	.word	0x20000228

08024548 <sbrk_aligned>:
 8024548:	b570      	push	{r4, r5, r6, lr}
 802454a:	4e0f      	ldr	r6, [pc, #60]	@ (8024588 <sbrk_aligned+0x40>)
 802454c:	460c      	mov	r4, r1
 802454e:	6831      	ldr	r1, [r6, #0]
 8024550:	4605      	mov	r5, r0
 8024552:	b911      	cbnz	r1, 802455a <sbrk_aligned+0x12>
 8024554:	f000 fa82 	bl	8024a5c <_sbrk_r>
 8024558:	6030      	str	r0, [r6, #0]
 802455a:	4621      	mov	r1, r4
 802455c:	4628      	mov	r0, r5
 802455e:	f000 fa7d 	bl	8024a5c <_sbrk_r>
 8024562:	1c43      	adds	r3, r0, #1
 8024564:	d103      	bne.n	802456e <sbrk_aligned+0x26>
 8024566:	f04f 34ff 	mov.w	r4, #4294967295
 802456a:	4620      	mov	r0, r4
 802456c:	bd70      	pop	{r4, r5, r6, pc}
 802456e:	1cc4      	adds	r4, r0, #3
 8024570:	f024 0403 	bic.w	r4, r4, #3
 8024574:	42a0      	cmp	r0, r4
 8024576:	d0f8      	beq.n	802456a <sbrk_aligned+0x22>
 8024578:	1a21      	subs	r1, r4, r0
 802457a:	4628      	mov	r0, r5
 802457c:	f000 fa6e 	bl	8024a5c <_sbrk_r>
 8024580:	3001      	adds	r0, #1
 8024582:	d1f2      	bne.n	802456a <sbrk_aligned+0x22>
 8024584:	e7ef      	b.n	8024566 <sbrk_aligned+0x1e>
 8024586:	bf00      	nop
 8024588:	200145c8 	.word	0x200145c8

0802458c <_malloc_r>:
 802458c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024590:	1ccd      	adds	r5, r1, #3
 8024592:	f025 0503 	bic.w	r5, r5, #3
 8024596:	3508      	adds	r5, #8
 8024598:	2d0c      	cmp	r5, #12
 802459a:	bf38      	it	cc
 802459c:	250c      	movcc	r5, #12
 802459e:	2d00      	cmp	r5, #0
 80245a0:	4606      	mov	r6, r0
 80245a2:	db01      	blt.n	80245a8 <_malloc_r+0x1c>
 80245a4:	42a9      	cmp	r1, r5
 80245a6:	d904      	bls.n	80245b2 <_malloc_r+0x26>
 80245a8:	230c      	movs	r3, #12
 80245aa:	6033      	str	r3, [r6, #0]
 80245ac:	2000      	movs	r0, #0
 80245ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80245b2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8024688 <_malloc_r+0xfc>
 80245b6:	f000 f869 	bl	802468c <__malloc_lock>
 80245ba:	f8d8 3000 	ldr.w	r3, [r8]
 80245be:	461c      	mov	r4, r3
 80245c0:	bb44      	cbnz	r4, 8024614 <_malloc_r+0x88>
 80245c2:	4629      	mov	r1, r5
 80245c4:	4630      	mov	r0, r6
 80245c6:	f7ff ffbf 	bl	8024548 <sbrk_aligned>
 80245ca:	1c43      	adds	r3, r0, #1
 80245cc:	4604      	mov	r4, r0
 80245ce:	d158      	bne.n	8024682 <_malloc_r+0xf6>
 80245d0:	f8d8 4000 	ldr.w	r4, [r8]
 80245d4:	4627      	mov	r7, r4
 80245d6:	2f00      	cmp	r7, #0
 80245d8:	d143      	bne.n	8024662 <_malloc_r+0xd6>
 80245da:	2c00      	cmp	r4, #0
 80245dc:	d04b      	beq.n	8024676 <_malloc_r+0xea>
 80245de:	6823      	ldr	r3, [r4, #0]
 80245e0:	4639      	mov	r1, r7
 80245e2:	4630      	mov	r0, r6
 80245e4:	eb04 0903 	add.w	r9, r4, r3
 80245e8:	f000 fa38 	bl	8024a5c <_sbrk_r>
 80245ec:	4581      	cmp	r9, r0
 80245ee:	d142      	bne.n	8024676 <_malloc_r+0xea>
 80245f0:	6821      	ldr	r1, [r4, #0]
 80245f2:	1a6d      	subs	r5, r5, r1
 80245f4:	4629      	mov	r1, r5
 80245f6:	4630      	mov	r0, r6
 80245f8:	f7ff ffa6 	bl	8024548 <sbrk_aligned>
 80245fc:	3001      	adds	r0, #1
 80245fe:	d03a      	beq.n	8024676 <_malloc_r+0xea>
 8024600:	6823      	ldr	r3, [r4, #0]
 8024602:	442b      	add	r3, r5
 8024604:	6023      	str	r3, [r4, #0]
 8024606:	f8d8 3000 	ldr.w	r3, [r8]
 802460a:	685a      	ldr	r2, [r3, #4]
 802460c:	bb62      	cbnz	r2, 8024668 <_malloc_r+0xdc>
 802460e:	f8c8 7000 	str.w	r7, [r8]
 8024612:	e00f      	b.n	8024634 <_malloc_r+0xa8>
 8024614:	6822      	ldr	r2, [r4, #0]
 8024616:	1b52      	subs	r2, r2, r5
 8024618:	d420      	bmi.n	802465c <_malloc_r+0xd0>
 802461a:	2a0b      	cmp	r2, #11
 802461c:	d917      	bls.n	802464e <_malloc_r+0xc2>
 802461e:	1961      	adds	r1, r4, r5
 8024620:	42a3      	cmp	r3, r4
 8024622:	6025      	str	r5, [r4, #0]
 8024624:	bf18      	it	ne
 8024626:	6059      	strne	r1, [r3, #4]
 8024628:	6863      	ldr	r3, [r4, #4]
 802462a:	bf08      	it	eq
 802462c:	f8c8 1000 	streq.w	r1, [r8]
 8024630:	5162      	str	r2, [r4, r5]
 8024632:	604b      	str	r3, [r1, #4]
 8024634:	4630      	mov	r0, r6
 8024636:	f000 f82f 	bl	8024698 <__malloc_unlock>
 802463a:	f104 000b 	add.w	r0, r4, #11
 802463e:	1d23      	adds	r3, r4, #4
 8024640:	f020 0007 	bic.w	r0, r0, #7
 8024644:	1ac2      	subs	r2, r0, r3
 8024646:	bf1c      	itt	ne
 8024648:	1a1b      	subne	r3, r3, r0
 802464a:	50a3      	strne	r3, [r4, r2]
 802464c:	e7af      	b.n	80245ae <_malloc_r+0x22>
 802464e:	6862      	ldr	r2, [r4, #4]
 8024650:	42a3      	cmp	r3, r4
 8024652:	bf0c      	ite	eq
 8024654:	f8c8 2000 	streq.w	r2, [r8]
 8024658:	605a      	strne	r2, [r3, #4]
 802465a:	e7eb      	b.n	8024634 <_malloc_r+0xa8>
 802465c:	4623      	mov	r3, r4
 802465e:	6864      	ldr	r4, [r4, #4]
 8024660:	e7ae      	b.n	80245c0 <_malloc_r+0x34>
 8024662:	463c      	mov	r4, r7
 8024664:	687f      	ldr	r7, [r7, #4]
 8024666:	e7b6      	b.n	80245d6 <_malloc_r+0x4a>
 8024668:	461a      	mov	r2, r3
 802466a:	685b      	ldr	r3, [r3, #4]
 802466c:	42a3      	cmp	r3, r4
 802466e:	d1fb      	bne.n	8024668 <_malloc_r+0xdc>
 8024670:	2300      	movs	r3, #0
 8024672:	6053      	str	r3, [r2, #4]
 8024674:	e7de      	b.n	8024634 <_malloc_r+0xa8>
 8024676:	230c      	movs	r3, #12
 8024678:	6033      	str	r3, [r6, #0]
 802467a:	4630      	mov	r0, r6
 802467c:	f000 f80c 	bl	8024698 <__malloc_unlock>
 8024680:	e794      	b.n	80245ac <_malloc_r+0x20>
 8024682:	6005      	str	r5, [r0, #0]
 8024684:	e7d6      	b.n	8024634 <_malloc_r+0xa8>
 8024686:	bf00      	nop
 8024688:	200145cc 	.word	0x200145cc

0802468c <__malloc_lock>:
 802468c:	4801      	ldr	r0, [pc, #4]	@ (8024694 <__malloc_lock+0x8>)
 802468e:	f000 ba32 	b.w	8024af6 <__retarget_lock_acquire_recursive>
 8024692:	bf00      	nop
 8024694:	20014710 	.word	0x20014710

08024698 <__malloc_unlock>:
 8024698:	4801      	ldr	r0, [pc, #4]	@ (80246a0 <__malloc_unlock+0x8>)
 802469a:	f000 ba2d 	b.w	8024af8 <__retarget_lock_release_recursive>
 802469e:	bf00      	nop
 80246a0:	20014710 	.word	0x20014710

080246a4 <__cxa_atexit>:
 80246a4:	b510      	push	{r4, lr}
 80246a6:	4604      	mov	r4, r0
 80246a8:	4804      	ldr	r0, [pc, #16]	@ (80246bc <__cxa_atexit+0x18>)
 80246aa:	4613      	mov	r3, r2
 80246ac:	b120      	cbz	r0, 80246b8 <__cxa_atexit+0x14>
 80246ae:	460a      	mov	r2, r1
 80246b0:	2002      	movs	r0, #2
 80246b2:	4621      	mov	r1, r4
 80246b4:	f000 fa30 	bl	8024b18 <__register_exitproc>
 80246b8:	bd10      	pop	{r4, pc}
 80246ba:	bf00      	nop
 80246bc:	08024b19 	.word	0x08024b19

080246c0 <std>:
 80246c0:	2300      	movs	r3, #0
 80246c2:	b510      	push	{r4, lr}
 80246c4:	4604      	mov	r4, r0
 80246c6:	e9c0 3300 	strd	r3, r3, [r0]
 80246ca:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80246ce:	6083      	str	r3, [r0, #8]
 80246d0:	8181      	strh	r1, [r0, #12]
 80246d2:	6643      	str	r3, [r0, #100]	@ 0x64
 80246d4:	81c2      	strh	r2, [r0, #14]
 80246d6:	6183      	str	r3, [r0, #24]
 80246d8:	4619      	mov	r1, r3
 80246da:	2208      	movs	r2, #8
 80246dc:	305c      	adds	r0, #92	@ 0x5c
 80246de:	f000 f93c 	bl	802495a <memset>
 80246e2:	4b0d      	ldr	r3, [pc, #52]	@ (8024718 <std+0x58>)
 80246e4:	6263      	str	r3, [r4, #36]	@ 0x24
 80246e6:	4b0d      	ldr	r3, [pc, #52]	@ (802471c <std+0x5c>)
 80246e8:	62a3      	str	r3, [r4, #40]	@ 0x28
 80246ea:	4b0d      	ldr	r3, [pc, #52]	@ (8024720 <std+0x60>)
 80246ec:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80246ee:	4b0d      	ldr	r3, [pc, #52]	@ (8024724 <std+0x64>)
 80246f0:	6323      	str	r3, [r4, #48]	@ 0x30
 80246f2:	4b0d      	ldr	r3, [pc, #52]	@ (8024728 <std+0x68>)
 80246f4:	6224      	str	r4, [r4, #32]
 80246f6:	429c      	cmp	r4, r3
 80246f8:	d006      	beq.n	8024708 <std+0x48>
 80246fa:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80246fe:	4294      	cmp	r4, r2
 8024700:	d002      	beq.n	8024708 <std+0x48>
 8024702:	33d0      	adds	r3, #208	@ 0xd0
 8024704:	429c      	cmp	r4, r3
 8024706:	d105      	bne.n	8024714 <std+0x54>
 8024708:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 802470c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024710:	f000 b9f0 	b.w	8024af4 <__retarget_lock_init_recursive>
 8024714:	bd10      	pop	{r4, pc}
 8024716:	bf00      	nop
 8024718:	080248d5 	.word	0x080248d5
 802471c:	080248f7 	.word	0x080248f7
 8024720:	0802492f 	.word	0x0802492f
 8024724:	08024953 	.word	0x08024953
 8024728:	200145d0 	.word	0x200145d0

0802472c <stdio_exit_handler>:
 802472c:	4a02      	ldr	r2, [pc, #8]	@ (8024738 <stdio_exit_handler+0xc>)
 802472e:	4903      	ldr	r1, [pc, #12]	@ (802473c <stdio_exit_handler+0x10>)
 8024730:	4803      	ldr	r0, [pc, #12]	@ (8024740 <stdio_exit_handler+0x14>)
 8024732:	f000 b87b 	b.w	802482c <_fwalk_sglue>
 8024736:	bf00      	nop
 8024738:	2000021c 	.word	0x2000021c
 802473c:	080255b9 	.word	0x080255b9
 8024740:	2000022c 	.word	0x2000022c

08024744 <cleanup_stdio>:
 8024744:	6841      	ldr	r1, [r0, #4]
 8024746:	4b0c      	ldr	r3, [pc, #48]	@ (8024778 <cleanup_stdio+0x34>)
 8024748:	4299      	cmp	r1, r3
 802474a:	b510      	push	{r4, lr}
 802474c:	4604      	mov	r4, r0
 802474e:	d001      	beq.n	8024754 <cleanup_stdio+0x10>
 8024750:	f000 ff32 	bl	80255b8 <_fflush_r>
 8024754:	68a1      	ldr	r1, [r4, #8]
 8024756:	4b09      	ldr	r3, [pc, #36]	@ (802477c <cleanup_stdio+0x38>)
 8024758:	4299      	cmp	r1, r3
 802475a:	d002      	beq.n	8024762 <cleanup_stdio+0x1e>
 802475c:	4620      	mov	r0, r4
 802475e:	f000 ff2b 	bl	80255b8 <_fflush_r>
 8024762:	68e1      	ldr	r1, [r4, #12]
 8024764:	4b06      	ldr	r3, [pc, #24]	@ (8024780 <cleanup_stdio+0x3c>)
 8024766:	4299      	cmp	r1, r3
 8024768:	d004      	beq.n	8024774 <cleanup_stdio+0x30>
 802476a:	4620      	mov	r0, r4
 802476c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024770:	f000 bf22 	b.w	80255b8 <_fflush_r>
 8024774:	bd10      	pop	{r4, pc}
 8024776:	bf00      	nop
 8024778:	200145d0 	.word	0x200145d0
 802477c:	20014638 	.word	0x20014638
 8024780:	200146a0 	.word	0x200146a0

08024784 <global_stdio_init.part.0>:
 8024784:	b510      	push	{r4, lr}
 8024786:	4b0b      	ldr	r3, [pc, #44]	@ (80247b4 <global_stdio_init.part.0+0x30>)
 8024788:	4c0b      	ldr	r4, [pc, #44]	@ (80247b8 <global_stdio_init.part.0+0x34>)
 802478a:	4a0c      	ldr	r2, [pc, #48]	@ (80247bc <global_stdio_init.part.0+0x38>)
 802478c:	601a      	str	r2, [r3, #0]
 802478e:	4620      	mov	r0, r4
 8024790:	2200      	movs	r2, #0
 8024792:	2104      	movs	r1, #4
 8024794:	f7ff ff94 	bl	80246c0 <std>
 8024798:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802479c:	2201      	movs	r2, #1
 802479e:	2109      	movs	r1, #9
 80247a0:	f7ff ff8e 	bl	80246c0 <std>
 80247a4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80247a8:	2202      	movs	r2, #2
 80247aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80247ae:	2112      	movs	r1, #18
 80247b0:	f7ff bf86 	b.w	80246c0 <std>
 80247b4:	20014708 	.word	0x20014708
 80247b8:	200145d0 	.word	0x200145d0
 80247bc:	0802472d 	.word	0x0802472d

080247c0 <__sfp_lock_acquire>:
 80247c0:	4801      	ldr	r0, [pc, #4]	@ (80247c8 <__sfp_lock_acquire+0x8>)
 80247c2:	f000 b998 	b.w	8024af6 <__retarget_lock_acquire_recursive>
 80247c6:	bf00      	nop
 80247c8:	20014712 	.word	0x20014712

080247cc <__sfp_lock_release>:
 80247cc:	4801      	ldr	r0, [pc, #4]	@ (80247d4 <__sfp_lock_release+0x8>)
 80247ce:	f000 b993 	b.w	8024af8 <__retarget_lock_release_recursive>
 80247d2:	bf00      	nop
 80247d4:	20014712 	.word	0x20014712

080247d8 <__sinit>:
 80247d8:	b510      	push	{r4, lr}
 80247da:	4604      	mov	r4, r0
 80247dc:	f7ff fff0 	bl	80247c0 <__sfp_lock_acquire>
 80247e0:	6a23      	ldr	r3, [r4, #32]
 80247e2:	b11b      	cbz	r3, 80247ec <__sinit+0x14>
 80247e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80247e8:	f7ff bff0 	b.w	80247cc <__sfp_lock_release>
 80247ec:	4b04      	ldr	r3, [pc, #16]	@ (8024800 <__sinit+0x28>)
 80247ee:	6223      	str	r3, [r4, #32]
 80247f0:	4b04      	ldr	r3, [pc, #16]	@ (8024804 <__sinit+0x2c>)
 80247f2:	681b      	ldr	r3, [r3, #0]
 80247f4:	2b00      	cmp	r3, #0
 80247f6:	d1f5      	bne.n	80247e4 <__sinit+0xc>
 80247f8:	f7ff ffc4 	bl	8024784 <global_stdio_init.part.0>
 80247fc:	e7f2      	b.n	80247e4 <__sinit+0xc>
 80247fe:	bf00      	nop
 8024800:	08024745 	.word	0x08024745
 8024804:	20014708 	.word	0x20014708

08024808 <fiprintf>:
 8024808:	b40e      	push	{r1, r2, r3}
 802480a:	b503      	push	{r0, r1, lr}
 802480c:	4601      	mov	r1, r0
 802480e:	ab03      	add	r3, sp, #12
 8024810:	4805      	ldr	r0, [pc, #20]	@ (8024828 <fiprintf+0x20>)
 8024812:	f853 2b04 	ldr.w	r2, [r3], #4
 8024816:	6800      	ldr	r0, [r0, #0]
 8024818:	9301      	str	r3, [sp, #4]
 802481a:	f000 fba5 	bl	8024f68 <_vfiprintf_r>
 802481e:	b002      	add	sp, #8
 8024820:	f85d eb04 	ldr.w	lr, [sp], #4
 8024824:	b003      	add	sp, #12
 8024826:	4770      	bx	lr
 8024828:	20000228 	.word	0x20000228

0802482c <_fwalk_sglue>:
 802482c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024830:	4607      	mov	r7, r0
 8024832:	4688      	mov	r8, r1
 8024834:	4614      	mov	r4, r2
 8024836:	2600      	movs	r6, #0
 8024838:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802483c:	f1b9 0901 	subs.w	r9, r9, #1
 8024840:	d505      	bpl.n	802484e <_fwalk_sglue+0x22>
 8024842:	6824      	ldr	r4, [r4, #0]
 8024844:	2c00      	cmp	r4, #0
 8024846:	d1f7      	bne.n	8024838 <_fwalk_sglue+0xc>
 8024848:	4630      	mov	r0, r6
 802484a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802484e:	89ab      	ldrh	r3, [r5, #12]
 8024850:	2b01      	cmp	r3, #1
 8024852:	d907      	bls.n	8024864 <_fwalk_sglue+0x38>
 8024854:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8024858:	3301      	adds	r3, #1
 802485a:	d003      	beq.n	8024864 <_fwalk_sglue+0x38>
 802485c:	4629      	mov	r1, r5
 802485e:	4638      	mov	r0, r7
 8024860:	47c0      	blx	r8
 8024862:	4306      	orrs	r6, r0
 8024864:	3568      	adds	r5, #104	@ 0x68
 8024866:	e7e9      	b.n	802483c <_fwalk_sglue+0x10>

08024868 <sniprintf>:
 8024868:	b40c      	push	{r2, r3}
 802486a:	b530      	push	{r4, r5, lr}
 802486c:	4b18      	ldr	r3, [pc, #96]	@ (80248d0 <sniprintf+0x68>)
 802486e:	1e0c      	subs	r4, r1, #0
 8024870:	681d      	ldr	r5, [r3, #0]
 8024872:	b09d      	sub	sp, #116	@ 0x74
 8024874:	da08      	bge.n	8024888 <sniprintf+0x20>
 8024876:	238b      	movs	r3, #139	@ 0x8b
 8024878:	602b      	str	r3, [r5, #0]
 802487a:	f04f 30ff 	mov.w	r0, #4294967295
 802487e:	b01d      	add	sp, #116	@ 0x74
 8024880:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8024884:	b002      	add	sp, #8
 8024886:	4770      	bx	lr
 8024888:	f44f 7302 	mov.w	r3, #520	@ 0x208
 802488c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8024890:	f04f 0300 	mov.w	r3, #0
 8024894:	931b      	str	r3, [sp, #108]	@ 0x6c
 8024896:	bf14      	ite	ne
 8024898:	f104 33ff 	addne.w	r3, r4, #4294967295
 802489c:	4623      	moveq	r3, r4
 802489e:	9304      	str	r3, [sp, #16]
 80248a0:	9307      	str	r3, [sp, #28]
 80248a2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80248a6:	9002      	str	r0, [sp, #8]
 80248a8:	9006      	str	r0, [sp, #24]
 80248aa:	f8ad 3016 	strh.w	r3, [sp, #22]
 80248ae:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80248b0:	ab21      	add	r3, sp, #132	@ 0x84
 80248b2:	a902      	add	r1, sp, #8
 80248b4:	4628      	mov	r0, r5
 80248b6:	9301      	str	r3, [sp, #4]
 80248b8:	f000 fa30 	bl	8024d1c <_svfiprintf_r>
 80248bc:	1c43      	adds	r3, r0, #1
 80248be:	bfbc      	itt	lt
 80248c0:	238b      	movlt	r3, #139	@ 0x8b
 80248c2:	602b      	strlt	r3, [r5, #0]
 80248c4:	2c00      	cmp	r4, #0
 80248c6:	d0da      	beq.n	802487e <sniprintf+0x16>
 80248c8:	9b02      	ldr	r3, [sp, #8]
 80248ca:	2200      	movs	r2, #0
 80248cc:	701a      	strb	r2, [r3, #0]
 80248ce:	e7d6      	b.n	802487e <sniprintf+0x16>
 80248d0:	20000228 	.word	0x20000228

080248d4 <__sread>:
 80248d4:	b510      	push	{r4, lr}
 80248d6:	460c      	mov	r4, r1
 80248d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80248dc:	f000 f898 	bl	8024a10 <_read_r>
 80248e0:	2800      	cmp	r0, #0
 80248e2:	bfab      	itete	ge
 80248e4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80248e6:	89a3      	ldrhlt	r3, [r4, #12]
 80248e8:	181b      	addge	r3, r3, r0
 80248ea:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80248ee:	bfac      	ite	ge
 80248f0:	6563      	strge	r3, [r4, #84]	@ 0x54
 80248f2:	81a3      	strhlt	r3, [r4, #12]
 80248f4:	bd10      	pop	{r4, pc}

080248f6 <__swrite>:
 80248f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80248fa:	461f      	mov	r7, r3
 80248fc:	898b      	ldrh	r3, [r1, #12]
 80248fe:	05db      	lsls	r3, r3, #23
 8024900:	4605      	mov	r5, r0
 8024902:	460c      	mov	r4, r1
 8024904:	4616      	mov	r6, r2
 8024906:	d505      	bpl.n	8024914 <__swrite+0x1e>
 8024908:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802490c:	2302      	movs	r3, #2
 802490e:	2200      	movs	r2, #0
 8024910:	f000 f86c 	bl	80249ec <_lseek_r>
 8024914:	89a3      	ldrh	r3, [r4, #12]
 8024916:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802491a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 802491e:	81a3      	strh	r3, [r4, #12]
 8024920:	4632      	mov	r2, r6
 8024922:	463b      	mov	r3, r7
 8024924:	4628      	mov	r0, r5
 8024926:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802492a:	f000 b8a7 	b.w	8024a7c <_write_r>

0802492e <__sseek>:
 802492e:	b510      	push	{r4, lr}
 8024930:	460c      	mov	r4, r1
 8024932:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8024936:	f000 f859 	bl	80249ec <_lseek_r>
 802493a:	1c43      	adds	r3, r0, #1
 802493c:	89a3      	ldrh	r3, [r4, #12]
 802493e:	bf15      	itete	ne
 8024940:	6560      	strne	r0, [r4, #84]	@ 0x54
 8024942:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8024946:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802494a:	81a3      	strheq	r3, [r4, #12]
 802494c:	bf18      	it	ne
 802494e:	81a3      	strhne	r3, [r4, #12]
 8024950:	bd10      	pop	{r4, pc}

08024952 <__sclose>:
 8024952:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8024956:	f000 b839 	b.w	80249cc <_close_r>

0802495a <memset>:
 802495a:	4402      	add	r2, r0
 802495c:	4603      	mov	r3, r0
 802495e:	4293      	cmp	r3, r2
 8024960:	d100      	bne.n	8024964 <memset+0xa>
 8024962:	4770      	bx	lr
 8024964:	f803 1b01 	strb.w	r1, [r3], #1
 8024968:	e7f9      	b.n	802495e <memset+0x4>

0802496a <_raise_r>:
 802496a:	291f      	cmp	r1, #31
 802496c:	b538      	push	{r3, r4, r5, lr}
 802496e:	4605      	mov	r5, r0
 8024970:	460c      	mov	r4, r1
 8024972:	d904      	bls.n	802497e <_raise_r+0x14>
 8024974:	2316      	movs	r3, #22
 8024976:	6003      	str	r3, [r0, #0]
 8024978:	f04f 30ff 	mov.w	r0, #4294967295
 802497c:	bd38      	pop	{r3, r4, r5, pc}
 802497e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8024980:	b112      	cbz	r2, 8024988 <_raise_r+0x1e>
 8024982:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8024986:	b94b      	cbnz	r3, 802499c <_raise_r+0x32>
 8024988:	4628      	mov	r0, r5
 802498a:	f000 f865 	bl	8024a58 <_getpid_r>
 802498e:	4622      	mov	r2, r4
 8024990:	4601      	mov	r1, r0
 8024992:	4628      	mov	r0, r5
 8024994:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8024998:	f000 b84c 	b.w	8024a34 <_kill_r>
 802499c:	2b01      	cmp	r3, #1
 802499e:	d00a      	beq.n	80249b6 <_raise_r+0x4c>
 80249a0:	1c59      	adds	r1, r3, #1
 80249a2:	d103      	bne.n	80249ac <_raise_r+0x42>
 80249a4:	2316      	movs	r3, #22
 80249a6:	6003      	str	r3, [r0, #0]
 80249a8:	2001      	movs	r0, #1
 80249aa:	e7e7      	b.n	802497c <_raise_r+0x12>
 80249ac:	2100      	movs	r1, #0
 80249ae:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80249b2:	4620      	mov	r0, r4
 80249b4:	4798      	blx	r3
 80249b6:	2000      	movs	r0, #0
 80249b8:	e7e0      	b.n	802497c <_raise_r+0x12>
	...

080249bc <raise>:
 80249bc:	4b02      	ldr	r3, [pc, #8]	@ (80249c8 <raise+0xc>)
 80249be:	4601      	mov	r1, r0
 80249c0:	6818      	ldr	r0, [r3, #0]
 80249c2:	f7ff bfd2 	b.w	802496a <_raise_r>
 80249c6:	bf00      	nop
 80249c8:	20000228 	.word	0x20000228

080249cc <_close_r>:
 80249cc:	b538      	push	{r3, r4, r5, lr}
 80249ce:	4d06      	ldr	r5, [pc, #24]	@ (80249e8 <_close_r+0x1c>)
 80249d0:	2300      	movs	r3, #0
 80249d2:	4604      	mov	r4, r0
 80249d4:	4608      	mov	r0, r1
 80249d6:	602b      	str	r3, [r5, #0]
 80249d8:	f7dd ff0a 	bl	80027f0 <_close>
 80249dc:	1c43      	adds	r3, r0, #1
 80249de:	d102      	bne.n	80249e6 <_close_r+0x1a>
 80249e0:	682b      	ldr	r3, [r5, #0]
 80249e2:	b103      	cbz	r3, 80249e6 <_close_r+0x1a>
 80249e4:	6023      	str	r3, [r4, #0]
 80249e6:	bd38      	pop	{r3, r4, r5, pc}
 80249e8:	2001470c 	.word	0x2001470c

080249ec <_lseek_r>:
 80249ec:	b538      	push	{r3, r4, r5, lr}
 80249ee:	4d07      	ldr	r5, [pc, #28]	@ (8024a0c <_lseek_r+0x20>)
 80249f0:	4604      	mov	r4, r0
 80249f2:	4608      	mov	r0, r1
 80249f4:	4611      	mov	r1, r2
 80249f6:	2200      	movs	r2, #0
 80249f8:	602a      	str	r2, [r5, #0]
 80249fa:	461a      	mov	r2, r3
 80249fc:	f7dd ff02 	bl	8002804 <_lseek>
 8024a00:	1c43      	adds	r3, r0, #1
 8024a02:	d102      	bne.n	8024a0a <_lseek_r+0x1e>
 8024a04:	682b      	ldr	r3, [r5, #0]
 8024a06:	b103      	cbz	r3, 8024a0a <_lseek_r+0x1e>
 8024a08:	6023      	str	r3, [r4, #0]
 8024a0a:	bd38      	pop	{r3, r4, r5, pc}
 8024a0c:	2001470c 	.word	0x2001470c

08024a10 <_read_r>:
 8024a10:	b538      	push	{r3, r4, r5, lr}
 8024a12:	4d07      	ldr	r5, [pc, #28]	@ (8024a30 <_read_r+0x20>)
 8024a14:	4604      	mov	r4, r0
 8024a16:	4608      	mov	r0, r1
 8024a18:	4611      	mov	r1, r2
 8024a1a:	2200      	movs	r2, #0
 8024a1c:	602a      	str	r2, [r5, #0]
 8024a1e:	461a      	mov	r2, r3
 8024a20:	f7dd feca 	bl	80027b8 <_read>
 8024a24:	1c43      	adds	r3, r0, #1
 8024a26:	d102      	bne.n	8024a2e <_read_r+0x1e>
 8024a28:	682b      	ldr	r3, [r5, #0]
 8024a2a:	b103      	cbz	r3, 8024a2e <_read_r+0x1e>
 8024a2c:	6023      	str	r3, [r4, #0]
 8024a2e:	bd38      	pop	{r3, r4, r5, pc}
 8024a30:	2001470c 	.word	0x2001470c

08024a34 <_kill_r>:
 8024a34:	b538      	push	{r3, r4, r5, lr}
 8024a36:	4d07      	ldr	r5, [pc, #28]	@ (8024a54 <_kill_r+0x20>)
 8024a38:	2300      	movs	r3, #0
 8024a3a:	4604      	mov	r4, r0
 8024a3c:	4608      	mov	r0, r1
 8024a3e:	4611      	mov	r1, r2
 8024a40:	602b      	str	r3, [r5, #0]
 8024a42:	f7dd feab 	bl	800279c <_kill>
 8024a46:	1c43      	adds	r3, r0, #1
 8024a48:	d102      	bne.n	8024a50 <_kill_r+0x1c>
 8024a4a:	682b      	ldr	r3, [r5, #0]
 8024a4c:	b103      	cbz	r3, 8024a50 <_kill_r+0x1c>
 8024a4e:	6023      	str	r3, [r4, #0]
 8024a50:	bd38      	pop	{r3, r4, r5, pc}
 8024a52:	bf00      	nop
 8024a54:	2001470c 	.word	0x2001470c

08024a58 <_getpid_r>:
 8024a58:	f7dd be9e 	b.w	8002798 <_getpid>

08024a5c <_sbrk_r>:
 8024a5c:	b538      	push	{r3, r4, r5, lr}
 8024a5e:	4d06      	ldr	r5, [pc, #24]	@ (8024a78 <_sbrk_r+0x1c>)
 8024a60:	2300      	movs	r3, #0
 8024a62:	4604      	mov	r4, r0
 8024a64:	4608      	mov	r0, r1
 8024a66:	602b      	str	r3, [r5, #0]
 8024a68:	f7dd fece 	bl	8002808 <_sbrk>
 8024a6c:	1c43      	adds	r3, r0, #1
 8024a6e:	d102      	bne.n	8024a76 <_sbrk_r+0x1a>
 8024a70:	682b      	ldr	r3, [r5, #0]
 8024a72:	b103      	cbz	r3, 8024a76 <_sbrk_r+0x1a>
 8024a74:	6023      	str	r3, [r4, #0]
 8024a76:	bd38      	pop	{r3, r4, r5, pc}
 8024a78:	2001470c 	.word	0x2001470c

08024a7c <_write_r>:
 8024a7c:	b538      	push	{r3, r4, r5, lr}
 8024a7e:	4d07      	ldr	r5, [pc, #28]	@ (8024a9c <_write_r+0x20>)
 8024a80:	4604      	mov	r4, r0
 8024a82:	4608      	mov	r0, r1
 8024a84:	4611      	mov	r1, r2
 8024a86:	2200      	movs	r2, #0
 8024a88:	602a      	str	r2, [r5, #0]
 8024a8a:	461a      	mov	r2, r3
 8024a8c:	f7dd fea2 	bl	80027d4 <_write>
 8024a90:	1c43      	adds	r3, r0, #1
 8024a92:	d102      	bne.n	8024a9a <_write_r+0x1e>
 8024a94:	682b      	ldr	r3, [r5, #0]
 8024a96:	b103      	cbz	r3, 8024a9a <_write_r+0x1e>
 8024a98:	6023      	str	r3, [r4, #0]
 8024a9a:	bd38      	pop	{r3, r4, r5, pc}
 8024a9c:	2001470c 	.word	0x2001470c

08024aa0 <__errno>:
 8024aa0:	4b01      	ldr	r3, [pc, #4]	@ (8024aa8 <__errno+0x8>)
 8024aa2:	6818      	ldr	r0, [r3, #0]
 8024aa4:	4770      	bx	lr
 8024aa6:	bf00      	nop
 8024aa8:	20000228 	.word	0x20000228

08024aac <__libc_init_array>:
 8024aac:	b570      	push	{r4, r5, r6, lr}
 8024aae:	4d0d      	ldr	r5, [pc, #52]	@ (8024ae4 <__libc_init_array+0x38>)
 8024ab0:	4c0d      	ldr	r4, [pc, #52]	@ (8024ae8 <__libc_init_array+0x3c>)
 8024ab2:	1b64      	subs	r4, r4, r5
 8024ab4:	10a4      	asrs	r4, r4, #2
 8024ab6:	2600      	movs	r6, #0
 8024ab8:	42a6      	cmp	r6, r4
 8024aba:	d109      	bne.n	8024ad0 <__libc_init_array+0x24>
 8024abc:	4d0b      	ldr	r5, [pc, #44]	@ (8024aec <__libc_init_array+0x40>)
 8024abe:	4c0c      	ldr	r4, [pc, #48]	@ (8024af0 <__libc_init_array+0x44>)
 8024ac0:	f000 ff0a 	bl	80258d8 <_init>
 8024ac4:	1b64      	subs	r4, r4, r5
 8024ac6:	10a4      	asrs	r4, r4, #2
 8024ac8:	2600      	movs	r6, #0
 8024aca:	42a6      	cmp	r6, r4
 8024acc:	d105      	bne.n	8024ada <__libc_init_array+0x2e>
 8024ace:	bd70      	pop	{r4, r5, r6, pc}
 8024ad0:	f855 3b04 	ldr.w	r3, [r5], #4
 8024ad4:	4798      	blx	r3
 8024ad6:	3601      	adds	r6, #1
 8024ad8:	e7ee      	b.n	8024ab8 <__libc_init_array+0xc>
 8024ada:	f855 3b04 	ldr.w	r3, [r5], #4
 8024ade:	4798      	blx	r3
 8024ae0:	3601      	adds	r6, #1
 8024ae2:	e7f2      	b.n	8024aca <__libc_init_array+0x1e>
 8024ae4:	0802896c 	.word	0x0802896c
 8024ae8:	0802896c 	.word	0x0802896c
 8024aec:	0802896c 	.word	0x0802896c
 8024af0:	08028980 	.word	0x08028980

08024af4 <__retarget_lock_init_recursive>:
 8024af4:	4770      	bx	lr

08024af6 <__retarget_lock_acquire_recursive>:
 8024af6:	4770      	bx	lr

08024af8 <__retarget_lock_release_recursive>:
 8024af8:	4770      	bx	lr

08024afa <memcpy>:
 8024afa:	440a      	add	r2, r1
 8024afc:	4291      	cmp	r1, r2
 8024afe:	f100 33ff 	add.w	r3, r0, #4294967295
 8024b02:	d100      	bne.n	8024b06 <memcpy+0xc>
 8024b04:	4770      	bx	lr
 8024b06:	b510      	push	{r4, lr}
 8024b08:	f811 4b01 	ldrb.w	r4, [r1], #1
 8024b0c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8024b10:	4291      	cmp	r1, r2
 8024b12:	d1f9      	bne.n	8024b08 <memcpy+0xe>
 8024b14:	bd10      	pop	{r4, pc}
	...

08024b18 <__register_exitproc>:
 8024b18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024b1c:	4d27      	ldr	r5, [pc, #156]	@ (8024bbc <__register_exitproc+0xa4>)
 8024b1e:	4607      	mov	r7, r0
 8024b20:	6828      	ldr	r0, [r5, #0]
 8024b22:	4691      	mov	r9, r2
 8024b24:	460e      	mov	r6, r1
 8024b26:	4698      	mov	r8, r3
 8024b28:	f7ff ffe5 	bl	8024af6 <__retarget_lock_acquire_recursive>
 8024b2c:	4a24      	ldr	r2, [pc, #144]	@ (8024bc0 <__register_exitproc+0xa8>)
 8024b2e:	6814      	ldr	r4, [r2, #0]
 8024b30:	b93c      	cbnz	r4, 8024b42 <__register_exitproc+0x2a>
 8024b32:	4b24      	ldr	r3, [pc, #144]	@ (8024bc4 <__register_exitproc+0xac>)
 8024b34:	6013      	str	r3, [r2, #0]
 8024b36:	4a24      	ldr	r2, [pc, #144]	@ (8024bc8 <__register_exitproc+0xb0>)
 8024b38:	b112      	cbz	r2, 8024b40 <__register_exitproc+0x28>
 8024b3a:	6812      	ldr	r2, [r2, #0]
 8024b3c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8024b40:	4c20      	ldr	r4, [pc, #128]	@ (8024bc4 <__register_exitproc+0xac>)
 8024b42:	6863      	ldr	r3, [r4, #4]
 8024b44:	2b1f      	cmp	r3, #31
 8024b46:	dd06      	ble.n	8024b56 <__register_exitproc+0x3e>
 8024b48:	6828      	ldr	r0, [r5, #0]
 8024b4a:	f7ff ffd5 	bl	8024af8 <__retarget_lock_release_recursive>
 8024b4e:	f04f 30ff 	mov.w	r0, #4294967295
 8024b52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8024b56:	b32f      	cbz	r7, 8024ba4 <__register_exitproc+0x8c>
 8024b58:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8024b5c:	b968      	cbnz	r0, 8024b7a <__register_exitproc+0x62>
 8024b5e:	4b1b      	ldr	r3, [pc, #108]	@ (8024bcc <__register_exitproc+0xb4>)
 8024b60:	2b00      	cmp	r3, #0
 8024b62:	d0f1      	beq.n	8024b48 <__register_exitproc+0x30>
 8024b64:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8024b68:	f7ff fcde 	bl	8024528 <malloc>
 8024b6c:	2800      	cmp	r0, #0
 8024b6e:	d0eb      	beq.n	8024b48 <__register_exitproc+0x30>
 8024b70:	2300      	movs	r3, #0
 8024b72:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8024b76:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8024b7a:	6863      	ldr	r3, [r4, #4]
 8024b7c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8024b80:	2201      	movs	r2, #1
 8024b82:	409a      	lsls	r2, r3
 8024b84:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8024b88:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8024b8c:	4313      	orrs	r3, r2
 8024b8e:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8024b92:	2f02      	cmp	r7, #2
 8024b94:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8024b98:	bf02      	ittt	eq
 8024b9a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8024b9e:	4313      	orreq	r3, r2
 8024ba0:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8024ba4:	6863      	ldr	r3, [r4, #4]
 8024ba6:	6828      	ldr	r0, [r5, #0]
 8024ba8:	1c5a      	adds	r2, r3, #1
 8024baa:	3302      	adds	r3, #2
 8024bac:	6062      	str	r2, [r4, #4]
 8024bae:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8024bb2:	f7ff ffa1 	bl	8024af8 <__retarget_lock_release_recursive>
 8024bb6:	2000      	movs	r0, #0
 8024bb8:	e7cb      	b.n	8024b52 <__register_exitproc+0x3a>
 8024bba:	bf00      	nop
 8024bbc:	20000278 	.word	0x20000278
 8024bc0:	200147a0 	.word	0x200147a0
 8024bc4:	20014714 	.word	0x20014714
 8024bc8:	08027e6c 	.word	0x08027e6c
 8024bcc:	08024529 	.word	0x08024529

08024bd0 <_free_r>:
 8024bd0:	b538      	push	{r3, r4, r5, lr}
 8024bd2:	4605      	mov	r5, r0
 8024bd4:	2900      	cmp	r1, #0
 8024bd6:	d041      	beq.n	8024c5c <_free_r+0x8c>
 8024bd8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8024bdc:	1f0c      	subs	r4, r1, #4
 8024bde:	2b00      	cmp	r3, #0
 8024be0:	bfb8      	it	lt
 8024be2:	18e4      	addlt	r4, r4, r3
 8024be4:	f7ff fd52 	bl	802468c <__malloc_lock>
 8024be8:	4a1d      	ldr	r2, [pc, #116]	@ (8024c60 <_free_r+0x90>)
 8024bea:	6813      	ldr	r3, [r2, #0]
 8024bec:	b933      	cbnz	r3, 8024bfc <_free_r+0x2c>
 8024bee:	6063      	str	r3, [r4, #4]
 8024bf0:	6014      	str	r4, [r2, #0]
 8024bf2:	4628      	mov	r0, r5
 8024bf4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8024bf8:	f7ff bd4e 	b.w	8024698 <__malloc_unlock>
 8024bfc:	42a3      	cmp	r3, r4
 8024bfe:	d908      	bls.n	8024c12 <_free_r+0x42>
 8024c00:	6820      	ldr	r0, [r4, #0]
 8024c02:	1821      	adds	r1, r4, r0
 8024c04:	428b      	cmp	r3, r1
 8024c06:	bf01      	itttt	eq
 8024c08:	6819      	ldreq	r1, [r3, #0]
 8024c0a:	685b      	ldreq	r3, [r3, #4]
 8024c0c:	1809      	addeq	r1, r1, r0
 8024c0e:	6021      	streq	r1, [r4, #0]
 8024c10:	e7ed      	b.n	8024bee <_free_r+0x1e>
 8024c12:	461a      	mov	r2, r3
 8024c14:	685b      	ldr	r3, [r3, #4]
 8024c16:	b10b      	cbz	r3, 8024c1c <_free_r+0x4c>
 8024c18:	42a3      	cmp	r3, r4
 8024c1a:	d9fa      	bls.n	8024c12 <_free_r+0x42>
 8024c1c:	6811      	ldr	r1, [r2, #0]
 8024c1e:	1850      	adds	r0, r2, r1
 8024c20:	42a0      	cmp	r0, r4
 8024c22:	d10b      	bne.n	8024c3c <_free_r+0x6c>
 8024c24:	6820      	ldr	r0, [r4, #0]
 8024c26:	4401      	add	r1, r0
 8024c28:	1850      	adds	r0, r2, r1
 8024c2a:	4283      	cmp	r3, r0
 8024c2c:	6011      	str	r1, [r2, #0]
 8024c2e:	d1e0      	bne.n	8024bf2 <_free_r+0x22>
 8024c30:	6818      	ldr	r0, [r3, #0]
 8024c32:	685b      	ldr	r3, [r3, #4]
 8024c34:	6053      	str	r3, [r2, #4]
 8024c36:	4408      	add	r0, r1
 8024c38:	6010      	str	r0, [r2, #0]
 8024c3a:	e7da      	b.n	8024bf2 <_free_r+0x22>
 8024c3c:	d902      	bls.n	8024c44 <_free_r+0x74>
 8024c3e:	230c      	movs	r3, #12
 8024c40:	602b      	str	r3, [r5, #0]
 8024c42:	e7d6      	b.n	8024bf2 <_free_r+0x22>
 8024c44:	6820      	ldr	r0, [r4, #0]
 8024c46:	1821      	adds	r1, r4, r0
 8024c48:	428b      	cmp	r3, r1
 8024c4a:	bf04      	itt	eq
 8024c4c:	6819      	ldreq	r1, [r3, #0]
 8024c4e:	685b      	ldreq	r3, [r3, #4]
 8024c50:	6063      	str	r3, [r4, #4]
 8024c52:	bf04      	itt	eq
 8024c54:	1809      	addeq	r1, r1, r0
 8024c56:	6021      	streq	r1, [r4, #0]
 8024c58:	6054      	str	r4, [r2, #4]
 8024c5a:	e7ca      	b.n	8024bf2 <_free_r+0x22>
 8024c5c:	bd38      	pop	{r3, r4, r5, pc}
 8024c5e:	bf00      	nop
 8024c60:	200145cc 	.word	0x200145cc

08024c64 <__ssputs_r>:
 8024c64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024c68:	688e      	ldr	r6, [r1, #8]
 8024c6a:	461f      	mov	r7, r3
 8024c6c:	42be      	cmp	r6, r7
 8024c6e:	680b      	ldr	r3, [r1, #0]
 8024c70:	4682      	mov	sl, r0
 8024c72:	460c      	mov	r4, r1
 8024c74:	4690      	mov	r8, r2
 8024c76:	d82d      	bhi.n	8024cd4 <__ssputs_r+0x70>
 8024c78:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8024c7c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8024c80:	d026      	beq.n	8024cd0 <__ssputs_r+0x6c>
 8024c82:	6965      	ldr	r5, [r4, #20]
 8024c84:	6909      	ldr	r1, [r1, #16]
 8024c86:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8024c8a:	eba3 0901 	sub.w	r9, r3, r1
 8024c8e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8024c92:	1c7b      	adds	r3, r7, #1
 8024c94:	444b      	add	r3, r9
 8024c96:	106d      	asrs	r5, r5, #1
 8024c98:	429d      	cmp	r5, r3
 8024c9a:	bf38      	it	cc
 8024c9c:	461d      	movcc	r5, r3
 8024c9e:	0553      	lsls	r3, r2, #21
 8024ca0:	d527      	bpl.n	8024cf2 <__ssputs_r+0x8e>
 8024ca2:	4629      	mov	r1, r5
 8024ca4:	f7ff fc72 	bl	802458c <_malloc_r>
 8024ca8:	4606      	mov	r6, r0
 8024caa:	b360      	cbz	r0, 8024d06 <__ssputs_r+0xa2>
 8024cac:	6921      	ldr	r1, [r4, #16]
 8024cae:	464a      	mov	r2, r9
 8024cb0:	f7ff ff23 	bl	8024afa <memcpy>
 8024cb4:	89a3      	ldrh	r3, [r4, #12]
 8024cb6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8024cba:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8024cbe:	81a3      	strh	r3, [r4, #12]
 8024cc0:	6126      	str	r6, [r4, #16]
 8024cc2:	6165      	str	r5, [r4, #20]
 8024cc4:	444e      	add	r6, r9
 8024cc6:	eba5 0509 	sub.w	r5, r5, r9
 8024cca:	6026      	str	r6, [r4, #0]
 8024ccc:	60a5      	str	r5, [r4, #8]
 8024cce:	463e      	mov	r6, r7
 8024cd0:	42be      	cmp	r6, r7
 8024cd2:	d900      	bls.n	8024cd6 <__ssputs_r+0x72>
 8024cd4:	463e      	mov	r6, r7
 8024cd6:	6820      	ldr	r0, [r4, #0]
 8024cd8:	4632      	mov	r2, r6
 8024cda:	4641      	mov	r1, r8
 8024cdc:	f000 fd28 	bl	8025730 <memmove>
 8024ce0:	68a3      	ldr	r3, [r4, #8]
 8024ce2:	1b9b      	subs	r3, r3, r6
 8024ce4:	60a3      	str	r3, [r4, #8]
 8024ce6:	6823      	ldr	r3, [r4, #0]
 8024ce8:	4433      	add	r3, r6
 8024cea:	6023      	str	r3, [r4, #0]
 8024cec:	2000      	movs	r0, #0
 8024cee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024cf2:	462a      	mov	r2, r5
 8024cf4:	f000 fd36 	bl	8025764 <_realloc_r>
 8024cf8:	4606      	mov	r6, r0
 8024cfa:	2800      	cmp	r0, #0
 8024cfc:	d1e0      	bne.n	8024cc0 <__ssputs_r+0x5c>
 8024cfe:	6921      	ldr	r1, [r4, #16]
 8024d00:	4650      	mov	r0, sl
 8024d02:	f7ff ff65 	bl	8024bd0 <_free_r>
 8024d06:	230c      	movs	r3, #12
 8024d08:	f8ca 3000 	str.w	r3, [sl]
 8024d0c:	89a3      	ldrh	r3, [r4, #12]
 8024d0e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8024d12:	81a3      	strh	r3, [r4, #12]
 8024d14:	f04f 30ff 	mov.w	r0, #4294967295
 8024d18:	e7e9      	b.n	8024cee <__ssputs_r+0x8a>
	...

08024d1c <_svfiprintf_r>:
 8024d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024d20:	4698      	mov	r8, r3
 8024d22:	898b      	ldrh	r3, [r1, #12]
 8024d24:	061b      	lsls	r3, r3, #24
 8024d26:	b09d      	sub	sp, #116	@ 0x74
 8024d28:	4607      	mov	r7, r0
 8024d2a:	460d      	mov	r5, r1
 8024d2c:	4614      	mov	r4, r2
 8024d2e:	d510      	bpl.n	8024d52 <_svfiprintf_r+0x36>
 8024d30:	690b      	ldr	r3, [r1, #16]
 8024d32:	b973      	cbnz	r3, 8024d52 <_svfiprintf_r+0x36>
 8024d34:	2140      	movs	r1, #64	@ 0x40
 8024d36:	f7ff fc29 	bl	802458c <_malloc_r>
 8024d3a:	6028      	str	r0, [r5, #0]
 8024d3c:	6128      	str	r0, [r5, #16]
 8024d3e:	b930      	cbnz	r0, 8024d4e <_svfiprintf_r+0x32>
 8024d40:	230c      	movs	r3, #12
 8024d42:	603b      	str	r3, [r7, #0]
 8024d44:	f04f 30ff 	mov.w	r0, #4294967295
 8024d48:	b01d      	add	sp, #116	@ 0x74
 8024d4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024d4e:	2340      	movs	r3, #64	@ 0x40
 8024d50:	616b      	str	r3, [r5, #20]
 8024d52:	2300      	movs	r3, #0
 8024d54:	9309      	str	r3, [sp, #36]	@ 0x24
 8024d56:	2320      	movs	r3, #32
 8024d58:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8024d5c:	f8cd 800c 	str.w	r8, [sp, #12]
 8024d60:	2330      	movs	r3, #48	@ 0x30
 8024d62:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8024f00 <_svfiprintf_r+0x1e4>
 8024d66:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8024d6a:	f04f 0901 	mov.w	r9, #1
 8024d6e:	4623      	mov	r3, r4
 8024d70:	469a      	mov	sl, r3
 8024d72:	f813 2b01 	ldrb.w	r2, [r3], #1
 8024d76:	b10a      	cbz	r2, 8024d7c <_svfiprintf_r+0x60>
 8024d78:	2a25      	cmp	r2, #37	@ 0x25
 8024d7a:	d1f9      	bne.n	8024d70 <_svfiprintf_r+0x54>
 8024d7c:	ebba 0b04 	subs.w	fp, sl, r4
 8024d80:	d00b      	beq.n	8024d9a <_svfiprintf_r+0x7e>
 8024d82:	465b      	mov	r3, fp
 8024d84:	4622      	mov	r2, r4
 8024d86:	4629      	mov	r1, r5
 8024d88:	4638      	mov	r0, r7
 8024d8a:	f7ff ff6b 	bl	8024c64 <__ssputs_r>
 8024d8e:	3001      	adds	r0, #1
 8024d90:	f000 80a7 	beq.w	8024ee2 <_svfiprintf_r+0x1c6>
 8024d94:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8024d96:	445a      	add	r2, fp
 8024d98:	9209      	str	r2, [sp, #36]	@ 0x24
 8024d9a:	f89a 3000 	ldrb.w	r3, [sl]
 8024d9e:	2b00      	cmp	r3, #0
 8024da0:	f000 809f 	beq.w	8024ee2 <_svfiprintf_r+0x1c6>
 8024da4:	2300      	movs	r3, #0
 8024da6:	f04f 32ff 	mov.w	r2, #4294967295
 8024daa:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8024dae:	f10a 0a01 	add.w	sl, sl, #1
 8024db2:	9304      	str	r3, [sp, #16]
 8024db4:	9307      	str	r3, [sp, #28]
 8024db6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8024dba:	931a      	str	r3, [sp, #104]	@ 0x68
 8024dbc:	4654      	mov	r4, sl
 8024dbe:	2205      	movs	r2, #5
 8024dc0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8024dc4:	484e      	ldr	r0, [pc, #312]	@ (8024f00 <_svfiprintf_r+0x1e4>)
 8024dc6:	f7db fa1b 	bl	8000200 <memchr>
 8024dca:	9a04      	ldr	r2, [sp, #16]
 8024dcc:	b9d8      	cbnz	r0, 8024e06 <_svfiprintf_r+0xea>
 8024dce:	06d0      	lsls	r0, r2, #27
 8024dd0:	bf44      	itt	mi
 8024dd2:	2320      	movmi	r3, #32
 8024dd4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8024dd8:	0711      	lsls	r1, r2, #28
 8024dda:	bf44      	itt	mi
 8024ddc:	232b      	movmi	r3, #43	@ 0x2b
 8024dde:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8024de2:	f89a 3000 	ldrb.w	r3, [sl]
 8024de6:	2b2a      	cmp	r3, #42	@ 0x2a
 8024de8:	d015      	beq.n	8024e16 <_svfiprintf_r+0xfa>
 8024dea:	9a07      	ldr	r2, [sp, #28]
 8024dec:	4654      	mov	r4, sl
 8024dee:	2000      	movs	r0, #0
 8024df0:	f04f 0c0a 	mov.w	ip, #10
 8024df4:	4621      	mov	r1, r4
 8024df6:	f811 3b01 	ldrb.w	r3, [r1], #1
 8024dfa:	3b30      	subs	r3, #48	@ 0x30
 8024dfc:	2b09      	cmp	r3, #9
 8024dfe:	d94b      	bls.n	8024e98 <_svfiprintf_r+0x17c>
 8024e00:	b1b0      	cbz	r0, 8024e30 <_svfiprintf_r+0x114>
 8024e02:	9207      	str	r2, [sp, #28]
 8024e04:	e014      	b.n	8024e30 <_svfiprintf_r+0x114>
 8024e06:	eba0 0308 	sub.w	r3, r0, r8
 8024e0a:	fa09 f303 	lsl.w	r3, r9, r3
 8024e0e:	4313      	orrs	r3, r2
 8024e10:	9304      	str	r3, [sp, #16]
 8024e12:	46a2      	mov	sl, r4
 8024e14:	e7d2      	b.n	8024dbc <_svfiprintf_r+0xa0>
 8024e16:	9b03      	ldr	r3, [sp, #12]
 8024e18:	1d19      	adds	r1, r3, #4
 8024e1a:	681b      	ldr	r3, [r3, #0]
 8024e1c:	9103      	str	r1, [sp, #12]
 8024e1e:	2b00      	cmp	r3, #0
 8024e20:	bfbb      	ittet	lt
 8024e22:	425b      	neglt	r3, r3
 8024e24:	f042 0202 	orrlt.w	r2, r2, #2
 8024e28:	9307      	strge	r3, [sp, #28]
 8024e2a:	9307      	strlt	r3, [sp, #28]
 8024e2c:	bfb8      	it	lt
 8024e2e:	9204      	strlt	r2, [sp, #16]
 8024e30:	7823      	ldrb	r3, [r4, #0]
 8024e32:	2b2e      	cmp	r3, #46	@ 0x2e
 8024e34:	d10a      	bne.n	8024e4c <_svfiprintf_r+0x130>
 8024e36:	7863      	ldrb	r3, [r4, #1]
 8024e38:	2b2a      	cmp	r3, #42	@ 0x2a
 8024e3a:	d132      	bne.n	8024ea2 <_svfiprintf_r+0x186>
 8024e3c:	9b03      	ldr	r3, [sp, #12]
 8024e3e:	1d1a      	adds	r2, r3, #4
 8024e40:	681b      	ldr	r3, [r3, #0]
 8024e42:	9203      	str	r2, [sp, #12]
 8024e44:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8024e48:	3402      	adds	r4, #2
 8024e4a:	9305      	str	r3, [sp, #20]
 8024e4c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8024f10 <_svfiprintf_r+0x1f4>
 8024e50:	7821      	ldrb	r1, [r4, #0]
 8024e52:	2203      	movs	r2, #3
 8024e54:	4650      	mov	r0, sl
 8024e56:	f7db f9d3 	bl	8000200 <memchr>
 8024e5a:	b138      	cbz	r0, 8024e6c <_svfiprintf_r+0x150>
 8024e5c:	9b04      	ldr	r3, [sp, #16]
 8024e5e:	eba0 000a 	sub.w	r0, r0, sl
 8024e62:	2240      	movs	r2, #64	@ 0x40
 8024e64:	4082      	lsls	r2, r0
 8024e66:	4313      	orrs	r3, r2
 8024e68:	3401      	adds	r4, #1
 8024e6a:	9304      	str	r3, [sp, #16]
 8024e6c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8024e70:	4824      	ldr	r0, [pc, #144]	@ (8024f04 <_svfiprintf_r+0x1e8>)
 8024e72:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8024e76:	2206      	movs	r2, #6
 8024e78:	f7db f9c2 	bl	8000200 <memchr>
 8024e7c:	2800      	cmp	r0, #0
 8024e7e:	d036      	beq.n	8024eee <_svfiprintf_r+0x1d2>
 8024e80:	4b21      	ldr	r3, [pc, #132]	@ (8024f08 <_svfiprintf_r+0x1ec>)
 8024e82:	bb1b      	cbnz	r3, 8024ecc <_svfiprintf_r+0x1b0>
 8024e84:	9b03      	ldr	r3, [sp, #12]
 8024e86:	3307      	adds	r3, #7
 8024e88:	f023 0307 	bic.w	r3, r3, #7
 8024e8c:	3308      	adds	r3, #8
 8024e8e:	9303      	str	r3, [sp, #12]
 8024e90:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024e92:	4433      	add	r3, r6
 8024e94:	9309      	str	r3, [sp, #36]	@ 0x24
 8024e96:	e76a      	b.n	8024d6e <_svfiprintf_r+0x52>
 8024e98:	fb0c 3202 	mla	r2, ip, r2, r3
 8024e9c:	460c      	mov	r4, r1
 8024e9e:	2001      	movs	r0, #1
 8024ea0:	e7a8      	b.n	8024df4 <_svfiprintf_r+0xd8>
 8024ea2:	2300      	movs	r3, #0
 8024ea4:	3401      	adds	r4, #1
 8024ea6:	9305      	str	r3, [sp, #20]
 8024ea8:	4619      	mov	r1, r3
 8024eaa:	f04f 0c0a 	mov.w	ip, #10
 8024eae:	4620      	mov	r0, r4
 8024eb0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8024eb4:	3a30      	subs	r2, #48	@ 0x30
 8024eb6:	2a09      	cmp	r2, #9
 8024eb8:	d903      	bls.n	8024ec2 <_svfiprintf_r+0x1a6>
 8024eba:	2b00      	cmp	r3, #0
 8024ebc:	d0c6      	beq.n	8024e4c <_svfiprintf_r+0x130>
 8024ebe:	9105      	str	r1, [sp, #20]
 8024ec0:	e7c4      	b.n	8024e4c <_svfiprintf_r+0x130>
 8024ec2:	fb0c 2101 	mla	r1, ip, r1, r2
 8024ec6:	4604      	mov	r4, r0
 8024ec8:	2301      	movs	r3, #1
 8024eca:	e7f0      	b.n	8024eae <_svfiprintf_r+0x192>
 8024ecc:	ab03      	add	r3, sp, #12
 8024ece:	9300      	str	r3, [sp, #0]
 8024ed0:	462a      	mov	r2, r5
 8024ed2:	4b0e      	ldr	r3, [pc, #56]	@ (8024f0c <_svfiprintf_r+0x1f0>)
 8024ed4:	a904      	add	r1, sp, #16
 8024ed6:	4638      	mov	r0, r7
 8024ed8:	f3af 8000 	nop.w
 8024edc:	1c42      	adds	r2, r0, #1
 8024ede:	4606      	mov	r6, r0
 8024ee0:	d1d6      	bne.n	8024e90 <_svfiprintf_r+0x174>
 8024ee2:	89ab      	ldrh	r3, [r5, #12]
 8024ee4:	065b      	lsls	r3, r3, #25
 8024ee6:	f53f af2d 	bmi.w	8024d44 <_svfiprintf_r+0x28>
 8024eea:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8024eec:	e72c      	b.n	8024d48 <_svfiprintf_r+0x2c>
 8024eee:	ab03      	add	r3, sp, #12
 8024ef0:	9300      	str	r3, [sp, #0]
 8024ef2:	462a      	mov	r2, r5
 8024ef4:	4b05      	ldr	r3, [pc, #20]	@ (8024f0c <_svfiprintf_r+0x1f0>)
 8024ef6:	a904      	add	r1, sp, #16
 8024ef8:	4638      	mov	r0, r7
 8024efa:	f000 f9bb 	bl	8025274 <_printf_i>
 8024efe:	e7ed      	b.n	8024edc <_svfiprintf_r+0x1c0>
 8024f00:	080263bc 	.word	0x080263bc
 8024f04:	080263c6 	.word	0x080263c6
 8024f08:	00000000 	.word	0x00000000
 8024f0c:	08024c65 	.word	0x08024c65
 8024f10:	080263c2 	.word	0x080263c2

08024f14 <__sfputc_r>:
 8024f14:	6893      	ldr	r3, [r2, #8]
 8024f16:	3b01      	subs	r3, #1
 8024f18:	2b00      	cmp	r3, #0
 8024f1a:	b410      	push	{r4}
 8024f1c:	6093      	str	r3, [r2, #8]
 8024f1e:	da08      	bge.n	8024f32 <__sfputc_r+0x1e>
 8024f20:	6994      	ldr	r4, [r2, #24]
 8024f22:	42a3      	cmp	r3, r4
 8024f24:	db01      	blt.n	8024f2a <__sfputc_r+0x16>
 8024f26:	290a      	cmp	r1, #10
 8024f28:	d103      	bne.n	8024f32 <__sfputc_r+0x1e>
 8024f2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024f2e:	f000 bb6b 	b.w	8025608 <__swbuf_r>
 8024f32:	6813      	ldr	r3, [r2, #0]
 8024f34:	1c58      	adds	r0, r3, #1
 8024f36:	6010      	str	r0, [r2, #0]
 8024f38:	7019      	strb	r1, [r3, #0]
 8024f3a:	4608      	mov	r0, r1
 8024f3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024f40:	4770      	bx	lr

08024f42 <__sfputs_r>:
 8024f42:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024f44:	4606      	mov	r6, r0
 8024f46:	460f      	mov	r7, r1
 8024f48:	4614      	mov	r4, r2
 8024f4a:	18d5      	adds	r5, r2, r3
 8024f4c:	42ac      	cmp	r4, r5
 8024f4e:	d101      	bne.n	8024f54 <__sfputs_r+0x12>
 8024f50:	2000      	movs	r0, #0
 8024f52:	e007      	b.n	8024f64 <__sfputs_r+0x22>
 8024f54:	f814 1b01 	ldrb.w	r1, [r4], #1
 8024f58:	463a      	mov	r2, r7
 8024f5a:	4630      	mov	r0, r6
 8024f5c:	f7ff ffda 	bl	8024f14 <__sfputc_r>
 8024f60:	1c43      	adds	r3, r0, #1
 8024f62:	d1f3      	bne.n	8024f4c <__sfputs_r+0xa>
 8024f64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08024f68 <_vfiprintf_r>:
 8024f68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f6c:	460d      	mov	r5, r1
 8024f6e:	b09d      	sub	sp, #116	@ 0x74
 8024f70:	4614      	mov	r4, r2
 8024f72:	4698      	mov	r8, r3
 8024f74:	4606      	mov	r6, r0
 8024f76:	b118      	cbz	r0, 8024f80 <_vfiprintf_r+0x18>
 8024f78:	6a03      	ldr	r3, [r0, #32]
 8024f7a:	b90b      	cbnz	r3, 8024f80 <_vfiprintf_r+0x18>
 8024f7c:	f7ff fc2c 	bl	80247d8 <__sinit>
 8024f80:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8024f82:	07d9      	lsls	r1, r3, #31
 8024f84:	d405      	bmi.n	8024f92 <_vfiprintf_r+0x2a>
 8024f86:	89ab      	ldrh	r3, [r5, #12]
 8024f88:	059a      	lsls	r2, r3, #22
 8024f8a:	d402      	bmi.n	8024f92 <_vfiprintf_r+0x2a>
 8024f8c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8024f8e:	f7ff fdb2 	bl	8024af6 <__retarget_lock_acquire_recursive>
 8024f92:	89ab      	ldrh	r3, [r5, #12]
 8024f94:	071b      	lsls	r3, r3, #28
 8024f96:	d501      	bpl.n	8024f9c <_vfiprintf_r+0x34>
 8024f98:	692b      	ldr	r3, [r5, #16]
 8024f9a:	b99b      	cbnz	r3, 8024fc4 <_vfiprintf_r+0x5c>
 8024f9c:	4629      	mov	r1, r5
 8024f9e:	4630      	mov	r0, r6
 8024fa0:	f000 fb70 	bl	8025684 <__swsetup_r>
 8024fa4:	b170      	cbz	r0, 8024fc4 <_vfiprintf_r+0x5c>
 8024fa6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8024fa8:	07dc      	lsls	r4, r3, #31
 8024faa:	d504      	bpl.n	8024fb6 <_vfiprintf_r+0x4e>
 8024fac:	f04f 30ff 	mov.w	r0, #4294967295
 8024fb0:	b01d      	add	sp, #116	@ 0x74
 8024fb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024fb6:	89ab      	ldrh	r3, [r5, #12]
 8024fb8:	0598      	lsls	r0, r3, #22
 8024fba:	d4f7      	bmi.n	8024fac <_vfiprintf_r+0x44>
 8024fbc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8024fbe:	f7ff fd9b 	bl	8024af8 <__retarget_lock_release_recursive>
 8024fc2:	e7f3      	b.n	8024fac <_vfiprintf_r+0x44>
 8024fc4:	2300      	movs	r3, #0
 8024fc6:	9309      	str	r3, [sp, #36]	@ 0x24
 8024fc8:	2320      	movs	r3, #32
 8024fca:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8024fce:	f8cd 800c 	str.w	r8, [sp, #12]
 8024fd2:	2330      	movs	r3, #48	@ 0x30
 8024fd4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8025184 <_vfiprintf_r+0x21c>
 8024fd8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8024fdc:	f04f 0901 	mov.w	r9, #1
 8024fe0:	4623      	mov	r3, r4
 8024fe2:	469a      	mov	sl, r3
 8024fe4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8024fe8:	b10a      	cbz	r2, 8024fee <_vfiprintf_r+0x86>
 8024fea:	2a25      	cmp	r2, #37	@ 0x25
 8024fec:	d1f9      	bne.n	8024fe2 <_vfiprintf_r+0x7a>
 8024fee:	ebba 0b04 	subs.w	fp, sl, r4
 8024ff2:	d00b      	beq.n	802500c <_vfiprintf_r+0xa4>
 8024ff4:	465b      	mov	r3, fp
 8024ff6:	4622      	mov	r2, r4
 8024ff8:	4629      	mov	r1, r5
 8024ffa:	4630      	mov	r0, r6
 8024ffc:	f7ff ffa1 	bl	8024f42 <__sfputs_r>
 8025000:	3001      	adds	r0, #1
 8025002:	f000 80a7 	beq.w	8025154 <_vfiprintf_r+0x1ec>
 8025006:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025008:	445a      	add	r2, fp
 802500a:	9209      	str	r2, [sp, #36]	@ 0x24
 802500c:	f89a 3000 	ldrb.w	r3, [sl]
 8025010:	2b00      	cmp	r3, #0
 8025012:	f000 809f 	beq.w	8025154 <_vfiprintf_r+0x1ec>
 8025016:	2300      	movs	r3, #0
 8025018:	f04f 32ff 	mov.w	r2, #4294967295
 802501c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8025020:	f10a 0a01 	add.w	sl, sl, #1
 8025024:	9304      	str	r3, [sp, #16]
 8025026:	9307      	str	r3, [sp, #28]
 8025028:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 802502c:	931a      	str	r3, [sp, #104]	@ 0x68
 802502e:	4654      	mov	r4, sl
 8025030:	2205      	movs	r2, #5
 8025032:	f814 1b01 	ldrb.w	r1, [r4], #1
 8025036:	4853      	ldr	r0, [pc, #332]	@ (8025184 <_vfiprintf_r+0x21c>)
 8025038:	f7db f8e2 	bl	8000200 <memchr>
 802503c:	9a04      	ldr	r2, [sp, #16]
 802503e:	b9d8      	cbnz	r0, 8025078 <_vfiprintf_r+0x110>
 8025040:	06d1      	lsls	r1, r2, #27
 8025042:	bf44      	itt	mi
 8025044:	2320      	movmi	r3, #32
 8025046:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802504a:	0713      	lsls	r3, r2, #28
 802504c:	bf44      	itt	mi
 802504e:	232b      	movmi	r3, #43	@ 0x2b
 8025050:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8025054:	f89a 3000 	ldrb.w	r3, [sl]
 8025058:	2b2a      	cmp	r3, #42	@ 0x2a
 802505a:	d015      	beq.n	8025088 <_vfiprintf_r+0x120>
 802505c:	9a07      	ldr	r2, [sp, #28]
 802505e:	4654      	mov	r4, sl
 8025060:	2000      	movs	r0, #0
 8025062:	f04f 0c0a 	mov.w	ip, #10
 8025066:	4621      	mov	r1, r4
 8025068:	f811 3b01 	ldrb.w	r3, [r1], #1
 802506c:	3b30      	subs	r3, #48	@ 0x30
 802506e:	2b09      	cmp	r3, #9
 8025070:	d94b      	bls.n	802510a <_vfiprintf_r+0x1a2>
 8025072:	b1b0      	cbz	r0, 80250a2 <_vfiprintf_r+0x13a>
 8025074:	9207      	str	r2, [sp, #28]
 8025076:	e014      	b.n	80250a2 <_vfiprintf_r+0x13a>
 8025078:	eba0 0308 	sub.w	r3, r0, r8
 802507c:	fa09 f303 	lsl.w	r3, r9, r3
 8025080:	4313      	orrs	r3, r2
 8025082:	9304      	str	r3, [sp, #16]
 8025084:	46a2      	mov	sl, r4
 8025086:	e7d2      	b.n	802502e <_vfiprintf_r+0xc6>
 8025088:	9b03      	ldr	r3, [sp, #12]
 802508a:	1d19      	adds	r1, r3, #4
 802508c:	681b      	ldr	r3, [r3, #0]
 802508e:	9103      	str	r1, [sp, #12]
 8025090:	2b00      	cmp	r3, #0
 8025092:	bfbb      	ittet	lt
 8025094:	425b      	neglt	r3, r3
 8025096:	f042 0202 	orrlt.w	r2, r2, #2
 802509a:	9307      	strge	r3, [sp, #28]
 802509c:	9307      	strlt	r3, [sp, #28]
 802509e:	bfb8      	it	lt
 80250a0:	9204      	strlt	r2, [sp, #16]
 80250a2:	7823      	ldrb	r3, [r4, #0]
 80250a4:	2b2e      	cmp	r3, #46	@ 0x2e
 80250a6:	d10a      	bne.n	80250be <_vfiprintf_r+0x156>
 80250a8:	7863      	ldrb	r3, [r4, #1]
 80250aa:	2b2a      	cmp	r3, #42	@ 0x2a
 80250ac:	d132      	bne.n	8025114 <_vfiprintf_r+0x1ac>
 80250ae:	9b03      	ldr	r3, [sp, #12]
 80250b0:	1d1a      	adds	r2, r3, #4
 80250b2:	681b      	ldr	r3, [r3, #0]
 80250b4:	9203      	str	r2, [sp, #12]
 80250b6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80250ba:	3402      	adds	r4, #2
 80250bc:	9305      	str	r3, [sp, #20]
 80250be:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8025194 <_vfiprintf_r+0x22c>
 80250c2:	7821      	ldrb	r1, [r4, #0]
 80250c4:	2203      	movs	r2, #3
 80250c6:	4650      	mov	r0, sl
 80250c8:	f7db f89a 	bl	8000200 <memchr>
 80250cc:	b138      	cbz	r0, 80250de <_vfiprintf_r+0x176>
 80250ce:	9b04      	ldr	r3, [sp, #16]
 80250d0:	eba0 000a 	sub.w	r0, r0, sl
 80250d4:	2240      	movs	r2, #64	@ 0x40
 80250d6:	4082      	lsls	r2, r0
 80250d8:	4313      	orrs	r3, r2
 80250da:	3401      	adds	r4, #1
 80250dc:	9304      	str	r3, [sp, #16]
 80250de:	f814 1b01 	ldrb.w	r1, [r4], #1
 80250e2:	4829      	ldr	r0, [pc, #164]	@ (8025188 <_vfiprintf_r+0x220>)
 80250e4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80250e8:	2206      	movs	r2, #6
 80250ea:	f7db f889 	bl	8000200 <memchr>
 80250ee:	2800      	cmp	r0, #0
 80250f0:	d03f      	beq.n	8025172 <_vfiprintf_r+0x20a>
 80250f2:	4b26      	ldr	r3, [pc, #152]	@ (802518c <_vfiprintf_r+0x224>)
 80250f4:	bb1b      	cbnz	r3, 802513e <_vfiprintf_r+0x1d6>
 80250f6:	9b03      	ldr	r3, [sp, #12]
 80250f8:	3307      	adds	r3, #7
 80250fa:	f023 0307 	bic.w	r3, r3, #7
 80250fe:	3308      	adds	r3, #8
 8025100:	9303      	str	r3, [sp, #12]
 8025102:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025104:	443b      	add	r3, r7
 8025106:	9309      	str	r3, [sp, #36]	@ 0x24
 8025108:	e76a      	b.n	8024fe0 <_vfiprintf_r+0x78>
 802510a:	fb0c 3202 	mla	r2, ip, r2, r3
 802510e:	460c      	mov	r4, r1
 8025110:	2001      	movs	r0, #1
 8025112:	e7a8      	b.n	8025066 <_vfiprintf_r+0xfe>
 8025114:	2300      	movs	r3, #0
 8025116:	3401      	adds	r4, #1
 8025118:	9305      	str	r3, [sp, #20]
 802511a:	4619      	mov	r1, r3
 802511c:	f04f 0c0a 	mov.w	ip, #10
 8025120:	4620      	mov	r0, r4
 8025122:	f810 2b01 	ldrb.w	r2, [r0], #1
 8025126:	3a30      	subs	r2, #48	@ 0x30
 8025128:	2a09      	cmp	r2, #9
 802512a:	d903      	bls.n	8025134 <_vfiprintf_r+0x1cc>
 802512c:	2b00      	cmp	r3, #0
 802512e:	d0c6      	beq.n	80250be <_vfiprintf_r+0x156>
 8025130:	9105      	str	r1, [sp, #20]
 8025132:	e7c4      	b.n	80250be <_vfiprintf_r+0x156>
 8025134:	fb0c 2101 	mla	r1, ip, r1, r2
 8025138:	4604      	mov	r4, r0
 802513a:	2301      	movs	r3, #1
 802513c:	e7f0      	b.n	8025120 <_vfiprintf_r+0x1b8>
 802513e:	ab03      	add	r3, sp, #12
 8025140:	9300      	str	r3, [sp, #0]
 8025142:	462a      	mov	r2, r5
 8025144:	4b12      	ldr	r3, [pc, #72]	@ (8025190 <_vfiprintf_r+0x228>)
 8025146:	a904      	add	r1, sp, #16
 8025148:	4630      	mov	r0, r6
 802514a:	f3af 8000 	nop.w
 802514e:	4607      	mov	r7, r0
 8025150:	1c78      	adds	r0, r7, #1
 8025152:	d1d6      	bne.n	8025102 <_vfiprintf_r+0x19a>
 8025154:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8025156:	07d9      	lsls	r1, r3, #31
 8025158:	d405      	bmi.n	8025166 <_vfiprintf_r+0x1fe>
 802515a:	89ab      	ldrh	r3, [r5, #12]
 802515c:	059a      	lsls	r2, r3, #22
 802515e:	d402      	bmi.n	8025166 <_vfiprintf_r+0x1fe>
 8025160:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8025162:	f7ff fcc9 	bl	8024af8 <__retarget_lock_release_recursive>
 8025166:	89ab      	ldrh	r3, [r5, #12]
 8025168:	065b      	lsls	r3, r3, #25
 802516a:	f53f af1f 	bmi.w	8024fac <_vfiprintf_r+0x44>
 802516e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8025170:	e71e      	b.n	8024fb0 <_vfiprintf_r+0x48>
 8025172:	ab03      	add	r3, sp, #12
 8025174:	9300      	str	r3, [sp, #0]
 8025176:	462a      	mov	r2, r5
 8025178:	4b05      	ldr	r3, [pc, #20]	@ (8025190 <_vfiprintf_r+0x228>)
 802517a:	a904      	add	r1, sp, #16
 802517c:	4630      	mov	r0, r6
 802517e:	f000 f879 	bl	8025274 <_printf_i>
 8025182:	e7e4      	b.n	802514e <_vfiprintf_r+0x1e6>
 8025184:	080263bc 	.word	0x080263bc
 8025188:	080263c6 	.word	0x080263c6
 802518c:	00000000 	.word	0x00000000
 8025190:	08024f43 	.word	0x08024f43
 8025194:	080263c2 	.word	0x080263c2

08025198 <_printf_common>:
 8025198:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802519c:	4616      	mov	r6, r2
 802519e:	4698      	mov	r8, r3
 80251a0:	688a      	ldr	r2, [r1, #8]
 80251a2:	690b      	ldr	r3, [r1, #16]
 80251a4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80251a8:	4293      	cmp	r3, r2
 80251aa:	bfb8      	it	lt
 80251ac:	4613      	movlt	r3, r2
 80251ae:	6033      	str	r3, [r6, #0]
 80251b0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80251b4:	4607      	mov	r7, r0
 80251b6:	460c      	mov	r4, r1
 80251b8:	b10a      	cbz	r2, 80251be <_printf_common+0x26>
 80251ba:	3301      	adds	r3, #1
 80251bc:	6033      	str	r3, [r6, #0]
 80251be:	6823      	ldr	r3, [r4, #0]
 80251c0:	0699      	lsls	r1, r3, #26
 80251c2:	bf42      	ittt	mi
 80251c4:	6833      	ldrmi	r3, [r6, #0]
 80251c6:	3302      	addmi	r3, #2
 80251c8:	6033      	strmi	r3, [r6, #0]
 80251ca:	6825      	ldr	r5, [r4, #0]
 80251cc:	f015 0506 	ands.w	r5, r5, #6
 80251d0:	d106      	bne.n	80251e0 <_printf_common+0x48>
 80251d2:	f104 0a19 	add.w	sl, r4, #25
 80251d6:	68e3      	ldr	r3, [r4, #12]
 80251d8:	6832      	ldr	r2, [r6, #0]
 80251da:	1a9b      	subs	r3, r3, r2
 80251dc:	42ab      	cmp	r3, r5
 80251de:	dc26      	bgt.n	802522e <_printf_common+0x96>
 80251e0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80251e4:	6822      	ldr	r2, [r4, #0]
 80251e6:	3b00      	subs	r3, #0
 80251e8:	bf18      	it	ne
 80251ea:	2301      	movne	r3, #1
 80251ec:	0692      	lsls	r2, r2, #26
 80251ee:	d42b      	bmi.n	8025248 <_printf_common+0xb0>
 80251f0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80251f4:	4641      	mov	r1, r8
 80251f6:	4638      	mov	r0, r7
 80251f8:	47c8      	blx	r9
 80251fa:	3001      	adds	r0, #1
 80251fc:	d01e      	beq.n	802523c <_printf_common+0xa4>
 80251fe:	6823      	ldr	r3, [r4, #0]
 8025200:	6922      	ldr	r2, [r4, #16]
 8025202:	f003 0306 	and.w	r3, r3, #6
 8025206:	2b04      	cmp	r3, #4
 8025208:	bf02      	ittt	eq
 802520a:	68e5      	ldreq	r5, [r4, #12]
 802520c:	6833      	ldreq	r3, [r6, #0]
 802520e:	1aed      	subeq	r5, r5, r3
 8025210:	68a3      	ldr	r3, [r4, #8]
 8025212:	bf0c      	ite	eq
 8025214:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8025218:	2500      	movne	r5, #0
 802521a:	4293      	cmp	r3, r2
 802521c:	bfc4      	itt	gt
 802521e:	1a9b      	subgt	r3, r3, r2
 8025220:	18ed      	addgt	r5, r5, r3
 8025222:	2600      	movs	r6, #0
 8025224:	341a      	adds	r4, #26
 8025226:	42b5      	cmp	r5, r6
 8025228:	d11a      	bne.n	8025260 <_printf_common+0xc8>
 802522a:	2000      	movs	r0, #0
 802522c:	e008      	b.n	8025240 <_printf_common+0xa8>
 802522e:	2301      	movs	r3, #1
 8025230:	4652      	mov	r2, sl
 8025232:	4641      	mov	r1, r8
 8025234:	4638      	mov	r0, r7
 8025236:	47c8      	blx	r9
 8025238:	3001      	adds	r0, #1
 802523a:	d103      	bne.n	8025244 <_printf_common+0xac>
 802523c:	f04f 30ff 	mov.w	r0, #4294967295
 8025240:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025244:	3501      	adds	r5, #1
 8025246:	e7c6      	b.n	80251d6 <_printf_common+0x3e>
 8025248:	18e1      	adds	r1, r4, r3
 802524a:	1c5a      	adds	r2, r3, #1
 802524c:	2030      	movs	r0, #48	@ 0x30
 802524e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8025252:	4422      	add	r2, r4
 8025254:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8025258:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 802525c:	3302      	adds	r3, #2
 802525e:	e7c7      	b.n	80251f0 <_printf_common+0x58>
 8025260:	2301      	movs	r3, #1
 8025262:	4622      	mov	r2, r4
 8025264:	4641      	mov	r1, r8
 8025266:	4638      	mov	r0, r7
 8025268:	47c8      	blx	r9
 802526a:	3001      	adds	r0, #1
 802526c:	d0e6      	beq.n	802523c <_printf_common+0xa4>
 802526e:	3601      	adds	r6, #1
 8025270:	e7d9      	b.n	8025226 <_printf_common+0x8e>
	...

08025274 <_printf_i>:
 8025274:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8025278:	7e0f      	ldrb	r7, [r1, #24]
 802527a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802527c:	2f78      	cmp	r7, #120	@ 0x78
 802527e:	4691      	mov	r9, r2
 8025280:	4680      	mov	r8, r0
 8025282:	460c      	mov	r4, r1
 8025284:	469a      	mov	sl, r3
 8025286:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 802528a:	d807      	bhi.n	802529c <_printf_i+0x28>
 802528c:	2f62      	cmp	r7, #98	@ 0x62
 802528e:	d80a      	bhi.n	80252a6 <_printf_i+0x32>
 8025290:	2f00      	cmp	r7, #0
 8025292:	f000 80d1 	beq.w	8025438 <_printf_i+0x1c4>
 8025296:	2f58      	cmp	r7, #88	@ 0x58
 8025298:	f000 80b8 	beq.w	802540c <_printf_i+0x198>
 802529c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80252a0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80252a4:	e03a      	b.n	802531c <_printf_i+0xa8>
 80252a6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80252aa:	2b15      	cmp	r3, #21
 80252ac:	d8f6      	bhi.n	802529c <_printf_i+0x28>
 80252ae:	a101      	add	r1, pc, #4	@ (adr r1, 80252b4 <_printf_i+0x40>)
 80252b0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80252b4:	0802530d 	.word	0x0802530d
 80252b8:	08025321 	.word	0x08025321
 80252bc:	0802529d 	.word	0x0802529d
 80252c0:	0802529d 	.word	0x0802529d
 80252c4:	0802529d 	.word	0x0802529d
 80252c8:	0802529d 	.word	0x0802529d
 80252cc:	08025321 	.word	0x08025321
 80252d0:	0802529d 	.word	0x0802529d
 80252d4:	0802529d 	.word	0x0802529d
 80252d8:	0802529d 	.word	0x0802529d
 80252dc:	0802529d 	.word	0x0802529d
 80252e0:	0802541f 	.word	0x0802541f
 80252e4:	0802534b 	.word	0x0802534b
 80252e8:	080253d9 	.word	0x080253d9
 80252ec:	0802529d 	.word	0x0802529d
 80252f0:	0802529d 	.word	0x0802529d
 80252f4:	08025441 	.word	0x08025441
 80252f8:	0802529d 	.word	0x0802529d
 80252fc:	0802534b 	.word	0x0802534b
 8025300:	0802529d 	.word	0x0802529d
 8025304:	0802529d 	.word	0x0802529d
 8025308:	080253e1 	.word	0x080253e1
 802530c:	6833      	ldr	r3, [r6, #0]
 802530e:	1d1a      	adds	r2, r3, #4
 8025310:	681b      	ldr	r3, [r3, #0]
 8025312:	6032      	str	r2, [r6, #0]
 8025314:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8025318:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 802531c:	2301      	movs	r3, #1
 802531e:	e09c      	b.n	802545a <_printf_i+0x1e6>
 8025320:	6833      	ldr	r3, [r6, #0]
 8025322:	6820      	ldr	r0, [r4, #0]
 8025324:	1d19      	adds	r1, r3, #4
 8025326:	6031      	str	r1, [r6, #0]
 8025328:	0606      	lsls	r6, r0, #24
 802532a:	d501      	bpl.n	8025330 <_printf_i+0xbc>
 802532c:	681d      	ldr	r5, [r3, #0]
 802532e:	e003      	b.n	8025338 <_printf_i+0xc4>
 8025330:	0645      	lsls	r5, r0, #25
 8025332:	d5fb      	bpl.n	802532c <_printf_i+0xb8>
 8025334:	f9b3 5000 	ldrsh.w	r5, [r3]
 8025338:	2d00      	cmp	r5, #0
 802533a:	da03      	bge.n	8025344 <_printf_i+0xd0>
 802533c:	232d      	movs	r3, #45	@ 0x2d
 802533e:	426d      	negs	r5, r5
 8025340:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8025344:	4858      	ldr	r0, [pc, #352]	@ (80254a8 <_printf_i+0x234>)
 8025346:	230a      	movs	r3, #10
 8025348:	e011      	b.n	802536e <_printf_i+0xfa>
 802534a:	6821      	ldr	r1, [r4, #0]
 802534c:	6833      	ldr	r3, [r6, #0]
 802534e:	0608      	lsls	r0, r1, #24
 8025350:	f853 5b04 	ldr.w	r5, [r3], #4
 8025354:	d402      	bmi.n	802535c <_printf_i+0xe8>
 8025356:	0649      	lsls	r1, r1, #25
 8025358:	bf48      	it	mi
 802535a:	b2ad      	uxthmi	r5, r5
 802535c:	2f6f      	cmp	r7, #111	@ 0x6f
 802535e:	4852      	ldr	r0, [pc, #328]	@ (80254a8 <_printf_i+0x234>)
 8025360:	6033      	str	r3, [r6, #0]
 8025362:	bf14      	ite	ne
 8025364:	230a      	movne	r3, #10
 8025366:	2308      	moveq	r3, #8
 8025368:	2100      	movs	r1, #0
 802536a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 802536e:	6866      	ldr	r6, [r4, #4]
 8025370:	60a6      	str	r6, [r4, #8]
 8025372:	2e00      	cmp	r6, #0
 8025374:	db05      	blt.n	8025382 <_printf_i+0x10e>
 8025376:	6821      	ldr	r1, [r4, #0]
 8025378:	432e      	orrs	r6, r5
 802537a:	f021 0104 	bic.w	r1, r1, #4
 802537e:	6021      	str	r1, [r4, #0]
 8025380:	d04b      	beq.n	802541a <_printf_i+0x1a6>
 8025382:	4616      	mov	r6, r2
 8025384:	fbb5 f1f3 	udiv	r1, r5, r3
 8025388:	fb03 5711 	mls	r7, r3, r1, r5
 802538c:	5dc7      	ldrb	r7, [r0, r7]
 802538e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8025392:	462f      	mov	r7, r5
 8025394:	42bb      	cmp	r3, r7
 8025396:	460d      	mov	r5, r1
 8025398:	d9f4      	bls.n	8025384 <_printf_i+0x110>
 802539a:	2b08      	cmp	r3, #8
 802539c:	d10b      	bne.n	80253b6 <_printf_i+0x142>
 802539e:	6823      	ldr	r3, [r4, #0]
 80253a0:	07df      	lsls	r7, r3, #31
 80253a2:	d508      	bpl.n	80253b6 <_printf_i+0x142>
 80253a4:	6923      	ldr	r3, [r4, #16]
 80253a6:	6861      	ldr	r1, [r4, #4]
 80253a8:	4299      	cmp	r1, r3
 80253aa:	bfde      	ittt	le
 80253ac:	2330      	movle	r3, #48	@ 0x30
 80253ae:	f806 3c01 	strble.w	r3, [r6, #-1]
 80253b2:	f106 36ff 	addle.w	r6, r6, #4294967295
 80253b6:	1b92      	subs	r2, r2, r6
 80253b8:	6122      	str	r2, [r4, #16]
 80253ba:	f8cd a000 	str.w	sl, [sp]
 80253be:	464b      	mov	r3, r9
 80253c0:	aa03      	add	r2, sp, #12
 80253c2:	4621      	mov	r1, r4
 80253c4:	4640      	mov	r0, r8
 80253c6:	f7ff fee7 	bl	8025198 <_printf_common>
 80253ca:	3001      	adds	r0, #1
 80253cc:	d14a      	bne.n	8025464 <_printf_i+0x1f0>
 80253ce:	f04f 30ff 	mov.w	r0, #4294967295
 80253d2:	b004      	add	sp, #16
 80253d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80253d8:	6823      	ldr	r3, [r4, #0]
 80253da:	f043 0320 	orr.w	r3, r3, #32
 80253de:	6023      	str	r3, [r4, #0]
 80253e0:	4832      	ldr	r0, [pc, #200]	@ (80254ac <_printf_i+0x238>)
 80253e2:	2778      	movs	r7, #120	@ 0x78
 80253e4:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80253e8:	6823      	ldr	r3, [r4, #0]
 80253ea:	6831      	ldr	r1, [r6, #0]
 80253ec:	061f      	lsls	r7, r3, #24
 80253ee:	f851 5b04 	ldr.w	r5, [r1], #4
 80253f2:	d402      	bmi.n	80253fa <_printf_i+0x186>
 80253f4:	065f      	lsls	r7, r3, #25
 80253f6:	bf48      	it	mi
 80253f8:	b2ad      	uxthmi	r5, r5
 80253fa:	6031      	str	r1, [r6, #0]
 80253fc:	07d9      	lsls	r1, r3, #31
 80253fe:	bf44      	itt	mi
 8025400:	f043 0320 	orrmi.w	r3, r3, #32
 8025404:	6023      	strmi	r3, [r4, #0]
 8025406:	b11d      	cbz	r5, 8025410 <_printf_i+0x19c>
 8025408:	2310      	movs	r3, #16
 802540a:	e7ad      	b.n	8025368 <_printf_i+0xf4>
 802540c:	4826      	ldr	r0, [pc, #152]	@ (80254a8 <_printf_i+0x234>)
 802540e:	e7e9      	b.n	80253e4 <_printf_i+0x170>
 8025410:	6823      	ldr	r3, [r4, #0]
 8025412:	f023 0320 	bic.w	r3, r3, #32
 8025416:	6023      	str	r3, [r4, #0]
 8025418:	e7f6      	b.n	8025408 <_printf_i+0x194>
 802541a:	4616      	mov	r6, r2
 802541c:	e7bd      	b.n	802539a <_printf_i+0x126>
 802541e:	6833      	ldr	r3, [r6, #0]
 8025420:	6825      	ldr	r5, [r4, #0]
 8025422:	6961      	ldr	r1, [r4, #20]
 8025424:	1d18      	adds	r0, r3, #4
 8025426:	6030      	str	r0, [r6, #0]
 8025428:	062e      	lsls	r6, r5, #24
 802542a:	681b      	ldr	r3, [r3, #0]
 802542c:	d501      	bpl.n	8025432 <_printf_i+0x1be>
 802542e:	6019      	str	r1, [r3, #0]
 8025430:	e002      	b.n	8025438 <_printf_i+0x1c4>
 8025432:	0668      	lsls	r0, r5, #25
 8025434:	d5fb      	bpl.n	802542e <_printf_i+0x1ba>
 8025436:	8019      	strh	r1, [r3, #0]
 8025438:	2300      	movs	r3, #0
 802543a:	6123      	str	r3, [r4, #16]
 802543c:	4616      	mov	r6, r2
 802543e:	e7bc      	b.n	80253ba <_printf_i+0x146>
 8025440:	6833      	ldr	r3, [r6, #0]
 8025442:	1d1a      	adds	r2, r3, #4
 8025444:	6032      	str	r2, [r6, #0]
 8025446:	681e      	ldr	r6, [r3, #0]
 8025448:	6862      	ldr	r2, [r4, #4]
 802544a:	2100      	movs	r1, #0
 802544c:	4630      	mov	r0, r6
 802544e:	f7da fed7 	bl	8000200 <memchr>
 8025452:	b108      	cbz	r0, 8025458 <_printf_i+0x1e4>
 8025454:	1b80      	subs	r0, r0, r6
 8025456:	6060      	str	r0, [r4, #4]
 8025458:	6863      	ldr	r3, [r4, #4]
 802545a:	6123      	str	r3, [r4, #16]
 802545c:	2300      	movs	r3, #0
 802545e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8025462:	e7aa      	b.n	80253ba <_printf_i+0x146>
 8025464:	6923      	ldr	r3, [r4, #16]
 8025466:	4632      	mov	r2, r6
 8025468:	4649      	mov	r1, r9
 802546a:	4640      	mov	r0, r8
 802546c:	47d0      	blx	sl
 802546e:	3001      	adds	r0, #1
 8025470:	d0ad      	beq.n	80253ce <_printf_i+0x15a>
 8025472:	6823      	ldr	r3, [r4, #0]
 8025474:	079b      	lsls	r3, r3, #30
 8025476:	d413      	bmi.n	80254a0 <_printf_i+0x22c>
 8025478:	68e0      	ldr	r0, [r4, #12]
 802547a:	9b03      	ldr	r3, [sp, #12]
 802547c:	4298      	cmp	r0, r3
 802547e:	bfb8      	it	lt
 8025480:	4618      	movlt	r0, r3
 8025482:	e7a6      	b.n	80253d2 <_printf_i+0x15e>
 8025484:	2301      	movs	r3, #1
 8025486:	4632      	mov	r2, r6
 8025488:	4649      	mov	r1, r9
 802548a:	4640      	mov	r0, r8
 802548c:	47d0      	blx	sl
 802548e:	3001      	adds	r0, #1
 8025490:	d09d      	beq.n	80253ce <_printf_i+0x15a>
 8025492:	3501      	adds	r5, #1
 8025494:	68e3      	ldr	r3, [r4, #12]
 8025496:	9903      	ldr	r1, [sp, #12]
 8025498:	1a5b      	subs	r3, r3, r1
 802549a:	42ab      	cmp	r3, r5
 802549c:	dcf2      	bgt.n	8025484 <_printf_i+0x210>
 802549e:	e7eb      	b.n	8025478 <_printf_i+0x204>
 80254a0:	2500      	movs	r5, #0
 80254a2:	f104 0619 	add.w	r6, r4, #25
 80254a6:	e7f5      	b.n	8025494 <_printf_i+0x220>
 80254a8:	080263cd 	.word	0x080263cd
 80254ac:	080263de 	.word	0x080263de

080254b0 <__sflush_r>:
 80254b0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80254b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80254b8:	0716      	lsls	r6, r2, #28
 80254ba:	4605      	mov	r5, r0
 80254bc:	460c      	mov	r4, r1
 80254be:	d454      	bmi.n	802556a <__sflush_r+0xba>
 80254c0:	684b      	ldr	r3, [r1, #4]
 80254c2:	2b00      	cmp	r3, #0
 80254c4:	dc02      	bgt.n	80254cc <__sflush_r+0x1c>
 80254c6:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80254c8:	2b00      	cmp	r3, #0
 80254ca:	dd48      	ble.n	802555e <__sflush_r+0xae>
 80254cc:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80254ce:	2e00      	cmp	r6, #0
 80254d0:	d045      	beq.n	802555e <__sflush_r+0xae>
 80254d2:	2300      	movs	r3, #0
 80254d4:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80254d8:	682f      	ldr	r7, [r5, #0]
 80254da:	6a21      	ldr	r1, [r4, #32]
 80254dc:	602b      	str	r3, [r5, #0]
 80254de:	d030      	beq.n	8025542 <__sflush_r+0x92>
 80254e0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80254e2:	89a3      	ldrh	r3, [r4, #12]
 80254e4:	0759      	lsls	r1, r3, #29
 80254e6:	d505      	bpl.n	80254f4 <__sflush_r+0x44>
 80254e8:	6863      	ldr	r3, [r4, #4]
 80254ea:	1ad2      	subs	r2, r2, r3
 80254ec:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80254ee:	b10b      	cbz	r3, 80254f4 <__sflush_r+0x44>
 80254f0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80254f2:	1ad2      	subs	r2, r2, r3
 80254f4:	2300      	movs	r3, #0
 80254f6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80254f8:	6a21      	ldr	r1, [r4, #32]
 80254fa:	4628      	mov	r0, r5
 80254fc:	47b0      	blx	r6
 80254fe:	1c43      	adds	r3, r0, #1
 8025500:	89a3      	ldrh	r3, [r4, #12]
 8025502:	d106      	bne.n	8025512 <__sflush_r+0x62>
 8025504:	6829      	ldr	r1, [r5, #0]
 8025506:	291d      	cmp	r1, #29
 8025508:	d82b      	bhi.n	8025562 <__sflush_r+0xb2>
 802550a:	4a2a      	ldr	r2, [pc, #168]	@ (80255b4 <__sflush_r+0x104>)
 802550c:	40ca      	lsrs	r2, r1
 802550e:	07d6      	lsls	r6, r2, #31
 8025510:	d527      	bpl.n	8025562 <__sflush_r+0xb2>
 8025512:	2200      	movs	r2, #0
 8025514:	6062      	str	r2, [r4, #4]
 8025516:	04d9      	lsls	r1, r3, #19
 8025518:	6922      	ldr	r2, [r4, #16]
 802551a:	6022      	str	r2, [r4, #0]
 802551c:	d504      	bpl.n	8025528 <__sflush_r+0x78>
 802551e:	1c42      	adds	r2, r0, #1
 8025520:	d101      	bne.n	8025526 <__sflush_r+0x76>
 8025522:	682b      	ldr	r3, [r5, #0]
 8025524:	b903      	cbnz	r3, 8025528 <__sflush_r+0x78>
 8025526:	6560      	str	r0, [r4, #84]	@ 0x54
 8025528:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802552a:	602f      	str	r7, [r5, #0]
 802552c:	b1b9      	cbz	r1, 802555e <__sflush_r+0xae>
 802552e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8025532:	4299      	cmp	r1, r3
 8025534:	d002      	beq.n	802553c <__sflush_r+0x8c>
 8025536:	4628      	mov	r0, r5
 8025538:	f7ff fb4a 	bl	8024bd0 <_free_r>
 802553c:	2300      	movs	r3, #0
 802553e:	6363      	str	r3, [r4, #52]	@ 0x34
 8025540:	e00d      	b.n	802555e <__sflush_r+0xae>
 8025542:	2301      	movs	r3, #1
 8025544:	4628      	mov	r0, r5
 8025546:	47b0      	blx	r6
 8025548:	4602      	mov	r2, r0
 802554a:	1c50      	adds	r0, r2, #1
 802554c:	d1c9      	bne.n	80254e2 <__sflush_r+0x32>
 802554e:	682b      	ldr	r3, [r5, #0]
 8025550:	2b00      	cmp	r3, #0
 8025552:	d0c6      	beq.n	80254e2 <__sflush_r+0x32>
 8025554:	2b1d      	cmp	r3, #29
 8025556:	d001      	beq.n	802555c <__sflush_r+0xac>
 8025558:	2b16      	cmp	r3, #22
 802555a:	d11e      	bne.n	802559a <__sflush_r+0xea>
 802555c:	602f      	str	r7, [r5, #0]
 802555e:	2000      	movs	r0, #0
 8025560:	e022      	b.n	80255a8 <__sflush_r+0xf8>
 8025562:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8025566:	b21b      	sxth	r3, r3
 8025568:	e01b      	b.n	80255a2 <__sflush_r+0xf2>
 802556a:	690f      	ldr	r7, [r1, #16]
 802556c:	2f00      	cmp	r7, #0
 802556e:	d0f6      	beq.n	802555e <__sflush_r+0xae>
 8025570:	0793      	lsls	r3, r2, #30
 8025572:	680e      	ldr	r6, [r1, #0]
 8025574:	bf08      	it	eq
 8025576:	694b      	ldreq	r3, [r1, #20]
 8025578:	600f      	str	r7, [r1, #0]
 802557a:	bf18      	it	ne
 802557c:	2300      	movne	r3, #0
 802557e:	eba6 0807 	sub.w	r8, r6, r7
 8025582:	608b      	str	r3, [r1, #8]
 8025584:	f1b8 0f00 	cmp.w	r8, #0
 8025588:	dde9      	ble.n	802555e <__sflush_r+0xae>
 802558a:	6a21      	ldr	r1, [r4, #32]
 802558c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 802558e:	4643      	mov	r3, r8
 8025590:	463a      	mov	r2, r7
 8025592:	4628      	mov	r0, r5
 8025594:	47b0      	blx	r6
 8025596:	2800      	cmp	r0, #0
 8025598:	dc08      	bgt.n	80255ac <__sflush_r+0xfc>
 802559a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802559e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80255a2:	81a3      	strh	r3, [r4, #12]
 80255a4:	f04f 30ff 	mov.w	r0, #4294967295
 80255a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80255ac:	4407      	add	r7, r0
 80255ae:	eba8 0800 	sub.w	r8, r8, r0
 80255b2:	e7e7      	b.n	8025584 <__sflush_r+0xd4>
 80255b4:	20400001 	.word	0x20400001

080255b8 <_fflush_r>:
 80255b8:	b538      	push	{r3, r4, r5, lr}
 80255ba:	690b      	ldr	r3, [r1, #16]
 80255bc:	4605      	mov	r5, r0
 80255be:	460c      	mov	r4, r1
 80255c0:	b913      	cbnz	r3, 80255c8 <_fflush_r+0x10>
 80255c2:	2500      	movs	r5, #0
 80255c4:	4628      	mov	r0, r5
 80255c6:	bd38      	pop	{r3, r4, r5, pc}
 80255c8:	b118      	cbz	r0, 80255d2 <_fflush_r+0x1a>
 80255ca:	6a03      	ldr	r3, [r0, #32]
 80255cc:	b90b      	cbnz	r3, 80255d2 <_fflush_r+0x1a>
 80255ce:	f7ff f903 	bl	80247d8 <__sinit>
 80255d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80255d6:	2b00      	cmp	r3, #0
 80255d8:	d0f3      	beq.n	80255c2 <_fflush_r+0xa>
 80255da:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80255dc:	07d0      	lsls	r0, r2, #31
 80255de:	d404      	bmi.n	80255ea <_fflush_r+0x32>
 80255e0:	0599      	lsls	r1, r3, #22
 80255e2:	d402      	bmi.n	80255ea <_fflush_r+0x32>
 80255e4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80255e6:	f7ff fa86 	bl	8024af6 <__retarget_lock_acquire_recursive>
 80255ea:	4628      	mov	r0, r5
 80255ec:	4621      	mov	r1, r4
 80255ee:	f7ff ff5f 	bl	80254b0 <__sflush_r>
 80255f2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80255f4:	07da      	lsls	r2, r3, #31
 80255f6:	4605      	mov	r5, r0
 80255f8:	d4e4      	bmi.n	80255c4 <_fflush_r+0xc>
 80255fa:	89a3      	ldrh	r3, [r4, #12]
 80255fc:	059b      	lsls	r3, r3, #22
 80255fe:	d4e1      	bmi.n	80255c4 <_fflush_r+0xc>
 8025600:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8025602:	f7ff fa79 	bl	8024af8 <__retarget_lock_release_recursive>
 8025606:	e7dd      	b.n	80255c4 <_fflush_r+0xc>

08025608 <__swbuf_r>:
 8025608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802560a:	460e      	mov	r6, r1
 802560c:	4614      	mov	r4, r2
 802560e:	4605      	mov	r5, r0
 8025610:	b118      	cbz	r0, 802561a <__swbuf_r+0x12>
 8025612:	6a03      	ldr	r3, [r0, #32]
 8025614:	b90b      	cbnz	r3, 802561a <__swbuf_r+0x12>
 8025616:	f7ff f8df 	bl	80247d8 <__sinit>
 802561a:	69a3      	ldr	r3, [r4, #24]
 802561c:	60a3      	str	r3, [r4, #8]
 802561e:	89a3      	ldrh	r3, [r4, #12]
 8025620:	071a      	lsls	r2, r3, #28
 8025622:	d501      	bpl.n	8025628 <__swbuf_r+0x20>
 8025624:	6923      	ldr	r3, [r4, #16]
 8025626:	b943      	cbnz	r3, 802563a <__swbuf_r+0x32>
 8025628:	4621      	mov	r1, r4
 802562a:	4628      	mov	r0, r5
 802562c:	f000 f82a 	bl	8025684 <__swsetup_r>
 8025630:	b118      	cbz	r0, 802563a <__swbuf_r+0x32>
 8025632:	f04f 37ff 	mov.w	r7, #4294967295
 8025636:	4638      	mov	r0, r7
 8025638:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802563a:	6823      	ldr	r3, [r4, #0]
 802563c:	6922      	ldr	r2, [r4, #16]
 802563e:	1a98      	subs	r0, r3, r2
 8025640:	6963      	ldr	r3, [r4, #20]
 8025642:	b2f6      	uxtb	r6, r6
 8025644:	4283      	cmp	r3, r0
 8025646:	4637      	mov	r7, r6
 8025648:	dc05      	bgt.n	8025656 <__swbuf_r+0x4e>
 802564a:	4621      	mov	r1, r4
 802564c:	4628      	mov	r0, r5
 802564e:	f7ff ffb3 	bl	80255b8 <_fflush_r>
 8025652:	2800      	cmp	r0, #0
 8025654:	d1ed      	bne.n	8025632 <__swbuf_r+0x2a>
 8025656:	68a3      	ldr	r3, [r4, #8]
 8025658:	3b01      	subs	r3, #1
 802565a:	60a3      	str	r3, [r4, #8]
 802565c:	6823      	ldr	r3, [r4, #0]
 802565e:	1c5a      	adds	r2, r3, #1
 8025660:	6022      	str	r2, [r4, #0]
 8025662:	701e      	strb	r6, [r3, #0]
 8025664:	6962      	ldr	r2, [r4, #20]
 8025666:	1c43      	adds	r3, r0, #1
 8025668:	429a      	cmp	r2, r3
 802566a:	d004      	beq.n	8025676 <__swbuf_r+0x6e>
 802566c:	89a3      	ldrh	r3, [r4, #12]
 802566e:	07db      	lsls	r3, r3, #31
 8025670:	d5e1      	bpl.n	8025636 <__swbuf_r+0x2e>
 8025672:	2e0a      	cmp	r6, #10
 8025674:	d1df      	bne.n	8025636 <__swbuf_r+0x2e>
 8025676:	4621      	mov	r1, r4
 8025678:	4628      	mov	r0, r5
 802567a:	f7ff ff9d 	bl	80255b8 <_fflush_r>
 802567e:	2800      	cmp	r0, #0
 8025680:	d0d9      	beq.n	8025636 <__swbuf_r+0x2e>
 8025682:	e7d6      	b.n	8025632 <__swbuf_r+0x2a>

08025684 <__swsetup_r>:
 8025684:	b538      	push	{r3, r4, r5, lr}
 8025686:	4b29      	ldr	r3, [pc, #164]	@ (802572c <__swsetup_r+0xa8>)
 8025688:	4605      	mov	r5, r0
 802568a:	6818      	ldr	r0, [r3, #0]
 802568c:	460c      	mov	r4, r1
 802568e:	b118      	cbz	r0, 8025698 <__swsetup_r+0x14>
 8025690:	6a03      	ldr	r3, [r0, #32]
 8025692:	b90b      	cbnz	r3, 8025698 <__swsetup_r+0x14>
 8025694:	f7ff f8a0 	bl	80247d8 <__sinit>
 8025698:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802569c:	0719      	lsls	r1, r3, #28
 802569e:	d422      	bmi.n	80256e6 <__swsetup_r+0x62>
 80256a0:	06da      	lsls	r2, r3, #27
 80256a2:	d407      	bmi.n	80256b4 <__swsetup_r+0x30>
 80256a4:	2209      	movs	r2, #9
 80256a6:	602a      	str	r2, [r5, #0]
 80256a8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80256ac:	81a3      	strh	r3, [r4, #12]
 80256ae:	f04f 30ff 	mov.w	r0, #4294967295
 80256b2:	e033      	b.n	802571c <__swsetup_r+0x98>
 80256b4:	0758      	lsls	r0, r3, #29
 80256b6:	d512      	bpl.n	80256de <__swsetup_r+0x5a>
 80256b8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80256ba:	b141      	cbz	r1, 80256ce <__swsetup_r+0x4a>
 80256bc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80256c0:	4299      	cmp	r1, r3
 80256c2:	d002      	beq.n	80256ca <__swsetup_r+0x46>
 80256c4:	4628      	mov	r0, r5
 80256c6:	f7ff fa83 	bl	8024bd0 <_free_r>
 80256ca:	2300      	movs	r3, #0
 80256cc:	6363      	str	r3, [r4, #52]	@ 0x34
 80256ce:	89a3      	ldrh	r3, [r4, #12]
 80256d0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80256d4:	81a3      	strh	r3, [r4, #12]
 80256d6:	2300      	movs	r3, #0
 80256d8:	6063      	str	r3, [r4, #4]
 80256da:	6923      	ldr	r3, [r4, #16]
 80256dc:	6023      	str	r3, [r4, #0]
 80256de:	89a3      	ldrh	r3, [r4, #12]
 80256e0:	f043 0308 	orr.w	r3, r3, #8
 80256e4:	81a3      	strh	r3, [r4, #12]
 80256e6:	6923      	ldr	r3, [r4, #16]
 80256e8:	b94b      	cbnz	r3, 80256fe <__swsetup_r+0x7a>
 80256ea:	89a3      	ldrh	r3, [r4, #12]
 80256ec:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80256f0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80256f4:	d003      	beq.n	80256fe <__swsetup_r+0x7a>
 80256f6:	4621      	mov	r1, r4
 80256f8:	4628      	mov	r0, r5
 80256fa:	f000 f887 	bl	802580c <__smakebuf_r>
 80256fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025702:	f013 0201 	ands.w	r2, r3, #1
 8025706:	d00a      	beq.n	802571e <__swsetup_r+0x9a>
 8025708:	2200      	movs	r2, #0
 802570a:	60a2      	str	r2, [r4, #8]
 802570c:	6962      	ldr	r2, [r4, #20]
 802570e:	4252      	negs	r2, r2
 8025710:	61a2      	str	r2, [r4, #24]
 8025712:	6922      	ldr	r2, [r4, #16]
 8025714:	b942      	cbnz	r2, 8025728 <__swsetup_r+0xa4>
 8025716:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 802571a:	d1c5      	bne.n	80256a8 <__swsetup_r+0x24>
 802571c:	bd38      	pop	{r3, r4, r5, pc}
 802571e:	0799      	lsls	r1, r3, #30
 8025720:	bf58      	it	pl
 8025722:	6962      	ldrpl	r2, [r4, #20]
 8025724:	60a2      	str	r2, [r4, #8]
 8025726:	e7f4      	b.n	8025712 <__swsetup_r+0x8e>
 8025728:	2000      	movs	r0, #0
 802572a:	e7f7      	b.n	802571c <__swsetup_r+0x98>
 802572c:	20000228 	.word	0x20000228

08025730 <memmove>:
 8025730:	4288      	cmp	r0, r1
 8025732:	b510      	push	{r4, lr}
 8025734:	eb01 0402 	add.w	r4, r1, r2
 8025738:	d902      	bls.n	8025740 <memmove+0x10>
 802573a:	4284      	cmp	r4, r0
 802573c:	4623      	mov	r3, r4
 802573e:	d807      	bhi.n	8025750 <memmove+0x20>
 8025740:	1e43      	subs	r3, r0, #1
 8025742:	42a1      	cmp	r1, r4
 8025744:	d008      	beq.n	8025758 <memmove+0x28>
 8025746:	f811 2b01 	ldrb.w	r2, [r1], #1
 802574a:	f803 2f01 	strb.w	r2, [r3, #1]!
 802574e:	e7f8      	b.n	8025742 <memmove+0x12>
 8025750:	4402      	add	r2, r0
 8025752:	4601      	mov	r1, r0
 8025754:	428a      	cmp	r2, r1
 8025756:	d100      	bne.n	802575a <memmove+0x2a>
 8025758:	bd10      	pop	{r4, pc}
 802575a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 802575e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8025762:	e7f7      	b.n	8025754 <memmove+0x24>

08025764 <_realloc_r>:
 8025764:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025768:	4607      	mov	r7, r0
 802576a:	4614      	mov	r4, r2
 802576c:	460d      	mov	r5, r1
 802576e:	b921      	cbnz	r1, 802577a <_realloc_r+0x16>
 8025770:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8025774:	4611      	mov	r1, r2
 8025776:	f7fe bf09 	b.w	802458c <_malloc_r>
 802577a:	b92a      	cbnz	r2, 8025788 <_realloc_r+0x24>
 802577c:	f7ff fa28 	bl	8024bd0 <_free_r>
 8025780:	4625      	mov	r5, r4
 8025782:	4628      	mov	r0, r5
 8025784:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025788:	f000 f89e 	bl	80258c8 <_malloc_usable_size_r>
 802578c:	4284      	cmp	r4, r0
 802578e:	4606      	mov	r6, r0
 8025790:	d802      	bhi.n	8025798 <_realloc_r+0x34>
 8025792:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8025796:	d8f4      	bhi.n	8025782 <_realloc_r+0x1e>
 8025798:	4621      	mov	r1, r4
 802579a:	4638      	mov	r0, r7
 802579c:	f7fe fef6 	bl	802458c <_malloc_r>
 80257a0:	4680      	mov	r8, r0
 80257a2:	b908      	cbnz	r0, 80257a8 <_realloc_r+0x44>
 80257a4:	4645      	mov	r5, r8
 80257a6:	e7ec      	b.n	8025782 <_realloc_r+0x1e>
 80257a8:	42b4      	cmp	r4, r6
 80257aa:	4622      	mov	r2, r4
 80257ac:	4629      	mov	r1, r5
 80257ae:	bf28      	it	cs
 80257b0:	4632      	movcs	r2, r6
 80257b2:	f7ff f9a2 	bl	8024afa <memcpy>
 80257b6:	4629      	mov	r1, r5
 80257b8:	4638      	mov	r0, r7
 80257ba:	f7ff fa09 	bl	8024bd0 <_free_r>
 80257be:	e7f1      	b.n	80257a4 <_realloc_r+0x40>

080257c0 <__swhatbuf_r>:
 80257c0:	b570      	push	{r4, r5, r6, lr}
 80257c2:	460c      	mov	r4, r1
 80257c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80257c8:	2900      	cmp	r1, #0
 80257ca:	b096      	sub	sp, #88	@ 0x58
 80257cc:	4615      	mov	r5, r2
 80257ce:	461e      	mov	r6, r3
 80257d0:	da0d      	bge.n	80257ee <__swhatbuf_r+0x2e>
 80257d2:	89a3      	ldrh	r3, [r4, #12]
 80257d4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80257d8:	f04f 0100 	mov.w	r1, #0
 80257dc:	bf14      	ite	ne
 80257de:	2340      	movne	r3, #64	@ 0x40
 80257e0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80257e4:	2000      	movs	r0, #0
 80257e6:	6031      	str	r1, [r6, #0]
 80257e8:	602b      	str	r3, [r5, #0]
 80257ea:	b016      	add	sp, #88	@ 0x58
 80257ec:	bd70      	pop	{r4, r5, r6, pc}
 80257ee:	466a      	mov	r2, sp
 80257f0:	f000 f848 	bl	8025884 <_fstat_r>
 80257f4:	2800      	cmp	r0, #0
 80257f6:	dbec      	blt.n	80257d2 <__swhatbuf_r+0x12>
 80257f8:	9901      	ldr	r1, [sp, #4]
 80257fa:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80257fe:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8025802:	4259      	negs	r1, r3
 8025804:	4159      	adcs	r1, r3
 8025806:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802580a:	e7eb      	b.n	80257e4 <__swhatbuf_r+0x24>

0802580c <__smakebuf_r>:
 802580c:	898b      	ldrh	r3, [r1, #12]
 802580e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8025810:	079d      	lsls	r5, r3, #30
 8025812:	4606      	mov	r6, r0
 8025814:	460c      	mov	r4, r1
 8025816:	d507      	bpl.n	8025828 <__smakebuf_r+0x1c>
 8025818:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 802581c:	6023      	str	r3, [r4, #0]
 802581e:	6123      	str	r3, [r4, #16]
 8025820:	2301      	movs	r3, #1
 8025822:	6163      	str	r3, [r4, #20]
 8025824:	b003      	add	sp, #12
 8025826:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025828:	ab01      	add	r3, sp, #4
 802582a:	466a      	mov	r2, sp
 802582c:	f7ff ffc8 	bl	80257c0 <__swhatbuf_r>
 8025830:	9f00      	ldr	r7, [sp, #0]
 8025832:	4605      	mov	r5, r0
 8025834:	4639      	mov	r1, r7
 8025836:	4630      	mov	r0, r6
 8025838:	f7fe fea8 	bl	802458c <_malloc_r>
 802583c:	b948      	cbnz	r0, 8025852 <__smakebuf_r+0x46>
 802583e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025842:	059a      	lsls	r2, r3, #22
 8025844:	d4ee      	bmi.n	8025824 <__smakebuf_r+0x18>
 8025846:	f023 0303 	bic.w	r3, r3, #3
 802584a:	f043 0302 	orr.w	r3, r3, #2
 802584e:	81a3      	strh	r3, [r4, #12]
 8025850:	e7e2      	b.n	8025818 <__smakebuf_r+0xc>
 8025852:	89a3      	ldrh	r3, [r4, #12]
 8025854:	6020      	str	r0, [r4, #0]
 8025856:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802585a:	81a3      	strh	r3, [r4, #12]
 802585c:	9b01      	ldr	r3, [sp, #4]
 802585e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8025862:	b15b      	cbz	r3, 802587c <__smakebuf_r+0x70>
 8025864:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025868:	4630      	mov	r0, r6
 802586a:	f000 f81d 	bl	80258a8 <_isatty_r>
 802586e:	b128      	cbz	r0, 802587c <__smakebuf_r+0x70>
 8025870:	89a3      	ldrh	r3, [r4, #12]
 8025872:	f023 0303 	bic.w	r3, r3, #3
 8025876:	f043 0301 	orr.w	r3, r3, #1
 802587a:	81a3      	strh	r3, [r4, #12]
 802587c:	89a3      	ldrh	r3, [r4, #12]
 802587e:	431d      	orrs	r5, r3
 8025880:	81a5      	strh	r5, [r4, #12]
 8025882:	e7cf      	b.n	8025824 <__smakebuf_r+0x18>

08025884 <_fstat_r>:
 8025884:	b538      	push	{r3, r4, r5, lr}
 8025886:	4d07      	ldr	r5, [pc, #28]	@ (80258a4 <_fstat_r+0x20>)
 8025888:	2300      	movs	r3, #0
 802588a:	4604      	mov	r4, r0
 802588c:	4608      	mov	r0, r1
 802588e:	4611      	mov	r1, r2
 8025890:	602b      	str	r3, [r5, #0]
 8025892:	f7dc ffb0 	bl	80027f6 <_fstat>
 8025896:	1c43      	adds	r3, r0, #1
 8025898:	d102      	bne.n	80258a0 <_fstat_r+0x1c>
 802589a:	682b      	ldr	r3, [r5, #0]
 802589c:	b103      	cbz	r3, 80258a0 <_fstat_r+0x1c>
 802589e:	6023      	str	r3, [r4, #0]
 80258a0:	bd38      	pop	{r3, r4, r5, pc}
 80258a2:	bf00      	nop
 80258a4:	2001470c 	.word	0x2001470c

080258a8 <_isatty_r>:
 80258a8:	b538      	push	{r3, r4, r5, lr}
 80258aa:	4d06      	ldr	r5, [pc, #24]	@ (80258c4 <_isatty_r+0x1c>)
 80258ac:	2300      	movs	r3, #0
 80258ae:	4604      	mov	r4, r0
 80258b0:	4608      	mov	r0, r1
 80258b2:	602b      	str	r3, [r5, #0]
 80258b4:	f7dc ffa4 	bl	8002800 <_isatty>
 80258b8:	1c43      	adds	r3, r0, #1
 80258ba:	d102      	bne.n	80258c2 <_isatty_r+0x1a>
 80258bc:	682b      	ldr	r3, [r5, #0]
 80258be:	b103      	cbz	r3, 80258c2 <_isatty_r+0x1a>
 80258c0:	6023      	str	r3, [r4, #0]
 80258c2:	bd38      	pop	{r3, r4, r5, pc}
 80258c4:	2001470c 	.word	0x2001470c

080258c8 <_malloc_usable_size_r>:
 80258c8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80258cc:	1f18      	subs	r0, r3, #4
 80258ce:	2b00      	cmp	r3, #0
 80258d0:	bfbc      	itt	lt
 80258d2:	580b      	ldrlt	r3, [r1, r0]
 80258d4:	18c0      	addlt	r0, r0, r3
 80258d6:	4770      	bx	lr

080258d8 <_init>:
 80258d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80258da:	bf00      	nop
 80258dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80258de:	bc08      	pop	{r3}
 80258e0:	469e      	mov	lr, r3
 80258e2:	4770      	bx	lr

080258e4 <_fini>:
 80258e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80258e6:	bf00      	nop
 80258e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80258ea:	bc08      	pop	{r3}
 80258ec:	469e      	mov	lr, r3
 80258ee:	4770      	bx	lr
